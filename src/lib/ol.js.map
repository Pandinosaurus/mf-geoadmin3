{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/rbush/rbush.min.js","webpack://ol/./node_modules/pbf/index.js","webpack://ol/./node_modules/pixelworks/lib/index.js","webpack://ol/./node_modules/ieee754/index.js","webpack://ol/./node_modules/pixelworks/lib/processor.js","webpack://ol/./node_modules/pixelworks/lib/util.js","webpack://ol/./build/ol/util.js","webpack://ol/./build/ol/AssertionError.js","webpack://ol/./build/ol/CollectionEventType.js","webpack://ol/./build/ol/ObjectEventType.js","webpack://ol/./build/ol/obj.js","webpack://ol/./build/ol/events.js","webpack://ol/./build/ol/Disposable.js","webpack://ol/./build/ol/functions.js","webpack://ol/./build/ol/events/Event.js","webpack://ol/./build/ol/events/Target.js","webpack://ol/./build/ol/events/EventType.js","webpack://ol/./build/ol/Observable.js","webpack://ol/./build/ol/Object.js","webpack://ol/./build/ol/Collection.js","webpack://ol/./build/ol/asserts.js","webpack://ol/./build/ol/Feature.js","webpack://ol/./build/ol/array.js","webpack://ol/./build/ol/extent/Corner.js","webpack://ol/./build/ol/extent/Relationship.js","webpack://ol/./build/ol/extent.js","webpack://ol/./build/ol/geom/GeometryLayout.js","webpack://ol/./build/ol/geom/GeometryType.js","webpack://ol/./build/ol/geom/flat/transform.js","webpack://ol/./build/ol/math.js","webpack://ol/./build/ol/sphere.js","webpack://ol/./build/ol/proj/Units.js","webpack://ol/./build/ol/proj/Projection.js","webpack://ol/./build/ol/proj/epsg3857.js","webpack://ol/./build/ol/proj/epsg4326.js","webpack://ol/./build/ol/proj/projections.js","webpack://ol/./build/ol/proj/transforms.js","webpack://ol/./build/ol/proj.js","webpack://ol/./build/ol/transform.js","webpack://ol/./build/ol/geom/Geometry.js","webpack://ol/./build/ol/geom/SimpleGeometry.js","webpack://ol/./build/ol/geom/flat/area.js","webpack://ol/./build/ol/geom/flat/closest.js","webpack://ol/./build/ol/geom/flat/deflate.js","webpack://ol/./build/ol/geom/flat/inflate.js","webpack://ol/./build/ol/geom/flat/simplify.js","webpack://ol/./build/ol/geom/LinearRing.js","webpack://ol/./build/ol/geom/Point.js","webpack://ol/./build/ol/geom/flat/contains.js","webpack://ol/./build/ol/geom/flat/interiorpoint.js","webpack://ol/./build/ol/geom/flat/segments.js","webpack://ol/./build/ol/geom/flat/intersectsextent.js","webpack://ol/./build/ol/geom/flat/reverse.js","webpack://ol/./build/ol/geom/flat/orient.js","webpack://ol/./build/ol/geom/Polygon.js","webpack://ol/./build/ol/Geolocation.js","webpack://ol/./build/ol/Kinetic.js","webpack://ol/./build/ol/MapEvent.js","webpack://ol/./build/ol/MapBrowserEvent.js","webpack://ol/./build/ol/has.js","webpack://ol/./build/ol/MapBrowserEventType.js","webpack://ol/./build/ol/MapBrowserPointerEvent.js","webpack://ol/./build/ol/pointer/EventType.js","webpack://ol/./build/ol/pointer/EventSource.js","webpack://ol/./build/ol/pointer/MouseSource.js","webpack://ol/./build/ol/pointer/MsSource.js","webpack://ol/./build/ol/pointer/NativeSource.js","webpack://ol/./build/ol/pointer/PointerEvent.js","webpack://ol/./build/ol/pointer/TouchSource.js","webpack://ol/./build/ol/pointer/PointerEventHandler.js","webpack://ol/./build/ol/MapBrowserEventHandler.js","webpack://ol/./build/ol/MapEventType.js","webpack://ol/./build/ol/MapProperty.js","webpack://ol/./build/ol/render/EventType.js","webpack://ol/./build/ol/TileState.js","webpack://ol/./build/ol/structs/PriorityQueue.js","webpack://ol/./build/ol/TileQueue.js","webpack://ol/./build/ol/tilegrid/common.js","webpack://ol/./build/ol/centerconstraint.js","webpack://ol/./build/ol/resolutionconstraint.js","webpack://ol/./build/ol/rotationconstraint.js","webpack://ol/./build/ol/ViewHint.js","webpack://ol/./build/ol/ViewProperty.js","webpack://ol/./build/ol/string.js","webpack://ol/./build/ol/coordinate.js","webpack://ol/./build/ol/easing.js","webpack://ol/./build/ol/View.js","webpack://ol/./build/ol/dom.js","webpack://ol/./build/ol/layer/Property.js","webpack://ol/./build/ol/layer/Base.js","webpack://ol/./build/ol/source/State.js","webpack://ol/./build/ol/layer/Group.js","webpack://ol/./build/ol/size.js","webpack://ol/./build/ol/PluggableMap.js","webpack://ol/./build/ol/css.js","webpack://ol/./build/ol/control/Control.js","webpack://ol/./build/ol/layer/Layer.js","webpack://ol/./build/ol/control/Attribution.js","webpack://ol/./build/ol/control/Rotate.js","webpack://ol/./build/ol/control/Zoom.js","webpack://ol/./build/ol/control.js","webpack://ol/./build/ol/interaction/Property.js","webpack://ol/./build/ol/interaction/Interaction.js","webpack://ol/./build/ol/interaction/DoubleClickZoom.js","webpack://ol/./build/ol/events/condition.js","webpack://ol/./build/ol/interaction/Pointer.js","webpack://ol/./build/ol/interaction/DragPan.js","webpack://ol/./build/ol/interaction/DragRotate.js","webpack://ol/./build/ol/render/Box.js","webpack://ol/./build/ol/interaction/DragBox.js","webpack://ol/./build/ol/interaction/DragZoom.js","webpack://ol/./build/ol/events/KeyCode.js","webpack://ol/./build/ol/interaction/KeyboardPan.js","webpack://ol/./build/ol/interaction/KeyboardZoom.js","webpack://ol/./build/ol/interaction/MouseWheelZoom.js","webpack://ol/./build/ol/interaction/PinchRotate.js","webpack://ol/./build/ol/interaction/PinchZoom.js","webpack://ol/./build/ol/interaction.js","webpack://ol/./build/ol/render/Event.js","webpack://ol/./build/ol/color.js","webpack://ol/./build/ol/style/IconImageCache.js","webpack://ol/./build/ol/colorlike.js","webpack://ol/./build/ol/render/VectorContext.js","webpack://ol/./build/ol/structs/LRUCache.js","webpack://ol/./build/ol/render/canvas/LabelCache.js","webpack://ol/./build/ol/render/canvas.js","webpack://ol/./build/ol/render/canvas/Immediate.js","webpack://ol/./build/ol/render.js","webpack://ol/./build/ol/renderer/Map.js","webpack://ol/./build/ol/renderer/Composite.js","webpack://ol/./build/ol/Map.js","webpack://ol/./build/ol/OverlayPositioning.js","webpack://ol/./build/ol/Overlay.js","webpack://ol/./build/ol/format/FormatType.js","webpack://ol/./build/ol/featureloader.js","webpack://ol/./build/ol/loadingstrategy.js","webpack://ol/./build/ol/TileRange.js","webpack://ol/./build/ol/tilecoord.js","webpack://ol/./build/ol/tilegrid/TileGrid.js","webpack://ol/./build/ol/tilegrid.js","webpack://ol/./build/ol/webgl.js","webpack://ol/./build/ol/xml.js","webpack://ol/./build/ol/webgl/Buffer.js","webpack://ol/./build/ol/webgl/ContextEventType.js","webpack://ol/./build/ol/vec/mat4.js","webpack://ol/./build/ol/webgl/PostProcessingPass.js","webpack://ol/./build/ol/webgl/Helper.js","webpack://ol/./build/ol/tilegrid/WMTS.js","webpack://ol/./build/ol/ImageState.js","webpack://ol/./build/ol/style/Image.js","webpack://ol/./build/ol/style/RegularShape.js","webpack://ol/./build/ol/style/Circle.js","webpack://ol/./build/ol/style/Fill.js","webpack://ol/./build/ol/style/IconAnchorUnits.js","webpack://ol/./build/ol/ImageBase.js","webpack://ol/./build/ol/Image.js","webpack://ol/./build/ol/style/IconImage.js","webpack://ol/./build/ol/style/IconOrigin.js","webpack://ol/./build/ol/style/Icon.js","webpack://ol/./build/ol/style/Stroke.js","webpack://ol/./build/ol/style/Style.js","webpack://ol/./build/ol/style/TextPlacement.js","webpack://ol/./build/ol/style/Text.js","webpack://ol/./build/ol/tileurlfunction.js","webpack://ol/./build/ol/net.js","webpack://ol/./build/ol/reproj/common.js","webpack://ol/./build/ol/Tile.js","webpack://ol/./build/ol/ImageTile.js","webpack://ol/./build/ol/TileCache.js","webpack://ol/./build/ol/reproj.js","webpack://ol/./build/ol/reproj/Triangulation.js","webpack://ol/./build/ol/reproj/Tile.js","webpack://ol/./build/ol/source/Source.js","webpack://ol/./build/ol/source/Tile.js","webpack://ol/./build/ol/source/TileEventType.js","webpack://ol/./build/ol/source/UrlTile.js","webpack://ol/./build/ol/source/TileImage.js","webpack://ol/./build/ol/source/BingMaps.js","webpack://ol/./build/ol/source/XYZ.js","webpack://ol/./build/ol/source/CartoDB.js","webpack://ol/./build/ol/source/VectorEventType.js","webpack://ol/./build/ol/structs/RBush.js","webpack://ol/./build/ol/source/Vector.js","webpack://ol/./build/ol/source/Cluster.js","webpack://ol/./build/ol/source/Zoomify.js","webpack://ol/./build/ol/format/IIIFInfo.js","webpack://ol/./build/ol/source/IIIF.js","webpack://ol/./build/ol/reproj/Image.js","webpack://ol/./build/ol/source/Image.js","webpack://ol/./build/ol/uri.js","webpack://ol/./build/ol/source/ImageArcGISRest.js","webpack://ol/./build/ol/ImageCanvas.js","webpack://ol/./build/ol/source/ImageCanvas.js","webpack://ol/./build/ol/source/ImageMapGuide.js","webpack://ol/./build/ol/source/ImageStatic.js","webpack://ol/./build/ol/source/common.js","webpack://ol/./build/ol/source/WMSServerType.js","webpack://ol/./build/ol/source/ImageWMS.js","webpack://ol/./build/ol/source/OSM.js","webpack://ol/./build/ol/layer/BaseImage.js","webpack://ol/./build/ol/renderer/Layer.js","webpack://ol/./build/ol/renderer/canvas/Layer.js","webpack://ol/./build/ol/renderer/canvas/ImageLayer.js","webpack://ol/./build/ol/layer/Image.js","webpack://ol/./build/ol/layer/TileProperty.js","webpack://ol/./build/ol/layer/BaseTile.js","webpack://ol/./build/ol/renderer/canvas/TileLayer.js","webpack://ol/./build/ol/layer/Tile.js","webpack://ol/./build/ol/source/Raster.js","webpack://ol/./build/ol/source/Stamen.js","webpack://ol/./build/ol/source/TileArcGISRest.js","webpack://ol/./build/ol/source/TileDebug.js","webpack://ol/./build/ol/source/TileJSON.js","webpack://ol/./build/ol/source/TileWMS.js","webpack://ol/./build/ol/source/UTFGrid.js","webpack://ol/./build/ol/VectorRenderTile.js","webpack://ol/./build/ol/VectorTile.js","webpack://ol/./build/ol/source/VectorTile.js","webpack://ol/./build/ol/source/WMTSRequestEncoding.js","webpack://ol/./build/ol/source/WMTS.js","webpack://ol/./build/ol/renderer/webgl/Layer.js","webpack://ol/./build/ol/format/Feature.js","webpack://ol/./build/ol/format/JSONFeature.js","webpack://ol/./build/ol/geom/GeometryCollection.js","webpack://ol/./build/ol/geom/flat/interpolate.js","webpack://ol/./build/ol/geom/flat/length.js","webpack://ol/./build/ol/geom/LineString.js","webpack://ol/./build/ol/geom/MultiLineString.js","webpack://ol/./build/ol/geom/MultiPoint.js","webpack://ol/./build/ol/geom/flat/center.js","webpack://ol/./build/ol/geom/MultiPolygon.js","webpack://ol/./build/ol/format/GeoJSON.js","webpack://ol/./build/ol/renderer/webgl/PointsLayer.js","webpack://ol/./build/ol/render/canvas/Instruction.js","webpack://ol/./build/ol/render/canvas/Builder.js","webpack://ol/./build/ol/render/canvas/ImageBuilder.js","webpack://ol/./build/ol/render/canvas/LineStringBuilder.js","webpack://ol/./build/ol/render/canvas/PolygonBuilder.js","webpack://ol/./build/ol/geom/flat/straightchunk.js","webpack://ol/./build/ol/render/canvas/TextBuilder.js","webpack://ol/./build/ol/render/canvas/BuilderGroup.js","webpack://ol/./build/ol/render/canvas/BuilderType.js","webpack://ol/./build/ol/geom/flat/textpath.js","webpack://ol/./build/ol/render/canvas/Executor.js","webpack://ol/./build/ol/render/canvas/ExecutorGroup.js","webpack://ol/./build/ol/renderer/vector.js","webpack://ol/./build/ol/renderer/canvas/VectorLayer.js","webpack://ol/./build/ol/renderer/canvas/VectorImageLayer.js","webpack://ol/./build/ol/layer/VectorTileRenderType.js","webpack://ol/./build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./build/ol/layer/BaseVector.js","webpack://ol/./build/ol/layer/Vector.js","webpack://ol/./build/ol/geom/flat/geodesic.js","webpack://ol/./build/ol/layer/Graticule.js","webpack://ol/./build/ol/layer/Heatmap.js","webpack://ol/./build/ol/layer/VectorImage.js","webpack://ol/./build/ol/layer/VectorTile.js","webpack://ol/./build/ol/interaction/DragAndDrop.js","webpack://ol/./build/ol/interaction/DragRotateAndZoom.js","webpack://ol/./build/ol/geom/Circle.js","webpack://ol/./build/ol/interaction/Draw.js","webpack://ol/./build/ol/interaction/Extent.js","webpack://ol/./build/ol/interaction/Modify.js","webpack://ol/./build/ol/interaction/Select.js","webpack://ol/./build/ol/interaction/Snap.js","webpack://ol/./build/ol/interaction/Translate.js","webpack://ol/./build/ol/format/EsriJSON.js","webpack://ol/./build/ol/format/XMLFeature.js","webpack://ol/./build/ol/format/GMLBase.js","webpack://ol/./build/ol/format/xsd.js","webpack://ol/./build/ol/format/GML3.js","webpack://ol/./build/ol/format/GML.js","webpack://ol/./build/ol/format/GML2.js","webpack://ol/./build/ol/format/GML32.js","webpack://ol/./build/ol/format/GPX.js","webpack://ol/./build/ol/format/TextFeature.js","webpack://ol/./build/ol/format/KML.js","webpack://ol/./build/ol/format/IGC.js","webpack://ol/./build/ol/render/Feature.js","webpack://ol/./build/ol/format/MVT.js","webpack://ol/./build/ol/format/OSMXML.js","webpack://ol/./build/ol/geom/flat/flip.js","webpack://ol/./build/ol/format/Polyline.js","webpack://ol/./build/ol/format/TopoJSON.js","webpack://ol/./build/ol/format/filter/Filter.js","webpack://ol/./build/ol/format/filter/LogicalNary.js","webpack://ol/./build/ol/format/filter/And.js","webpack://ol/./build/ol/format/filter/Bbox.js","webpack://ol/./build/ol/format/filter/Spatial.js","webpack://ol/./build/ol/format/filter/Contains.js","webpack://ol/./build/ol/format/filter/Comparison.js","webpack://ol/./build/ol/format/filter/During.js","webpack://ol/./build/ol/format/filter/ComparisonBinary.js","webpack://ol/./build/ol/format/filter/EqualTo.js","webpack://ol/./build/ol/format/filter/GreaterThan.js","webpack://ol/./build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Intersects.js","webpack://ol/./build/ol/format/filter/IsBetween.js","webpack://ol/./build/ol/format/filter/IsLike.js","webpack://ol/./build/ol/format/filter/IsNull.js","webpack://ol/./build/ol/format/filter/LessThan.js","webpack://ol/./build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Not.js","webpack://ol/./build/ol/format/filter/NotEqualTo.js","webpack://ol/./build/ol/format/filter/Or.js","webpack://ol/./build/ol/format/filter/Within.js","webpack://ol/./build/ol/format/filter.js","webpack://ol/./build/ol/format/WFS.js","webpack://ol/./build/ol/format/WKT.js","webpack://ol/./build/ol/format/XLink.js","webpack://ol/./build/ol/format/XML.js","webpack://ol/./build/ol/format/WMSCapabilities.js","webpack://ol/./build/ol/format/WMSGetFeatureInfo.js","webpack://ol/./build/ol/format/OWS.js","webpack://ol/./build/ol/format/WMTSCapabilities.js","webpack://ol/./build/ol/control/FullScreen.js","webpack://ol/./build/ol/control/MousePosition.js","webpack://ol/./build/ol/control/OverviewMap.js","webpack://ol/./build/ol/control/ScaleLine.js","webpack://ol/./build/ol/control/ZoomSlider.js","webpack://ol/./build/ol/control/ZoomToExtent.js","webpack://ol/./build/index.js","webpack://ol/./build/ol/proj/proj4.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","e","a","h","Math","log","f","exp","u","sqrt","max","floor","min","x","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","LN2","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","b","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","rt","abs","isNaN","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","j","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","index","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","util_abstract","uidCounter_","getUid","ol_uid","extendStatics","VERSION","__extends","setPrototypeOf","__proto__","__","constructor","ol_AssertionError","_super","AssertionError","code","_this","message","split","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","target","var_sources","TypeError","ii","arguments","getValues","values","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","events_unlisten","unlistenAll","ol_Disposable","Disposable","disposed_","dispose","disposeInternal","TRUE","FALSE","VOID","stopPropagation","events_Event","Event","propagationStopped","preventDefault","Target_extends","events_Target","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","ERROR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","Observable_extends","ol_Observable","Observable","revision_","changed","getRevision","on","isArray","once","un","Object_extends","ObjectEvent","oldValue","Object_BaseObject","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","ol_Object","Collection_extends","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","extend","forEach","getArray","item","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","Feature_extends","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles_1","getZIndex","createStyleFunction","setId","id","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","tmp","extension","find","func","equals","arr1","arr2","len1","findIndex","every","el","idx","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","extent_buffer","opt_extent","closestSquaredDistanceXY","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","extent_isEmpty","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","applyTransform","transformFn","xs","ys","_boundingExtentXYs","GeometryLayout","XY","XYZ","XYM","XYZM","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","transform2D","transform","opt_dest","dest","rotate","angle","anchor","anchorX","anchorY","k","transform_translate","clamp","cosh","squaredSegmentDistance","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","proj_Projection","Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","epsg3857_extends","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","toEPSG4326","atan","epsg4326_extends","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","proj_transform","transformExtent","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","transform_rotate","ol_transform_scale","makeScale","ol_transform_translate","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","join","Geometry_extends","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","scale","opt_sy","opt_anchor","simplify","tolerance","squaredTolerance","getType","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry_extends","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","transform_scale","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","LinearRing_extends","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","Point_extends","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_extends","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","arrayLength","polygon","makeRegular","getRadius","startAngle","Geolocation_extends","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","error","ol_Geolocation","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","navigator","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","ol_Kinetic","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","MapEvent_extends","ol_MapEvent","MapEvent","opt_frameState","frameState","MapBrowserEvent_extends","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","ua","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","TOUCH","POINTER","MSPOINTER","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserPointerEvent_extends","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","pointer_EventSource","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource_extends","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","MouseSource","lastTouches","lts","clientX","clientY","MsSource_extends","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","NativeSource_extends","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","PointerEvent_extends","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","TouchSource_extends","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt_1","PointerEventHandler_extends","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler_extends","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","structs_PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue_extends","ol_TileQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","opt_isMoving","viewWidth","viewHeight","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createMinMaxResolution","opt_smooth","opt_maxExtent","cappedMaxRes","disable","rotationconstraint_none","ViewHint","ViewProperty","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","coordinate_add","delta","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","easeIn","easeOut","inAndOut","linear","View_extends","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","projection_","targetCenter_","targetResolution_","targetRotation_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","resolutions","constrainResolution","capped","z","createSnapToResolutions","constrainOnlyCenter","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","zoomLevel","createSnapToPower","extent_1","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","setRotation","setCenter","setResolution","zoom","setZoom","resolveConstraints","options_","getUpdatedOptions_","newOptions","getResolution","getZoom","getRotation","animate","var_args","isDef","getAnimating","animate_","animationCount","series","complete","easing","getResolutionForZoom","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getSizeFromViewport_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","selector","querySelector","metrics","getComputedStyle","w","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","nearest","baseLevel","fit","geometryOrExtent","padding","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","getConstrainedResolution","centerRotX","centerRotY","getConstrainedCenter","centerOn","centerX","centerY","adjustCenter","deltaCoordinates","adjustResolution","isMoving","newResolution","adjustZoom","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","createCanvasContext2D","opt_width","opt_height","canvas","dom_outerWidth","offsetWidth","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base_extends","Base","BaseLayer","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","opt_managed","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_extends","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","ownLayerState","layerState","size_buffer","size_scale","toSize","PluggableMap_extends","cache","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","labelCacheListenerKey_","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","attachLabelCache","labelCache","detachLabelCache","redrawText","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","left","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getLoading","layerStatesArray","getSource","loading","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","layerStates","hasRenderer","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","declutterItems","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","Control_extends","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer_extends","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","Attribution_extends","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_extends","Rotate_render","rotation_","autoHide_","add","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","Zoom_extends","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","interaction_Property","ACTIVE","Interaction_extends","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_extends","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_extends","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","event_1","DragPan_extends","defaultCondition","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","DragRotate_extends","interaction_DragRotate","DragRotate","lastAngle_","Box_extends","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBox_extends","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","minArea","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragZoom_extends","out_","mapExtent","boxPixelExtent","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_extends","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_extends","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","MouseWheelZoom_extends","Mode","interaction_MouseWheelZoom","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","endInteraction_","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate_extends","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom_extends","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","Event_extends","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cacheSize","g","exec","body","rgb","fromNamed","hasAlpha","substr","normalize","fromStringInternal_","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","maxCacheSize","shared","asColorLike","render_VectorContext","VectorContext","drawCustom","renderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","LRUCache_extends","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","LabelCache_extends","LabelCache_LabelCache","LabelCache","consumers","consumer","consumerId","prune","outer","release","defaultLineDash","defaultPadding","canvas_labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","div","heights","measureTextHeight","margin","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","resetTransform","drawImage","image","originX","originY","alpha","globalAlpha","setTransform","Immediate_extends","Immediate","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","renderDeclutterItems","declutterTree","items","zIndexItems","renderDeclutter","Map_extends","expireIconCache","renderer_Map","MapRenderer","declutterTree_","calculateMatrices2D","thisArg","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","declutteredFeatures","numLayers","callback_1","getWrapX","scheduleExpireIconCache","Composite_extends","Composite","CompositeMapRenderer","insertBefore","firstChild","children_","MAX_SAFE_INTEGER","oldChildren","childNodes","oldChild","newChild","replaceChildren","getDataAtPixel","ol_Map_extends","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_extends","Overlay_Property","ELEMENT","MAP","OFFSET","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","bottom","top_1","getOptions","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","loadFeaturesXhr","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","featureloader_xhr","dataProjection","addFeatures","loadingstrategy_all","loadingstrategy_bbox","TileRange","tileCoord","containsTileRange","tileRange","TileRange_createOrUpdate","ol_TileRange","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","hash","tmpTileCoord","tilegrid_TileGrid","TileGrid","opt_strict","compare","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","getTileRangeForExtentAndZ","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","getForProjection","createForProjection","createXYZ","xyzOptions","gridOptions","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_corner","createForExtent","extentFromProjection","half","DYNAMIC_DRAW","CONTEXT_IDS","opt_attributes","EXTENSIONS","webgl_gl","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","parse","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","BufferUsage","STATIC_DRAW","STREAM_DRAW","Buffer","WebGLArrayBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","ContextEventType","LOST","RESTORED","fromTransform","mat4","DEFAULT_VERTEX_SHADER","DEFAULT_FRAGMENT_SHADER","PostProcessingPass","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","Float32Array","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","texture","uniform3f","uniform4f","uniform1f","Helper_extends","DefaultUniform","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","DefaultAttrib","Helper","WebGLHelper","canvas_","bufferCache_","shaderCache_","programCache_","currentProgram_","hasOESElementIndexUint","getExtension","handleWebGLContextLost","handleWebGLContextRestored","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","name_1","postProcessPasses_","postProcesses","shaderCompileErrors_","bufferKey","bufferCache","webGlBuffer","flushBufferData","arrayBuffer","Uint32Array","Uint16Array","deleteBuffer","bufferCacheEntry","isContextLost","deleteProgram","deleteShader","prepareDraw","getCanvas","applyFrameState","drawElements","elementType","UNSIGNED_INT","UNSIGNED_SHORT","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","HTMLImageElement","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","getShaderCompileErrors","getAttributeLocation","makeProjectionTransform","setUniformFloatValue","uniformMatrix4fv","enableAttributeArray","attribName","createTextureInternal","opt_wrapS","opt_wrapT","TEXTURE_MAG_FILTER","createEmptyTexture","WMTS_extends","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","ImageState","style_Image","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape_extends","style_RegularShape","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","Circle_extends","style_Circle","CircleStyle","setRadius","style_Fill","Fill","color_","setColor","IconAnchorUnits","FRACTION","ImageBase_extends","ol_ImageBase","ImageBase","getPixelRatio","Image_extends","listenImage","loadHandler","errorHandler","img","decode","promise","listening_1","then","catch","ol_Image","ImageWrapper","imageLoadFunction","src_","Image","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","setImage","IconImage_extends","IconImage_IconImage","IconImage","imageState","hitDetectionImage_","imageState_","tainted_","isTainted_","getImageData","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","Icon_extends","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","style_Stroke","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","style_Style","TextPlacement","LINE","DEFAULT_FILL_COLOR","style_Text","Text","font_","textAlign_","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getPlacement","getMaxAngle","getOverflow","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","stopCharCode","stop_1","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","ERROR_THRESHOLD","Tile_extends","ol_Tile","Tile","interimTile","transition_","transition","transitionStarts_","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","ImageTile_extends","getBlankImage","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","TileCache_extends","ol_TileCache","TileCache","expireCache","pruneExceptNewestZ","fromKey","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","save","p0","p1","p2","clip","restore","MAX_SUBDIVISION","reproj_Triangulation","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Tile_extends","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad_1","sourceListenKey_1","Source_extends","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","source_Tile_extends","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","canUseScreen","self","screen","availWidth","availHeight","tileCache","tmpSize","tileOptions","zDirection","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","thisProj","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","worldsAway","tilegrid_wrapX","withinExtentAndZ","useTile","TileSourceEvent","source_Tile","TileEventType","UrlTile_extends","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","TileImage_extends","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","BingMaps_extends","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","imageryProviders","transform_1","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","XYZ_extends","source_XYZ","CartoDB_extends","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","err","tilesUrl","cdn_url","https","layergroupid","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","structs_RBush","RBush","opt_maxEntries","rbush_","rbush_min_default","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","Vector_extends","VectorSourceEvent","opt_feature","Vector","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","Cluster_extends","source_Cluster","Cluster","geometryFunction","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","Zoomify_extends","TierSizeCalculation","DEFAULT","TRUNCATED","Zoomify_CustomTile","CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","reverse","tileCountUpToTier","tileCoordZ","tileIndex","tileSize_1","localContext_1","TileGroup","ZoomifyTileClass","Versions","VERSION1","VERSION2","VERSION3","IIIF_PROFILE_VALUES","level0","supports","formats","qualities","level1","level2","COMPLIANCE_VERSION1","RegExp","COMPLIANCE_VERSION2","COMPLIANCE_VERSION3","versionFunctions","iiifInfo","levelProfile","getComplianceLevelSupportedFeatures","imageInfo","scale_factors","tile_width","tile_height","additionalProfile","profile","profileSupports","profileFormats","profileQualities","tiles","scaleFactors","extraFeatures","extraFormats","extraQualities","maxWidth","maxHeight","maxArea","format_IIIFInfo","IIIFInfo","setImageInfo","getImageApiVersion","getComplianceLevelEntryFromProfile","version","test","getComplianceLevelFromProfile","complianceLevel","level","getTileSourceOptions","opt_preferredOptions","imageOptions","quality","IIIF_extends","formatPercentage","percentage","toLocaleString","maximumFractionDigits","source_IIIF","IIIF","baseUrl","lastIndexOf","supportsListedSizes","supportsListedTiles","isInteger","supportsArbitraryTiling","maxScaleFactor","ignoredSizesIndex","IiifTileClass","regionParam","sizeParam","tileX","tileY","regionX","regionY","regionW","regionH","sizeW","sizeH","regionWidth","regionHeight","reproj_Image_extends","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","source_Image_extends","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","appendParams","uri","params","keyParams","encodeURIComponent","qs","ImageArcGISRest_extends","source_ImageArcGISRest","ImageArcGISRest","params_","renderedRevision_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ImageCanvas_extends","ol_ImageCanvas","ImageCanvas","opt_loader","error_","getError","handleLoad_","source_ImageCanvas_extends","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","ImageMapGuide_extends","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic_extends","ImageStatic","Static","imageExtent_","imageExtent","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","ImageWMS_extends","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","OSM_extends","ATTRIBUTION","source_OSM","OSM","BaseImage_extends","BaseImage","BaseImageLayer","renderer_Layer_extends","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","createLoadedTileFinder","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","canvas_Layer_extends","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","ImageLayer_extends","canvas_ImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imagePixelRatio","viewCenter","clearRect","clipped","dw","dh","canvasTransform","layer_Image_extends","layer_Image","ImageLayer","TileProperty","BaseTile_extends","BaseTile","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","TileLayer_extends","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","zs","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","floatX","nextX","floatY","nextY","drawTileImage","updateUsedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","opt_tileCallback","canvas_TileLayer","layer_Tile_extends","layer_Tile","TileLayer","Raster_extends","RasterEventType","RasterOperationType","PIXEL","IMAGE","RasterSourceEvent","Raster_RasterSource","RasterSource","worker_","operationType_","operationType","threads_","layers_","createLayer","createLayers","requestedFrameState_","renderedImageCanvas_","iMax","sourceOrLayer","sourceAttribution","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","sharedContext","layerOrSource","Raster","Stamen_extends","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_extends","TileArcGISRest_tileUrlFunction","tileExtent","tmpExtent_","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_extends","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","TileJSON_extends","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent_1","TileWMS_extends","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_extends","UTFGrid_CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","VectorRenderTile_extends","ol_VectorRenderTile","VectorRenderTile","getSourceTiles","removeSourceTiles","executorGroups","loadingSourceTiles","errorSourceTileKeys","replayState_","wantedResolution","getSourceTiles_","removeSourceTiles_","sourceZ","hasContext","getReplayState","dirty","renderedRenderOrder","renderedTileResolution","renderedTileRevision","renderedZ","renderedTileZ","VectorTile_extends","ol_VectorTile","VectorTile","features_","onLoad","setFeatures","onError","source_VectorTile_extends","source_VectorTile","defaultLoadFunction","loadingTiles_","sourceTilesByTileKey_","tileGrids_","sourceTiles","sourceTileGrid_1","covered_1","empty_1","sourceZ_1","loadedZ_1","sourceTileCoord","sourceTile","key_1","sourceTileKey","previousSourceTiles","addSourceTiles","WMTSRequestEncoding","KVP","REST","source_WMTS_extends","source_WMTS","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","TileMatrix","TileCol","TileRow","webgl_Layer_extends","Layer_WebGLLayerRenderer","WebGLLayerRenderer","helper_","pushFeatureToBuffer","vertexBuffer","indexBuffer","geojsonFeature","red","green","baseIndex","customAttributeValues","tmpArray_","pushPointFeatureToBuffer_","webgl_Layer","format_Feature","FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","transformed","decimals","power_1","transformExtentWithOptions","JSONFeature_extends","getObject","format_JSONFeature","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GeometryCollection_extends","cloneGeometries","clonedGeometries","geom_GeometryCollection","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","LineString_extends","geom_LineString","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","MultiLineString_extends","geom_MultiLineString","MultiLineString","lineStrings","lineString","appendLineString","opt_interpolate","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","MultiPoint_extends","geom_MultiPoint","MultiPoint","appendPoint","getPoint","center_linearRingss","MultiPolygon_extends","geom_MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","GeoJSON_extends","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","PointsLayer_extends","PointsLayer_VERTEX_SHADER","PointsLayer_FRAGMENT_SHADER","PointsLayer","WebGLPointsLayerRenderer","vectorLayer","u_texture","projectionMatrixTransform","sourceRevision_","verticesBuffer_","indicesBuffer_","program_","sizeCallback_","sizeCallback","coordCallback_","coordCallback","opacityCallback_","opacityCallback","texCoordCallback_","texCoordCallback","colorArray_","colorCallback_","colorCallback","rotateWithViewCallback_","rotateWithViewCallback","geojsonFormat_","geojsonFeatureCache_","currentTransform_","renderTransform_","invertRenderTransform_","vectorSource","sourceChanged","viewNotMoving","rebuildBuffers_","bytesPerFloat","BYTES_PER_ELEMENT","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder_extends","Builder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","reverseHitDetectionInstructions","instruction","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder_extends","ImageBuilder","CanvasImageBuilder","declutterGroup_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder_extends","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_extends","PolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TextBuilder_extends","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","BATCH_CONSTRUCTORS","Circle","Default","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","flatOffset","flatEnd","oo","drawChars_","geometryWidths","saveTextStates_","pixelRatio_1","strokeKey","textKey","fillKey","baseline","canvas_BuilderGroup","BuilderGroup","declutter","declutter_","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","BuilderType","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","angleChanged","char","charLength","charM","segmentPos","Executor_extends","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","alignFill_","coordinateCache_","renderedTransform_","widths_","getTextImage","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","groupCount","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ExecutorGroup_extends","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","contextSize","hitExtent","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","i_1","j_1","result_1","executor","opt_builderTypes","opt_declutterReplays","builderTypes","0","replayDeclutter","declutterReplays","zz","executorData","currentExecutor","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","renderFeatureInternal","VectorLayer_extends","canvas_VectorLayer","CanvasVectorLayerRenderer","dirty_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipExtent","getDeclutter","world","transform_2","viewHints_1","layer_1","features_1","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","styleFunction","features_2","replayGroupInstructions","executorGroup","VectorImageLayer_extends","canvas_VectorImageLayer","CanvasVectorImageLayerRenderer","skippedFeatures_","vectorRenderer_","layerImageRatio_","getImageRatio","vectorRenderer","skippedFeatures_1","imageFrameState_1","newSkippedFeatures_1","image_1","VectorTileRenderType","HYBRID","VectorTileLayer_extends","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","canvas_VectorTileLayer","CanvasVectorTileLayerRenderer","baseCanvas","overlayContext_","overlayCanvas","container_","overlayPixelTransform_","inverseOverlayPixelTransform_","renderedLayerRevision_","renderTileImageQueue_","tileListenerKeys_","tmpTransform_","prepareTile","tileUid","updateExecutorGroup_","tileImageNeedsRender_","listenerKey","layerRevision","revision","renderOrder","builderState","layerUid","tt","sourceTileExtent","sharedExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","renderMode","getRenderMode","renderTileImages_","replayTypes","clips","worldOffset","currentClip","renderPixelRatio","renderTileImage_","replayState","renderScale","pixelScale","BaseVector_extends","BaseVector_Property","BaseVector","BaseVectorLayer","renderBuffer","updateWhileAnimating_","updateWhileInteracting_","setRenderOrder","toFunction","layer_Vector_extends","layer_Vector","VectorLayer","geodesic_line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","Graticule_extends","DEFAULT_STROKE_STYLE","INTERVALS","layer_Graticule","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleCache_","lonLabelStyle_","latLabelStyleCache_","latLabelStyle_","intervals_","loaderFunction","featurePool_","lineStyle_","renderExtent","updateProjectionInfo_","createGraticule_","featureCount","featuresColl","labelData","poolIndex","geom","addMeridian_","lon","minLat","maxLat","getMeridian_","textPoint","getMeridianPoint_","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","frac","meridian","clampedBottom","clampedTop","getMeridians","lon2","parallel","clampedLeft","clampedRight","getParallels","worldExtentP","Heatmap_extends","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","u_size","u_blurSlope","u_resolution","u_gradientTexture","VectorImage_extends","VectorImage","VectorImageLayer","imageRatio","imageRatio_","layer_VectorTile_extends","layer_VectorTile","VectorTileLayer","renderMode_","DragAndDrop_extends","DragAndDropEventType","DragAndDropEvent","file","opt_features","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","DragRotateAndZoom_extends","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","geom_Circle_extends","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","Draw_extends","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","squaredLength","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","Extent_extends","ExtentEventType","EXTENTCHANGED","ExtentEvent","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","interaction_Extent","Extent","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","Modify_extends","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","Select_extends","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","Select_getDefaultStyleFunction","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","featureOverlay_","layers_1","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","Snap_extends","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","isCircle","closestOnCircle","Translate_extends","TranslateEventType","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","deltaX_1","deltaY_1","oldMap","EsriJSON_extends","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","EsriJSON_readGeometry","esriJSONPolygon","flatRing","outerRings","holes","clockwise","hole","matched","outerRing","containsHole","convertRings","geometryReader","hasZ","hasM","getHasZM","EsriJSON_writeGeometry","geometryWriter","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","XMLFeature_extends","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLBase_extends","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","child","ft","candidate","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_extends","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_extends","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32_extends","GML32","http://www.opengis.net/gml/3.2","format_GML32","GPX_extends","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","format_GPX","TextFeature_extends","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGC_extends","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","KML_extends","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","KML_DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","fs","readName","readNameFromDocument","readNameFromNode","name_2","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","Feature_tmpTransform","Feature_RenderFeature","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","MVT_extends","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","ctor","pbf_default","pbfLayers","pbfLayer","OSMXML_extends","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","Polyline_extends","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_extends","TopoJSON_TopoJSON","TopoJSON","topoJSONTopology","arcs","transformArc","transformArcs","topoJSONFeatures","objectName","readFeaturesFromGeometryCollection","readFeatureFromGeometry","TopoJSON_GEOMETRY_READERS","transformVertex","concatenateArcs","polyArray","ringCoords","indices","format_TopoJSON","filter_Filter","Filter","tagName_","getTagName","LogicalNary_extends","filter_LogicalNary","LogicalNary","conditions","And_extends","filter_And","And","Bbox_extends","filter_Bbox","Bbox","Spatial_extends","filter_Spatial","Spatial","Contains_extends","filter_Contains","Contains","Comparison_extends","filter_Comparison","Comparison","propertyName","During_extends","filter_During","During","ComparisonBinary_extends","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","EqualTo_extends","filter_EqualTo","EqualTo","GreaterThan_extends","filter_GreaterThan","GreaterThan","GreaterThanOrEqualTo_extends","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","Intersects_extends","filter_Intersects","Intersects","IsBetween_extends","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","IsLike_extends","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","IsNull_extends","filter_IsNull","IsNull","LessThan_extends","filter_LessThan","LessThan","LessThanOrEqualTo_extends","filter_LessThanOrEqualTo","LessThanOrEqualTo","Not_extends","filter_Not","Not","NotEqualTo_extends","filter_NotEqualTo","NotEqualTo","Or_extends","filter_Or","Or","Within_extends","filter_Within","Within","and","Function","filter_bbox","WFS_extends","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","WKT_extends","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","Parser","lexer","lexer_","token_","layout_","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","geomType","WKT_WKT","WKT","splitCollection_","splitCollection","parse_","encode","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","encodeGeometryLayout","format_WKT","NAMESPACE_URI","readHref","format_XML","readFromDocument","readFromNode","WMSCapabilities_extends","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","default","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","WMSGetFeatureInfo_extends","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_extends","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_extends","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","FullScreen_extends","FullScreen_events","isFullScreenSupported","webkitRequestFullscreen","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","isFullScreen","webkitIsFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","msExitFullscreen","webkitExitFullscreen","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","MousePosition_extends","MousePosition_render","mapProjection_","control_MousePosition","MousePosition","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap_extends","OverviewMap_ControlledMap","ControlledMap","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","ScaleLine_extends","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","bar","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","createScaleBar","mapScale","getScaleForResolution","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","ZoomSlider_extends","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","getPositionForResolution_","ZoomToExtent_extends","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","ol","colorlike","featureloader","has","loadingstrategy","proj4","webgl","sphere","util","unByKey","stableSort","compareFnc","createStringXY","toStringHDMS","upAndDown","click","doubleClick","penOnly","pointerEvt","platformModifierKeyOnly","touchOnly","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","getRenderPixel","getVectorContext","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","sphere_getArea","ELEMENT_ARRAY_BUFFER","__webpack_exports__"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,GAAAH,GACA,iBAAAC,QACAA,QAAA,GAAAD,IAEAD,EAAA,GAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,qBClFmEtC,EAAAD,QAA0F,WAAiB,aAAa,SAAA0B,IAAAJ,EAAAkB,EAAAC,EAAAC,IAAsB,SAAAhB,EAAAO,EAAAX,EAAAkB,EAAAC,EAAAC,GAAuB,KAAKD,EAAAD,GAAI,CAAE,GAAAC,EAAAD,EAAA,KAAY,IAAAvB,EAAAwB,EAAAD,EAAA,EAAAD,EAAAjB,EAAAkB,EAAA,EAAA/B,EAAAkC,KAAAC,IAAA3B,GAAA4B,EAAA,GAAAF,KAAAG,IAAA,EAAArC,EAAA,GAAAsC,EAAA,GAAAJ,KAAAK,KAAAvC,EAAAoC,GAAA5B,EAAA4B,GAAA5B,IAAAsB,EAAAtB,EAAA,UAAAL,EAAA+B,KAAAM,IAAAT,EAAAG,KAAAO,MAAA5B,EAAAiB,EAAAM,EAAA5B,EAAA8B,IAAAlC,EAAA8B,KAAAQ,IAAAV,EAAAE,KAAAO,MAAA5B,GAAAL,EAAAsB,GAAAM,EAAA5B,EAAA8B,IAA8KrB,EAAAO,EAAAX,EAAAV,EAAAC,EAAA6B,GAAa,IAAAJ,EAAAL,EAAAX,GAAAR,EAAA0B,EAAAY,EAAAX,EAAmB,IAAAjC,EAAAyB,EAAAO,EAAAlB,GAAAoB,EAAAT,EAAAQ,GAAAH,GAAA,GAAA9B,EAAAyB,EAAAO,EAAAC,GAAmC3B,EAAAsC,GAAI,CAAE,IAAA5C,EAAAyB,EAAAnB,EAAAsC,GAAAtC,IAAAsC,IAAqBV,EAAAT,EAAAnB,GAAAwB,GAAA,GAAYxB,IAAK,KAAK4B,EAAAT,EAAAmB,GAAAd,GAAA,GAAYc,IAAK,IAAAV,EAAAT,EAAAO,GAAAF,GAAA9B,EAAAyB,EAAAO,EAAAY,GAAA5C,EAAAyB,IAAAmB,EAAAX,GAAAW,GAAA9B,IAAAkB,EAAAY,EAAA,GAAA9B,GAAA8B,IAAAX,EAAAW,EAAA,IAAjW,CAAga1B,EAAAJ,EAAAkB,GAAA,EAAAC,GAAAf,EAAA2B,OAAA,EAAAX,GAAAT,GAA8B,SAAAzB,EAAAkB,EAAAlB,EAAAyB,GAAkB,IAAAX,EAAAI,EAAAlB,GAAWkB,EAAAlB,GAAAkB,EAAAO,GAAAP,EAAAO,GAAAX,EAAiB,SAAAW,EAAAP,EAAAlB,GAAgB,OAAAkB,EAAAlB,GAAA,EAAAkB,EAAAlB,EAAA,IAAsB,IAAAc,EAAA,SAAAI,QAAkB,IAAAA,MAAA,GAAA4B,KAAAC,YAAAZ,KAAAM,IAAA,EAAAvB,GAAA4B,KAAAE,YAAAb,KAAAM,IAAA,EAAAN,KAAAc,KAAA,GAAAH,KAAAC,cAAAD,KAAAI,SAA2H,SAAAlB,EAAAd,EAAAlB,EAAAyB,GAAkB,IAAAA,EAAA,OAAAzB,EAAAmD,QAAAjC,GAA0B,QAAAJ,EAAA,EAAYA,EAAAd,EAAA6C,OAAW/B,IAAA,GAAAW,EAAAP,EAAAlB,EAAAc,IAAA,OAAAA,EAA0B,SAAS,SAAAmB,EAAAf,EAAAlB,GAAgBkC,EAAAhB,EAAA,EAAAA,EAAAkC,SAAAP,OAAA7C,EAAAkB,GAA6B,SAAAgB,EAAAhB,EAAAlB,EAAAyB,EAAAX,EAAAkB,GAAsBA,MAAAF,EAAA,OAAAE,EAAAqB,KAAA,IAAArB,EAAAsB,KAAA,IAAAtB,EAAAuB,MAAA,IAAAvB,EAAAwB,MAAA,IAA6D,QAAAvB,EAAAjC,EAAYiC,EAAAR,EAAIQ,IAAA,CAAK,IAAAC,EAAAhB,EAAAkC,SAAAnB,GAAoBxB,EAAAuB,EAAAd,EAAAuC,KAAA3C,EAAAoB,MAAmB,OAAAF,EAAS,SAAAvB,EAAAS,EAAAlB,GAAgB,OAAAkB,EAAAmC,KAAAlB,KAAAQ,IAAAzB,EAAAmC,KAAArD,EAAAqD,MAAAnC,EAAAoC,KAAAnB,KAAAQ,IAAAzB,EAAAoC,KAAAtD,EAAAsD,MAAApC,EAAAqC,KAAApB,KAAAM,IAAAvB,EAAAqC,KAAAvD,EAAAuD,MAAArC,EAAAsC,KAAArB,KAAAM,IAAAvB,EAAAsC,KAAAxD,EAAAwD,MAAAtC,EAAqI,SAAAa,EAAAb,EAAAlB,GAAgB,OAAAkB,EAAAmC,KAAArD,EAAAqD,KAAqB,SAAApD,EAAAiB,EAAAlB,GAAgB,OAAAkB,EAAAoC,KAAAtD,EAAAsD,KAAqB,SAAAjB,EAAAnB,GAAc,OAAAA,EAAAqC,KAAArC,EAAAmC,OAAAnC,EAAAsC,KAAAtC,EAAAoC,MAAsC,SAAAf,EAAArB,GAAc,OAAAA,EAAAqC,KAAArC,EAAAmC,MAAAnC,EAAAsC,KAAAtC,EAAAoC,MAAqC,SAAAlD,EAAAc,EAAAlB,GAAgB,OAAAkB,EAAAmC,MAAArD,EAAAqD,MAAAnC,EAAAoC,MAAAtD,EAAAsD,MAAAtD,EAAAuD,MAAArC,EAAAqC,MAAAvD,EAAAwD,MAAAtC,EAAAsC,KAAsE,SAAAnD,EAAAa,EAAAlB,GAAgB,OAAAA,EAAAqD,MAAAnC,EAAAqC,MAAAvD,EAAAsD,MAAApC,EAAAsC,MAAAxD,EAAAuD,MAAArC,EAAAmC,MAAArD,EAAAwD,MAAAtC,EAAAoC,KAAsE,SAAAxB,EAAAZ,GAAc,OAAOkC,SAAAlC,EAAAwC,OAAA,EAAAD,MAAA,EAAAJ,KAAA,IAAAC,KAAA,IAAAC,MAAA,IAAAC,MAAA,KAAmE,SAAAlD,EAAAN,EAAAyB,EAAAX,EAAAkB,EAAAC,GAAsB,QAAAC,EAAA,CAAAT,EAAAX,GAAgBoB,EAAAW,QAAS,MAAA/B,EAAAoB,EAAAyB,QAAAlC,EAAAS,EAAAyB,QAAA3B,GAAA,CAAmC,IAAAvB,EAAAgB,EAAAU,KAAAc,MAAAnC,EAAAW,GAAAO,EAAA,GAAAA,EAA+Bd,EAAAlB,EAAAS,EAAAgB,EAAAX,EAAAmB,GAAAC,EAAA0B,KAAAnC,EAAAhB,IAAAK,IAA8B,OAAAA,EAAAc,UAAAiC,IAAA,WAAkC,OAAAf,KAAAgB,KAAAhB,KAAAiB,KAAA,KAA+BjD,EAAAc,UAAAoC,OAAA,SAAA9C,GAAgC,IAAAlB,EAAA8C,KAAAiB,KAAAtC,EAAA,GAAqB,IAAApB,EAAAa,EAAAlB,GAAA,OAAAyB,EAAoB,QAAAX,EAAAgC,KAAAmB,OAAAjC,EAAA,GAA2BhC,GAAE,CAAE,QAAAiC,EAAA,EAAYA,EAAAjC,EAAAoD,SAAAP,OAAoBZ,IAAA,CAAK,IAAAC,EAAAlC,EAAAoD,SAAAnB,GAAAxB,EAAAT,EAAAyD,KAAA3C,EAAAoB,KAAoC7B,EAAAa,EAAAT,KAAAT,EAAAyD,KAAAhC,EAAAmC,KAAA1B,GAAA9B,EAAAc,EAAAT,GAAAqC,KAAAgB,KAAA5B,EAAAT,GAAAO,EAAA4B,KAAA1B,IAA2DlC,EAAAgC,EAAA2B,MAAU,OAAAlC,GAASX,EAAAc,UAAAsC,SAAA,SAAAhD,GAAkC,IAAAlB,EAAA8C,KAAAiB,KAAgB,IAAA1D,EAAAa,EAAAlB,GAAA,SAAoB,QAAAyB,EAAA,GAAazB,GAAE,CAAE,QAAAc,EAAA,EAAYA,EAAAd,EAAAoD,SAAAP,OAAoB/B,IAAA,CAAK,IAAAkB,EAAAhC,EAAAoD,SAAAtC,GAAAmB,EAAAjC,EAAAyD,KAAAX,KAAAmB,OAAAjC,KAA8C,GAAA3B,EAAAa,EAAAe,GAAA,CAAW,GAAAjC,EAAAyD,MAAArD,EAAAc,EAAAe,GAAA,SAA2BR,EAAAmC,KAAA5B,IAAWhC,EAAAyB,EAAAkC,MAAU,UAAS7C,EAAAc,UAAAuC,KAAA,SAAAjD,GAA8B,IAAAA,MAAA2B,OAAA,OAAAC,KAA6B,GAAA5B,EAAA2B,OAAAC,KAAAE,YAAA,CAA8B,QAAAhD,EAAA,EAAYA,EAAAkB,EAAA2B,OAAW7C,IAAA8C,KAAAsB,OAAAlD,EAAAlB,IAAsB,OAAA8C,KAAY,IAAArB,EAAAqB,KAAAuB,OAAAnD,EAAAoD,QAAA,EAAApD,EAAA2B,OAAA,KAA4C,GAAAC,KAAAiB,KAAAX,SAAAP,OAAA,GAAAC,KAAAiB,KAAAL,SAAAjC,EAAAiC,OAAAZ,KAAAyB,WAAAzB,KAAAiB,KAAAtC,OAAyF,CAAK,GAAAqB,KAAAiB,KAAAL,OAAAjC,EAAAiC,OAAA,CAA8B,IAAA5C,EAAAgC,KAAAiB,KAAgBjB,KAAAiB,KAAAtC,IAAAX,EAAgBgC,KAAA0B,QAAA/C,EAAAqB,KAAAiB,KAAAL,OAAAjC,EAAAiC,OAAA,WAA+CZ,KAAAiB,KAAAtC,EAAiB,OAAAqB,MAAYhC,EAAAc,UAAAwC,OAAA,SAAAlD,GAAgC,OAAAA,GAAA4B,KAAA0B,QAAAtD,EAAA4B,KAAAiB,KAAAL,OAAA,GAAAZ,MAAkDhC,EAAAc,UAAAsB,MAAA,WAA8B,OAAAJ,KAAAiB,KAAAjC,EAAA,IAAAgB,MAA4BhC,EAAAc,UAAA6C,OAAA,SAAAvD,EAAAlB,GAAkC,IAAAkB,EAAA,OAAA4B,KAAkB,QAAArB,EAAAX,EAAAmB,EAAAC,EAAAY,KAAAiB,KAAAtD,EAAAqC,KAAAmB,OAAA/C,GAAAa,EAAA,GAAA9B,EAAA,GAAqDiC,GAAAH,EAAAc,QAAY,CAAE,GAAAX,MAAAH,EAAA4B,MAAA7C,EAAAiB,IAAAc,OAAA,GAAApB,EAAAxB,EAAA0D,MAAA1B,GAAA,GAAAC,EAAAuB,KAAA,CAAyD,IAAApB,EAAAL,EAAAd,EAAAgB,EAAAkB,SAAApD,GAAwB,QAAAqC,EAAA,OAAAH,EAAAkB,SAAAsB,OAAArC,EAAA,GAAAN,EAAA6B,KAAA1B,GAAAY,KAAA6B,UAAA5C,GAAAe,KAAyEb,GAAAC,EAAAuB,OAAArD,EAAA8B,EAAAzB,GAAAK,GAAAW,IAAAS,EAAApB,EAAAsC,SAAA3B,GAAAQ,GAAA,GAAAC,EAAA,MAAAH,EAAA6B,KAAA1B,GAAAjC,EAAA2D,KAAAnC,KAAA,EAAAX,EAAAoB,MAAAkB,SAAA,IAAqG,OAAAN,MAAYhC,EAAAc,UAAAqC,OAAA,SAAA/C,GAAgC,OAAAA,GAASJ,EAAAc,UAAAgD,YAAA,SAAA1D,EAAAlB,GAAuC,OAAAkB,EAAAmC,KAAArD,EAAAqD,MAAqBvC,EAAAc,UAAAiD,YAAA,SAAA3D,EAAAlB,GAAuC,OAAAkB,EAAAoC,KAAAtD,EAAAsD,MAAqBxC,EAAAc,UAAAkD,OAAA,WAA+B,OAAAhC,KAAAiB,MAAiBjD,EAAAc,UAAAmD,SAAA,SAAA7D,GAAkC,OAAA4B,KAAAiB,KAAA7C,EAAA4B,MAAwBhC,EAAAc,UAAAkC,KAAA,SAAA5C,EAAAlB,GAAgC,QAAAyB,EAAA,GAAaP,GAAEA,EAAAuC,KAAAzD,EAAA4D,KAAAoB,MAAAhF,EAAAkB,EAAAkC,UAAA3B,EAAAmC,KAAAoB,MAAAvD,EAAAP,EAAAkC,UAAAlC,EAAAO,EAAAkC,MAAwE,OAAA3D,GAASc,EAAAc,UAAAyC,OAAA,SAAAnD,EAAAlB,EAAAyB,EAAAX,GAAsC,IAAAkB,EAAAE,EAAAT,EAAAzB,EAAA,EAAAS,EAAAqC,KAAAC,YAAiC,GAAAb,GAAAzB,EAAA,OAAAwB,EAAAD,EAAAF,EAAAZ,EAAAoD,MAAAtE,EAAAyB,EAAA,IAAAqB,KAAAmB,QAAAjC,EAAoDlB,MAAAqB,KAAAc,KAAAd,KAAAC,IAAAF,GAAAC,KAAAC,IAAA3B,MAAA0B,KAAAc,KAAAf,EAAAC,KAAA8C,IAAAxE,EAAAK,EAAA,MAAAkB,EAAAF,EAAA,KAAA2B,MAAA,EAAAzB,EAAA0B,OAAA5C,EAAsG,IAAAiB,EAAAI,KAAAc,KAAAf,EAAAzB,GAAAR,EAAA8B,EAAAI,KAAAc,KAAAd,KAAAK,KAAA/B,IAAiDH,EAAAY,EAAAlB,EAAAyB,EAAAxB,EAAA6C,KAAA8B,aAA4B,QAAAvC,EAAArC,EAAYqC,GAAAZ,EAAKY,GAAApC,EAAA,CAAM,IAAAsC,EAAAJ,KAAAQ,IAAAN,EAAApC,EAAA,EAAAwB,GAAwBnB,EAAAY,EAAAmB,EAAAE,EAAAR,EAAAe,KAAA+B,aAA4B,QAAAzE,EAAAiC,EAAYjC,GAAAmC,EAAKnC,GAAA2B,EAAA,CAAM,IAAA1B,EAAA8B,KAAAQ,IAAAvC,EAAA2B,EAAA,EAAAQ,GAAwBP,EAAAoB,SAAAQ,KAAAd,KAAAuB,OAAAnD,EAAAd,EAAAC,EAAAS,EAAA,KAAyC,OAAAmB,EAAAD,EAAAc,KAAAmB,QAAAjC,GAA0BlB,EAAAc,UAAAsD,eAAA,SAAAhE,EAAAlB,EAAAyB,EAAAX,GAA8C,KAAKA,EAAA8C,KAAA5D,MAAAyD,MAAA3C,EAAA+B,OAAA,IAAApB,GAAkC,CAAE,QAAAO,EAAA,IAAAC,EAAA,IAAAC,OAAA,EAAAzB,EAAA,EAAiCA,EAAAT,EAAAoD,SAAAP,OAAoBpC,IAAA,CAAK,IAAAsB,EAAA/B,EAAAoD,SAAA3C,GAAAR,EAAAoC,EAAAN,GAAAQ,GAAAnC,EAAAc,EAAAb,EAAA0B,GAAAI,KAAAM,IAAApC,EAAAkD,KAAAnD,EAAAmD,MAAApB,KAAAQ,IAAAtC,EAAAgD,KAAAjD,EAAAiD,QAAAlB,KAAAM,IAAApC,EAAAmD,KAAApD,EAAAoD,MAAArB,KAAAQ,IAAAtC,EAAAiD,KAAAlD,EAAAkD,OAAArD,GAA6IsC,EAAAN,KAAAM,EAAAP,EAAA/B,EAAA+B,EAAA/B,EAAA+B,EAAAE,EAAAH,GAAAQ,IAAAN,GAAAhC,EAAA+B,MAAA/B,EAAAiC,EAAAH,GAA8C/B,EAAAkC,GAAAlC,EAAAoD,SAAA,GAAmB,IAAAhD,EAAAC,EAAQ,OAAAL,GAASc,EAAAc,UAAA4C,QAAA,SAAAtD,EAAAlB,EAAAyB,GAAqC,IAAAX,EAAAW,EAAAP,EAAA4B,KAAAmB,OAAA/C,GAAAc,EAAA,GAAAC,EAAAa,KAAAoC,eAAApE,EAAAgC,KAAAiB,KAAA/D,EAAAgC,GAAqE,IAAAC,EAAAmB,SAAAQ,KAAA1C,GAAAT,EAAAwB,EAAAnB,GAA8Bd,GAAA,GAAAgC,EAAAhC,GAAAoD,SAAAP,OAAAC,KAAAC,aAA4CD,KAAAqC,OAAAnD,EAAAhC,OAAsB8C,KAAAsC,oBAAAtE,EAAAkB,EAAAhC,IAAgCc,EAAAc,UAAAuD,OAAA,SAAAjE,EAAAlB,GAAkC,IAAAyB,EAAAP,EAAAlB,GAAAc,EAAAW,EAAA2B,SAAAP,OAAAb,EAAAc,KAAAE,YAAkDF,KAAAuC,iBAAA5D,EAAAO,EAAAlB,GAA6B,IAAAoB,EAAAY,KAAAwC,kBAAA7D,EAAAO,EAAAlB,GAAAL,EAAAqB,EAAAL,EAAA2B,SAAAsB,OAAAxC,EAAAT,EAAA2B,SAAAP,OAAAX,IAAkFzB,EAAAiD,OAAAjC,EAAAiC,OAAAjD,EAAAgD,KAAAhC,EAAAgC,KAAAxB,EAAAR,EAAAqB,KAAAmB,QAAAhC,EAAAxB,EAAAqC,KAAAmB,QAAAjE,EAAAkB,EAAAlB,EAAA,GAAAoD,SAAAQ,KAAAnD,GAAAqC,KAAAyB,WAAA9C,EAAAhB,IAAiHK,EAAAc,UAAA2C,WAAA,SAAArD,EAAAlB,GAAsC8C,KAAAiB,KAAAjC,EAAA,CAAAZ,EAAAlB,IAAA8C,KAAAiB,KAAAL,OAAAxC,EAAAwC,OAAA,EAAAZ,KAAAiB,KAAAN,MAAA,EAAAxB,EAAAa,KAAAiB,KAAAjB,KAAAmB,SAA0FnD,EAAAc,UAAA0D,kBAAA,SAAApE,EAAAlB,EAAAyB,GAA+C,QAAAX,EAAAkB,EAAAC,EAAAxB,EAAAsB,EAAA9B,EAAAsC,EAAAnC,EAAA,IAAAC,EAAA,IAAAyB,EAAA9B,EAAsC8B,GAAAL,EAAAzB,EAAO8B,IAAA,CAAK,IAAAxB,EAAA4B,EAAAhB,EAAA,EAAAY,EAAAgB,KAAAmB,QAAArB,EAAAV,EAAAhB,EAAAY,EAAAL,EAAAqB,KAAAmB,QAAAsB,GAAAvD,EAAA1B,EAAA2B,EAAAW,EAAAnC,OAAA,EAAAsB,OAAA,EAAA9B,OAAA,EAAAsC,OAAA,EAAA9B,EAAA0B,KAAAM,IAAAT,EAAAqB,KAAApB,EAAAoB,MAAAtB,EAAAI,KAAAM,IAAAT,EAAAsB,KAAArB,EAAAqB,MAAArD,EAAAkC,KAAAQ,IAAAX,EAAAuB,KAAAtB,EAAAsB,MAAAhB,EAAAJ,KAAAQ,IAAAX,EAAAwB,KAAAvB,EAAAuB,MAAArB,KAAAM,IAAA,EAAAxC,EAAAQ,GAAA0B,KAAAM,IAAA,EAAAF,EAAAR,IAAAyD,EAAAnD,EAAA/B,GAAA+B,EAAAO,GAAsP2C,EAAAnF,KAAAmF,EAAAzE,EAAAgB,EAAAzB,EAAAmF,EAAAnF,EAAAmF,EAAAnF,GAAAkF,IAAAnF,GAAAoF,EAAAnF,MAAAmF,EAAA1E,EAAAgB,GAA8C,OAAAhB,GAASA,EAAAc,UAAAyD,iBAAA,SAAAnE,EAAAlB,EAAAyB,GAA8C,IAAAX,EAAAI,EAAAuC,KAAAX,KAAA8B,YAAA7C,EAAAC,EAAAd,EAAAuC,KAAAX,KAAA+B,YAAA5E,EAA4D6C,KAAA2C,eAAAvE,EAAAlB,EAAAyB,EAAAX,GAAAgC,KAAA2C,eAAAvE,EAAAlB,EAAAyB,EAAAO,IAAAd,EAAAkC,SAAAsC,KAAA5E,IAA8EA,EAAAc,UAAA6D,eAAA,SAAAvE,EAAAlB,EAAAyB,EAAAX,GAA8CI,EAAAkC,SAAAsC,KAAA5E,GAAmB,QAAAkB,EAAAc,KAAAmB,OAAAhC,EAAAC,EAAAhB,EAAA,EAAAlB,EAAAgC,GAAAD,EAAAG,EAAAhB,EAAAO,EAAAzB,EAAAyB,EAAAO,GAAA/B,EAAAsC,EAAAN,GAAAM,EAAAR,GAAAM,EAAArC,EAAkEqC,EAAAZ,EAAAzB,EAAMqC,IAAA,CAAK,IAAAjC,EAAAc,EAAAkC,SAAAf,GAAoB5B,EAAAwB,EAAAf,EAAAuC,KAAAzB,EAAA5B,MAAAH,GAAAsC,EAAAN,GAA2B,QAAA5B,EAAAoB,EAAAzB,EAAA,EAAgBK,GAAAL,EAAKK,IAAA,CAAK,IAAAyB,EAAAZ,EAAAkC,SAAA/C,GAAoBI,EAAAsB,EAAAb,EAAAuC,KAAAzB,EAAAF,MAAA7B,GAAAsC,EAAAR,GAA2B,OAAA9B,GAASa,EAAAc,UAAAwD,oBAAA,SAAAlE,EAAAlB,EAAAyB,GAAiD,QAAAX,EAAAW,EAAYX,GAAA,EAAKA,IAAAL,EAAAT,EAAAc,GAAAI,IAAcJ,EAAAc,UAAA+C,UAAA,SAAAzD,GAAmC,QAAAlB,EAAAkB,EAAA2B,OAAA,EAAApB,OAAA,EAA8BzB,GAAA,EAAKA,IAAA,IAAAkB,EAAAlB,GAAAoD,SAAAP,OAAA7C,EAAA,GAAAyB,EAAAP,EAAAlB,EAAA,GAAAoD,UAAAsB,OAAAjD,EAAA0B,QAAAjC,EAAAlB,IAAA,GAAA8C,KAAAI,QAAAjB,EAAAf,EAAAlB,GAAA8C,KAAAmB,SAAgHnD,EAAlvMd,iCCEnEP,EAAAD,QAAAmG,EAEA,IAAAC,EAAc9F,EAAQ,GAEtB,SAAA6F,EAAAE,GACA/C,KAAA+C,IAAAC,YAAAC,QAAAD,YAAAC,OAAAF,KAAA,IAAAG,WAAAH,GAAA,GACA/C,KAAAmD,IAAA,EACAnD,KAAAoD,KAAA,EACApD,KAAAD,OAAAC,KAAA+C,IAAAhD,OAGA8C,EAAAQ,OAAA,EACAR,EAAAS,QAAA,EACAT,EAAAU,MAAA,EACAV,EAAAW,QAAA,EAqYA,SAAAC,EAAAC,GACA,OAAAA,EAAAN,OAAAP,EAAAU,MACAG,EAAAC,aAAAD,EAAAP,IAAAO,EAAAP,IAAA,EAGA,SAAAS,EAAAC,EAAAC,EAAAC,GACA,OAAAA,EACA,WAAAD,GAAAD,IAAA,GAGA,YAAAC,IAAA,IAAAD,IAAA,GAkDA,SAAAG,EAAAC,EAAAC,EAAAR,GACA,IAAAS,EACAD,GAAA,QACAA,GAAA,UACAA,GAAA,YAAA7E,KAAAO,MAAAP,KAAAC,IAAA4E,IAAA,EAAA7E,KAAA+E,MAGAV,EAAAW,QAAAF,GACA,QAAAjH,EAAAwG,EAAAP,IAAA,EAA6BjG,GAAA+G,EAAe/G,IAAAwG,EAAAX,IAAA7F,EAAAiH,GAAAT,EAAAX,IAAA7F,GAG5C,SAAAoH,EAAAC,EAAAb,GAAwC,QAAAxG,EAAA,EAAgBA,EAAAqH,EAAAxE,OAAgB7C,IAAAwG,EAAAc,YAAAD,EAAArH,IACxE,SAAAuH,EAAAF,EAAAb,GAAwC,QAAAxG,EAAA,EAAgBA,EAAAqH,EAAAxE,OAAgB7C,IAAAwG,EAAAgB,aAAAH,EAAArH,IACxE,SAAAyH,EAAAJ,EAAAb,GAAwC,QAAAxG,EAAA,EAAgBA,EAAAqH,EAAAxE,OAAgB7C,IAAAwG,EAAAkB,WAAAL,EAAArH,IACxE,SAAA2H,EAAAN,EAAAb,GAAwC,QAAAxG,EAAA,EAAgBA,EAAAqH,EAAAxE,OAAgB7C,IAAAwG,EAAAoB,YAAAP,EAAArH,IACxE,SAAA6H,EAAAR,EAAAb,GAAwC,QAAAxG,EAAA,EAAgBA,EAAAqH,EAAAxE,OAAgB7C,IAAAwG,EAAAsB,aAAAT,EAAArH,IACxE,SAAA+H,EAAAV,EAAAb,GAAwC,QAAAxG,EAAA,EAAgBA,EAAAqH,EAAAxE,OAAgB7C,IAAAwG,EAAAwB,aAAAX,EAAArH,IACxE,SAAAiI,EAAAZ,EAAAb,GAAwC,QAAAxG,EAAA,EAAgBA,EAAAqH,EAAAxE,OAAgB7C,IAAAwG,EAAA0B,cAAAb,EAAArH,IACxE,SAAAmI,EAAAd,EAAAb,GAAwC,QAAAxG,EAAA,EAAgBA,EAAAqH,EAAAxE,OAAgB7C,IAAAwG,EAAA4B,aAAAf,EAAArH,IACxE,SAAAqI,EAAAhB,EAAAb,GAAwC,QAAAxG,EAAA,EAAgBA,EAAAqH,EAAAxE,OAAgB7C,IAAAwG,EAAA8B,cAAAjB,EAAArH,IAIxE,SAAAuI,EAAA1C,EAAAI,GACA,OAAAJ,EAAAI,GACAJ,EAAAI,EAAA,MACAJ,EAAAI,EAAA,QACA,SAAAJ,EAAAI,EAAA,GAGA,SAAAuC,EAAA3C,EAAA4C,EAAAxC,GACAJ,EAAAI,GAAAwC,EACA5C,EAAAI,EAAA,GAAAwC,IAAA,EACA5C,EAAAI,EAAA,GAAAwC,IAAA,GACA5C,EAAAI,EAAA,GAAAwC,IAAA,GAGA,SAAAC,EAAA7C,EAAAI,GACA,OAAAJ,EAAAI,GACAJ,EAAAI,EAAA,MACAJ,EAAAI,EAAA,SACAJ,EAAAI,EAAA,QAreAN,EAAA/D,UAAA,CAEA+G,QAAA,WACA7F,KAAA+C,IAAA,MAKA+C,WAAA,SAAAC,EAAAC,EAAAC,GAGA,IAFAA,KAAAjG,KAAAD,OAEAC,KAAAmD,IAAA8C,GAAA,CACA,IAAAN,EAAA3F,KAAA2D,aACAuC,EAAAP,GAAA,EACA1B,EAAAjE,KAAAmD,IAEAnD,KAAAoD,KAAA,EAAAuC,EACAI,EAAAG,EAAAF,EAAAhG,MAEAA,KAAAmD,MAAAc,GAAAjE,KAAAmG,KAAAR,GAEA,OAAAK,GAGAI,YAAA,SAAAL,EAAAC,GACA,OAAAhG,KAAA8F,WAAAC,EAAAC,EAAAhG,KAAA2D,aAAA3D,KAAAmD,MAGAkD,YAAA,WACA,IAAAV,EAAAF,EAAAzF,KAAA+C,IAAA/C,KAAAmD,KAEA,OADAnD,KAAAmD,KAAA,EACAwC,GAGAW,aAAA,WACA,IAAAX,EAAAC,EAAA5F,KAAA+C,IAAA/C,KAAAmD,KAEA,OADAnD,KAAAmD,KAAA,EACAwC,GAKAY,YAAA,WACA,IAAAZ,EAAAF,EAAAzF,KAAA+C,IAAA/C,KAAAmD,KA9CA,WA8CAsC,EAAAzF,KAAA+C,IAAA/C,KAAAmD,IAAA,GAEA,OADAnD,KAAAmD,KAAA,EACAwC,GAGAa,aAAA,WACA,IAAAb,EAAAF,EAAAzF,KAAA+C,IAAA/C,KAAAmD,KApDA,WAoDAyC,EAAA5F,KAAA+C,IAAA/C,KAAAmD,IAAA,GAEA,OADAnD,KAAAmD,KAAA,EACAwC,GAGAc,UAAA,WACA,IAAAd,EAAA7C,EAAA4D,KAAA1G,KAAA+C,IAAA/C,KAAAmD,KAAA,QAEA,OADAnD,KAAAmD,KAAA,EACAwC,GAGAgB,WAAA,WACA,IAAAhB,EAAA7C,EAAA4D,KAAA1G,KAAA+C,IAAA/C,KAAAmD,KAAA,QAEA,OADAnD,KAAAmD,KAAA,EACAwC,GAGAhC,WAAA,SAAAI,GACA,IACA4B,EAAAiB,EADA7D,EAAA/C,KAAA+C,IAG8C,OAAlB4C,EAAA,KAA5BiB,EAAA7D,EAAA/C,KAAAmD,QAA8CyD,EAAA,IAAAjB,GAClBA,IAAA,KAA5BiB,EAAA7D,EAAA/C,KAAAmD,UAA4B,EAAwByD,EAAA,IAAAjB,GACxBA,IAAA,KAA5BiB,EAAA7D,EAAA/C,KAAAmD,UAA4B,GAAyByD,EAAA,IAAAjB,GACzBA,IAAA,KAA5BiB,EAAA7D,EAAA/C,KAAAmD,UAA4B,GAAyByD,EAAA,IAAAjB,EAySrD,SAAAxI,EAAA8B,EAAAD,GACA,IACAI,EAAAwH,EADA7D,EAAA/D,EAAA+D,IAG2C,GAA3C6D,EAAA7D,EAAA/D,EAAAmE,OAAqB/D,GAAA,IAAAwH,IAAA,EAAsBA,EAAA,WAAAhD,EAAAzG,EAAAiC,EAAAH,GACA,GAA3C2H,EAAA7D,EAAA/D,EAAAmE,OAAqB/D,IAAA,IAAAwH,IAAA,EAAsBA,EAAA,WAAAhD,EAAAzG,EAAAiC,EAAAH,GACC,GAA5C2H,EAAA7D,EAAA/D,EAAAmE,OAAqB/D,IAAA,IAAAwH,IAAA,GAAuBA,EAAA,WAAAhD,EAAAzG,EAAAiC,EAAAH,GACA,GAA5C2H,EAAA7D,EAAA/D,EAAAmE,OAAqB/D,IAAA,IAAAwH,IAAA,GAAuBA,EAAA,WAAAhD,EAAAzG,EAAAiC,EAAAH,GACA,GAA5C2H,EAAA7D,EAAA/D,EAAAmE,OAAqB/D,IAAA,IAAAwH,IAAA,GAAuBA,EAAA,WAAAhD,EAAAzG,EAAAiC,EAAAH,GACA,GAA5C2H,EAAA7D,EAAA/D,EAAAmE,OAAqB/D,IAAA,EAAAwH,IAAA,GAAuBA,EAAA,WAAAhD,EAAAzG,EAAAiC,EAAAH,GAE5C,UAAA4H,MAAA,0CAjTAC,CAF0BnB,IAAA,IAA1BiB,EAAA7D,EAAA/C,KAAAmD,QAA0B,GAE1BY,EAAA/D,UAGA+G,aAAA,WACA,OAAA/G,KAAA2D,YAAA,IAGAqD,YAAA,WACA,IAAAC,EAAAjH,KAAA2D,aACA,OAAAsD,EAAA,MAAAA,EAAA,MAAAA,EAAA,GAGAC,YAAA,WACA,OAAAC,QAAAnH,KAAA2D,eAGAyD,WAAA,WACA,IAAAnB,EAAAjG,KAAA2D,aAAA3D,KAAAmD,IACAkE,EA0YA,SAAAtE,EAAAI,EAAA8C,GACA,IAAAoB,EAAA,GACAnK,EAAAiG,EAEA,KAAAjG,EAAA+I,GAAA,CACA,IASAqB,EAAAC,EAAAC,EATAC,EAAA1E,EAAA7F,GACAK,EAAA,KACAmK,EACAD,EAAA,MACAA,EAAA,MACAA,EAAA,QAEA,GAAAvK,EAAAwK,EAAAzB,EAAA,MAIA,IAAAyB,EACAD,EAAA,MACAlK,EAAAkK,GAES,IAAAC,EAET,WADAJ,EAAAvE,EAAA7F,EAAA,OAEAK,GAAA,GAAAkK,IAAA,KAAAH,IACA,MACA/J,EAAA,MAGS,IAAAmK,GACTJ,EAAAvE,EAAA7F,EAAA,GACAqK,EAAAxE,EAAA7F,EAAA,GACA,UAAAoK,IAAA,UAAAC,MACAhK,GAAA,GAAAkK,IAAA,OAAAH,IAAA,KAAAC,IACA,MAAAhK,GAAA,OAAAA,GAAA,SACAA,EAAA,OAGS,IAAAmK,IACTJ,EAAAvE,EAAA7F,EAAA,GACAqK,EAAAxE,EAAA7F,EAAA,GACAsK,EAAAzE,EAAA7F,EAAA,GACA,UAAAoK,IAAA,UAAAC,IAAA,UAAAC,MACAjK,GAAA,GAAAkK,IAAA,OAAAH,IAAA,OAAAC,IAAA,KAAAC,IACA,OAAAjK,GAAA,WACAA,EAAA,OAKA,OAAAA,GACAA,EAAA,MACAmK,EAAA,GAESnK,EAAA,QACTA,GAAA,MACA8J,GAAAM,OAAAC,aAAArK,IAAA,eACAA,EAAA,WAAAA,GAGA8J,GAAAM,OAAAC,aAAArK,GACAL,GAAAwK,EAGA,OAAAL,EAzcAQ,CAAA7H,KAAA+C,IAAA/C,KAAAmD,IAAA8C,GAEA,OADAjG,KAAAmD,IAAA8C,EACAoB,GAGAS,UAAA,WACA,IAAA7B,EAAAjG,KAAA2D,aAAA3D,KAAAmD,IACA4E,EAAA/H,KAAA+C,IAAAiF,SAAAhI,KAAAmD,IAAA8C,GAEA,OADAjG,KAAAmD,IAAA8C,EACA8B,GAKAE,iBAAA,SAAA1D,EAAAR,GACA,GAAA/D,KAAAoD,OAAAP,EAAAU,MAAA,OAAAgB,EAAAzD,KAAAd,KAAA2D,WAAAI,IACA,IAAAkC,EAAAxC,EAAAzD,MAEA,IADAuE,KAAA,GACAvE,KAAAmD,IAAA8C,GAAA1B,EAAAzD,KAAAd,KAAA2D,WAAAI,IACA,OAAAQ,GAEA2D,kBAAA,SAAA3D,GACA,GAAAvE,KAAAoD,OAAAP,EAAAU,MAAA,OAAAgB,EAAAzD,KAAAd,KAAAgH,eACA,IAAAf,EAAAxC,EAAAzD,MAEA,IADAuE,KAAA,GACAvE,KAAAmD,IAAA8C,GAAA1B,EAAAzD,KAAAd,KAAAgH,eACA,OAAAzC,GAEA4D,kBAAA,SAAA5D,GACA,GAAAvE,KAAAoD,OAAAP,EAAAU,MAAA,OAAAgB,EAAAzD,KAAAd,KAAAkH,eACA,IAAAjB,EAAAxC,EAAAzD,MAEA,IADAuE,KAAA,GACAvE,KAAAmD,IAAA8C,GAAA1B,EAAAzD,KAAAd,KAAAkH,eACA,OAAA3C,GAEA6D,gBAAA,SAAA7D,GACA,GAAAvE,KAAAoD,OAAAP,EAAAU,MAAA,OAAAgB,EAAAzD,KAAAd,KAAAyG,aACA,IAAAR,EAAAxC,EAAAzD,MAEA,IADAuE,KAAA,GACAvE,KAAAmD,IAAA8C,GAAA1B,EAAAzD,KAAAd,KAAAyG,aACA,OAAAlC,GAEA8D,iBAAA,SAAA9D,GACA,GAAAvE,KAAAoD,OAAAP,EAAAU,MAAA,OAAAgB,EAAAzD,KAAAd,KAAA2G,cACA,IAAAV,EAAAxC,EAAAzD,MAEA,IADAuE,KAAA,GACAvE,KAAAmD,IAAA8C,GAAA1B,EAAAzD,KAAAd,KAAA2G,cACA,OAAApC,GAEA+D,kBAAA,SAAA/D,GACA,GAAAvE,KAAAoD,OAAAP,EAAAU,MAAA,OAAAgB,EAAAzD,KAAAd,KAAAqG,eACA,IAAAJ,EAAAxC,EAAAzD,MAEA,IADAuE,KAAA,GACAvE,KAAAmD,IAAA8C,GAAA1B,EAAAzD,KAAAd,KAAAqG,eACA,OAAA9B,GAEAgE,mBAAA,SAAAhE,GACA,GAAAvE,KAAAoD,OAAAP,EAAAU,MAAA,OAAAgB,EAAAzD,KAAAd,KAAAsG,gBACA,IAAAL,EAAAxC,EAAAzD,MAEA,IADAuE,KAAA,GACAvE,KAAAmD,IAAA8C,GAAA1B,EAAAzD,KAAAd,KAAAsG,gBACA,OAAA/B,GAEAiE,kBAAA,SAAAjE,GACA,GAAAvE,KAAAoD,OAAAP,EAAAU,MAAA,OAAAgB,EAAAzD,KAAAd,KAAAuG,eACA,IAAAN,EAAAxC,EAAAzD,MAEA,IADAuE,KAAA,GACAvE,KAAAmD,IAAA8C,GAAA1B,EAAAzD,KAAAd,KAAAuG,eACA,OAAAhC,GAEAkE,mBAAA,SAAAlE,GACA,GAAAvE,KAAAoD,OAAAP,EAAAU,MAAA,OAAAgB,EAAAzD,KAAAd,KAAAwG,gBACA,IAAAP,EAAAxC,EAAAzD,MAEA,IADAuE,KAAA,GACAvE,KAAAmD,IAAA8C,GAAA1B,EAAAzD,KAAAd,KAAAwG,gBACA,OAAAjC,GAGA4B,KAAA,SAAAR,GACA,IAAAvC,EAAA,EAAAuC,EACA,GAAAvC,IAAAP,EAAAQ,OAAA,KAAArD,KAAA+C,IAAA/C,KAAAmD,OAAA,WACA,GAAAC,IAAAP,EAAAU,MAAAvD,KAAAmD,IAAAnD,KAAA2D,aAAA3D,KAAAmD,SACA,GAAAC,IAAAP,EAAAW,QAAAxD,KAAAmD,KAAA,MACA,IAAAC,IAAAP,EAAAS,QACA,UAAAuD,MAAA,uBAAAzD,GADApD,KAAAmD,KAAA,IAMAuF,SAAA,SAAAxC,EAAA9C,GACApD,KAAAwE,YAAA0B,GAAA,EAAA9C,IAGAiB,QAAA,SAAAxE,GAGA,IAFA,IAAAE,EAAAC,KAAAD,QAAA,GAEAA,EAAAC,KAAAmD,IAAAtD,GAAAE,GAAA,EAEA,GAAAA,IAAAC,KAAAD,OAAA,CACA,IAAAgD,EAAA,IAAAG,WAAAnD,GACAgD,EAAA4F,IAAA3I,KAAA+C,KACA/C,KAAA+C,MACA/C,KAAAD,WAIA6I,OAAA,WAGA,OAFA5I,KAAAD,OAAAC,KAAAmD,IACAnD,KAAAmD,IAAA,EACAnD,KAAA+C,IAAAiF,SAAA,EAAAhI,KAAAD,SAGAmF,aAAA,SAAAS,GACA3F,KAAAqE,QAAA,GACAqB,EAAA1F,KAAA+C,IAAA4C,EAAA3F,KAAAmD,KACAnD,KAAAmD,KAAA,GAGAiC,cAAA,SAAAO,GACA3F,KAAAqE,QAAA,GACAqB,EAAA1F,KAAA+C,IAAA4C,EAAA3F,KAAAmD,KACAnD,KAAAmD,KAAA,GAGAmC,aAAA,SAAAK,GACA3F,KAAAqE,QAAA,GACAqB,EAAA1F,KAAA+C,KAAA,EAAA4C,EAAA3F,KAAAmD,KACAuC,EAAA1F,KAAA+C,IAAA1D,KAAAO,MAAA+F,GA/NA,EADA,aAgOA3F,KAAAmD,IAAA,GACAnD,KAAAmD,KAAA,GAGAqC,cAAA,SAAAG,GACA3F,KAAAqE,QAAA,GACAqB,EAAA1F,KAAA+C,KAAA,EAAA4C,EAAA3F,KAAAmD,KACAuC,EAAA1F,KAAA+C,IAAA1D,KAAAO,MAAA+F,GAtOA,EADA,aAuOA3F,KAAAmD,IAAA,GACAnD,KAAAmD,KAAA,GAGAqB,YAAA,SAAAmB,IACAA,MAAA,GAEA,WAAAA,EAAA,EAkKA,SAAAA,EAAAjC,GACA,IAAAG,EAAAC,EAEA6B,GAAA,GACA9B,EAAA8B,EAAA,aACA7B,EAAA6B,EAAA,eAGA7B,KAAA6B,EAAA,YAEA,YAHA9B,KAAA8B,EAAA,aAIA9B,IAAA,KAEAA,EAAA,EACAC,IAAA,MAIA,GAAA6B,GAAA,qBAAAA,GAAA,oBACA,UAAAkB,MAAA,0CAGAnD,EAAAW,QAAA,IAMA,SAAAR,EAAAC,EAAAJ,GACAA,EAAAX,IAAAW,EAAAP,OAAA,IAAAU,EAAA,IAA2CA,KAAA,EAC3CH,EAAAX,IAAAW,EAAAP,OAAA,IAAAU,EAAA,IAA2CA,KAAA,EAC3CH,EAAAX,IAAAW,EAAAP,OAAA,IAAAU,EAAA,IAA2CA,KAAA,EAC3CH,EAAAX,IAAAW,EAAAP,OAAA,IAAAU,EAAA,IAA2CA,KAAA,EAC3CH,EAAAX,IAAAW,EAAAP,KAAA,IAAAU,EATAgF,CAAAhF,EAAAC,EAAAJ,GAYA,SAAAI,EAAAJ,GACA,IAAAoF,GAAA,EAAAhF,IAAA,EAEmE,GAAnEJ,EAAAX,IAAAW,EAAAP,QAAA2F,IAAAhF,KAAA,WAAmEA,EAAA,OACA,GAAnEJ,EAAAX,IAAAW,EAAAP,OAAA,IAAAW,SAAA,WAAmEA,EAAA,OACA,GAAnEJ,EAAAX,IAAAW,EAAAP,OAAA,IAAAW,SAAA,WAAmEA,EAAA,OACA,GAAnEJ,EAAAX,IAAAW,EAAAP,OAAA,IAAAW,SAAA,WAAmEA,EAAA,OACA,GAAnEJ,EAAAX,IAAAW,EAAAP,OAAA,IAAAW,SAAA,WAAmEA,EAAA,OACnEJ,EAAAX,IAAAW,EAAAP,OAAA,IAAAW,EAnBAiF,CAAAjF,EAAAJ,GA1LAsF,CAAArD,EAAA3F,OAIAA,KAAAqE,QAAA,GAEArE,KAAA+C,IAAA/C,KAAAmD,OAAA,IAAAwC,KAAA,WAA+EA,GAAA,MAC/E3F,KAAA+C,IAAA/C,KAAAmD,OAAA,KAAAwC,KAAA,IAAAA,EAAA,WAA+EA,GAAA,MAC/E3F,KAAA+C,IAAA/C,KAAAmD,OAAA,KAAAwC,KAAA,IAAAA,EAAA,WAA+EA,GAAA,MAC/E3F,KAAA+C,IAAA/C,KAAAmD,OAAAwC,IAAA,WAGAjB,aAAA,SAAAiB,GACA3F,KAAAwE,YAAAmB,EAAA,KAAAA,EAAA,IAAAA,IAGAX,aAAA,SAAAW,GACA3F,KAAAwE,YAAA2C,QAAAxB,KAGAsD,YAAA,SAAA5B,GACAA,EAAAM,OAAAN,GACArH,KAAAqE,QAAA,EAAAgD,EAAAtH,QAEAC,KAAAmD,MAEA,IAAAc,EAAAjE,KAAAmD,IAEAnD,KAAAmD,IAkSA,SAAAJ,EAAAsE,EAAAlE,GACA,QAAA5F,EAAA2L,EAAAhM,EAAA,EAA4BA,EAAAmK,EAAAtH,OAAgB7C,IAAA,CAG5C,IAFAK,EAAA8J,EAAA8B,WAAAjM,IAEA,OAAAK,EAAA,OACA,IAAA2L,EAWa,CACb3L,EAAA,OAAAL,EAAA,IAAAmK,EAAAtH,QACAgD,EAAAI,KAAA,IACAJ,EAAAI,KAAA,IACAJ,EAAAI,KAAA,KAEA+F,EAAA3L,EAEA,SAlBA,GAAAA,EAAA,OACAwF,EAAAI,KAAA,IACAJ,EAAAI,KAAA,IACAJ,EAAAI,KAAA,IACA+F,EAAA3L,EACA,SAEAA,EAAA2L,EAAA,UAAA3L,EAAA,YACA2L,EAAA,UAYSA,IACTnG,EAAAI,KAAA,IACAJ,EAAAI,KAAA,IACAJ,EAAAI,KAAA,IACA+F,EAAA,MAGA3L,EAAA,IACAwF,EAAAI,KAAA5F,GAEAA,EAAA,KACAwF,EAAAI,KAAA5F,GAAA,OAEAA,EAAA,MACAwF,EAAAI,KAAA5F,GAAA,QAEAwF,EAAAI,KAAA5F,GAAA,OACAwF,EAAAI,KAAA5F,GAAA,WAEAwF,EAAAI,KAAA5F,GAAA,UAEAwF,EAAAI,KAAA,GAAA5F,EAAA,KAGA,OAAA4F,EApVAiG,CAAApJ,KAAA+C,IAAAsE,EAAArH,KAAAmD,KACA,IAAAe,EAAAlE,KAAAmD,IAAAc,EAEAC,GAAA,KAAAF,EAAAC,EAAAC,EAAAlE,MAGAA,KAAAmD,IAAAc,EAAA,EACAjE,KAAAwE,YAAAN,GACAlE,KAAAmD,KAAAe,GAGAU,WAAA,SAAAe,GACA3F,KAAAqE,QAAA,GACAvB,EAAAuG,MAAArJ,KAAA+C,IAAA4C,EAAA3F,KAAAmD,KAAA,QACAnD,KAAAmD,KAAA,GAGA2B,YAAA,SAAAa,GACA3F,KAAAqE,QAAA,GACAvB,EAAAuG,MAAArJ,KAAA+C,IAAA4C,EAAA3F,KAAAmD,KAAA,QACAnD,KAAAmD,KAAA,GAGAmG,WAAA,SAAAvB,GACA,IAAA7D,EAAA6D,EAAAhI,OACAC,KAAAwE,YAAAN,GACAlE,KAAAqE,QAAAH,GACA,QAAAhH,EAAA,EAAuBA,EAAAgH,EAAShH,IAAA8C,KAAA+C,IAAA/C,KAAAmD,OAAA4E,EAAA7K,IAGhCqM,gBAAA,SAAAC,EAAAC,GACAzJ,KAAAmD,MAGA,IAAAc,EAAAjE,KAAAmD,IACAqG,EAAAC,EAAAzJ,MACA,IAAAkE,EAAAlE,KAAAmD,IAAAc,EAEAC,GAAA,KAAAF,EAAAC,EAAAC,EAAAlE,MAGAA,KAAAmD,IAAAc,EAAA,EACAjE,KAAAwE,YAAAN,GACAlE,KAAAmD,KAAAe,GAGAwF,aAAA,SAAAxD,EAAAsD,EAAAC,GACAzJ,KAAA0I,SAAAxC,EAAArD,EAAAU,OACAvD,KAAAuJ,gBAAAC,EAAAC,IAGAnF,kBAAA,SAAA4B,EAAA3B,GAA6CA,EAAAxE,QAAAC,KAAA0J,aAAAxD,EAAA5B,EAAAC,IAC7CE,mBAAA,SAAAyB,EAAA3B,GAA6CA,EAAAxE,QAAAC,KAAA0J,aAAAxD,EAAAzB,EAAAF,IAC7CQ,mBAAA,SAAAmB,EAAA3B,GAA6CA,EAAAxE,QAAAC,KAAA0J,aAAAxD,EAAAnB,EAAAR,IAC7CI,iBAAA,SAAAuB,EAAA3B,GAA6CA,EAAAxE,QAAAC,KAAA0J,aAAAxD,EAAAvB,EAAAJ,IAC7CM,kBAAA,SAAAqB,EAAA3B,GAA6CA,EAAAxE,QAAAC,KAAA0J,aAAAxD,EAAArB,EAAAN,IAC7CU,mBAAA,SAAAiB,EAAA3B,GAA6CA,EAAAxE,QAAAC,KAAA0J,aAAAxD,EAAAjB,EAAAV,IAC7CY,oBAAA,SAAAe,EAAA3B,GAA6CA,EAAAxE,QAAAC,KAAA0J,aAAAxD,EAAAf,EAAAZ,IAC7Cc,mBAAA,SAAAa,EAAA3B,GAA6CA,EAAAxE,QAAAC,KAAA0J,aAAAxD,EAAAb,EAAAd,IAC7CgB,oBAAA,SAAAW,EAAA3B,GAA6CA,EAAAxE,QAAAC,KAAA0J,aAAAxD,EAAAX,EAAAhB,IAE7CoF,gBAAA,SAAAzD,EAAA6B,GACA/H,KAAA0I,SAAAxC,EAAArD,EAAAU,OACAvD,KAAAsJ,WAAAvB,IAEA6B,kBAAA,SAAA1D,EAAAP,GACA3F,KAAA0I,SAAAxC,EAAArD,EAAAW,SACAxD,KAAAkF,aAAAS,IAEAkE,mBAAA,SAAA3D,EAAAP,GACA3F,KAAA0I,SAAAxC,EAAArD,EAAAW,SACAxD,KAAAoF,cAAAO,IAEAmE,kBAAA,SAAA5D,EAAAP,GACA3F,KAAA0I,SAAAxC,EAAArD,EAAAS,SACAtD,KAAAsF,aAAAK,IAEAoE,mBAAA,SAAA7D,EAAAP,GACA3F,KAAA0I,SAAAxC,EAAArD,EAAAS,SACAtD,KAAAwF,cAAAG,IAEAqE,iBAAA,SAAA9D,EAAAP,GACA3F,KAAA0I,SAAAxC,EAAArD,EAAAQ,QACArD,KAAAwE,YAAAmB,IAEAsE,kBAAA,SAAA/D,EAAAP,GACA3F,KAAA0I,SAAAxC,EAAArD,EAAAQ,QACArD,KAAA0E,aAAAiB,IAEAuE,iBAAA,SAAAhE,EAAAmB,GACArH,KAAA0I,SAAAxC,EAAArD,EAAAU,OACAvD,KAAAiJ,YAAA5B,IAEA8C,gBAAA,SAAAjE,EAAAP,GACA3F,KAAA0I,SAAAxC,EAAArD,EAAAW,SACAxD,KAAA4E,WAAAe,IAEAyE,iBAAA,SAAAlE,EAAAP,GACA3F,KAAA0I,SAAAxC,EAAArD,EAAAS,SACAtD,KAAA8E,YAAAa,IAEA0E,kBAAA,SAAAnE,EAAAP,GACA3F,KAAAgK,iBAAA9D,EAAAiB,QAAAxB,uBCnYA,IAAA2E,EAAgBtN,EAAQ,GAExBN,EAAA4N,2BCFA5N,EAAAgK,KAAA,SAAAqB,EAAAwC,EAAAC,EAAAC,EAAAC,GACA,IAAAxL,EAAA5B,EACAqN,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACA5N,EAAAsN,EAAAE,EAAA,IACAlN,EAAAgN,GAAA,IACAvL,EAAA8I,EAAAwC,EAAArN,GAOA,IALAA,GAAAM,EAEA0B,EAAAD,GAAA,IAAA6L,GAAA,EACA7L,KAAA6L,EACAA,GAAAH,EACQG,EAAA,EAAW5L,EAAA,IAAAA,EAAA6I,EAAAwC,EAAArN,MAAAM,EAAAsN,GAAA,GAKnB,IAHAxN,EAAA4B,GAAA,IAAA4L,GAAA,EACA5L,KAAA4L,EACAA,GAAAL,EACQK,EAAA,EAAWxN,EAAA,IAAAA,EAAAyK,EAAAwC,EAAArN,MAAAM,EAAAsN,GAAA,GAEnB,OAAA5L,EACAA,EAAA,EAAA2L,MACG,IAAA3L,IAAA0L,EACH,OAAAtN,EAAAyN,IAAAC,KAAA/L,GAAA,KAEA3B,GAAA+B,KAAA8C,IAAA,EAAAsI,GACAvL,GAAA2L,EAEA,OAAA5L,GAAA,KAAA3B,EAAA+B,KAAA8C,IAAA,EAAAjD,EAAAuL,IAGA/N,EAAA2M,MAAA,SAAAtB,EAAA5J,EAAAoM,EAAAC,EAAAC,EAAAC,GACA,IAAAxL,EAAA5B,EAAAC,EACAoN,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAK,EAAA,KAAAR,EAAApL,KAAA8C,IAAA,OAAA9C,KAAA8C,IAAA,SACAjF,EAAAsN,EAAA,EAAAE,EAAA,EACAlN,EAAAgN,EAAA,KACAvL,EAAAd,EAAA,OAAAA,GAAA,EAAAA,EAAA,MAmCA,IAjCAA,EAAAkB,KAAA6L,IAAA/M,GAEAgN,MAAAhN,QAAA6M,KACA1N,EAAA6N,MAAAhN,GAAA,IACAe,EAAA0L,IAEA1L,EAAAG,KAAAO,MAAAP,KAAAC,IAAAnB,GAAAkB,KAAA+E,KACAjG,GAAAZ,EAAA8B,KAAA8C,IAAA,GAAAjD,IAAA,IACAA,IACA3B,GAAA,IAGAY,GADAe,EAAA2L,GAAA,EACAI,EAAA1N,EAEA0N,EAAA5L,KAAA8C,IAAA,IAAA0I,IAEAtN,GAAA,IACA2B,IACA3B,GAAA,GAGA2B,EAAA2L,GAAAD,GACAtN,EAAA,EACA4B,EAAA0L,GACK1L,EAAA2L,GAAA,GACLvN,GAAAa,EAAAZ,EAAA,GAAA8B,KAAA8C,IAAA,EAAAsI,GACAvL,GAAA2L,IAEAvN,EAAAa,EAAAkB,KAAA8C,IAAA,EAAA0I,EAAA,GAAAxL,KAAA8C,IAAA,EAAAsI,GACAvL,EAAA,IAIQuL,GAAA,EAAW1C,EAAAwC,EAAArN,GAAA,IAAAI,EAAAJ,GAAAM,EAAAF,GAAA,IAAAmN,GAAA,GAInB,IAFAvL,KAAAuL,EAAAnN,EACAqN,GAAAF,EACQE,EAAA,EAAU5C,EAAAwC,EAAArN,GAAA,IAAAgC,EAAAhC,GAAAM,EAAA0B,GAAA,IAAAyL,GAAA,GAElB5C,EAAAwC,EAAArN,EAAAM,IAAA,IAAAyB,oBClFA,IAAAmM,EAAmBpO,EAAQ,GAAQoO,aAUnC,SAAAC,EAAAC,GACA,IAAAC,GAAA,EACA,IACA,IAAAC,UAAA,OACG,MAAAC,GACHF,GAAA,EAGA,SAAAG,EAAAzK,EAAA0K,EAAA/K,GACA,OAAA2K,EACA,IAAAC,UAAAvK,EAAA0K,EAAA/K,GAEA,CAAcK,OAAA0K,QAAA/K,UAId,gBAAAK,GAEA,IAQA2K,EAAAhF,EARAiF,EAAA5K,EAAA,QACA6K,EAAA7K,EAAA,KACA8K,EAAA9K,EAAA,SACA0K,EAAA1K,EAAA,MACAL,EAAAK,EAAA,OAEA+K,EAAAH,EAAA9L,OACAkM,EAAAJ,EAAA,GAAAK,WAGA,GAAAH,EAAA,CACA,IAAAI,EAAA,IAAAC,MAAAJ,GACA,IAAApF,EAAA,EAAiBA,EAAAoF,IAAgBpF,EACjCuF,EAAAvF,GAAA8E,EACA,IAAAW,kBAAAR,EAAAjF,IAAA+E,EAAA/K,GAEAgL,EAAAN,EAAAa,EAAAL,GAAA7K,SACK,CACL2K,EAAA,IAAAS,kBAAAJ,GACA,IAAAK,EAAA,IAAAF,MAAAJ,GACAO,EAAA,IAAAH,MAAAJ,GACA,IAAApF,EAAA,EAAiBA,EAAAoF,IAAgBpF,EACjC0F,EAAA1F,GAAA,IAAAyF,kBAAAR,EAAAjF,IACA2F,EAAA3F,GAAA,UAEA,QAAA1J,EAAA,EAAqBA,EAAA+O,EAAc/O,GAAA,GACnC,QAAAsP,EAAA,EAAuBA,EAAAR,IAAgBQ,EAAA,CACvC,IAAAC,EAAAH,EAAAE,GACAD,EAAAC,GAAA,GAAAC,EAAAvP,GACAqP,EAAAC,GAAA,GAAAC,EAAAvP,EAAA,GACAqP,EAAAC,GAAA,GAAAC,EAAAvP,EAAA,GACAqP,EAAAC,GAAA,GAAAC,EAAAvP,EAAA,GAEA,IAAAwP,EAAApB,EAAAiB,EAAAT,GACAF,EAAA1O,GAAAwP,EAAA,GACAd,EAAA1O,EAAA,GAAAwP,EAAA,GACAd,EAAA1O,EAAA,GAAAwP,EAAA,GACAd,EAAA1O,EAAA,GAAAwP,EAAA,IAGA,OAAAd,EAAA7D,QAUA,SAAA4E,EAAAC,EAAAC,GACA,IAIAC,EAJAlP,OAAAmP,KAAAH,EAAAI,KAAA,IAAwCC,IAAA,SAAAxP,GACxC,aAAAA,EAAA,MAAAmP,EAAAI,IAAAvP,GAAAyP,WAAA,MAGAC,OAAA,CACA,qBAAA9B,EAAA6B,WAAA,KAAAN,EAAAtB,UAAA4B,WAAA,KACA,qDACA,yCACA,yEACA,QAGAE,EAAA,IAAAC,KAAAP,EAAA,CAA8B1J,KAAA,oBAC9BkK,EAAAC,IAAAC,gBAAAJ,GACAK,EAAA,IAAAC,OAAAJ,GAEA,OADAG,EAAAE,iBAAA,UAAAd,GACAY,EAwBA,SAAAnD,EAAAsC,GAEA,IAAAgB,EADA5N,KAAA6N,YAAAjB,EAAAb,SASA,IAAA+B,EAAA,GACA,GAPAF,EADA,IAAAhB,EAAAgB,QACA,EACG5N,KAAA6N,UACH,EAEAjB,EAAAgB,SAAA,EAIA,QAAA1Q,EAAA,EAAmBA,EAAA0Q,IAAa1Q,EAChC4Q,EAAA5Q,GAAAyP,EAAAC,EAAA5M,KAAA+N,iBAAArP,KAAAsB,KAAA9C,SAGA4Q,EAAA,GA/BA,SAAAlB,EAAAC,GACA,IAAAmB,EAAA3C,EAAAuB,EAAAtB,WACA,OACA2C,YAAA,SAAAhN,GACAiN,WAAA,WACArB,EAAA,CAAmB5L,KAAA,CAAS8G,OAAAiG,EAAA/M,GAAA6K,KAAA7K,EAAA,SACrB,KAyBPkN,CAAAvB,EAAA5M,KAAA+N,iBAAArP,KAAAsB,KAAA,IAEAA,KAAAoO,SAAAN,EACA9N,KAAAqO,OAAA,GACArO,KAAAsO,gBAAA1B,EAAA2B,OAAAvD,IACAhL,KAAAwO,SAAA,EACAxO,KAAAyO,YAAA,GACAzO,KAAA0O,KAAA,KAaApE,EAAAxL,UAAA6P,QAAA,SAAAC,EAAA9C,EAAA+C,GACA7O,KAAA8O,SAAA,CACAF,SACA9C,OACA+C,aAEA7O,KAAA+O,aAMAzE,EAAAxL,UAAA+G,QAAA,WACA,QAAApH,KAAAuB,KACAA,KAAAvB,GAAA,KAEAuB,KAAAgP,YAAA,GAOA1E,EAAAxL,UAAAgQ,SAAA,SAAAG,GAEA,IADAjP,KAAAqO,OAAAvN,KAAAmO,GACAjP,KAAAqO,OAAAtO,OAAAC,KAAAsO,iBACAtO,KAAAqO,OAAAa,QAAAL,SAAA,YAOAvE,EAAAxL,UAAAiQ,UAAA,WACA,OAAA/O,KAAAwO,UAAAxO,KAAAqO,OAAAtO,OAAA,GACA,IAAAkP,EAAAjP,KAAA0O,KAAA1O,KAAAqO,OAAAa,QACAvD,EAAAsD,EAAAL,OAAA,GAAAjD,MACA/K,EAAAqO,EAAAL,OAAA,GAAAhO,OACAiL,EAAAoD,EAAAL,OAAA3B,IAAA,SAAAkC,GACA,OAAAA,EAAAlO,KAAA8G,SAEA6F,EAAA5N,KAAAoO,SAAArO,OAEA,GADAC,KAAAwO,SAAAZ,EACA,IAAAA,EACA5N,KAAAoO,SAAA,GAAAH,YAAA,CACApC,UACAC,KAAAmD,EAAAnD,KACAC,SAAA/L,KAAA6N,UACAlC,QACA/K,UACOiL,QAIP,IAFA,IAAA9L,EAAAkP,EAAAL,OAAA,GAAA3N,KAAAlB,OACAqP,EAAA,EAAA/P,KAAAc,KAAAJ,EAAA,EAAA6N,GACA1Q,EAAA,EAAqBA,EAAA0Q,IAAa1Q,EAAA,CAGlC,IAFA,IAAAqN,EAAArN,EAAAkS,EACAC,EAAA,GACA7C,EAAA,EAAA8C,EAAAzD,EAAA9L,OAA4CyM,EAAA8C,IAAQ9C,EACpD6C,EAAAvO,KAAA+K,EAAA3O,GAAAsE,MAAA+I,IAAA6E,IAEApP,KAAAoO,SAAAlR,GAAA+Q,YAAA,CACApC,QAAAwD,EACAvD,KAAAmD,EAAAnD,KACAC,SAAA/L,KAAA6N,UACAlC,QACA/K,UACSyO,MAWT/E,EAAAxL,UAAAiP,iBAAA,SAAAwB,EAAAC,GACAxP,KAAAgP,aAGAhP,KAAAyO,YAAAc,GAAAC,EAAAvO,OACAjB,KAAAwO,SACA,IAAAxO,KAAAwO,UACAxO,KAAAyP,gBAQAnF,EAAAxL,UAAA2Q,YAAA,WACA,IAEAxO,EAAA6K,EAFAmD,EAAAjP,KAAA0O,KACAd,EAAA5N,KAAAoO,SAAArO,OAEA,OAAA6N,EACA3M,EAAA,IAAAoL,kBAAArM,KAAAyO,YAAA,WACA3C,EAAA9L,KAAAyO,YAAA,YACG,CACH,IAAA1O,EAAAkP,EAAAL,OAAA,GAAA3N,KAAAlB,OACAkB,EAAA,IAAAoL,kBAAAtM,GACA+L,EAAA,IAAAM,MAAArM,GAEA,IADA,IAAAqP,EAAA,EAAA/P,KAAAc,KAAAJ,EAAA,EAAA6N,GACA1Q,EAAA,EAAmBA,EAAA0Q,IAAa1Q,EAAA,CAChC,IAAA6K,EAAA/H,KAAAyO,YAAAvR,GAAA,OACAqN,EAAArN,EAAAkS,EACAnO,EAAA0H,IAAA,IAAA0D,kBAAAtE,GAAAwC,GACAuB,EAAA5O,GAAA8C,KAAAyO,YAAAvR,GAAA,MAGA8C,KAAA0O,KAAA,KACA1O,KAAAyO,YAAA,GACAQ,EAAAJ,SAAA,KACAzD,EAAAnK,EAAAgO,EAAAL,OAAA,GAAAjD,MAAAsD,EAAAL,OAAA,GAAAhO,QAAAkL,GACA9L,KAAA+O,aAGApS,EAAAD,QAAA4N,iBCjRA,IAAAoF,GAAA,EACA,IACA,IAAAlE,UAAA,OACC,MAAAC,GACDiE,GAAA,EAGA,IAAAC,EAAAC,SAAAC,cAAA,UAAAC,WAAA,MAYApT,EAAA0O,aAVA,SAAAnK,EAAA0K,EAAA/K,GACA,GAAA8O,EACA,WAAAlE,UAAAvK,EAAA0K,EAAA/K,GAEA,IAAAmP,EAAAJ,EAAAK,gBAAArE,EAAA/K,GAEA,OADAmP,EAAA9O,KAAA0H,IAAA1H,GACA8O,iCCTO,SAASE,IAChB,OAAwB,WACxB,UAAApJ,MAAA,kCADwB,UASxB,IAAAqJ,EAAA,EAUO,SAAAC,EAAA1G,GACP,OAAAA,EAAA2G,SAAA3G,EAAA2G,OAAAzI,SAAAuI,IAMO,IChCPG,EDgCOC,EAAA,eCjCPC,GACAF,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,SAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,KA0CeE,EA9BG,SAAAC,GAKlB,SAAAC,EAAAC,GACA,IAAAC,EAAAhR,KAEAiR,EAAA,oDAD0B,WAAPX,EAAuBA,EAAO,IAASA,EAAOY,MAAA,SAEjE,gBAAAH,EAAA,gBAiBA,OAhBAC,EAAAH,EAAAxT,KAAA2C,KAAAiR,IAAAjR,MASA+Q,OAIAC,EAAAvT,KAAA,iBAEAuT,EAAAC,UACAD,EAEA,OA3BAT,EAAAO,EAAAD,GA2BAC,EA5BkB,CA6BjBjK,OC7CcsK,EAAA,CAMfC,IAAA,MAMAC,OAAA,UCZeC,EAMf,iBCAWC,EAAM,mBAAA3T,OAAA4T,OAAA5T,OAAA4T,OAAA,SAAAC,EAAAC,GACjB,GAAAD,QACA,UAAAE,UAAA,8CAGA,IADA,IAAA/F,EAAAhO,OAAA6T,GACAvU,EAAA,EAAA0U,EAAAC,UAAA9R,OAA0C7C,EAAA0U,IAAQ1U,EAAA,CAClD,IAAAoQ,EAAAuE,UAAA3U,GACA,GAAAoQ,QACA,QAAA7O,KAAA6O,EACAA,EAAAvO,eAAAN,KACAmN,EAAAnN,GAAA6O,EAAA7O,IAKA,OAAAmN,GAMO,SAAAxL,EAAAxB,GACP,QAAAC,KAAAD,SACAA,EAAAC,GAWO,IAAAiT,EAAA,mBAAAlU,OAAAmU,OAAAnU,OAAAmU,OAAA,SAAAnT,GACP,IAAAmT,EAAA,GACA,QAAAlT,KAAAD,EACAmT,EAAAjR,KAAAlC,EAAAC,IAEA,OAAAkT,GAOO,SAAAC,EAAApT,GACP,IAAAC,EACA,IAAAA,KAAAD,EACA,SAEA,OAAAC,ECbO,SAAAoT,EAAAC,EAAAC,EAAAC,EAAAC,GAEP,IADA,IAAAC,EACApV,EAAA,EAAA0U,EAAAM,EAAAnS,OAA0C7C,EAAA0U,IAAQ1U,EAElD,IADAoV,EAAAJ,EAAAhV,IACAiV,cACAG,EAAAC,SAAAH,EAIA,OAHAC,IACAC,EAAAE,YAAAtV,GAEAoV,EAUO,SAAAG,EAAAhB,EAAArO,GACP,IAAAsP,EAAAC,EAAAlB,GACA,OAAAiB,IAAAtP,QAAAwP,EASA,SAAAD,EAAAlB,EAAAoB,GACA,IAAAH,EAAAjB,EAAAqB,MAIA,OAHAJ,GAAAG,IACAH,EAAAjB,EAAAqB,MAAA,IAEAJ,EAgBA,SAAAK,EAAAtB,EAAArO,GACA,IAAA8O,EAAAO,EAAAhB,EAAArO,GACA,GAAA8O,EAAA,CACA,QAAAhV,EAAA,EAAA0U,EAAAM,EAAAnS,OAA8C7C,EAAA0U,IAAQ1U,EACM,EAC5D8V,oBAAA5P,EAAA8O,EAAAhV,GAAA+V,eACY7S,EAAK8R,EAAAhV,IAEjBgV,EAAAnS,OAAA,EACA,IAAA2S,EAAAC,EAAAlB,GACAiB,WACAA,EAAAtP,GACA,IAAAxF,OAAAmP,KAAA2F,GAAA3S,QAtBA,SAAA0R,UACAA,EAAAqB,MAsBAI,CAAAzB,KAoBO,SAAA0B,EAAA1B,EAAArO,EAAA+O,EAAAC,EAAAgB,GACP,IAAAV,EAAAC,EAAAlB,GAAA,GACAS,EAAAQ,EAAAtP,GACA8O,IACAA,EAAAQ,EAAAtP,GAAA,IAEA,IAAAkP,EAAAL,EAAAC,EAAAC,EAAAC,GAAA,GAmBA,OAlBAE,EACAc,IAEAd,EAAAe,UAAA,IAIAf,EAAA,CACAC,OAAAH,EACAiB,WAAAD,EACAjB,WACAV,SACArO,QAEwD,EACxDuK,iBAAAvK,EAjIO,SAAAkP,GACP,IAAAW,EAAA,SAAAK,GACA,IAAAnB,EAAAG,EAAAH,SACAI,EAAAD,EAAAC,QAAAD,EAAAb,OAIA,OAHAa,EAAAe,UACAE,EAAAjB,GAEAH,EAAA9U,KAAAkV,EAAAe,IAGA,OADAhB,EAAAW,gBACAA,EAuHAO,CAAAlB,IACAJ,EAAApR,KAAAwR,IAEAA,EAsBO,SAAAmB,EAAAhC,EAAArO,EAAA+O,EAAAC,GACP,OAAAe,EAAA1B,EAAArO,EAAA+O,EAAAC,GAAA,GAeO,SAASsB,EAAQjC,EAAArO,EAAA+O,EAAAC,GACxB,IAAAF,EAAAO,EAAAhB,EAAArO,GACA,GAAA8O,EAAA,CACA,IAAAI,EAAAL,EAAAC,EAAAC,EAAAC,GAAA,GACAE,GACAiB,EAAAjB,IAaO,SAAAiB,EAAA9U,GACP,GAAAA,KAAAgT,OAAA,CACwDhT,EAAA,OACxDuU,oBAAAvU,EAAA2E,KAAA3E,EAAAwU,eACA,IAAAf,EAAAO,EAAAhU,EAAAgT,OAAAhT,EAAA2E,MACA,GAAA8O,EAAA,CACA,IAAAhV,EAAA,gBAAAuB,IAAA+T,YAAAN,EAAA7R,QAAA5B,IACA,IAAAvB,GACAgV,EAAAtQ,OAAA1E,EAAA,GAEA,IAAAgV,EAAAnS,QACAgT,EAAAtU,EAAAgT,OAAAhT,EAAA2E,MAGQhD,EAAK3B,IASN,SAAAkV,EAAAlC,GACP,IAAAiB,EAAAC,EAAAlB,GACA,GAAAiB,EACA,QAAAtP,KAAAsP,EACAK,EAAAtB,EAAArO,GC3OA,IAyBewQ,EAzBf,WACA,SAAAC,IAMA7T,KAAA8T,WAAA,EAgBA,OAXAD,EAAA/U,UAAAiV,QAAA,WACA/T,KAAA8T,YACA9T,KAAA8T,WAAA,EACA9T,KAAAgU,oBAOAH,EAAA/U,UAAAkV,gBAAA,aACAH,EAvBA,GCAO,SAAAI,IACP,SAMO,SAAAC,IACP,SAOO,SAAAC,KCgCA,SAAAC,EAAAd,GACPA,EAAAc,kBAQe,IAAAC,EAlDf,WAIA,SAAAC,EAAAlR,GAIApD,KAAAuU,mBAMAvU,KAAAoD,OAMApD,KAAAyR,OAAA,KAgBA,OAVA6C,EAAAxV,UAAA0V,eAAA,WACAxU,KAAAuU,oBAAA,GAMAD,EAAAxV,UAAAsV,gBAAA,WACApU,KAAAuU,oBAAA,GAEAD,EApCA,GCbIG,EAAyB,WAC7B,IAAApE,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoKdgE,EA9HL,SAAA7D,GAEV,SAAA8D,IACA,IAAA3D,EAAAH,EAAAxT,KAAA2C,YAgBA,OAXAgR,EAAA4D,iBAAA,GAKA5D,EAAA6D,aAAA,GAKA7D,EAAA8D,WAAA,GACA9D,EAyGA,OA3HIyD,EAASE,EAAA9D,GAwBb8D,EAAA7V,UAAA6O,iBAAA,SAAAvK,EAAA+O,GACA,IAAAD,EAAAlS,KAAA8U,WAAA1R,GACA8O,IACAA,EAAAlS,KAAA8U,WAAA1R,GAAA,KAEA,IAAA8O,EAAA7R,QAAA8R,IACAD,EAAApR,KAAAqR,IAgBAwC,EAAA7V,UAAAiW,cAAA,SAAAvF,GACA,IAAA8D,EAAA,iBAAA9D,EAAA,IAAkD6E,EAAK7E,KACvDpM,EAAAkQ,EAAAlQ,KACAkQ,EAAA7B,OAAAzR,KACA,IACAgV,EADA9C,EAAAlS,KAAA8U,WAAA1R,GAEA,GAAA8O,EAAA,CACA9O,KAAApD,KAAA6U,eACA7U,KAAA6U,aAAAzR,GAAA,EACApD,KAAA4U,iBAAAxR,GAAA,KAEApD,KAAA6U,aAAAzR,GACA,QAAAlG,EAAA,EAAA0U,EAAAM,EAAAnS,OAAkD7C,EAAA0U,IAAQ1U,EAC1D,QAAAgV,EAAAhV,GAAAG,KAAA2C,KAAAsT,MAAAiB,mBAAA,CACAS,GAAA,EACA,MAIA,KADAhV,KAAA6U,aAAAzR,GACA,IAAApD,KAAA6U,aAAAzR,GAAA,CACA,IAAA6R,EAAAjV,KAAA4U,iBAAAxR,GAEA,WADApD,KAAA4U,iBAAAxR,GACA6R,KACAjV,KAAAgT,oBAAA5P,EAAmD+Q,UAEnDnU,KAAA6U,aAAAzR,GAEA,OAAA4R,IAMAL,EAAA7V,UAAAkV,gBAAA,WACQL,EAAW3T,OASnB2U,EAAA7V,UAAA2T,aAAA,SAAArP,GACA,OAAApD,KAAA8U,WAAA1R,IAOAuR,EAAA7V,UAAAoW,YAAA,SAAAC,GACA,OAAAA,EACAA,KAAAnV,KAAA8U,WACAlX,OAAAmP,KAAA/M,KAAA8U,YAAA/U,OAAA,GAMA4U,EAAA7V,UAAAkU,oBAAA,SAAA5P,EAAA+O,GACA,IAAAD,EAAAlS,KAAA8U,WAAA1R,GACA,GAAA8O,EAAA,CACA,IAAA3C,EAAA2C,EAAA7R,QAAA8R,GACA/O,KAAApD,KAAA4U,kBAEA1C,EAAA3C,GAAmC4E,IACnCnU,KAAA4U,iBAAAxR,KAGA8O,EAAAtQ,OAAA2N,EAAA,GACA,IAAA2C,EAAAnS,eACAC,KAAA8U,WAAA1R,MAKAuR,EA5HU,CA6HRf,GC5JawB,EAAA,CAMfC,OAAA,SAMAC,MAAA,QACAC,MAAA,QACAC,YAAA,cACAC,MAAA,QACAC,SAAA,WACAC,UAAA,YACAC,SAAA,WACAC,KAAA,OACAC,QAAA,UACAC,SAAA,WACAC,KAAA,OACAC,UAAA,YACAC,UAAA,YACAC,SAAA,WACAC,QAAA,UACAC,WAAA,aACAC,cAAA,gBACAC,OAAA,SACAC,WAAA,aACAC,UAAA,YACAC,SAAA,WACAC,MAAA,SCxCIC,EAAyB,WAC7B,IAAAvG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAyId,IAAAmG,EA3GD,SAAAhG,GAEd,SAAAiG,IACA,IAAA9F,EAAAH,EAAAxT,KAAA2C,YAMA,OADAgR,EAAA+F,UAAA,EACA/F,EAgFA,OAxFI4F,EAASE,EAAAjG,GAcbiG,EAAAhY,UAAAkY,QAAA,aACAhX,KAAA+W,UACA/W,KAAA+U,cAA2BK,EAASC,SAQpCyB,EAAAhY,UAAAmY,YAAA,WACA,OAAAjX,KAAA+W,WAWAD,EAAAhY,UAAAoY,GAAA,SAAA9T,EAAA+O,GACA,GAAA/F,MAAA+K,QAAA/T,GAAA,CAGA,IAFA,IAAAc,EAAAd,EAAArD,OACAgN,EAAA,IAAAX,MAAAlI,GACAhH,EAAA,EAA2BA,EAAAgH,IAAShH,EACpC6P,EAAA7P,GAA0BiW,EAAMnT,KAAAoD,EAAAlG,GAAAiV,GAEhC,OAAApF,EAGA,OAAmBoG,EAAMnT,KAAyB,EAAAmS,IAYlD2E,EAAAhY,UAAAsY,KAAA,SAAAhU,EAAA+O,GACA,GAAA/F,MAAA+K,QAAA/T,GAAA,CAGA,IAFA,IAAAc,EAAAd,EAAArD,OACAgN,EAAA,IAAAX,MAAAlI,GACAhH,EAAA,EAA2BA,EAAAgH,IAAShH,EACpC6P,EAAA7P,GAA0BuW,EAAUzT,KAAAoD,EAAAlG,GAAAiV,GAEpC,OAAApF,EAGA,OAAmB0G,EAAUzT,KAAyB,EAAAmS,IAStD2E,EAAAhY,UAAAuY,GAAA,SAAAjU,EAAA+O,GACA,GAAA/F,MAAA+K,QAAA/T,GACA,QAAAlG,EAAA,EAAA0U,EAAAxO,EAAArD,OAA6C7C,EAAA0U,IAAQ1U,EACrCwW,EAAQ1T,KAAAoD,EAAAlG,GAAAiV,QAKZuB,EAAQ1T,KAAyB,EAAAmS,IAG7C2E,EAzFc,CA0FZpC,GCxHE4C,EAAyB,WAC7B,IAAAjH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAyB7B6G,EAAA,SAAA1G,GAOA,SAAA0G,EAAAnU,EAAA3E,EAAA+Y,GACA,IAAAxG,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAcA,OARAgR,EAAAvS,MAOAuS,EAAAwG,WACAxG,EAEA,OAvBIsG,EAASC,EAAA1G,GAuBb0G,EAxBA,CAyBElD,GA6CEoD,EAAU,SAAA5G,GAKd,SAAA6G,EAAAC,GACA,IAAA3G,EAAAH,EAAAxT,KAAA2C,YAcA,OATQmQ,EAAMa,GAKdA,EAAA4G,QAAA,QACAhF,IAAA+E,GACA3G,EAAA6G,cAAAF,GAEA3G,EAwFA,OA3GIsG,EAASI,EAAA7G,GA2Bb6G,EAAA5Y,UAAAf,IAAA,SAAAU,GACA,IAAAN,EAIA,OAHA6B,KAAA4X,QAAA7Y,eAAAN,KACAN,EAAA6B,KAAA4X,QAAAnZ,IAEAN,GAOAuZ,EAAA5Y,UAAAgZ,QAAA,WACA,OAAAla,OAAAmP,KAAA/M,KAAA4X,UAOAF,EAAA5Y,UAAAiZ,cAAA,WACA,OAAexG,EAAM,GAAGvR,KAAA4X,UAMxBF,EAAA5Y,UAAAkZ,OAAA,SAAAvZ,EAAA+Y,GACA,IAAAS,EACAA,EAAAC,EAAAzZ,GACAuB,KAAA+U,cAAA,IAAAwC,EAAAU,EAAAxZ,EAAA+Y,IACAS,EAAoB3G,EACpBtR,KAAA+U,cAAA,IAAAwC,EAAAU,EAAAxZ,EAAA+Y,KASAE,EAAA5Y,UAAA6J,IAAA,SAAAlK,EAAAN,EAAAga,GACA,GAAAA,EACAnY,KAAA4X,QAAAnZ,GAAAN,MAEA,CACA,IAAAqZ,EAAAxX,KAAA4X,QAAAnZ,GACAuB,KAAA4X,QAAAnZ,GAAAN,EACAqZ,IAAArZ,GACA6B,KAAAgY,OAAAvZ,EAAA+Y,KAWAE,EAAA5Y,UAAA+Y,cAAA,SAAA9F,EAAAoG,GACA,QAAA1Z,KAAAsT,EACA/R,KAAA2I,IAAAlK,EAAAsT,EAAAtT,GAAA0Z,IASAT,EAAA5Y,UAAAsZ,MAAA,SAAA3Z,EAAA0Z,GACA,GAAA1Z,KAAAuB,KAAA4X,QAAA,CACA,IAAAJ,EAAAxX,KAAA4X,QAAAnZ,UACAuB,KAAA4X,QAAAnZ,GACA0Z,GACAnY,KAAAgY,OAAAvZ,EAAA+Y,KAIAE,EA5Gc,CA6GZb,GAIFwB,EAAA,GAKO,SAAAH,EAAAzZ,GACP,OAAA4Z,EAAAtZ,eAAAN,GACA4Z,EAAA5Z,GACA4Z,EAAA5Z,GAAA,UAAAA,EAEe,IAAA6Z,EAAA,EC1NXC,EAAyB,WAC7B,IAAAlI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAwB7B8H,EACA,SAOAC,EAAA,SAAA5H,GAOA,SAAA4H,EAAArV,EAAAsV,EAAAC,GACA,IAAA3H,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAaA,OAPAgR,EAAA4H,QAAAF,EAMA1H,EAAAzB,MAAAoJ,EACA3H,EAEA,OAtBIuH,EAASE,EAAA5H,GAsBb4H,EAvBA,CAwBEpE,GA6NawE,EAzMD,SAAAhI,GAMd,SAAAiI,EAAAC,EAAAC,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAWA,GANAhI,EAAAkI,UAAAD,EAAAE,OAKAnI,EAAAoI,OAAAL,GAAA,GACA/H,EAAAkI,QACA,QAAAhc,EAAA,EAAA0U,EAAAZ,EAAAoI,OAAArZ,OAAqD7C,EAAA0U,IAAQ1U,EAC7D8T,EAAAqI,cAAArI,EAAAoI,OAAAlc,MAIA,OADA8T,EAAAsI,gBACAtI,EA8KA,OAtMIuH,EAASO,EAAAjI,GA8BbiI,EAAAha,UAAAsB,MAAA,WACA,KAAAJ,KAAAuZ,YAAA,GACAvZ,KAAAa,OAUAiY,EAAAha,UAAA0a,OAAA,SAAAjV,GACA,QAAArH,EAAA,EAAA0U,EAAArN,EAAAxE,OAAwC7C,EAAA0U,IAAQ1U,EAChD8C,KAAAc,KAAAyD,EAAArH,IAEA,OAAA8C,MASA8Y,EAAAha,UAAA2a,QAAA,SAAAla,GAEA,IADA,IAAAkN,EAAAzM,KAAAoZ,OACAlc,EAAA,EAAA0U,EAAAnF,EAAA1M,OAA0C7C,EAAA0U,IAAQ1U,EAClDqC,EAAAkN,EAAAvP,KAAAuP,IAWAqM,EAAAha,UAAA4a,SAAA,WACA,OAAA1Z,KAAAoZ,QAQAN,EAAAha,UAAA6a,KAAA,SAAApK,GACA,OAAAvP,KAAAoZ,OAAA7J,IAQAuJ,EAAAha,UAAAya,UAAA,WACA,OAAAvZ,KAAAjC,IAAAya,IAQAM,EAAAha,UAAA8a,SAAA,SAAArK,EAAAsK,GACA7Z,KAAAkZ,SACAlZ,KAAAqZ,cAAAQ,GAEA7Z,KAAAoZ,OAAAxX,OAAA2N,EAAA,EAAAsK,GACA7Z,KAAAsZ,gBACAtZ,KAAA+U,cAAA,IAAA0D,EAA+CtH,EAAmBC,IAAAyI,EAAAtK,KAQlEuJ,EAAAha,UAAA+B,IAAA,WACA,OAAAb,KAAA8Z,SAAA9Z,KAAAuZ,YAAA,IAQAT,EAAAha,UAAAgC,KAAA,SAAA+Y,GACA7Z,KAAAkZ,SACAlZ,KAAAqZ,cAAAQ,GAEA,IAAAlb,EAAAqB,KAAAuZ,YAEA,OADAvZ,KAAA4Z,SAAAjb,EAAAkb,GACA7Z,KAAAuZ,aAQAT,EAAAha,UAAA6C,OAAA,SAAAkY,GAEA,IADA,IAAAtV,EAAAvE,KAAAoZ,OACAlc,EAAA,EAAA0U,EAAArN,EAAAxE,OAAwC7C,EAAA0U,IAAQ1U,EAChD,GAAAqH,EAAArH,KAAA2c,EACA,OAAA7Z,KAAA8Z,SAAA5c,IAYA4b,EAAAha,UAAAgb,SAAA,SAAAvK,GACA,IAAAwK,EAAA/Z,KAAAoZ,OAAA7J,GAIA,OAHAvP,KAAAoZ,OAAAxX,OAAA2N,EAAA,GACAvP,KAAAsZ,gBACAtZ,KAAA+U,cAAA,IAAA0D,EAA+CtH,EAAmBE,OAAA0I,EAAAxK,IAClEwK,GAQAjB,EAAAha,UAAAkb,MAAA,SAAAzK,EAAAsK,GACA,IAAAlb,EAAAqB,KAAAuZ,YACA,GAAAhK,EAAA5Q,EAAA,CACAqB,KAAAkZ,SACAlZ,KAAAqZ,cAAAQ,EAAAtK,GAEA,IAAAwK,EAAA/Z,KAAAoZ,OAAA7J,GACAvP,KAAAoZ,OAAA7J,GAAAsK,EACA7Z,KAAA+U,cAAA,IAAA0D,EAAmDtH,EAAmBE,OAAA0I,EAAAxK,IACtEvP,KAAA+U,cAAA,IAAA0D,EAAmDtH,EAAmBC,IAAAyI,EAAAtK,QAEtE,CACA,QAAA/C,EAAA7N,EAA2B6N,EAAA+C,IAAW/C,EACtCxM,KAAA4Z,SAAApN,OAAAoG,GAEA5S,KAAA4Z,SAAArK,EAAAsK,KAMAf,EAAAha,UAAAwa,cAAA,WACAtZ,KAAA2I,IAAA6P,EAAAxY,KAAAoZ,OAAArZ,SAOA+Y,EAAAha,UAAAua,cAAA,SAAAQ,EAAAI,GACA,QAAA/c,EAAA,EAAA0U,EAAA5R,KAAAoZ,OAAArZ,OAAgD7C,EAAA0U,IAAQ1U,EACxD,GAAA8C,KAAAoZ,OAAAlc,KAAA2c,GAAA3c,IAAA+c,EACA,UAA0BrJ,EAAc,KAIxCkI,EAvMc,CAwMZR,GC5QK,SAAA4B,EAAAC,EAAAC,GACP,IAAAD,EACA,UAAkBvJ,EAAcwJ,GCVhC,IAAIC,EAAyB,WAC7B,IAAAhK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAkSd,IAAA4J,EA5NJ,SAAAzJ,GAQX,SAAA0J,EAAAC,GACA,IAAAxJ,EAAAH,EAAAxT,KAAA2C,YA4BA,GAvBAgR,EAAAyJ,SAAA7H,EAKA5B,EAAA0J,cAAA,WAMA1J,EAAA2J,OAAA,KAKA3J,EAAA4J,oBAAAhI,EAKA5B,EAAA6J,mBAAA,KACQ1H,EAAMnC,EAAQkH,EAAkBlH,EAAA0J,eAAA1J,EAAA8J,uBAAA9J,GACxCwJ,EACA,GAAoC,qBAAAO,sBAAA,CACpC,IAAAC,EAA+E,EAC/EhK,EAAAiK,YAAAD,OAEA,CAEA,IAAAE,EAAAV,EACAxJ,EAAA6G,cAAAqD,GAGA,OAAAlK,EA4IA,OA3LIqJ,EAASE,EAAA1J,GAuDb0J,EAAAzb,UAAAqc,MAAA,WACA,IAAAA,EAAA,IAAAZ,EAAAva,KAAA+X,iBACAoD,EAAAC,gBAAApb,KAAAqb,mBACA,IAAAL,EAAAhb,KAAAsb,cACAN,GACAG,EAAAF,YAAAD,EAAAG,SAEA,IAAAI,EAAAvb,KAAAwb,WAIA,OAHAD,GACAJ,EAAAM,SAAAF,GAEAJ,GAUAZ,EAAAzb,UAAAwc,YAAA,WACA,OACkEtb,KAAAjC,IAAAiC,KAAA0a,gBASlEH,EAAAzb,UAAA4c,MAAA,WACA,OAAA1b,KAAAya,KASAF,EAAAzb,UAAAuc,gBAAA,WACA,OAAArb,KAAA0a,eAQAH,EAAAzb,UAAA0c,SAAA,WACA,OAAAxb,KAAA2a,QAQAJ,EAAAzb,UAAA6c,iBAAA,WACA,OAAA3b,KAAA4a,gBAKAL,EAAAzb,UAAA8c,sBAAA,WACA5b,KAAAgX,WAKAuD,EAAAzb,UAAAgc,uBAAA,WACA9a,KAAA6a,qBACYtH,EAAavT,KAAA6a,oBACzB7a,KAAA6a,mBAAA,MAEA,IAAAG,EAAAhb,KAAAsb,cACAN,IACAhb,KAAA6a,mBAAsC1H,EAAM6H,EAAW5F,EAASC,OAAArV,KAAA4b,sBAAA5b,OAEhEA,KAAAgX,WASAuD,EAAAzb,UAAAmc,YAAA,SAAAD,GACAhb,KAAA2I,IAAA3I,KAAA0a,cAAAM,IAUAT,EAAAzb,UAAA2c,SAAA,SAAAF,GACAvb,KAAA2a,OAAAY,EACAvb,KAAA4a,eAAAW,EAuCO,SAAA9R,GACP,sBAAAA,EACA,OAAAA,EAMA,IAAAoS,EACA,GAAAzP,MAAA+K,QAAA1N,GACAoS,EAAApS,MAEA,CACYyQ,EAA2B,qBAAA4B,UAAA,IACvC,IAAAP,EAAsE,EACtEM,EAAA,CAAAN,GAEA,kBACA,OAAAM,GAzDAE,CAAAR,QAAA3I,EACA5S,KAAAgX,WAWAuD,EAAAzb,UAAAkd,MAAA,SAAAC,GACAjc,KAAAya,IAAAwB,EACAjc,KAAAgX,WASAuD,EAAAzb,UAAAsc,gBAAA,SAAA3d,GACQiW,EAAQ1T,KAAOkY,EAAkBlY,KAAA0a,eAAA1a,KAAA8a,uBAAA9a,MACzCA,KAAA0a,cAAAjd,EACQ0V,EAAMnT,KAAOkY,EAAkBlY,KAAA0a,eAAA1a,KAAA8a,uBAAA9a,MACvCA,KAAA8a,0BAEAP,EA5LW,CA6LTjC,GC1NK,SAAA4D,EAAA/c,EAAAyH,GACP,OAAAzH,EAAAyH,EAAA,EAAAzH,EAAAyH,GAAA,IAQO,SAAAuV,EAAA5X,EAAAkF,GACP,OAAAlF,EAAAlE,QAAAoJ,IAAA,EAUO,SAAA2S,EAAA7X,EAAAkN,EAAA4K,GACP,IAAA1d,EAAA4F,EAAAxE,OACA,GAAAwE,EAAA,IAAAkN,EACA,SAEA,GAAAA,GAAAlN,EAAA5F,EAAA,GACA,OAAAA,EAAA,EAGA,IAAAzB,OAAA,EACA,GAAAmf,EAAA,GACA,IAAAnf,EAAA,EAAuBA,EAAAyB,IAAOzB,EAC9B,GAAAqH,EAAArH,GAAAuU,EACA,OAAAvU,EAAA,OAIA,GAAAmf,EAAA,GACA,IAAAnf,EAAA,EAAuBA,EAAAyB,IAAOzB,EAC9B,GAAAqH,EAAArH,IAAAuU,EACA,OAAAvU,OAKA,IAAAA,EAAA,EAAuBA,EAAAyB,IAAOzB,EAAA,CAC9B,GAAAqH,EAAArH,IAAAuU,EACA,OAAAvU,EAEA,GAAAqH,EAAArH,GAAAuU,EACA,OAAAlN,EAAArH,EAAA,GAAAuU,IAAAlN,EAAArH,GACAA,EAAA,EAGAA,EAKA,OAAAyB,EAAA,EAQO,SAAA2d,EAAA/X,EAAAgY,EAAAtW,GACP,KAAAsW,EAAAtW,GAAA,CACA,IAAAuW,EAAAjY,EAAAgY,GACAhY,EAAAgY,GAAAhY,EAAA0B,GACA1B,EAAA0B,GAAAuW,IACAD,IACAtW,GAQO,SAAAuT,EAAAjV,EAAAtD,GAGP,IAFA,IAAAwb,EAAArQ,MAAA+K,QAAAlW,KAAA,CAAAA,GACAlB,EAAA0c,EAAA1c,OACA7C,EAAA,EAAmBA,EAAA6C,EAAY7C,IAC/BqH,IAAAxE,QAAA0c,EAAAvf,GAuBO,SAAAwf,GAAAnY,EAAAoY,GAGP,IAFA,IACAxe,EADA4B,EAAAwE,EAAAxE,SAAA,EAEA7C,EAAA,EAAmBA,EAAA6C,EAAY7C,IAE/B,GAAAyf,EADAxe,EAAAoG,EAAArH,GACAA,EAAAqH,GACA,OAAApG,EAGA,YAOO,SAAAye,GAAAC,EAAAC,GACP,IAAAC,EAAAF,EAAA9c,OACA,GAAAgd,IAAAD,EAAA/c,OACA,SAEA,QAAA7C,EAAA,EAAmBA,EAAA6f,EAAU7f,IAC7B,GAAA2f,EAAA3f,KAAA4f,EAAA5f,GACA,SAGA,SA4BO,SAAA8f,GAAAzY,EAAAoY,GACP,IAAApN,EAKA,OAJAhL,EAAA0Y,MAAA,SAAAC,EAAAC,GAEA,OADA5N,EAAA4N,GACAR,EAAAO,EAAAC,EAAA5Y,KAEAgL,GAAA,EC1Me,IAAA6N,GAAA,CACfC,YAAA,cACAC,aAAA,eACAC,SAAA,WACAC,UAAA,aCJeC,GAAA,CACfC,QAAA,EACAC,aAAA,EACAC,MAAA,EACAC,MAAA,EACAC,MAAA,EACAC,KAAA,ICKO,SAAAC,GAAAC,GAEP,IADA,IAAAC,EAAAC,KACAjhB,EAAA,EAAA0U,EAAAqM,EAAAle,OAA4C7C,EAAA0U,IAAQ1U,EACpDkhB,GAAAF,EAAAD,EAAA/gB,IAEA,OAAAghB,EAwBO,SAASG,GAAMH,EAAA/f,EAAAmgB,GACtB,OAAAA,GACAA,EAAA,GAAAJ,EAAA,GAAA/f,EACAmgB,EAAA,GAAAJ,EAAA,GAAA/f,EACAmgB,EAAA,GAAAJ,EAAA,GAAA/f,EACAmgB,EAAA,GAAAJ,EAAA,GAAA/f,EACAmgB,GAGA,CACAJ,EAAA,GAAA/f,EACA+f,EAAA,GAAA/f,EACA+f,EAAA,GAAA/f,EACA+f,EAAA,GAAA/f,GAWO,SAAAgd,GAAA+C,EAAAI,GACP,OAAAA,GACAA,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,GAGAJ,EAAA1c,QASO,SAAA+c,GAAAL,EAAApe,EAAA0e,GACP,IAAAC,EAAAC,EAmBA,OAjBAD,EADA3e,EAAAoe,EAAA,GACAA,EAAA,GAAApe,EAEAoe,EAAA,GAAApe,EACAA,EAAAoe,EAAA,GAGA,GAWAO,GARAC,EADAF,EAAAN,EAAA,GACAA,EAAA,GAAAM,EAEAN,EAAA,GAAAM,EACAA,EAAAN,EAAA,GAGA,GAEAQ,EAUO,SAAAC,GAAAT,EAAAU,GACP,OAAAC,GAAAX,EAAAU,EAAA,GAAAA,EAAA,IAcO,SAAAE,GAAAC,EAAAC,GACP,OAAAD,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,IACAA,EAAA,IAAAC,EAAA,IAAAA,EAAA,IAAAD,EAAA,GAWO,SAAAF,GAAAX,EAAApe,EAAA0e,GACP,OAAAN,EAAA,IAAApe,MAAAoe,EAAA,IAAAA,EAAA,IAAAM,MAAAN,EAAA,GASO,SAAAe,GAAAf,EAAAU,GACP,IAAAre,EAAA2d,EAAA,GACA1d,EAAA0d,EAAA,GACAzd,EAAAyd,EAAA,GACAxd,EAAAwd,EAAA,GACApe,EAAA8e,EAAA,GACAJ,EAAAI,EAAA,GACAM,EAAuBzB,GAAYC,QAgBnC,OAfA5d,EAAAS,EACA2e,GAAsCzB,GAAYM,KAElDje,EAAAW,IACAye,GAAsCzB,GAAYI,OAElDW,EAAAhe,EACA0e,GAAsCzB,GAAYK,MAElDU,EAAA9d,IACAwe,GAAsCzB,GAAYG,OAElDsB,IAAyBzB,GAAYC,UACrCwB,EAAuBzB,GAAYE,cAEnCuB,EAOO,SAAAf,KACP,OAAAnT,mBAWO,SAAAmU,GAAA5e,EAAAC,EAAAC,EAAAC,EAAA4d,GACP,OAAAA,GACAA,EAAA,GAAA/d,EACA+d,EAAA,GAAA9d,EACA8d,EAAA,GAAA7d,EACA6d,EAAA,GAAA5d,EACA4d,GAGA,CAAA/d,EAAAC,EAAAC,EAAAC,GAQO,SAAA0e,GAAAd,GACP,OAAAa,GAAAnU,kBAAAsT,GAOO,SAAAe,GAAAT,EAAAN,GACP,IAAAxe,EAAA8e,EAAA,GACAJ,EAAAI,EAAA,GACA,OAAAO,GAAArf,EAAA0e,EAAA1e,EAAA0e,EAAAF,GAmBO,SAAAgB,GAAAC,EAAAhV,EAAAtE,EAAAuZ,EAAAlB,GAEP,OAAAmB,GADAL,GAAAd,GACAiB,EAAAhV,EAAAtE,EAAAuZ,GAkBO,SAASE,GAAMX,EAAAC,GACtB,OAAAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,GASO,SAASW,GAAMZ,EAAAC,GAatB,OAZAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAA,EAAA,GAAAD,EAAA,KACAA,EAAA,GAAAC,EAAA,IAEAD,EAMO,SAAAX,GAAAF,EAAAU,GACPA,EAAA,GAAAV,EAAA,KACAA,EAAA,GAAAU,EAAA,IAEAA,EAAA,GAAAV,EAAA,KACAA,EAAA,GAAAU,EAAA,IAEAA,EAAA,GAAAV,EAAA,KACAA,EAAA,GAAAU,EAAA,IAEAA,EAAA,GAAAV,EAAA,KACAA,EAAA,GAAAU,EAAA,IAQO,SAAAgB,GAAA1B,EAAAD,GACP,QAAA/gB,EAAA,EAAA0U,EAAAqM,EAAAle,OAA4C7C,EAAA0U,IAAQ1U,EACpDkhB,GAAAF,EAAAD,EAAA/gB,IAEA,OAAAghB,EAUO,SAAAuB,GAAAvB,EAAAqB,EAAAhV,EAAAtE,EAAAuZ,GACP,KAAUjV,EAAAtE,EAAcsE,GAAAiV,EACxBK,GAAA3B,EAAAqB,EAAAhV,GAAAgV,EAAAhV,EAAA,IAEA,OAAA2T,EAkBO,SAAA2B,GAAA3B,EAAApe,EAAA0e,GACPN,EAAA,GAAA7e,KAAAQ,IAAAqe,EAAA,GAAApe,GACAoe,EAAA,GAAA7e,KAAAQ,IAAAqe,EAAA,GAAAM,GACAN,EAAA,GAAA7e,KAAAM,IAAAue,EAAA,GAAApe,GACAoe,EAAA,GAAA7e,KAAAM,IAAAue,EAAA,GAAAM,GAWO,SAAAsB,GAAA5B,EAAArP,GACP,IAAAlJ,EAEA,OADAA,EAAAkJ,EAAAkR,GAAA7B,KAEAvY,GAEAA,EAAAkJ,EAAAmR,GAAA9B,KAEAvY,GAEAA,EAAAkJ,EAAAoR,GAAA/B,KAEAvY,GAEAA,EAAAkJ,EAAAqR,GAAAhC,OAIA,EAQO,SAAAiC,GAAAjC,GACP,IAAAkC,EAAA,EAIA,OAHSC,GAAOnC,KAChBkC,EAAAE,GAAApC,GAAAqC,GAAArC,IAEAkC,EAQO,SAAAL,GAAA7B,GACP,OAAAA,EAAA,GAAAA,EAAA,IAQO,SAAA8B,GAAA9B,GACP,OAAAA,EAAA,GAAAA,EAAA,IAQO,SAAAsC,GAAAtC,GACP,QAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAQO,SAAAuC,GAAAvC,EAAAwC,GACP,IAAA9B,EAgBA,OAfA8B,IAAmBtD,GAAMC,YACzBuB,EAAAmB,GAAA7B,GAEAwC,IAAwBtD,GAAME,aAC9BsB,EAAAoB,GAAA9B,GAEAwC,IAAwBtD,GAAMG,SAC9BqB,EAAAsB,GAAAhC,GAEAwC,IAAwBtD,GAAMI,UAC9BoB,EAAAqB,GAAA/B,GAGQhE,GAAM,MAEd0E,EAsBO,SAAA+B,GAAAC,EAAAC,EAAAC,EAAAC,EAAAzC,GACP,IAAAG,EAAAoC,EAAAE,EAAA,KACArC,EAAAmC,EAAAE,EAAA,KACAC,EAAA3hB,KAAA4hB,IAAAH,GACAI,EAAA7hB,KAAA8hB,IAAAL,GACAM,EAAA3C,EAAAuC,EACAK,EAAA5C,EAAAyC,EACAI,EAAA5C,EAAAsC,EACAO,EAAA7C,EAAAwC,EACAphB,EAAA8gB,EAAA,GACApC,EAAAoC,EAAA,GACAY,EAAA1hB,EAAAshB,EAAAG,EACAE,EAAA3hB,EAAAshB,EAAAG,EACAG,EAAA5hB,EAAAshB,EAAAG,EACAI,EAAA7hB,EAAAshB,EAAAG,EACAK,EAAApD,EAAA6C,EAAAC,EACAO,EAAArD,EAAA6C,EAAAC,EACAQ,EAAAtD,EAAA6C,EAAAC,EACAS,EAAAvD,EAAA6C,EAAAC,EACA,OAAAnC,GAAA9f,KAAAQ,IAAA2hB,EAAAC,EAAAC,EAAAC,GAAAtiB,KAAAQ,IAAA+hB,EAAAC,EAAAC,EAAAC,GAAA1iB,KAAAM,IAAA6hB,EAAAC,EAAAC,EAAAC,GAAAtiB,KAAAM,IAAAiiB,EAAAC,EAAAC,EAAAC,GAAAzD,GAQO,SAAAiC,GAAArC,GACP,OAAAA,EAAA,GAAAA,EAAA,GAmBO,SAAA8D,GAAAjD,EAAAC,EAAAV,GACP,IAAA2D,EAAA3D,GA3UA,CAAAtT,SAAA,UAyWA,OA7BQkX,GAAUnD,EAAAC,IAClBD,EAAA,GAAAC,EAAA,GACAiD,EAAA,GAAAlD,EAAA,GAGAkD,EAAA,GAAAjD,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAiD,EAAA,GAAAlD,EAAA,GAGAkD,EAAA,GAAAjD,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAiD,EAAA,GAAAlD,EAAA,GAGAkD,EAAA,GAAAjD,EAAA,GAEAD,EAAA,GAAAC,EAAA,GACAiD,EAAA,GAAAlD,EAAA,GAGAkD,EAAA,GAAAjD,EAAA,IAIAI,GAAA6C,GAEAA,EAwBO,SAAA/B,GAAAhC,GACP,OAAAA,EAAA,GAAAA,EAAA,IAQO,SAAA+B,GAAA/B,GACP,OAAAA,EAAA,GAAAA,EAAA,IAQO,SAAAoC,GAAApC,GACP,OAAAA,EAAA,GAAAA,EAAA,GASO,SAASgE,GAAUnD,EAAAC,GAC1B,OAAAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,GAQO,SAASqB,GAAOnC,GACvB,OAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,GAAAA,EAAA,GAuBO,SAAAiE,GAAAjE,EAAA/f,GACP,IAAAikB,GAAAlE,EAAA,GAAAA,EAAA,OAAA/f,EAAA,GACAkkB,GAAAnE,EAAA,GAAAA,EAAA,OAAA/f,EAAA,GACA+f,EAAA,IAAAkE,EACAlE,EAAA,IAAAkE,EACAlE,EAAA,IAAAmE,EACAnE,EAAA,IAAAmE,EAiEO,SAAAC,GAAApE,EAAAqE,EAAAjE,GACP,IAAAL,EAAA,CACAC,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IAKA,OAHAqE,EAAAtE,IAAA,GA3qBA,SAAAuE,EAAAC,EAAAnE,GAKA,OAAAa,GAJA9f,KAAAQ,IAAAqC,MAAA,KAAAsgB,GACAnjB,KAAAQ,IAAAqC,MAAA,KAAAugB,GACApjB,KAAAM,IAAAuC,MAAA,KAAAsgB,GACAnjB,KAAAM,IAAAuC,MAAA,KAAAugB,GACAnE,GAyqBAoE,CAFA,CAAAzE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,CAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAK,GCrsBe,IAAAqE,GAAA,CACfC,GAAA,KACAC,IAAA,MACAC,IAAA,MACAC,KAAA,QCJeC,GAAA,CACfC,MAAA,QACAC,YAAA,aACAC,YAAA,aACAC,QAAA,UACAC,YAAA,aACAC,kBAAA,kBACAC,cAAA,eACAC,oBAAA,qBACAC,OAAA,UCNO,SAAAC,GAAAnE,EAAAhV,EAAAtE,EAAAuZ,EAAAmE,EAAAC,GAGP,IAFA,IAAAC,EAAAD,GAAA,GACA1mB,EAAA,EACAsP,EAAAjC,EAAwBiC,EAAAvG,EAASuG,GAAAgT,EAAA,CACjC,IAAA1f,EAAAyf,EAAA/S,GACAgS,EAAAe,EAAA/S,EAAA,GACAqX,EAAA3mB,KAAAymB,EAAA,GAAA7jB,EAAA6jB,EAAA,GAAAnF,EAAAmF,EAAA,GACAE,EAAA3mB,KAAAymB,EAAA,GAAA7jB,EAAA6jB,EAAA,GAAAnF,EAAAmF,EAAA,GAKA,OAHAC,GAAAC,EAAA9jB,QAAA7C,IACA2mB,EAAA9jB,OAAA7C,GAEA2mB,EAYO,SAAAC,GAAAvE,EAAAhV,EAAAtE,EAAAuZ,EAAAuE,EAAAC,EAAAJ,GAOP,IANA,IAAAC,EAAAD,GAAA,GACA3C,EAAA5hB,KAAA4hB,IAAA8C,GACA5C,EAAA9hB,KAAA8hB,IAAA4C,GACAE,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACA9mB,EAAA,EACAsP,EAAAjC,EAAwBiC,EAAAvG,EAASuG,GAAAgT,EAAA,CACjC,IAAA4C,EAAA7C,EAAA/S,GAAAyX,EACA5B,EAAA9C,EAAA/S,EAAA,GAAA0X,EACAL,EAAA3mB,KAAA+mB,EAAA7B,EAAAnB,EAAAoB,EAAAlB,EACA0C,EAAA3mB,KAAAgnB,EAAA9B,EAAAjB,EAAAkB,EAAApB,EACA,QAAAkD,EAAA3X,EAAA,EAA2B2X,EAAA3X,EAAAgT,IAAgB2E,EAC3CN,EAAA3mB,KAAAqiB,EAAA4E,GAMA,OAHAP,GAAAC,EAAA9jB,QAAA7C,IACA2mB,EAAA9jB,OAAA7C,GAEA2mB,EA2CO,SAASO,GAAS7E,EAAAhV,EAAAtE,EAAAuZ,EAAA4C,EAAAC,EAAAuB,GAGzB,IAFA,IAAAC,EAAAD,GAAA,GACA1mB,EAAA,EACAsP,EAAAjC,EAAwBiC,EAAAvG,EAASuG,GAAAgT,EAAA,CACjCqE,EAAA3mB,KAAAqiB,EAAA/S,GAAA4V,EACAyB,EAAA3mB,KAAAqiB,EAAA/S,EAAA,GAAA6V,EACA,QAAA8B,EAAA3X,EAAA,EAA2B2X,EAAA3X,EAAAgT,IAAgB2E,EAC3CN,EAAA3mB,KAAAqiB,EAAA4E,GAMA,OAHAP,GAAAC,EAAA9jB,QAAA7C,IACA2mB,EAAA9jB,OAAA7C,GAEA2mB,ECpGO,SAAAQ,GAAAlmB,EAAA0B,EAAAF,GACP,OAAAN,KAAAQ,IAAAR,KAAAM,IAAAxB,EAAA0B,GAAAF,GAWO,IAAA2kB,GAIP,SAAAjlB,KAEAA,KAAAilB,KAIA,SAAAxkB,GACA,IAAA0e,EAAoC,KAAAhf,IAAAM,GACpC,OAAA0e,EAAA,EAAAA,GAAA,GAgBO,SAAA+F,GAAAzkB,EAAA0e,EAAAiD,EAAAI,EAAAH,EAAAI,GACP,IAAArD,EAAAiD,EAAAD,EACA/C,EAAAoD,EAAAD,EACA,OAAApD,GAAA,IAAAC,EAAA,CACA,IAAAtgB,IAAA0B,EAAA2hB,GAAAhD,GAAAD,EAAAqD,GAAAnD,IAAAD,IAAAC,KACAtgB,EAAA,GACAqjB,EAAAC,EACAG,EAAAC,GAEA1jB,EAAA,IACAqjB,GAAAhD,EAAArgB,EACAyjB,GAAAnD,EAAAtgB,GAGA,OAAWomB,GAAe1kB,EAAA0e,EAAAiD,EAAAI,GAUnB,SAAS2C,GAAe/C,EAAAI,EAAAH,EAAAI,GAC/B,IAAArD,EAAAiD,EAAAD,EACA/C,EAAAoD,EAAAD,EACA,OAAApD,IAAAC,IA0DO,SAAA+F,GAAAC,GACP,WAAAA,EAAArlB,KAAAslB,GAQO,SAAAC,GAAAC,GACP,OAAAA,EAAAxlB,KAAAslB,GAAA,IASO,SAAAG,GAAA3lB,EAAAyH,GACP,IAAA5I,EAAAmB,EAAAyH,EACA,OAAA5I,EAAA4I,EAAA,EAAA5I,EAAA4I,EAAA5I,EAUO,SAAA+mB,GAAA5lB,EAAAyH,EAAA9G,GACP,OAAAX,EAAAW,GAAA8G,EAAAzH;;;;;;GC7IO,IAAA6lB,GAAA,UAUA,SAAAC,GAAAC,EAAAC,EAAAC,GACP,IAAAC,EAAAD,GAAAJ,GACAM,EAAeV,GAASM,EAAA,IACxBK,EAAeX,GAASO,EAAA,IACxBK,GAAAD,EAAAD,GAAA,EACAG,EAAsBb,GAASO,EAAA,GAAAD,EAAA,MAC/B/lB,EAAAE,KAAA8hB,IAAAqE,GAAAnmB,KAAA8hB,IAAAqE,GACAnmB,KAAA8hB,IAAAsE,GAAApmB,KAAA8hB,IAAAsE,GACApmB,KAAA4hB,IAAAqE,GAAAjmB,KAAA4hB,IAAAsE,GACA,SAAAF,EAAAhmB,KAAAqmB,MAAArmB,KAAAK,KAAAP,GAAAE,KAAAK,KAAA,EAAAP,IAQA,SAAAwmB,GAAA1H,EAAAoH,GAEA,IADA,IAAAtlB,EAAA,EACA7C,EAAA,EAAA0U,EAAAqM,EAAAle,OAA4C7C,EAAA0U,EAAA,IAAY1U,EACxD6C,GAAAklB,GAAAhH,EAAA/gB,GAAA+gB,EAAA/gB,EAAA,GAAAmoB,GAEA,OAAAtlB,EAgFA,SAAA6lB,GAAA3H,EAAAoH,GAKA,IAJA,IAAAjF,EAAA,EACAlc,EAAA+Z,EAAAle,OACA0hB,EAAAxD,EAAA/Z,EAAA,MACA2d,EAAA5D,EAAA/Z,EAAA,MACAhH,EAAA,EAAmBA,EAAAgH,EAAShH,IAAA,CAC5B,IAAAwkB,EAAAzD,EAAA/gB,GAAA,GACA4kB,EAAA7D,EAAA/gB,GAAA,GACAkjB,GAAgBwE,GAASlD,EAAAD,IACzB,EAAApiB,KAAA8hB,IAA0ByD,GAAS/C,IACnCxiB,KAAA8hB,IAAyByD,GAAS9C,KAClCL,EAAAC,EACAG,EAAAC,EAEA,OAAA1B,EAAAiF,IAAA,EAyEO,SAASQ,GAAMX,EAAAY,EAAAC,EAAAX,GACtB,IAAAC,EAAAD,GAAAJ,GACAM,EAAeV,GAASM,EAAA,IACxBc,EAAepB,GAASM,EAAA,IACxBe,EAAAH,EAAAT,EACAa,EAAA7mB,KAAA8mB,KAAA9mB,KAAA8hB,IAAAmE,GAAAjmB,KAAA4hB,IAAAgF,GACA5mB,KAAA4hB,IAAAqE,GAAAjmB,KAAA8hB,IAAA8E,GAAA5mB,KAAA4hB,IAAA8E,IAEA,OAAYtB,GADZuB,EAAA3mB,KAAAqmB,MAAArmB,KAAA8hB,IAAA4E,GAAA1mB,KAAA8hB,IAAA8E,GAAA5mB,KAAA4hB,IAAAqE,GAAAjmB,KAAA4hB,IAAAgF,GAAA5mB,KAAA8hB,IAAAmE,GAAAjmB,KAAA8hB,IAAA+E,KAC4BzB,GAASyB,IClOrC,IAAAE,GAAA,CACAC,QAAA,UACAC,KAAA,KACAC,OAAA,IACAC,OAAA,SACAC,YAAA,cACAC,OAAA,SAQOC,GAAA,GAEPA,GAAAP,GAAAC,SAAA,EAAAhnB,KAAAslB,GAAA,YACAgC,GAAAP,GAAAE,MAAA,MACAK,GAAAP,GAAAG,QAAA,EACAI,GAAAP,GAAAM,QAAA,UACe,IAAAE,GAAA,GCwNAC,GAnMD,WAId,SAAAC,EAAA7N,GAKAjZ,KAAA+mB,MAAA9N,EAAAlI,KAQA/Q,KAAAgnB,OAA8D/N,EAAA,MAQ9DjZ,KAAAinB,aAAArU,IAAAqG,EAAAiF,OAAAjF,EAAAiF,OAAA,KAQAle,KAAAknB,kBAAAtU,IAAAqG,EAAAkO,YACAlO,EAAAkO,YAAA,KAKAnnB,KAAAonB,sBAAAxU,IAAAqG,EAAAoO,gBACApO,EAAAoO,gBAAA,MAKArnB,KAAAsnB,aAAA1U,IAAAqG,EAAAsO,QAAAtO,EAAAsO,OAKAvnB,KAAAwnB,aAAAxnB,KAAAsnB,UAAAtnB,KAAAinB,SAKAjnB,KAAAynB,wBAAAxO,EAAAyO,mBAKA1nB,KAAA2nB,iBAAA,KAKA3nB,KAAA4nB,eAAA3O,EAAA4O,cAgIA,OA3HAf,EAAAhoB,UAAAgpB,SAAA,WACA,OAAA9nB,KAAAwnB,WAOAV,EAAAhoB,UAAAipB,QAAA,WACA,OAAA/nB,KAAA+mB,OAOAD,EAAAhoB,UAAAkpB,UAAA,WACA,OAAAhoB,KAAAinB,SAOAH,EAAAhoB,UAAAmpB,SAAA,WACA,OAAAjoB,KAAAgnB,QASAF,EAAAhoB,UAAAopB,iBAAA,WACA,OAAAloB,KAAA4nB,gBAAsCjB,GAAe3mB,KAAAgnB,SAOrDF,EAAAhoB,UAAAqpB,eAAA,WACA,OAAAnoB,KAAAknB,cAaAJ,EAAAhoB,UAAAspB,mBAAA,WACA,OAAApoB,KAAAonB,kBAOAN,EAAAhoB,UAAAupB,SAAA,WACA,OAAAroB,KAAAsnB,SAOAR,EAAAhoB,UAAAwpB,UAAA,SAAAf,GACAvnB,KAAAsnB,QAAAC,EACAvnB,KAAAwnB,aAAAD,IAAAvnB,KAAAinB,UAKAH,EAAAhoB,UAAAypB,mBAAA,WACA,OAAAvoB,KAAA2nB,kBAKAb,EAAAhoB,UAAA0pB,mBAAA,SAAAC,GACAzoB,KAAA2nB,iBAAAc,GAOA3B,EAAAhoB,UAAA4pB,UAAA,SAAAxK,GACAle,KAAAinB,QAAA/I,EACAle,KAAAwnB,aAAAxnB,KAAAsnB,UAAApJ,IAQA4I,EAAAhoB,UAAA6pB,eAAA,SAAAxB,GACAnnB,KAAAknB,aAAAC,GAQAL,EAAAhoB,UAAA8pB,sBAAA,SAAAjM,GACA3c,KAAAynB,wBAAA9K,GAOAmK,EAAAhoB,UAAA+pB,uBAAA,WACA,OAAA7oB,KAAAynB,yBAEAX,EAjMc,GCjDVgC,GAAyB,WAC7B,IAAAzY,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAyBtBqY,GAAA,QAKAC,GAAA3pB,KAAAslB,GAAAoE,GAKAE,GAAA,EACPD,OACAA,OAMOE,GAAA,kBAKHC,GAAkB,SAAAtY,GAKtB,SAAAuY,EAAArY,GACA,OAAAF,EAAAxT,KAAA2C,KAAA,CACA+Q,OACAsY,MAAmBzC,GAAKL,OACxBrI,OAAA+K,GACA1B,QAAA,EACAJ,YAAA+B,GACAxB,mBAAA,SAAA7G,EAAAyI,GACA,OAAAzI,EAAoCyD,GAAIgF,EAAA,GAAAP,QAE/B/oB,KAET,OAhBI8oB,GAASM,EAAAvY,GAgBbuY,EAjBsB,CAkBpBvC,IAOK0C,GAAA,CACP,IAAQJ,GAAkB,aAC1B,IAAQA,GAAkB,eAC1B,IAAQA,GAAkB,eAC1B,IAAQA,GAAkB,eAC1B,IAAQA,GAAkB,oCAC1B,IAAQA,GAAkB,8BAC1B,IAAQA,GAAkB,iDAUnB,SAAAK,GAAAra,EAAAsa,EAAAC,GACP,IAAA3pB,EAAAoP,EAAApP,OACA4pB,EAAAD,EAAA,EAAAA,EAAA,EACA9d,EAAA6d,OACA7W,IAAAhH,IAGAA,EAFA+d,EAAA,EAEAxa,EAAA3N,QAGA,IAAA4K,MAAArM,IAIA,IADA,IAAA6pB,EAAAZ,GACA9rB,EAAA,EAAmBA,EAAA6C,EAAY7C,GAAAysB,EAAA,CAC/B/d,EAAA1O,GAAA0sB,EAAAza,EAAAjS,GAAA,IACA,IAAAshB,EAAAuK,GACA1pB,KAAAC,IAAAD,KAAAwqB,IAAAxqB,KAAAslB,KAAAxV,EAAAjS,EAAA,aACAshB,EAAAoL,EACApL,EAAAoL,EAEApL,GAAAoL,IACApL,GAAAoL,GAEAhe,EAAA1O,EAAA,GAAAshB,EAEA,OAAA5S,EAUO,SAAAke,GAAA3a,EAAAsa,EAAAC,GACP,IAAA3pB,EAAAoP,EAAApP,OACA4pB,EAAAD,EAAA,EAAAA,EAAA,EACA9d,EAAA6d,OACA7W,IAAAhH,IAGAA,EAFA+d,EAAA,EAEAxa,EAAA3N,QAGA,IAAA4K,MAAArM,IAGA,QAAA7C,EAAA,EAAmBA,EAAA6C,EAAY7C,GAAAysB,EAC/B/d,EAAA1O,GAAA,IAAAiS,EAAAjS,GAAA8rB,GACApd,EAAA1O,EAAA,OAAAmC,KAAA0qB,KAAA1qB,KAAAG,IAAA2P,EAAAjS,EAAA,GAAA6rB,KAAA1pB,KAAAslB,GAAA,GAEA,OAAA/Y,EC/IA,IAAIoe,GAAyB,WAC7B,IAAA3Z,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+BlBuZ,GAAM,kBAKNC,GAZM,QAYS7qB,KAAAslB,GAAmB,IASzCwF,GAAkB,SAAAtZ,GAMtB,SAAAuZ,EAAArZ,EAAAsZ,GACA,OAAAxZ,EAAAxT,KAAA2C,KAAA,CACA+Q,OACAsY,MAAmBzC,GAAKP,QACxBnI,OAAoB+L,GACpB5C,gBAAAgD,EACA9C,QAAA,EACAM,cAA2BqC,GAC3B/C,YAAyB8C,MAChBjqB,KAET,OAhBIgqB,GAASI,EAAAvZ,GAgBbuZ,EAjBsB,CAkBpBvD,IAOSyD,GAAW,CACtB,IAAQH,GAAkB,UAC1B,IAAQA,GAAkB,mBAC1B,IAAQA,GAAkB,oCAC1B,IAAQA,GAAkB,uCAC1B,IAAQA,GAAkB,iCAC1B,IAAQA,GAAkB,4BAC1B,IAAQA,GAAkB,sDAC1B,IAAQA,GAAkB,sCCxEtBI,GAAK,GCET,ICuOOC,GAAAC,GAAAC,GDvOPC,GAAA,GAeO,SAASC,GAAGtd,EAAAud,EAAAtI,GACnB,IAAAuI,EAAAxd,EAAAya,UACAgD,EAAAF,EAAA9C,UACA+C,KAAAH,KACAA,GAAAG,GAAA,IAEAH,GAAAG,GAAAC,GAAAxI,EA2BO,SAASyI,GAAGF,EAAAC,GACnB,IAAApH,EAIA,OAHAmH,KAAAH,IAAAI,KAAAJ,GAAAG,KACAnH,EAAAgH,GAAAG,GAAAC,IAEApH,EC0BO,SAAAsH,GAAA9b,EAAAsa,EAAAC,GACP,IAAA9d,EACA,QAAAgH,IAAA6W,EAAA,CACA,QAAAvsB,EAAA,EAAA0U,EAAAzC,EAAApP,OAA0C7C,EAAA0U,IAAQ1U,EAClDusB,EAAAvsB,GAAAiS,EAAAjS,GAEA0O,EAAA6d,OAGA7d,EAAAuD,EAAA3N,QAEA,OAAAoK,EAQO,SAAAsf,GAAA/b,EAAAsa,EAAAC,GACP,QAAA9W,IAAA6W,GAAAta,IAAAsa,EAAA,CACA,QAAAvsB,EAAA,EAAA0U,EAAAzC,EAAApP,OAA0C7C,EAAA0U,IAAQ1U,EAClDusB,EAAAvsB,GAAAiS,EAAAjS,GAEAiS,EAAAsa,EAEA,OAAAta,EASO,SAAAgc,GAAAC,IFhGA,SAAYra,EAAAqa,GACfb,GAAKxZ,GAAAqa,EEgGLC,CAAeD,EAAArD,UAAAqD,GACfR,GAAgBQ,IAAAH,IAiBb,SAASK,GAAGC,GACnB,uBAAAA,EF3HWhB,GE4H+B,IF5H1B,KE6HgB,QAsBzB,SAAA7C,GAAA0D,EAAAvK,EAAAyI,EAAAkC,GAEP,IAAAC,EACA/tB,GAFA0tB,EAAiBE,GAAGF,IAEpBvC,yBACA,GAAAnrB,EACA+tB,EAAA/tB,EAAAmjB,EAAAyI,GACAkC,OAAAJ,EAAAnD,aACAJ,EAAAuD,EAAAlD,sBAEAuD,IAAA5D,EAAoElB,GAAe6E,SAMnF,GADAJ,EAAAnD,YACqBrB,GAAKP,UAAAmF,MAAuC5E,GAAKP,QACtEoF,EAAA5K,MAEA,CAIA,IAWAgH,EAXA6D,EAAAC,GAAAP,EAAuEE,GAAG,cAC1EM,EAAA,CACAtC,EAAA,GAAAzI,EAAA,EAAAyI,EAAA,GACAA,EAAA,GAAAzI,EAAA,EAAAyI,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAzI,EAAA,EACAyI,EAAA,GAAAA,EAAA,GAAAzI,EAAA,GAKA4K,GAFwBxG,IADxB2G,EAAAF,EAAAE,IAAA,IACmCpqB,MAAA,KAAAoqB,EAAApqB,MAAA,MACVyjB,GAAW2G,EAAApqB,MAAA,KAAAoqB,EAAApqB,MAAA,OACpC,OAIAoR,KAHAiV,EAAA2D,EACgB7E,GAAe6E,GAC/BJ,EAAAlD,sBAEAuD,GAAA5D,GAIA,OAAA4D,EASO,SAAAI,GAAAC,IAvFA,SAAAA,GACPA,EAAArS,QAAA0R,IAuFAY,CAAAD,GACAA,EAAArS,QAAA,SAAAnM,GACAwe,EAAArS,QAAA,SAAAoR,GACAvd,IAAAud,GACgBD,GAAgBtd,EAAAud,EAAAI,QAsCzB,SAAAe,GAAAZ,EAAAa,GACP,OAAAb,EAGA,iBAAAA,EACeE,GAAGF,GAGlB,EANeE,GAAGW,GAiBX,SAAAC,GAAAC,GACP,gBAOAhd,EAAAsa,EAAAC,GAIA,IAHA,IAAA3pB,EAAAoP,EAAApP,OACA4pB,OAAA/W,IAAA8W,IAAA,EACA9d,OAAAgH,IAAA6W,IAAA,IAAArd,MAAArM,GACA7C,EAAA,EAAuBA,EAAA6C,EAAY7C,GAAAysB,EAAA,CACnC,IAAAL,EAAA6C,EAAA,CAAAhd,EAAAjS,GAAAiS,EAAAjS,EAAA,KACA0O,EAAA1O,GAAAosB,EAAA,GACA1d,EAAA1O,EAAA,GAAAosB,EAAA,GACA,QAAA9c,EAAAmd,EAAA,EAAuCnd,GAAA,IAAQA,EAC/CZ,EAAA1O,EAAAsP,GAAA2C,EAAAjS,EAAAsP,GAGA,OAAAZ,GAsBO,SAAAwgB,GAAA9e,EAAAud,EAAAwB,EAAAC,GACP,IAAAC,EAAqBjB,GAAGhe,GACxBkf,EAAmBlB,GAAGT,GAClBD,GAAgB2B,EAAAC,EAAAN,GAAAG,IAChBzB,GAAgB4B,EAAAD,EAAAL,GAAAI,IAyCb,SAAAG,GAAAC,EAAAC,GACP,GAAAD,IAAAC,EACA,SAEA,IAAAC,EAAAF,EAAAzE,aAAA0E,EAAA1E,WACA,OAAAyE,EAAA3E,YAAA4E,EAAA5E,UACA6E,EAGAjB,GAAAe,EAAAC,KACA1B,IAAA2B,EAYO,SAAAjB,GAAAkB,EAAAC,GACP,IAEAC,EAAwB/B,GAFxB6B,EAAA9E,UACA+E,EAAA/E,WAKA,OAHAgF,IACAA,EAAA7B,IAEA6B,EAYO,SAAAC,GAAA1f,EAAAud,GAGP,OAAAc,GAF2BL,GAAGhe,GACEge,GAAGT,IAiB5B,SAASoC,GAASrO,EAAAtR,EAAAud,GAEzB,OADAmC,GAAA1f,EAAAud,EACAkC,CAAAnO,OAAAhM,EAAAgM,EAAA7e,QAYO,SAAAmtB,GAAAhP,EAAA5Q,EAAAud,GAEP,OAAWvI,GAAcpE,EADzB8O,GAAA1f,EAAAud,IAuBAgB,GAA6BtC,IAC7BsC,GAA6BvB,IAjOtBE,GAoO2CjB,GApO3CkB,GAoOiEjB,GApOjEkB,GAoO+EZ,GAA1DQ,GAnO5B7Q,QAAA,SAAAiT,GACAlC,GAAA/Q,QAAA,SAAAkT,GACY/B,GAAgB8B,EAAAC,EAAAlC,IAChBG,GAAgB+B,EAAAD,EAAAhC,QC3N5B,IAAAyC,GAAA,IAAA/gB,MAAA,GAaO,SAASghB,GAAKzJ,GACrB,OAAW0J,GAAG1J,EAAA,aASP,SAAA2J,GAAAC,EAAAC,GACP,IAAAC,EAAAF,EAAA,GACAjmB,EAAAimB,EAAA,GACArI,EAAAqI,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAL,EAAA,GACAjmB,EAAAimB,EAAA,GACArI,EAAAqI,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GAOA,OANAD,EAAA,GAAAE,EAAAI,EAAA3I,EAAA3d,EACAgmB,EAAA,GAAAjmB,EAAAumB,EAAAH,EAAAnmB,EACAgmB,EAAA,GAAAE,EAAAtI,EAAAD,EAAA4I,EACAP,EAAA,GAAAjmB,EAAA6d,EAAAuI,EAAAI,EACAP,EAAA,GAAAE,EAAAM,EAAA7I,EAAA8I,EAAAL,EACAJ,EAAA,GAAAjmB,EAAAymB,EAAAL,EAAAM,EAAAJ,EACAL,EAaO,SAASF,GAAG1J,EAAAxkB,EAAAyH,EAAArJ,EAAAC,EAAA0B,EAAAK,GAOnB,OANAokB,EAAA,GAAAxkB,EACAwkB,EAAA,GAAA/c,EACA+c,EAAA,GAAApmB,EACAomB,EAAA,GAAAnmB,EACAmmB,EAAA,GAAAzkB,EACAykB,EAAA,GAAApkB,EACAokB,EA0BO,SAAAzhB,GAAAyhB,EAAA/E,GACP,IAAA9e,EAAA8e,EAAA,GACAJ,EAAAI,EAAA,GAGA,OAFAA,EAAA,GAAA+E,EAAA,GAAA7jB,EAAA6jB,EAAA,GAAAnF,EAAAmF,EAAA,GACA/E,EAAA,GAAA+E,EAAA,GAAA7jB,EAAA6jB,EAAA,GAAAnF,EAAAmF,EAAA,GACA/E,EAQO,SAASqP,GAAMtK,EAAAI,GACtB,IAAA9C,EAAA5hB,KAAA4hB,IAAA8C,GACA5C,EAAA9hB,KAAA8hB,IAAA4C,GACA,OAAAuJ,GAAA3J,EAA+B0J,GAAGF,GAAAlM,EAAAE,KAAAF,EAAA,MAS3B,SAASiN,GAAKvK,EAAA7jB,EAAA0e,GACrB,OAAA8O,GAAA3J,EAA+B0J,GAAGF,GAAArtB,EAAA,IAAA0e,EAAA,MAS3B,SAAA2P,GAAA1c,EAAA3R,EAAA0e,GACP,OAAW6O,GAAG5b,EAAA3R,EAAA,IAAA0e,EAAA,KASP,SAAS4P,GAASzK,EAAAlF,EAAAC,GACzB,OAAA4O,GAAA3J,EAA+B0J,GAAGF,GAAA,QAAA1O,EAAAC,IAe3B,SAAA2P,GAAA1K,EAAA2K,EAAAC,EAAAC,EAAAC,EAAA1K,EAAA2K,EAAAC,GACP,IAAAxN,EAAA9hB,KAAA8hB,IAAA4C,GACA9C,EAAA5hB,KAAA4hB,IAAA8C,GAOA,OANAJ,EAAA,GAAA6K,EAAAvN,EACA0C,EAAA,GAAA8K,EAAAtN,EACAwC,EAAA,IAAA6K,EAAArN,EACAwC,EAAA,GAAA8K,EAAAxN,EACA0C,EAAA,GAAA+K,EAAAF,EAAAvN,EAAA0N,EAAAH,EAAArN,EAAAmN,EACA3K,EAAA,GAAA+K,EAAAD,EAAAtN,EAAAwN,EAAAF,EAAAxN,EAAAsN,EACA5K,EAiBO,SAAAiL,GAAAnd,EAAAnE,GACP,IAqBOuhB,EArBPC,GAqBOD,EArBPvhB,GAsBA,GAAAuhB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GArBI3U,EAAM,IAAA4U,EAAA,IACV,IAAA3vB,EAAAmO,EAAA,GACA1G,EAAA0G,EAAA,GACA/P,EAAA+P,EAAA,GACA9P,EAAA8P,EAAA,GACApO,EAAAoO,EAAA,GACA/N,EAAA+N,EAAA,GAOA,OANAmE,EAAA,GAAAjU,EAAAsxB,EACArd,EAAA,IAAA7K,EAAAkoB,EACArd,EAAA,IAAAlU,EAAAuxB,EACArd,EAAA,GAAAtS,EAAA2vB,EACArd,EAAA,IAAAlU,EAAAgC,EAAA/B,EAAA0B,GAAA4vB,EACArd,EAAA,KAAAtS,EAAAI,EAAAqH,EAAA1H,GAAA4vB,EACArd,EAgBO,SAASsd,GAAQF,GACxB,gBAAAA,EAAAG,KAAA,UCvOA,IAAIC,GAAyB,WAC7B,IAAA5e,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0B7Bwe,GDIA,cC0OeC,GAjOH,SAAAte,GAEZ,SAAAue,IACA,IAAApe,EAAAH,EAAAxT,KAAA2C,YA0BA,OArBAgR,EAAAiW,Qd6IA,CAAAjc,SAAA,UcxIAgG,EAAAqe,iBAAA,EAKAre,EAAAse,wBAAA,GAKAte,EAAAue,yCAAA,EAKAve,EAAAwe,2BAAA,EACAxe,EAkMA,OA9NIie,GAASG,EAAAve,GAmCbue,EAAAtwB,UAAAqc,MAAA,WACA,OAAelL,KAUfmf,EAAAtwB,UAAA2wB,eAAA,SAAA3vB,EAAA0e,EAAAkR,EAAAC,GACA,OAAe1f,KAOfmf,EAAAtwB,UAAA+f,WAAA,SAAA/e,EAAA0e,GACA,IAAAoR,EAAA5vB,KAAA6vB,gBAAA,CAAA/vB,EAAA0e,IACA,OAAAoR,EAAA,KAAA9vB,GAAA8vB,EAAA,KAAApR,GAUA4Q,EAAAtwB,UAAA+wB,gBAAA,SAAAvG,EAAAwG,GACA,IAAAJ,EAAAI,GAAA,CAAA/kB,SAEA,OADA/K,KAAAyvB,eAAAnG,EAAA,GAAAA,EAAA,GAAAoG,EAAA1kB,KACA0kB,GASAN,EAAAtwB,UAAAixB,qBAAA,SAAAnR,GACA,OAAA5e,KAAA6e,WAAAD,EAAA,GAAAA,EAAA,KAQAwQ,EAAAtwB,UAAAkxB,cAAA,SAAA9R,GACA,OAAejO,KAQfmf,EAAAtwB,UAAAkpB,UAAA,SAAA1J,GAKA,OAJAte,KAAAqvB,iBAAArvB,KAAAiX,gBACAjX,KAAAinB,QAAAjnB,KAAAgwB,cAAAhwB,KAAAinB,SACAjnB,KAAAqvB,gBAAArvB,KAAAiX,edkeO,SAAAiH,EAAAI,GACP,OAAAA,GACAA,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,EAAA,GAAAJ,EAAA,GACAI,GAGAJ,Eczee+R,CAAcjwB,KAAAinB,QAAA3I,IAU7B8Q,EAAAtwB,UAAAglB,OAAA,SAAAC,EAAAC,GACQ/T,KAaRmf,EAAAtwB,UAAAoxB,MAAA,SAAA1B,EAAA2B,EAAAC,GACQngB,KAYRmf,EAAAtwB,UAAAuxB,SAAA,SAAAC,GACA,OAAAtwB,KAAA+a,sBAAAuV,MAUAlB,EAAAtwB,UAAAic,sBAAA,SAAAwV,GACA,OAAetgB,KAOfmf,EAAAtwB,UAAA0xB,QAAA,WACA,OAAevgB,KAUfmf,EAAAtwB,UAAAwjB,eAAA,SAAAC,GACQtS,KAQRmf,EAAAtwB,UAAA2xB,iBAAA,SAAAvS,GACA,OAAejO,KAUfmf,EAAAtwB,UAAA4xB,UAAA,SAAAtO,EAAAC,GACQpS,KAiBRmf,EAAAtwB,UAAA6kB,UAAA,SAAArW,EAAAud,GAEA,IAAA0B,EAAyBjB,GAAahe,GACtCiV,EAAAgK,EAAAtE,YAAmDrB,GAAKH,YACxD,SAAAkK,EAAAC,EAAApR,GACA,IAAAqR,EAAAtE,EAAAvE,YACA8I,EAAAvE,EAAApE,iBACA+H,EAA4B3P,GAASuQ,GAAoBvQ,GAASsQ,GAGlE,OAFgBxC,GAAgBa,GAAA4B,EAAA,GAAAA,EAAA,GAAAZ,KAAA,OAChBxM,GAAWiN,EAAA,EAAAA,EAAA5wB,OAAAyf,EAAA0P,GAAA0B,GACJ5D,GAAYT,EAAA1B,EAAZmC,CAAY2D,EAAAC,EAAApR,IAEvBwN,GAAYT,EAAA1B,GAExB,OADA7qB,KAAAsiB,eAAAC,GACAviB,MAEAovB,EA/NY,CAgOV9W,GCvQEyY,GAAyB,WAC7B,IAAA1gB,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+QtB,SAAAsgB,GAAAC,GACP,IAAAzR,EAUA,OATAyR,GAAkBtO,GAAcC,GAChCpD,EAAA,EAEAyR,GAAuBtO,GAAcE,KAAAoO,GAAkBtO,GAAcG,IACrEtD,EAAA,EAEAyR,GAAuBtO,GAAcI,OACrCvD,EAAA,GAE6B,EAkBd,IAAA0R,GA9QG,SAAArgB,GAElB,SAAAsgB,IACA,IAAAngB,EAAAH,EAAAxT,KAAA2C,YAgBA,OAXAgR,EAAAigB,OAAuBtO,GAAcC,GAKrC5R,EAAAwO,OAAA,EAKAxO,EAAAuO,gBAAA,KACAvO,EAsMA,OAxNI+f,GAASI,EAAAtgB,GAuBbsgB,EAAAryB,UAAAkxB,cAAA,SAAA9R,GACA,OAAeoB,GAAiCtf,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAAtB,IAMhDiT,EAAAryB,UAAAsyB,eAAA,WACA,OAAenhB,KAOfkhB,EAAAryB,UAAAuyB,mBAAA,WACA,OAAArxB,KAAAuf,gBAAA/d,MAAA,EAAAxB,KAAAwf,SAKA2R,EAAAryB,UAAAwyB,mBAAA,WACA,OAAAtxB,KAAAuf,iBAOA4R,EAAAryB,UAAAyyB,kBAAA,WACA,OAAAvxB,KAAAuf,gBAAA/d,MAAAxB,KAAAuf,gBAAAxf,OAAAC,KAAAwf,SAOA2R,EAAAryB,UAAA0yB,UAAA,WACA,OAAAxxB,KAAAixB,QAKAE,EAAAryB,UAAAic,sBAAA,SAAAwV,GAQA,GAPAvwB,KAAAwvB,4BAAAxvB,KAAAiX,gBACY7W,EAAKJ,KAAAsvB,yBACjBtvB,KAAAuvB,yCAAA,EACAvvB,KAAAwvB,2BAAAxvB,KAAAiX,eAIAsZ,EAAA,GACA,IAAAvwB,KAAAuvB,0CACAgB,GAAAvwB,KAAAuvB,yCACA,OAAAvvB,KAEA,IAAAvB,EAAA8xB,EAAArjB,WACA,GAAAlN,KAAAsvB,wBAAAvwB,eAAAN,GACA,OAAAuB,KAAAsvB,wBAAA7wB,GAGA,IAAAgzB,EAAAzxB,KAAA0xB,8BAAAnB,GAEA,OADAkB,EAAAH,qBACAvxB,OAAAC,KAAAuf,gBAAAxf,QACAC,KAAAsvB,wBAAA7wB,GAAAgzB,EACAA,IASAzxB,KAAAuvB,yCAAAgB,EACAvwB,OASAmxB,EAAAryB,UAAA4yB,8BAAA,SAAAnB,GACA,OAAAvwB,MAKAmxB,EAAAryB,UAAA6yB,UAAA,WACA,OAAA3xB,KAAAwf,QAMA2R,EAAAryB,UAAA8yB,mBAAA,SAAAX,EAAA1R,GACAvf,KAAAwf,OAAAwR,GAAAC,GACAjxB,KAAAixB,SACAjxB,KAAAuf,mBAOA4R,EAAAryB,UAAA+yB,eAAA,SAAA5T,EAAA6T,GACQ7hB,KAQRkhB,EAAAryB,UAAAizB,UAAA,SAAAd,EAAAhT,EAAA+T,GAEA,IAAAxS,EACA,GAAAyR,EACAzR,EAAAwR,GAAAC,OAEA,CACA,QAAA/zB,EAAA,EAA2BA,EAAA80B,IAAa90B,EAAA,CACxC,OAAA+gB,EAAAle,OAGA,OAFAC,KAAAixB,OAAkCtO,GAAcC,QAChD5iB,KAAAwf,OAAA,GAIAvB,EAAmDA,EAAA,GAInDgT,EAiEA,SAAAzR,GACA,IAAAyR,EACA,GAAAzR,EACAyR,EAAiBtO,GAAcC,GAE/B,GAAApD,EACAyR,EAAiBtO,GAAcE,IAE/B,GAAArD,IACAyR,EAAiBtO,GAAcI,MAE/B,SA5EAkP,CADAzS,EAAAvB,EAAAle,QAGAC,KAAAixB,SACAjxB,KAAAwf,UAMA2R,EAAAryB,UAAAwjB,eAAA,SAAAC,GACAviB,KAAAuf,kBACAgD,EAAAviB,KAAAuf,gBAAAvf,KAAAuf,gBAAAvf,KAAAwf,QACAxf,KAAAgX,YAOAma,EAAAryB,UAAAglB,OAAA,SAAAC,EAAAC,GACA,IAAAzE,EAAAvf,KAAAsxB,qBACA,GAAA/R,EAAA,CACA,IAAAC,EAAAxf,KAAA2xB,YACY7N,GAAMvE,EAAA,EAAAA,EAAAxf,OAAAyf,EAAAuE,EAAAC,EAAAzE,GAClBvf,KAAAgX,YAOAma,EAAAryB,UAAAoxB,MAAA,SAAA1B,EAAA2B,EAAAC,GACA,IAAA3B,EAAA0B,OACAvd,IAAA6b,IACAA,EAAAD,GAEA,IAAAxK,EAAAoM,EACApM,IACAA,EAAqBxD,GAASxgB,KAAAgoB,cAE9B,IAAAzI,EAAAvf,KAAAsxB,qBACA,GAAA/R,EAAA,CACA,IAAAC,EAAAxf,KAAA2xB,aZjKO,SAAcpS,EAAAhV,EAAAtE,EAAAuZ,EAAAgP,EAAAC,EAAAzK,EAAAJ,GAKrB,IAJA,IAAAC,EAAAD,GAAA,GACAK,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACA9mB,EAAA,EACAsP,EAAAjC,EAAwBiC,EAAAvG,EAASuG,GAAAgT,EAAA,CACjC,IAAA4C,EAAA7C,EAAA/S,GAAAyX,EACA5B,EAAA9C,EAAA/S,EAAA,GAAA0X,EACAL,EAAA3mB,KAAA+mB,EAAAuK,EAAApM,EACAyB,EAAA3mB,KAAAgnB,EAAAuK,EAAApM,EACA,QAAA8B,EAAA3X,EAAA,EAA2B2X,EAAA3X,EAAAgT,IAAgB2E,EAC3CN,EAAA3mB,KAAAqiB,EAAA4E,GAGAP,GAAAC,EAAA9jB,QAAA7C,IACA2mB,EAAA9jB,OAAA7C,GYmJYg1B,CAAK3S,EAAA,EAAAA,EAAAxf,OAAAyf,EAAAgP,EAAAC,EAAAzK,EAAAzE,GACjBvf,KAAAgX,YAOAma,EAAAryB,UAAA4xB,UAAA,SAAAtO,EAAAC,GACA,IAAA9C,EAAAvf,KAAAsxB,qBACA,GAAA/R,EAAA,CACA,IAAAC,EAAAxf,KAAA2xB,YACYvN,GAAS7E,EAAA,EAAAA,EAAAxf,OAAAyf,EAAA4C,EAAAC,EAAA9C,GACrBvf,KAAAgX,YAGAma,EAzNkB,CA0NhBhC,IC9OK,SAASgD,GAAU5S,EAAAhV,EAAAtE,EAAAuZ,GAI1B,IAHA,IAAA4S,EAAA,EACA3Q,EAAAlC,EAAAtZ,EAAAuZ,GACAqC,EAAAtC,EAAAtZ,EAAAuZ,EAAA,GACUjV,EAAAtE,EAAcsE,GAAAiV,EAAA,CACxB,IAAAkC,EAAAnC,EAAAhV,GACAuX,EAAAvC,EAAAhV,EAAA,GACA6nB,GAAAvQ,EAAAH,EAAAD,EAAAK,EACAL,EAAAC,EACAG,EAAAC,EAEA,OAAAsQ,EAAA,EASO,SAASC,GAAW9S,EAAAhV,EAAA+nB,EAAA9S,GAE3B,IADA,IAAAY,EAAA,EACAljB,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAAA,CAC7C,IAAA+I,EAAAqsB,EAAAp1B,GACAkjB,GAAgB+R,GAAU5S,EAAAhV,EAAAtE,EAAAuZ,GAC1BjV,EAAAtE,EAEA,OAAAma,ECrBA,SAAAmS,GAAAhT,EAAAiT,EAAAC,EAAAjT,EAAA1f,EAAA0e,EAAAkR,GACA,IAIAnlB,EAJAkX,EAAAlC,EAAAiT,GACA3Q,EAAAtC,EAAAiT,EAAA,GACA/T,EAAAc,EAAAkT,GAAAhR,EACA/C,EAAAa,EAAAkT,EAAA,GAAA5Q,EAEA,OAAApD,GAAA,IAAAC,EACAnU,EAAAioB,MAEA,CACA,IAAAp0B,IAAA0B,EAAA2hB,GAAAhD,GAAAD,EAAAqD,GAAAnD,IAAAD,IAAAC,KACA,GAAAtgB,EAAA,EACAmM,EAAAkoB,MAEA,IAAAr0B,EAAA,GACA,QAAAlB,EAAA,EAA2BA,EAAAsiB,IAAYtiB,EACvCwyB,EAAAxyB,GAAkC6nB,GAAIxF,EAAAiT,EAAAt1B,GAAAqiB,EAAAkT,EAAAv1B,GAAAkB,GAGtC,YADAsxB,EAAA3vB,OAAAyf,GAIAjV,EAAAioB,GAGA,IAAAt1B,EAAA,EAAmBA,EAAAsiB,IAAYtiB,EAC/BwyB,EAAAxyB,GAAAqiB,EAAAhV,EAAArN,GAEAwyB,EAAA3vB,OAAAyf,EAYO,SAAAkT,GAAAnT,EAAAhV,EAAAtE,EAAAuZ,EAAA7f,GACP,IAAA8hB,EAAAlC,EAAAhV,GACAsX,EAAAtC,EAAAhV,EAAA,GACA,IAAAA,GAAAiV,EAA0BjV,EAAAtE,EAAcsE,GAAAiV,EAAA,CACxC,IAAAkC,EAAAnC,EAAAhV,GACAuX,EAAAvC,EAAAhV,EAAA,GACAooB,EAA2BnO,GAAS/C,EAAAI,EAAAH,EAAAI,GACpC6Q,EAAAhzB,IACAA,EAAAgzB,GAEAlR,EAAAC,EACAG,EAAAC,EAEA,OAAAniB,EAUO,SAAAizB,GAAArT,EAAAhV,EAAA+nB,EAAA9S,EAAA7f,GACP,QAAAzC,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAAA,CAC7C,IAAA+I,EAAAqsB,EAAAp1B,GACAyC,EAAA+yB,GAAAnT,EAAAhV,EAAAtE,EAAAuZ,EAAA7f,GACA4K,EAAAtE,EAEA,OAAAtG,EAgCO,SAAAkzB,GAAAtT,EAAAhV,EAAAtE,EAAAuZ,EAAAsT,EAAAC,EAAAjzB,EAAA0e,EAAAkR,EAAAC,EAAAqD,GACP,GAAAzoB,GAAAtE,EACA,OAAA0pB,EAEA,IAAAzyB,EAAA+1B,EACA,OAAAH,EAAA,CAGA,IADAG,EAA0BzO,GAAS1kB,EAAA0e,EAAAe,EAAAhV,GAAAgV,EAAAhV,EAAA,KACnColB,EAAA,CACA,IAAAzyB,EAAA,EAAuBA,EAAAsiB,IAAYtiB,EACnCwyB,EAAAxyB,GAAAqiB,EAAAhV,EAAArN,GAGA,OADAwyB,EAAA3vB,OAAAyf,EACAyT,EAGA,OAAAtD,EAKA,IAFA,IAAAuD,EAAAF,GAAA,CAAAjoB,SACAwE,EAAAhF,EAAAiV,EACAjQ,EAAAtJ,GAGA,GAFAssB,GAAAhT,EAAAhQ,EAAAiQ,EAAAjQ,EAAAiQ,EAAA1f,EAAA0e,EAAA0U,IACAD,EAA0BzO,GAAS1kB,EAAA0e,EAAA0U,EAAA,GAAAA,EAAA,KACnCvD,EAAA,CAEA,IADAA,EAAAsD,EACA/1B,EAAA,EAAuBA,EAAAsiB,IAAYtiB,EACnCwyB,EAAAxyB,GAAAg2B,EAAAh2B,GAEAwyB,EAAA3vB,OAAAyf,EACAjQ,GAAAiQ,OAaAjQ,GAAAiQ,EAAAngB,KAAAM,KAAAN,KAAAK,KAAAuzB,GACA5zB,KAAAK,KAAAiwB,IAAAmD,EAAA,KAGA,GAAAC,IAEAR,GAAAhT,EAAAtZ,EAAAuZ,EAAAjV,EAAAiV,EAAA1f,EAAA0e,EAAA0U,IACAD,EAA0BzO,GAAS1kB,EAAA0e,EAAA0U,EAAA,GAAAA,EAAA,KACnCvD,GAAA,CAEA,IADAA,EAAAsD,EACA/1B,EAAA,EAAuBA,EAAAsiB,IAAYtiB,EACnCwyB,EAAAxyB,GAAAg2B,EAAAh2B,GAEAwyB,EAAA3vB,OAAAyf,EAGA,OAAAmQ,EAgBO,SAAAwD,GAAA5T,EAAAhV,EAAA+nB,EAAA9S,EAAAsT,EAAAC,EAAAjzB,EAAA0e,EAAAkR,EAAAC,EAAAqD,GAEP,IADA,IAAAE,EAAAF,GAAA,CAAAjoB,SACA7N,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAAA,CAC7C,IAAA+I,EAAAqsB,EAAAp1B,GACAyyB,EAAAkD,GAAAtT,EAAAhV,EAAAtE,EAAAuZ,EAAAsT,EAAAC,EAAAjzB,EAAA0e,EAAAkR,EAAAC,EAAAuD,GACA3oB,EAAAtE,EAEA,OAAA0pB,EC7LO,SAAAyD,GAAA7T,EAAAhV,EAAAqU,EAAAY,GACP,QAAAtiB,EAAA,EAAA0U,EAAAgN,EAAA7e,OAA2C7C,EAAA0U,IAAQ1U,EACnDqiB,EAAAhV,KAAAqU,EAAA1hB,GAEA,OAAAqN,EASO,SAAA8oB,GAAA9T,EAAAhV,EAAA0T,EAAAuB,GACP,QAAAtiB,EAAA,EAAA0U,EAAAqM,EAAAle,OAA4C7C,EAAA0U,IAAQ1U,EAEpD,IADA,IAAA0hB,EAAAX,EAAA/gB,GACAsP,EAAA,EAAuBA,EAAAgT,IAAYhT,EACnC+S,EAAAhV,KAAAqU,EAAApS,GAGA,OAAAjC,EAUO,SAAA+oB,GAAA/T,EAAAhV,EAAAgpB,EAAA/T,EAAAgU,GAGP,IAFA,IAAAlB,EAAAkB,GAAA,GACAt2B,EAAA,EACAsP,EAAA,EAAA8C,EAAAikB,EAAAxzB,OAA6CyM,EAAA8C,IAAQ9C,EAAA,CACrD,IAAAvG,EAAAotB,GAAA9T,EAAAhV,EAAAgpB,EAAA/mB,GAAAgT,GACA8S,EAAAp1B,KAAA+I,EACAsE,EAAAtE,EAGA,OADAqsB,EAAAvyB,OAAA7C,EACAo1B,ECtCO,SAAAmB,GAAAlU,EAAAhV,EAAAtE,EAAAuZ,EAAAkU,GAGP,IAFA,IAAAzV,OAAArL,IAAA8gB,IAAA,GACAx2B,EAAA,EACAsP,EAAAjC,EAAwBiC,EAAAvG,EAASuG,GAAAgT,EACjCvB,EAAA/gB,KAAAqiB,EAAA/d,MAAAgL,IAAAgT,GAGA,OADAvB,EAAAle,OAAA7C,EACA+gB,EAUO,SAAA0V,GAAApU,EAAAhV,EAAA+nB,EAAA9S,EAAAoU,GAGP,IAFA,IAAAL,OAAA3gB,IAAAghB,IAAA,GACA12B,EAAA,EACAsP,EAAA,EAAA8C,EAAAgjB,EAAAvyB,OAAqCyM,EAAA8C,IAAQ9C,EAAA,CAC7C,IAAAvG,EAAAqsB,EAAA9lB,GACA+mB,EAAAr2B,KAAAu2B,GAAAlU,EAAAhV,EAAAtE,EAAAuZ,EAAA+T,EAAAr2B,IACAqN,EAAAtE,EAGA,OADAstB,EAAAxzB,OAAA7C,EACAq2B,EAWO,SAAAM,GAAAtU,EAAAhV,EAAAupB,EAAAtU,EAAAuU,GAGP,IAFA,IAAAC,OAAAphB,IAAAmhB,IAAA,GACA72B,EAAA,EACAsP,EAAA,EAAA8C,EAAAwkB,EAAA/zB,OAAsCyM,EAAA8C,IAAQ9C,EAAA,CAC9C,IAAA8lB,EAAAwB,EAAAtnB,GACAwnB,EAAA92B,KAAAy2B,GAAApU,EAAAhV,EAAA+nB,EAAA9S,EAAAwU,EAAA92B,IACAqN,EAAA+nB,IAAAvyB,OAAA,GAGA,OADAi0B,EAAAj0B,OAAA7C,EACA82B,ECMO,SAAAC,GAAA1U,EAAAhV,EAAAtE,EAAAuZ,EAAA+Q,EAAA2D,EAAAC,GACP,IAAAx1B,GAAAsH,EAAAsE,GAAAiV,EACA,GAAA7gB,EAAA,GACA,KAAc4L,EAAAtE,EAAcsE,GAAAiV,EAC5B0U,EAAAC,KACA5U,EAAAhV,GACA2pB,EAAAC,KACA5U,EAAAhV,EAAA,GAEA,OAAA4pB,EAGA,IAAAC,EAAA,IAAAhoB,MAAAzN,GACAy1B,EAAA,KACAA,EAAAz1B,EAAA,KAIA,IAFA,IAAA01B,EAAA,CAAA9pB,EAAAtE,EAAAuZ,GACAjQ,EAAA,EACA8kB,EAAAt0B,OAAA,IAQA,IAPA,IAAAu0B,EAAAD,EAAAxzB,MACA0zB,EAAAF,EAAAxzB,MACA2zB,EAAA,EACA/S,EAAAlC,EAAAgV,GACA1S,EAAAtC,EAAAgV,EAAA,GACA7S,EAAAnC,EAAA+U,GACAxS,EAAAvC,EAAA+U,EAAA,GACAp3B,EAAAq3B,EAAA/U,EAAoCtiB,EAAAo3B,EAAUp3B,GAAAsiB,EAAA,CAC9C,IAEAiV,EAAoClQ,GAFpChF,EAAAriB,GACAqiB,EAAAriB,EAAA,GAC0DukB,EAAAI,EAAAH,EAAAI,GAC1D2S,EAAAD,IACAjlB,EAAArS,EACAs3B,EAAAC,GAGAD,EAAAjE,IACA6D,GAAA7kB,EAAAhF,GAAAiV,GAAA,EACA+U,EAAA/U,EAAAjQ,GACA8kB,EAAAvzB,KAAAyzB,EAAAhlB,GAEAA,EAAAiQ,EAAA8U,GACAD,EAAAvzB,KAAAyO,EAAA+kB,IAIA,IAAAp3B,EAAA,EAAmBA,EAAAyB,IAAOzB,EAC1Bk3B,EAAAl3B,KACAg3B,EAAAC,KACA5U,EAAAhV,EAAArN,EAAAsiB,GACA0U,EAAAC,KACA5U,EAAAhV,EAAArN,EAAAsiB,EAAA,IAGA,OAAA2U,EAcO,SAAAO,GAAAnV,EAAAhV,EAAA+nB,EAAA9S,EAAA+Q,EAAA2D,EAAAC,EAAAQ,GACP,QAAAz3B,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAAA,CAC7C,IAAA+I,EAAAqsB,EAAAp1B,GACAi3B,EAAAF,GAAA1U,EAAAhV,EAAAtE,EAAAuZ,EAAA+Q,EAAA2D,EAAAC,GACAQ,EAAA7zB,KAAAqzB,GACA5pB,EAAAtE,EAEA,OAAAkuB,EA2EO,SAAAS,GAAAz2B,EAAAmyB,GACP,OAAAA,EAAAjxB,KAAAw1B,MAAA12B,EAAAmyB,GAqBO,SAAAwE,GAAAvV,EAAAhV,EAAAtE,EAAAuZ,EAAA8Q,EAAA4D,EAAAC,GAEP,GAAA5pB,GAAAtE,EACA,OAAAkuB,EAGA,IAQAzS,EAAAI,EARAL,EAAAmT,GAAArV,EAAAhV,GAAA+lB,GACAzO,EAAA+S,GAAArV,EAAAhV,EAAA,GAAA+lB,GACA/lB,GAAAiV,EAEA0U,EAAAC,KAAA1S,EACAyS,EAAAC,KAAAtS,EAIA,GAIA,GAHAH,EAAAkT,GAAArV,EAAAhV,GAAA+lB,GACAxO,EAAA8S,GAAArV,EAAAhV,EAAA,GAAA+lB,IACA/lB,GAAAiV,IACAvZ,EAOA,OAFAiuB,EAAAC,KAAAzS,EACAwS,EAAAC,KAAArS,EACAqS,QAEKzS,GAAAD,GAAAK,GAAAD,GACL,KAAAtX,EAAAtE,GAAA,CAEA,IAAA0b,EAAAiT,GAAArV,EAAAhV,GAAA+lB,GACAvO,EAAA6S,GAAArV,EAAAhV,EAAA,GAAA+lB,GAGA,GAFA/lB,GAAAiV,EAEAmC,GAAAD,GAAAK,GAAAD,EAAA,CAIA,IAAAwM,EAAA5M,EAAAD,EACA8M,EAAAzM,EAAAD,EAEA6M,EAAA/M,EAAAF,EACAkN,EAAA5M,EAAAF,EAIAyM,EAAAK,GAAAJ,EAAAG,IACAJ,EAAA,GAAAI,EAAAJ,MAAAI,GAAAJ,EAAA,GAAAI,EAAAJ,KACAC,EAAA,GAAAI,EAAAJ,MAAAI,GAAAJ,EAAA,GAAAI,EAAAJ,IAEA7M,EAAAC,EACAG,EAAAC,IAMAmS,EAAAC,KAAAzS,EACAwS,EAAAC,KAAArS,EACAL,EAAAC,EACAG,EAAAC,EACAJ,EAAAC,EACAG,EAAAC,IAKA,OAFAmS,EAAAC,KAAAzS,EACAwS,EAAAC,KAAArS,EACAqS,EAcO,SAAAY,GAAAxV,EAAAhV,EAAA+nB,EAAA9S,EAAA8Q,EAAA4D,EAAAC,EAAAQ,GACP,QAAAz3B,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAAA,CAC7C,IAAA+I,EAAAqsB,EAAAp1B,GACAi3B,EAAAW,GAAAvV,EAAAhV,EAAAtE,EAAAuZ,EAAA8Q,EAAA4D,EAAAC,GACAQ,EAAA7zB,KAAAqzB,GACA5pB,EAAAtE,EAEA,OAAAkuB,ECnUA,IAAIa,GAAyB,WAC7B,IAAA3kB,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAwIdukB,GAxGD,SAAApkB,GAOd,SAAAqkB,EAAAjX,EAAA6T,GACA,IAAA9gB,EAAAH,EAAAxT,KAAA2C,YAiBA,OAZAgR,EAAAmkB,WAAA,EAKAnkB,EAAAokB,mBAAA,OACAxiB,IAAAkf,GAAA1lB,MAAA+K,QAAA8G,EAAA,IAIAjN,EAAA6gB,eAAyF,EAAAC,GAHzF9gB,EAAA4gB,mBAAAE,EAA0E,GAK1E9gB,EA6EA,OArGIgkB,GAASE,EAAArkB,GAgCbqkB,EAAAp2B,UAAAqc,MAAA,WACA,WAAA+Z,EAAAl1B,KAAAuf,gBAAA/d,QAAAxB,KAAAixB,SAKAiE,EAAAp2B,UAAA2wB,eAAA,SAAA3vB,EAAA0e,EAAAkR,EAAAC,GACA,OAAAA,EAAiCpR,GAAwBve,KAAAgoB,YAAAloB,EAAA0e,GACzDmR,GAEA3vB,KAAAo1B,mBAAAp1B,KAAAiX,gBACAjX,KAAAm1B,UAAA91B,KAAAK,KAAuCgzB,GAAe1yB,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAA,IACtDxf,KAAAo1B,kBAAAp1B,KAAAiX,eAEe4b,GAAkB7yB,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAAxf,KAAAm1B,WAAA,EAAAr1B,EAAA0e,EAAAkR,EAAAC,KAOjCuF,EAAAp2B,UAAAqhB,QAAA,WACA,OAAegS,GAAcnyB,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,SAQ7B0V,EAAAp2B,UAAAsyB,eAAA,WACA,OAAeqC,GAAkBzzB,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,SAKjC0V,EAAAp2B,UAAA4yB,8BAAA,SAAAnB,GACA,IAAA2D,EAAA,GAEA,OADAA,EAAAn0B,OAA2Ck0B,GAAcj0B,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAA+Q,EAAA2D,EAAA,GACzD,IAAAgB,EAAAhB,EAAyDvR,GAAcC,KAMvEsS,EAAAp2B,UAAA0xB,QAAA,WACA,OAAexN,GAAYG,aAK3B+R,EAAAp2B,UAAA2xB,iBAAA,SAAAvS,GACA,UASAgX,EAAAp2B,UAAA+yB,eAAA,SAAA5T,EAAA6T,GACA9xB,KAAA+xB,UAAAD,EAAA7T,EAAA,GACAje,KAAAuf,kBACAvf,KAAAuf,gBAAA,IAEAvf,KAAAuf,gBAAAxf,OAAsCszB,GAAkBrzB,KAAAuf,gBAAA,EAAAtB,EAAAje,KAAAwf,QACxDxf,KAAAgX,WAEAke,EAtGc,CAuGZhE,ICvIEmE,GAAyB,WAC7B,IAAAhlB,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6Gd4kB,GAlFN,SAAAzkB,GAMT,SAAA0kB,EAAAtX,EAAA6T,GACA,IAAA9gB,EAAAH,EAAAxT,KAAA2C,YAEA,OADAgR,EAAA6gB,eAAA5T,EAAA6T,GACA9gB,EAuEA,OA/EIqkB,GAASE,EAAA1kB,GAgBb0kB,EAAAz2B,UAAAqc,MAAA,WAEA,OADA,IAAAoa,EAAAv1B,KAAAuf,gBAAA/d,QAAAxB,KAAAixB,SAMAsE,EAAAz2B,UAAA2wB,eAAA,SAAA3vB,EAAA0e,EAAAkR,EAAAC,GACA,IAAApQ,EAAAvf,KAAAuf,gBACA0T,EAA8BzO,GAAS1kB,EAAA0e,EAAAe,EAAA,GAAAA,EAAA,IACvC,GAAA0T,EAAAtD,EAAA,CAEA,IADA,IAAAnQ,EAAAxf,KAAAwf,OACAtiB,EAAA,EAA2BA,EAAAsiB,IAAYtiB,EACvCwyB,EAAAxyB,GAAAqiB,EAAAriB,GAGA,OADAwyB,EAAA3vB,OAAAyf,EACAyT,EAGA,OAAAtD,GASA4F,EAAAz2B,UAAAsyB,eAAA,WACA,OAAApxB,KAAAuf,gBAAAvf,KAAAuf,gBAAA/d,QAAA,IAKA+zB,EAAAz2B,UAAAkxB,cAAA,SAAA9R,GACA,OAAemB,GAA4Brf,KAAAuf,gBAAArB,IAM3CqX,EAAAz2B,UAAA0xB,QAAA,WACA,OAAexN,GAAYC,OAM3BsS,EAAAz2B,UAAA2xB,iBAAA,SAAAvS,GACA,OAAeW,GAAUX,EAAAle,KAAAuf,gBAAA,GAAAvf,KAAAuf,gBAAA,KAMzBgW,EAAAz2B,UAAA+yB,eAAA,SAAA5T,EAAA6T,GACA9xB,KAAA+xB,UAAAD,EAAA7T,EAAA,GACAje,KAAAuf,kBACAvf,KAAAuf,gBAAA,IAEAvf,KAAAuf,gBAAAxf,OAAsCqzB,GAAiBpzB,KAAAuf,gBAAA,EAAAtB,EAAAje,KAAAwf,QACvDxf,KAAAgX,WAEAue,EAhFS,CAiFPrE,IChGK,SAAAsE,GAAAjW,EAAAhV,EAAAtE,EAAAuZ,EAAAtB,GASP,OARkB4B,GAAa5B,EAK/B,SAAAU,GACA,OAAA6W,GAAAlW,EAAAhV,EAAAtE,EAAAuZ,EAAAZ,EAAA,GAAAA,EAAA,MAaO,SAAA6W,GAAAlW,EAAAhV,EAAAtE,EAAAuZ,EAAA1f,EAAA0e,GAWP,IAHA,IAAAkX,EAAA,EACAjU,EAAAlC,EAAAtZ,EAAAuZ,GACAqC,EAAAtC,EAAAtZ,EAAAuZ,EAAA,GACUjV,EAAAtE,EAAcsE,GAAAiV,EAAA,CACxB,IAAAkC,EAAAnC,EAAAhV,GACAuX,EAAAvC,EAAAhV,EAAA,GACAsX,GAAArD,EACAsD,EAAAtD,IAAAkD,EAAAD,IAAAjD,EAAAqD,IAAA/hB,EAAA2hB,IAAAK,EAAAD,GAAA,GACA6T,IAGA5T,GAAAtD,IAAAkD,EAAAD,IAAAjD,EAAAqD,IAAA/hB,EAAA2hB,IAAAK,EAAAD,GAAA,GACA6T,IAEAjU,EAAAC,EACAG,EAAAC,EAEA,WAAA4T,EAWO,SAAAC,GAAApW,EAAAhV,EAAA+nB,EAAA9S,EAAA1f,EAAA0e,GACP,OAAA8T,EAAAvyB,OACA,SAEA,IAAA01B,GAAAlW,EAAAhV,EAAA+nB,EAAA,GAAA9S,EAAA1f,EAAA0e,GACA,SAEA,QAAAthB,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAC7C,GAAAu4B,GAAAlW,EAAA+S,EAAAp1B,EAAA,GAAAo1B,EAAAp1B,GAAAsiB,EAAA1f,EAAA0e,GACA,SAGA,SC9DO,SAAAoX,GAAArW,EAAAhV,EAAA+nB,EAAA9S,EAAAqW,EAAAC,EAAAlS,GAMP,IALA,IAAA1mB,EAAA0U,EAAA9R,EAAA2hB,EAAAC,EAAAG,EAAAC,EACAtD,EAAAqX,EAAAC,EAAA,GAEAC,EAAA,GAEA/3B,EAAA,EAAAg4B,EAAA1D,EAAAvyB,OAAqC/B,EAAAg4B,IAAQh4B,EAAA,CAC7C,IAAAiI,EAAAqsB,EAAAt0B,GAGA,IAFAyjB,EAAAlC,EAAAtZ,EAAAuZ,GACAqC,EAAAtC,EAAAtZ,EAAAuZ,EAAA,GACAtiB,EAAAqN,EAAwBrN,EAAA+I,EAAS/I,GAAAsiB,EACjCkC,EAAAnC,EAAAriB,GACA4kB,EAAAvC,EAAAriB,EAAA,IACAshB,GAAAqD,GAAAC,GAAAtD,GAAAqD,GAAArD,MAAAsD,KACAhiB,GAAA0e,EAAAqD,IAAAC,EAAAD,IAAAH,EAAAD,KACAsU,EAAAj1B,KAAAhB,IAEA2hB,EAAAC,EACAG,EAAAC,EAKA,IAAAmU,EAAAlrB,IACAmrB,GAAAlrB,IAGA,IAFA+qB,EAAAnzB,KAAuBsZ,GACvBuF,EAAAsU,EAAA,GACA74B,EAAA,EAAA0U,EAAAmkB,EAAAh2B,OAA0C7C,EAAA0U,IAAQ1U,EAAA,CAClDwkB,EAAAqU,EAAA74B,GACA,IAAAkS,EAAA/P,KAAA6L,IAAAwW,EAAAD,GACArS,EAAA8mB,GAEgBP,GAAqBpW,EAAAhV,EAAA+nB,EAAA9S,EADrC1f,GAAA2hB,EAAAC,GAAA,EACqClD,KACrCyX,EAAAn2B,EACAo2B,EAAA9mB,GAGAqS,EAAAC,EAOA,OALAvW,MAAA8qB,KAGAA,EAAAJ,EAAAC,IAEAlS,GACAA,EAAA9iB,KAAAm1B,EAAAzX,EAAA0X,GACAtS,GAGA,CAAAqS,EAAAzX,EAAA0X,GAYO,SAAAC,GAAA5W,EAAAhV,EAAAupB,EAAAtU,EAAAqW,GAEP,IADA,IAAAO,EAAA,GACAl5B,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAo1B,EAAAwB,EAAA52B,GACAk5B,EAAAR,GAAArW,EAAAhV,EAAA+nB,EAAA9S,EAAAqW,EAAA,EAAA34B,EAAAk5B,GACA7rB,EAAA+nB,IAAAvyB,OAAA,GAEA,OAAAq2B,ECtEO,SAAA3c,GAAA8F,EAAAhV,EAAAtE,EAAAuZ,EAAA3Q,GAIP,IAHA,IAEAwnB,EAFAC,EAAA,CAAA/W,EAAAhV,GAAAgV,EAAAhV,EAAA,IACAgsB,EAAA,GAEUhsB,EAAAiV,EAAAvZ,EAAyBsE,GAAAiV,EAAA,CAInC,GAHA+W,EAAA,GAAAhX,EAAAhV,EAAAiV,GACA+W,EAAA,GAAAhX,EAAAhV,EAAAiV,EAAA,GACA6W,EAAAxnB,EAAAynB,EAAAC,GAEA,OAAAF,EAEAC,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GAEA,SChBO,SAAAC,GAAAjX,EAAAhV,EAAAtE,EAAAuZ,EAAAtB,GACP,IAAAuY,EAA4BhX,G1B6K5B,CAAAzU,SAAA,U0B7K6DuU,EAAAhV,EAAAtE,EAAAuZ,GAC7D,QAAS0C,GAAUhE,EAAAuY,OAGX3X,GAAcZ,EAAAuY,KAGtBA,EAAA,IAAAvY,EAAA,IACAuY,EAAA,IAAAvY,EAAA,KAGAuY,EAAA,IAAAvY,EAAA,IACAuY,EAAA,IAAAvY,EAAA,IAGWzE,GAAc8F,EAAAhV,EAAAtE,EAAAuZ,EAOzB,SAAA8W,EAAAC,GACA,O1BumBO,SAAArY,EAAAwY,EAAAzwB,GACP,IAAA0wB,GAAA,EACAC,EAAA3X,GAAAf,EAAAwY,GACAG,EAAA5X,GAAAf,EAAAjY,GACA,GAAA2wB,IAAqBnZ,GAAYE,cACjCkZ,IAAmBpZ,GAAYE,aAC/BgZ,GAAA,MAEA,CACA,IAAAp2B,EAAA2d,EAAA,GACA1d,EAAA0d,EAAA,GACAzd,EAAAyd,EAAA,GACAxd,EAAAwd,EAAA,GACA4Y,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAA/wB,EAAA,GACAgxB,EAAAhxB,EAAA,GACAixB,GAAAD,EAAAF,IAAAC,EAAAF,GACAh3B,OAAA,EAAA0e,OAAA,EACAqY,EAAwBpZ,GAAYG,SACpCgZ,EAAyBnZ,GAAYG,SAGrC+Y,GADA72B,EAAAk3B,GAAAC,EAAAv2B,GAAAw2B,IACA32B,GAAAT,GAAAW,GAEAk2B,KAAAE,EAAuCpZ,GAAYI,QACnD+Y,EAAyBnZ,GAAYI,QAGrC8Y,GADAnY,EAAAyY,GAAAD,EAAAv2B,GAAAy2B,IACA12B,GAAAge,GAAA9d,GAEAi2B,KAAAE,EAAuCpZ,GAAYK,QACnD8Y,EAAyBnZ,GAAYK,QAGrC6Y,GADA72B,EAAAk3B,GAAAC,EAAAz2B,GAAA02B,IACA32B,GAAAT,GAAAW,GAEAk2B,KAAAE,EAAuCpZ,GAAYM,OACnD6Y,EAAyBnZ,GAAYM,OAGrC4Y,GADAnY,EAAAyY,GAAAD,EAAAz2B,GAAA22B,IACA12B,GAAAge,GAAA9d,GAGA,OAAAi2B,E0BnpBeQ,CAAiBjZ,EAAAoY,EAAAC,QAsDzB,SAAAa,GAAA7X,EAAAhV,EAAA+nB,EAAA9S,EAAAtB,GACP,IA3BO,SAAAqB,EAAAhV,EAAAtE,EAAAuZ,EAAAtB,GACP,SAAAsY,GAAAjX,EAAAhV,EAAAtE,EAAAuZ,EAAAtB,IAGQuX,GAAoBlW,EAAAhV,EAAAtE,EAAAuZ,EAAAtB,EAAA,GAAAA,EAAA,KAGpBuX,GAAoBlW,EAAAhV,EAAAtE,EAAAuZ,EAAAtB,EAAA,GAAAA,EAAA,KAGpBuX,GAAoBlW,EAAAhV,EAAAtE,EAAAuZ,EAAAtB,EAAA,GAAAA,EAAA,KAGpBuX,GAAoBlW,EAAAhV,EAAAtE,EAAAuZ,EAAAtB,EAAA,GAAAA,EAAA,KAc5BmZ,CAAA9X,EAAAhV,EAAA+nB,EAAA,GAAA9S,EAAAtB,GACA,SAEA,OAAAoU,EAAAvyB,OACA,SAEA,QAAA7C,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAC7C,GAAYs4B,GAAwBjW,EAAA+S,EAAAp1B,EAAA,GAAAo1B,EAAAp1B,GAAAsiB,EAAAtB,KACpCsY,GAAAjX,EAAA+S,EAAAp1B,EAAA,GAAAo1B,EAAAp1B,GAAAsiB,EAAAtB,GACA,SAIA,SCjGO,SAASoZ,GAAW/X,EAAAhV,EAAAtE,EAAAuZ,GAC3B,KAAAjV,EAAAtE,EAAAuZ,GAAA,CACA,QAAAtiB,EAAA,EAAuBA,EAAAsiB,IAAYtiB,EAAA,CACnC,IAAAsf,EAAA+C,EAAAhV,EAAArN,GACAqiB,EAAAhV,EAAArN,GAAAqiB,EAAAtZ,EAAAuZ,EAAAtiB,GACAqiB,EAAAtZ,EAAAuZ,EAAAtiB,GAAAsf,EAEAjS,GAAAiV,EACAvZ,GAAAuZ,GCNO,SAAA+X,GAAAhY,EAAAhV,EAAAtE,EAAAuZ,GAMP,IAHA,IAAAgY,EAAA,EACA/V,EAAAlC,EAAAtZ,EAAAuZ,GACAqC,EAAAtC,EAAAtZ,EAAAuZ,EAAA,GACUjV,EAAAtE,EAAcsE,GAAAiV,EAAA,CACxB,IAAAkC,EAAAnC,EAAAhV,GACAuX,EAAAvC,EAAAhV,EAAA,GACAitB,IAAA9V,EAAAD,IAAAK,EAAAD,GACAJ,EAAAC,EACAG,EAAAC,EAEA,OAAA0V,EAAA,EAeO,SAAAC,GAAAlY,EAAAhV,EAAA+nB,EAAA9S,EAAAkY,GAEP,IADA,IAAAC,OAAA/kB,IAAA8kB,KACAx6B,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAAA,CAC7C,IAAA+I,EAAAqsB,EAAAp1B,GACA06B,EAAAL,GAAAhY,EAAAhV,EAAAtE,EAAAuZ,GACA,OAAAtiB,GACA,GAAAy6B,GAAAC,IAAAD,IAAAC,EACA,cAIA,GAAAD,IAAAC,IAAAD,GAAAC,EACA,SAGArtB,EAAAtE,EAEA,SAwCO,SAAA4xB,GAAAtY,EAAAhV,EAAA+nB,EAAA9S,EAAAkY,GAEP,IADA,IAAAC,OAAA/kB,IAAA8kB,KACAx6B,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAAA,CAC7C,IAAA+I,EAAAqsB,EAAAp1B,GACA06B,EAAAL,GAAAhY,EAAAhV,EAAAtE,EAAAuZ,IACA,IAAAtiB,EACAy6B,GAAAC,IAAAD,IAAAC,EACAD,IAAAC,IAAAD,GAAAC,IAEYN,GAAkB/X,EAAAhV,EAAAtE,EAAAuZ,GAE9BjV,EAAAtE,EAEA,OAAAsE,EAeO,SAAAutB,GAAAvY,EAAAhV,EAAAupB,EAAAtU,EAAAkY,GACP,QAAAx6B,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAAsC7C,EAAA0U,IAAQ1U,EAC9CqN,EAAAstB,GAAAtY,EAAAhV,EAAAupB,EAAA52B,GAAAsiB,EAAAkY,GAEA,OAAAntB,EChIA,IAAIwtB,GAAyB,WAC7B,IAAA1nB,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAwCzBsnB,GAAO,SAAAnnB,GAaX,SAAAonB,EAAAha,EAAA6T,EAAA0B,GACA,IAAAxiB,EAAAH,EAAAxT,KAAA2C,YA2CA,OAtCAgR,EAAAknB,MAAA,GAKAlnB,EAAAmnB,4BAAA,EAKAnnB,EAAAonB,mBAAA,KAKApnB,EAAAmkB,WAAA,EAKAnkB,EAAAokB,mBAAA,EAKApkB,EAAAqnB,mBAAA,EAKArnB,EAAAsnB,yBAAA,UACA1lB,IAAAkf,GAAA0B,GACAxiB,EAAA4gB,mBAAAE,EAA0E,GAC1E9gB,EAAAknB,MAAA1E,GAGAxiB,EAAA6gB,eAAgG,EAAAC,GAEhG9gB,EA8MA,OAtQI+mB,GAASE,EAAApnB,GA+DbonB,EAAAn5B,UAAAy5B,iBAAA,SAAAC,GACAx4B,KAAAuf,gBAIY/F,EAAMxZ,KAAAuf,gBAAAiZ,EAAAlH,sBAHlBtxB,KAAAuf,gBAAAiZ,EAAAlH,qBAAA9vB,QAKAxB,KAAAk4B,MAAAp3B,KAAAd,KAAAuf,gBAAAxf,QACAC,KAAAgX,WAQAihB,EAAAn5B,UAAAqc,MAAA,WACA,WAAA8c,EAAAj4B,KAAAuf,gBAAA/d,QAAAxB,KAAAixB,OAAAjxB,KAAAk4B,MAAA12B,UAKAy2B,EAAAn5B,UAAA2wB,eAAA,SAAA3vB,EAAA0e,EAAAkR,EAAAC,GACA,OAAAA,EAAiCpR,GAAwBve,KAAAgoB,YAAAloB,EAAA0e,GACzDmR,GAEA3vB,KAAAo1B,mBAAAp1B,KAAAiX,gBACAjX,KAAAm1B,UAAA91B,KAAAK,KAAuCkzB,GAAoB5yB,KAAAuf,gBAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,OAAA,IAC3Dxf,KAAAo1B,kBAAAp1B,KAAAiX,eAEekc,GAAuBnzB,KAAAuf,gBAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,OAAAxf,KAAAm1B,WAAA,EAAAr1B,EAAA0e,EAAAkR,EAAAC,KAKtCsI,EAAAn5B,UAAA+f,WAAA,SAAA/e,EAAA0e,GACA,OAAemX,GAAqB31B,KAAAy4B,6BAAA,EAAAz4B,KAAAk4B,MAAAl4B,KAAAwf,OAAA1f,EAAA0e,IAOpCyZ,EAAAn5B,UAAAqhB,QAAA,WACA,OAAekS,GAAeryB,KAAAy4B,6BAAA,EAAAz4B,KAAAk4B,MAAAl4B,KAAAwf,SAgB9ByY,EAAAn5B,UAAAsyB,eAAA,SAAAsG,GACA,IAAAnY,EAQA,YAPA3M,IAAA8kB,EAEYG,GADZtY,EAAAvf,KAAAy4B,6BAAAj3B,QAC6B,EAAAxB,KAAAk4B,MAAAl4B,KAAAwf,OAAAkY,GAG7BnY,EAAAvf,KAAAuf,gBAEeoU,GAAuBpU,EAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,SAKtCyY,EAAAn5B,UAAA45B,QAAA,WACA,OAAA14B,KAAAk4B,OAKAD,EAAAn5B,UAAA65B,qBAAA,WACA,GAAA34B,KAAAm4B,4BAAAn4B,KAAAiX,cAAA,CACA,IAAA2hB,EAA6BpY,GAASxgB,KAAAgoB,aACtChoB,KAAAo4B,mBAAsCxC,GAAuB51B,KAAAy4B,6BAAA,EAAAz4B,KAAAk4B,MAAAl4B,KAAAwf,OAAAoZ,EAAA,GAC7D54B,KAAAm4B,2BAAAn4B,KAAAiX,cAEA,OAAAjX,KAAAo4B,oBAQAH,EAAAn5B,UAAA+5B,iBAAA,WACA,WAAmBvD,GAAKt1B,KAAA24B,uBAA8BhW,GAAcG,MASpEmV,EAAAn5B,UAAAg6B,mBAAA,WACA,OAAA94B,KAAAk4B,MAAAn4B,QAYAk4B,EAAAn5B,UAAAi6B,cAAA,SAAAxpB,GACA,OAAAA,EAAA,GAAAvP,KAAAk4B,MAAAn4B,QAAAwP,EACA,KAEA,IAAmB0lB,GAAUj1B,KAAAuf,gBAAA/d,MAAA,IAAA+N,EAAA,EAAAvP,KAAAk4B,MAAA3oB,EAAA,GAAAvP,KAAAk4B,MAAA3oB,IAAAvP,KAAAixB,SAO7BgH,EAAAn5B,UAAAk6B,eAAA,WAMA,IALA,IAAA/H,EAAAjxB,KAAAixB,OACA1R,EAAAvf,KAAAuf,gBACA+S,EAAAtyB,KAAAk4B,MACAe,EAAA,GACA1uB,EAAA,EACArN,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAyC7C,EAAA0U,IAAQ1U,EAAA,CACjD,IAAA+I,EAAAqsB,EAAAp1B,GACAs7B,EAAA,IAAiCvD,GAAU1V,EAAA/d,MAAA+I,EAAAtE,GAAAgrB,GAC3CgI,EAAAn4B,KAAA03B,GACAjuB,EAAAtE,EAEA,OAAAgzB,GAKAhB,EAAAn5B,UAAA25B,2BAAA,WACA,GAAAz4B,KAAAq4B,mBAAAr4B,KAAAiX,cAAA,CACA,IAAAsI,EAAAvf,KAAAuf,gBACgBkY,GAAsBlY,EAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,QACtCxf,KAAAs4B,yBAAA/Y,GAGAvf,KAAAs4B,yBAAA/Y,EAAA/d,QACAxB,KAAAs4B,yBAAAv4B,OACoB83B,GAAiB73B,KAAAs4B,yBAAA,EAAAt4B,KAAAk4B,MAAAl4B,KAAAwf,SAErCxf,KAAAq4B,kBAAAr4B,KAAAiX,cAEA,OAAAjX,KAAAs4B,0BAKAL,EAAAn5B,UAAA4yB,8BAAA,SAAAnB,GACA,IAAA2D,EAAA,GACAS,EAAA,GAEA,OADAT,EAAAn0B,OAA2Cg1B,GAAa/0B,KAAAuf,gBAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,OAAAngB,KAAAK,KAAA6wB,GAAA2D,EAAA,EAAAS,GACxD,IAAAsD,EAAA/D,EAAsDvR,GAAcC,GAAA+R,IAMpEsD,EAAAn5B,UAAA0xB,QAAA,WACA,OAAexN,GAAYI,SAM3B6U,EAAAn5B,UAAA2xB,iBAAA,SAAAvS,GACA,OAAekZ,GAAyBp3B,KAAAy4B,6BAAA,EAAAz4B,KAAAk4B,MAAAl4B,KAAAwf,OAAAtB,IASxC+Z,EAAAn5B,UAAA+yB,eAAA,SAAA5T,EAAA6T,GACA9xB,KAAA+xB,UAAAD,EAAA7T,EAAA,GACAje,KAAAuf,kBACAvf,KAAAuf,gBAAA,IAEA,IAAA+S,EAAmBgB,GAAuBtzB,KAAAuf,gBAAA,EAAAtB,EAAAje,KAAAwf,OAAAxf,KAAAk4B,OAC1Cl4B,KAAAuf,gBAAAxf,OAAA,IAAAuyB,EAAAvyB,OAAA,EAAAuyB,IAAAvyB,OAAA,GACAC,KAAAgX,WAEAihB,EAvQW,CAwQT/G,IACagI,GAAA,GAaR,SAAAC,GAAAvY,EAAAyE,EAAA+T,EAAAC,GAIP,IAHA,IAAA16B,EAAAy6B,GAAA,GAEA7Z,EAAA,GACAriB,EAAA,EAAmBA,EAAAyB,IAAOzB,EAClBsc,EAAM+F,EAAkBsG,GAAYjF,EAAAyE,EAAA,EAAAhmB,KAAAslB,GAAAznB,EAAAyB,EAAA06B,IAG5C,OADA9Z,EAAAze,KAAAye,EAAA,GAAAA,EAAA,IACA,IAAeyY,GAAOzY,EAAkBoD,GAAcC,GAAA,CAAArD,EAAAxf,SAQ/C,SAAAu5B,GAAApb,GACP,IAAA3d,EAAA2d,EAAA,GACA1d,EAAA0d,EAAA,GACAzd,EAAAyd,EAAA,GACAxd,EAAAwd,EAAA,GACAqB,EAAA,CAAAhf,EAAAC,EAAAD,EAAAG,EAAAD,EAAAC,EAAAD,EAAAD,EAAAD,EAAAC,GACA,WAAew3B,GAAOzY,EAAkBoD,GAAcC,GAAA,CAAArD,EAAAxf,SAW/C,SAAAw5B,GAAAC,EAAAC,EAAAC,GAOP,IANA,IAAAC,EAAAF,GAAA,GACAja,EAAAga,EAAA7H,YACAV,EAAAuI,EAAAhI,YACA5Q,EAAA4Y,EAAAhZ,YACAoZ,EAAApa,GAAAma,EAAA,GACApa,EAAA,IAAAnT,MAAAwtB,GACA18B,EAAA,EAAmBA,EAAA08B,EAAiB18B,GAAAsiB,EAAA,CACpCD,EAAAriB,GAAA,EACAqiB,EAAAriB,EAAA,KACA,QAAAsP,EAAA,EAAuBA,EAAAgT,EAAYhT,IACnC+S,EAAAriB,EAAAsP,GAAAoU,EAAApU,GAGA,IAAA8lB,EAAA,CAAA/S,EAAAxf,QACA85B,EAAA,IAAsB7B,GAAOzY,EAAA0R,EAAAqB,GAE7B,OADAwH,GAAAD,EAAAjZ,EAAA4Y,EAAAO,YAAAL,GACAG,EAUO,SAAAC,GAAAD,EAAAjZ,EAAAyE,EAAAqU,GAKP,IAJA,IAAAna,EAAAsa,EAAAvI,qBACA9R,EAAAqa,EAAAlI,YACAgI,EAAApa,EAAAxf,OAAAyf,EAAA,EACAwa,EAAAN,GAAA,EACAx8B,EAAA,EAAmBA,GAAAy8B,IAAYz8B,EAAA,CAC/B,IAAAqN,EAAArN,EAAAsiB,EACAuE,EAAAiW,EAAwC,EAANlV,GAAM5nB,EAAAy8B,GAAAt6B,KAAAslB,GAAAgV,EACxCpa,EAAAhV,GAAAqW,EAAA,GAAAyE,EAAAhmB,KAAA4hB,IAAA8C,GACAxE,EAAAhV,EAAA,GAAAqW,EAAA,GAAAyE,EAAAhmB,KAAA8hB,IAAA4C,GAEA8V,EAAA7iB,UCrYA,IAAIijB,GAAyB,WAC7B,IAAA5pB,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0BzBwpB,GAAQ,CACZC,SAAA,WACAC,kBAAA,mBACAC,SAAA,WACAC,kBAAA,mBACAC,QAAA,UACAC,SAAA,WACAC,WAAA,aACAC,MAAA,QACAC,SAAA,WACAC,iBAAA,mBAMIC,GAAgB,SAAAhqB,GAKpB,SAAAiqB,EAAAC,GACA,IAAA/pB,EAAAH,EAAAxT,KAAA2C,KAAsCoV,EAASE,QAAAtV,KAS/C,OALAgR,EAAAD,KAAAgqB,EAAAhqB,KAIAC,EAAAC,QAAA8pB,EAAA9pB,QACAD,EAEA,OAhBIipB,GAASa,EAAAjqB,GAgBbiqB,EAjBoB,CAkBlBzmB,GAkRa2mB,GAjPA,SAAAnqB,GAKf,SAAAoqB,EAAAjiB,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GA0BA,OApBAhI,EAAAkqB,UAAA,KAKAlqB,EAAAmqB,WAA2BjQ,GAK3Bla,EAAAoqB,cAAAxoB,EACQO,EAAMnC,EAAQkH,EAAmBgiB,GAAQO,YAAAzpB,EAAAqqB,yBAAArqB,GACzCmC,EAAMnC,EAAQkH,EAAmBgiB,GAAQS,UAAA3pB,EAAAsqB,uBAAAtqB,QACjD4B,IAAAqG,EAAAmS,YACApa,EAAAuqB,cAAAtiB,EAAAmS,iBAEAxY,IAAAqG,EAAAuiB,iBACAxqB,EAAAyqB,mBAAAxiB,EAAAuiB,iBAEAxqB,EAAA0qB,iBAAA9oB,IAAAqG,EAAA0iB,UAAA1iB,EAAA0iB,UACA3qB,EA8MA,OA9OIipB,GAASgB,EAAApqB,GAqCboqB,EAAAn8B,UAAAkV,gBAAA,WACAhU,KAAA07B,aAAA,GACA7qB,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAKAi7B,EAAAn8B,UAAAu8B,yBAAA,WACA,IAAAjQ,EAAAprB,KAAA47B,gBACAxQ,IACAprB,KAAAm7B,WAA8BxP,GAA4BL,GAAa,aAAAF,GACvEprB,KAAAk7B,WACAl7B,KAAA2I,IAAyBuxB,GAAQM,SAAAx6B,KAAAm7B,WAAAn7B,KAAAk7B,cAOjCD,EAAAn8B,UAAAw8B,uBAAA,WACA,mBAAAO,UAAA,CACA,IAAAF,EAAA37B,KAAA87B,cACAH,QAAA/oB,IAAA5S,KAAAo7B,SACAp7B,KAAAo7B,SAAAS,UAAAE,YAAAC,cAAAh8B,KAAAi8B,gBAAAv9B,KAAAsB,WAAAk8B,eAAAx9B,KAAAsB,WAAAm8B,sBAEAR,QAAA/oB,IAAA5S,KAAAo7B,WACAS,UAAAE,YAAAK,WAAAp8B,KAAAo7B,UACAp7B,KAAAo7B,cAAAxoB,KAQAqoB,EAAAn8B,UAAAm9B,gBAAA,SAAAI,GACA,IAAAC,EAAAD,EAAAC,OACAt8B,KAAA2I,IAAiBuxB,GAAQC,SAAAmC,EAAAC,UACzBv8B,KAAA2I,IAAiBuxB,GAAQG,SAAA,OAAAiC,EAAAE,cAAA5pB,EAAA0pB,EAAAE,UACzBx8B,KAAA2I,IAAiBuxB,GAAQI,kBAAA,OAAAgC,EAAAG,sBACzB7pB,EAAA0pB,EAAAG,kBACAz8B,KAAA2I,IAAiBuxB,GAAQK,QAAA,OAAA+B,EAAAI,aACzB9pB,EAAwBgS,GAAS0X,EAAAI,UACjC18B,KAAAk7B,WAIAl7B,KAAAk7B,UAAA,GAAAoB,EAAAK,UACA38B,KAAAk7B,UAAA,GAAAoB,EAAAM,UAJA58B,KAAAk7B,UAAA,CAAAoB,EAAAK,UAAAL,EAAAM,UAMA,IAAAC,EAAA78B,KAAAm7B,WAAAn7B,KAAAk7B,WACAl7B,KAAA2I,IAAiBuxB,GAAQM,SAAAqC,GACzB78B,KAAA2I,IAAiBuxB,GAAQQ,MAAA,OAAA4B,EAAAQ,WAAAlqB,EAAA0pB,EAAAQ,OACzB,IAAA9hB,EAAuBme,GAAen5B,KAAAk7B,UAAAoB,EAAAC,UACtCvhB,EAAAsH,eAAAtiB,KAAAm7B,YACAn7B,KAAA2I,IAAiBuxB,GAAQE,kBAAApf,GACzBhb,KAAAgX,WAMAikB,EAAAn8B,UAAAo9B,eAAA,SAAAnB,GACA/6B,KAAA07B,aAAA,GACA17B,KAAA+U,cAAA,IAA+B8lB,GAAgBE,KAS/CE,EAAAn8B,UAAAi+B,YAAA,WACA,OAA2C/8B,KAAAjC,IAAcm8B,GAAQC,WAQjEc,EAAAn8B,UAAAk+B,oBAAA,WACA,OACwDh9B,KAAAjC,IAAcm8B,GAAQE,oBAAA,MAS9Ea,EAAAn8B,UAAAm+B,YAAA,WACA,OAA2Cj9B,KAAAjC,IAAcm8B,GAAQG,WASjEY,EAAAn8B,UAAAo+B,oBAAA,WACA,OAA2Cl9B,KAAAjC,IAAcm8B,GAAQI,oBAUjEW,EAAAn8B,UAAAq+B,WAAA,WACA,OAA2Cn9B,KAAAjC,IAAcm8B,GAAQK,UASjEU,EAAAn8B,UAAAs+B,YAAA,WACA,OACkEp9B,KAAAjC,IAAcm8B,GAAQM,WASxFS,EAAAn8B,UAAA88B,cAAA,WACA,OACoE57B,KAAAjC,IAAcm8B,GAAQO,aAS1FQ,EAAAn8B,UAAAu+B,SAAA,WACA,OAA2Cr9B,KAAAjC,IAAcm8B,GAAQQ,QAQjEO,EAAAn8B,UAAAg9B,YAAA,WACA,OAAkC97B,KAAAjC,IAAcm8B,GAAQS,WAWxDM,EAAAn8B,UAAAq9B,mBAAA,WACA,OAAoDn8B,KAAAjC,IAAcm8B,GAAQU,mBAS1EK,EAAAn8B,UAAAy8B,cAAA,SAAAnQ,GACAprB,KAAA2I,IAAiBuxB,GAAQO,WAAanP,GAAaF,KAQnD6P,EAAAn8B,UAAA48B,YAAA,SAAAC,GACA37B,KAAA2I,IAAiBuxB,GAAQS,SAAAgB,IAWzBV,EAAAn8B,UAAA28B,mBAAA,SAAAxiB,GACAjZ,KAAA2I,IAAiBuxB,GAAQU,iBAAA3hB,IAEzBgiB,EA/Oe,CAgPb3iB,GC9NaglB,GAtGf,WAOA,SAAAC,EAAAC,EAAAC,EAAAC,GAKA19B,KAAA29B,OAAAH,EAKAx9B,KAAA49B,aAAAH,EAKAz9B,KAAA69B,OAAAH,EAKA19B,KAAA89B,QAAA,GAKA99B,KAAA+9B,OAAA,EAKA/9B,KAAAg+B,iBAAA,EA+DA,OA1DAT,EAAAz+B,UAAAyd,MAAA,WACAvc,KAAA89B,QAAA/9B,OAAA,EACAC,KAAA+9B,OAAA,EACA/9B,KAAAg+B,iBAAA,GAMAT,EAAAz+B,UAAAm/B,OAAA,SAAAn+B,EAAA0e,GACAxe,KAAA89B,QAAAh9B,KAAAhB,EAAA0e,EAAA0f,KAAAC,QAKAZ,EAAAz+B,UAAAmH,IAAA,WACA,GAAAjG,KAAA89B,QAAA/9B,OAAA,EAGA,SAEA,IAAA29B,EAAAQ,KAAAC,MAAAn+B,KAAA69B,OACAO,EAAAp+B,KAAA89B,QAAA/9B,OAAA,EACA,GAAAC,KAAA89B,QAAAM,EAAA,GAAAV,EAGA,SAIA,IADA,IAAAW,EAAAD,EAAA,EACAC,EAAA,GAAAr+B,KAAA89B,QAAAO,EAAA,GAAAX,GACAW,GAAA,EAEA,IAAAC,EAAAt+B,KAAA89B,QAAAM,EAAA,GAAAp+B,KAAA89B,QAAAO,EAAA,GAIA,GAAAC,EAAA,OACA,SAEA,IAAA7f,EAAAze,KAAA89B,QAAAM,GAAAp+B,KAAA89B,QAAAO,GACA3f,EAAA1e,KAAA89B,QAAAM,EAAA,GAAAp+B,KAAA89B,QAAAO,EAAA,GAGA,OAFAr+B,KAAA+9B,OAAA1+B,KAAAqmB,MAAAhH,EAAAD,GACAze,KAAAg+B,iBAAA3+B,KAAAK,KAAA+e,IAAAC,KAAA4f,EACAt+B,KAAAg+B,iBAAAh+B,KAAA49B,cAKAL,EAAAz+B,UAAAmmB,YAAA,WACA,OAAAjlB,KAAA49B,aAAA59B,KAAAg+B,kBAAAh+B,KAAA29B,QAKAJ,EAAAz+B,UAAAy/B,SAAA,WACA,OAAAv+B,KAAA+9B,QAEAR,EApGA,GCTIiB,GAAyB,WAC7B,IAAAnuB,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+Cd+tB,GAzBf,SAAA5tB,GAOA,SAAA6tB,EAAAt7B,EAAA6J,EAAA0xB,GACA,IAAA3tB,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAaA,OAPAgR,EAAA/D,MAMA+D,EAAA4tB,gBAAAhsB,IAAA+rB,IAAA,KACA3tB,EAEA,OAtBIwtB,GAASE,EAAA7tB,GAsBb6tB,EAvBA,CAwBErqB,GC9CEwqB,GAAyB,WAC7B,IAAAxuB,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoFdouB,GA9Df,SAAAjuB,GASA,SAAAkuB,EAAA37B,EAAA6J,EAAA+xB,EAAAC,EAAAN,GACA,IAAA3tB,EAAAH,EAAAxT,KAAA2C,KAAAoD,EAAA6J,EAAA0xB,IAAA3+B,KA4BA,OArBAgR,EAAAkuB,cAAAF,EAMAhuB,EAAAtE,MAAAO,EAAAkyB,cAAAH,GAMAhuB,EAAA4N,WAAA3R,EAAAmyB,uBAAApuB,EAAAtE,OAQAsE,EAAAquB,cAAAzsB,IAAAqsB,KACAjuB,EAsBA,OA3DI6tB,GAASE,EAAAluB,GA6CbkuB,EAAAjgC,UAAA0V,eAAA,WACA3D,EAAA/R,UAAA0V,eAAAnX,KAAA2C,MACAA,KAAAk/B,cAAA1qB,kBAQAuqB,EAAAjgC,UAAAsV,gBAAA,WACAvD,EAAA/R,UAAAsV,gBAAA/W,KAAA2C,MACAA,KAAAk/B,cAAA9qB,mBAEA2qB,EA5DA,CA6DEN,IChFFa,GAAA,oBAAAzD,UACAA,UAAA0D,UAAAC,cAAA,GAKOC,IAAA,IAAAH,GAAAj/B,QAAA,WAKAq/B,IAAA,IAAAJ,GAAAj/B,QAAA,eAAAi/B,GAAAj/B,QAAA,SAKAs/B,IAAA,IAAAL,GAAAj/B,QAAA,eAAAi/B,GAAAj/B,QAAA,QAKAu/B,IAAA,IAAAN,GAAAj/B,QAAA,aAQAw/B,GAAA/iC,OAAAgjC,kBAAA,EAOAC,GAAA,iBAAAjjC,OAMAkjC,GAAA,iBAAAljC,OAMAmjC,KAAApE,UAAA,iBC3CQqE,GAAA,CAOfC,YAAA,cAMA1qB,MAAWL,EAASK,MAMpBC,SAAcN,EAASM,SAMvB0qB,YAAA,cAOAC,YAAA,cACAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBC/CIC,GAAyB,WAC7B,IAAAxwB,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqCdowB,GApBf,SAAAjwB,GASA,SAAAkwB,EAAA39B,EAAA6J,EAAA+zB,EAAA/B,EAAAN,GACA,IAAA3tB,EAAAH,EAAAxT,KAAA2C,KAAAoD,EAAA6J,EAAA+zB,EAAA9B,cAAAD,EAAAN,IAAA3+B,KAMA,OADAgR,EAAAgwB,eACAhwB,EAEA,OAjBI6vB,GAASE,EAAAlwB,GAiBbkwB,EAlBA,CAmBEjC,IC7BamC,GAAA,CACfZ,YAAA,cACAC,YAAA,cACAC,UAAA,YACAC,YAAA,cACAC,WAAA,aACAC,aAAA,eACAC,aAAA,eACAC,cAAA,iBCsBeM,GAlCf,WAKA,SAAAC,EAAAC,EAAAC,GAIArhC,KAAAohC,aAMAphC,KAAAshC,SAAAD,EAiBA,OAXAF,EAAAriC,UAAAyiC,UAAA,WACA,OAAA3jC,OAAAmP,KAAA/M,KAAAshC,WAOAH,EAAAriC,UAAA0iC,mBAAA,SAAAvpB,GACA,OAAAjY,KAAAshC,SAAArpB,IAEAkpB,EAhCA,GCAIM,GAAyB,WAC7B,IAAApxB,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6CtBgxB,GAAA,EAIAC,GAAA,QAaP,SAAAC,GAAAC,GACA,IAAA7hC,KAAA8hC,2BAAAD,GAAA,CAGAH,GAAAx0B,aAAAlN,KAAA+hC,YACA/hC,KAAAgiC,OAAAH,GAEA,IAAA3iC,EAAA+iC,GAAAJ,EAAA7hC,KAAAohC,YACAphC,KAAA+hC,WAAAL,GAAAx0B,YAAA20B,EACA7hC,KAAAohC,WAAAc,KAAAhjC,EAAA2iC,IASA,SAAAM,GAAAN,GACA,IAAA7hC,KAAA8hC,2BAAAD,GAAA,CACA,IAAA3iC,EAAA+iC,GAAAJ,EAAA7hC,KAAAohC,YACAphC,KAAAohC,WAAAgB,KAAAljC,EAAA2iC,IASA,SAAAQ,GAAAR,GACA,IAAA7hC,KAAA8hC,2BAAAD,GAAA,CACA,IAAA7iC,EAAAgB,KAAA+hC,WAAAL,GAAAx0B,YACA,GAAAlO,KAAAsjC,SAAAT,EAAAS,OAAA,CACA,IAAApjC,EAAA+iC,GAAAJ,EAAA7hC,KAAAohC,YACAphC,KAAAohC,WAAAmB,GAAArjC,EAAA2iC,GACA7hC,KAAAwiC,iBAUA,SAAAC,GAAAZ,GACA,IAAA7hC,KAAA8hC,2BAAAD,GAAA,CACA,IAAA3iC,EAAA+iC,GAAAJ,EAAA7hC,KAAAohC,YACAphC,KAAAohC,WAAAsB,UAAAxjC,EAAA2iC,IASA,SAAAc,GAAAd,GACA,IAAA7hC,KAAA8hC,2BAAAD,GAAA,CACA,IAAA3iC,EAAA+iC,GAAAJ,EAAA7hC,KAAAohC,YACAphC,KAAAohC,WAAAwB,SAAA1jC,EAAA2iC,IA8FO,SAAAI,GAAAJ,EAAAT,GACP,IAAAliC,EAAAkiC,EAAAyB,WAAAhB,KAEAiB,EAAA5jC,EAAAsV,eAQA,OAPAtV,EAAAsV,eAAA,WACAqtB,EAAArtB,iBACAsuB,KAEA5jC,EAAA6jC,UAAArB,GACAxiC,EAAA8jC,WAAA,EACA9jC,EAAA+jC,YAAAtB,GACAziC,EAEe,IAAAgkC,GAxGf,SAAAryB,GAKA,SAAAsyB,EAAA/B,GACA,IAAApwB,EAAAhR,KACAqhC,EAAA,CACAO,aACAO,aACAE,WACAI,aACAE,aAaA,OAXA3xB,EAAAH,EAAAxT,KAAA2C,KAAAohC,EAAAC,IAAArhC,MAKA+hC,WAAAX,EAAAW,WAKA/wB,EAAAoyB,YAAA,GACApyB,EAwDA,OAhFIywB,GAAS0B,EAAAtyB,GAkDbsyB,EAAArkC,UAAAgjC,2BAAA,SAAAD,GAIA,IAHA,IAAAwB,EAAArjC,KAAAojC,YACAtjC,EAAA+hC,EAAAyB,QACA9kB,EAAAqjB,EAAA0B,QACArmC,EAAA,EAAAC,EAAAkmC,EAAAtjC,OAAA3B,OAAA,EAAmDlB,EAAAC,IAAAiB,EAAAilC,EAAAnmC,IAAuBA,IAAA,CAE1E,IAAAuhB,EAAApf,KAAA6L,IAAApL,EAAA1B,EAAA,IACAsgB,EAAArf,KAAA6L,IAAAsT,EAAApgB,EAAA,IACA,GAAAqgB,GAlIA,IAkIAC,GAlIA,GAmIA,SAGA,UAOAykB,EAAArkC,UAAAkjC,OAAA,SAAAH,GACA,IAAA3iC,EAAA+iC,GAAAJ,EAAA7hC,KAAAohC,YACAphC,KAAAohC,WAAAY,OAAA9iC,EAAA2iC,GACA7hC,KAAAwiC,gBAKAW,EAAArkC,UAAA0jC,aAAA,kBACAxiC,KAAA+hC,WAAAL,GAAAx0B,aAEAi2B,EAjFA,CAkFEjC,IC/MEsC,GAAyB,WAC7B,IAAAnzB,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6C7B+yB,GAAA,CACA,GACA,cACA,QACA,MACA,SAQA,SAAAC,GAAA7B,GACA7hC,KAAA+hC,WAAAF,EAAAkB,UAAA71B,YAAA20B,EACA,IAAA3iC,EAAAc,KAAA2jC,cAAA9B,GACA7hC,KAAAohC,WAAAc,KAAAhjC,EAAA2iC,GAQA,SAAA+B,GAAA/B,GACA,IAAA3iC,EAAAc,KAAA2jC,cAAA9B,GACA7hC,KAAAohC,WAAAgB,KAAAljC,EAAA2iC,GAQA,SAAAgC,GAAAhC,GACA,IAAA3iC,EAAAc,KAAA2jC,cAAA9B,GACA7hC,KAAAohC,WAAAmB,GAAArjC,EAAA2iC,GACA7hC,KAAA8jC,QAAAjC,EAAAkB,WAQA,SAAAgB,GAAAlC,GACA,IAAA3iC,EAAAc,KAAA2jC,cAAA9B,GACA7hC,KAAAohC,WAAAwB,SAAA1jC,EAAA2iC,GAQA,SAAAmC,GAAAnC,GACA,IAAA3iC,EAAAc,KAAA2jC,cAAA9B,GACA7hC,KAAAohC,WAAAsB,UAAAxjC,EAAA2iC,GAQA,SAAAoC,GAAApC,GACA,IAAA3iC,EAAAc,KAAA2jC,cAAA9B,GACA7hC,KAAAohC,WAAAY,OAAA9iC,EAAA2iC,GACA7hC,KAAA8jC,QAAAjC,EAAAkB,WAQA,SAAAmB,GAAArC,GACA,IAAA3iC,EAAAc,KAAAohC,WAAA+C,UAAA,qBAAAtC,KACA7hC,KAAAohC,WAAArsB,cAAA7V,GAQA,SAAAklC,GAAAvC,GACA,IAAA3iC,EAAAc,KAAAohC,WAAA+C,UAAA,oBAAAtC,KACA7hC,KAAAohC,WAAArsB,cAAA7V,GAEA,IAmDemlC,GAnDf,SAAAxzB,GAKA,SAAAyzB,EAAAlD,GACA,IAAApwB,EAAAhR,KACAqhC,EAAA,CACAkD,cAAAb,GACAc,cAAAZ,GACAa,YAAAZ,GACAa,aAAAX,GACAY,cAAAX,GACAY,gBAAAX,GACAY,oBAAAT,GACAU,qBAAAZ,IAQA,OANAlzB,EAAAH,EAAAxT,KAAA2C,KAAAohC,EAAAC,IAAArhC,MAKA+hC,WAAAX,EAAAW,WACA/wB,EA0BA,OAhDIwyB,GAASc,EAAAzzB,GAgCbyzB,EAAAxlC,UAAA6kC,cAAA,SAAA9B,GAEA,IAAA3iC,EAAA2iC,EAKA,MAJA,iBAAAA,EAAAoB,eACA/jC,EAAAc,KAAAohC,WAAAyB,WAAAhB,MACAoB,YAAAQ,GAAA5B,EAAAoB,cAEA/jC,GAMAolC,EAAAxlC,UAAAglC,QAAA,SAAAf,UACA/iC,KAAA+hC,WAAAgB,EAAA71B,aAEAo3B,EAjDA,CAkDEpD,IC1LE6D,GAAyB,WAC7B,IAAA10B,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgD7B,SAAAs0B,GAAAnD,GACA7hC,KAAAohC,WAAA6D,gBAAApD,GAQA,SAAAqD,GAAArD,GACA7hC,KAAAohC,WAAA6D,gBAAApD,GAQA,SAAAsD,GAAAtD,GACA7hC,KAAAohC,WAAA6D,gBAAApD,GAQA,SAAAuD,GAAAvD,GACA7hC,KAAAohC,WAAA6D,gBAAApD,GAQA,SAAAwD,GAAAxD,GACA7hC,KAAAohC,WAAA6D,gBAAApD,GAQA,SAAAyD,GAAAzD,GACA7hC,KAAAohC,WAAA6D,gBAAApD,GAQA,SAAA0D,GAAA1D,GACA7hC,KAAAohC,WAAA6D,gBAAApD,GAQA,SAAA2D,GAAA3D,GACA7hC,KAAAohC,WAAA6D,gBAAApD,GAEA,IAsBe4D,GAtBf,SAAA50B,GAKA,SAAA60B,EAAAtE,GACA,IACAC,EAAA,CACAsE,YAAAX,GACAY,YAAAV,GACAW,UAAAV,GACAW,WAAAV,GACAW,YAAAV,GACAW,cAAAV,GACAW,kBAAAT,GACAU,mBAAAX,IAGA,OADA10B,EAAAxT,KAAA2C,KAAAohC,EAAAC,IAAArhC,KAGA,OAnBI+kC,GAASW,EAAA70B,GAmBb60B,EApBA,CAqBExE,ICvIEiF,GAAyB,WAC7B,IAAA91B,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8C7B01B,IAAA,EACAC,GAAA,SAAAx1B,GAaA,SAAAw1B,EAAAjjC,EAAA87B,EAAAoH,GACA,IAAAt1B,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAKAgR,EAAAkuB,gBACA,IAAAqH,EAAAD,GAAA,GA2GA,OAvGAt1B,EAAAw1B,QA+GA,SAAAD,GAsBA,IAAAC,EACA,GAAAD,EAAAC,SAAAJ,GACAI,EAAAD,EAAAC,aAGA,OAAAD,EAAAE,OACA,OACAD,EAAA,EACA,MACA,OACAA,EAAA,EACA,MACA,OACAA,EAAA,EACA,MACA,QAAAA,EAAA,EAGA,OAAAA,EAvJAE,CAAAH,GAIAv1B,EAAA21B,SA0JA,SAAAJ,EAAAC,GAGA,IAAAG,EAAA,EAEAA,EADAJ,EAAAI,SACAJ,EAAAI,SAGAH,EAAA,KAEA,OAAAG,EApKAC,CAAAL,EAAAv1B,EAAAw1B,SAKAx1B,EAAA61B,QAAA,YAAAN,KAAA,QAIAv1B,EAAA81B,WAAA,eAAAP,KAAA,WAIAv1B,EAAA+1B,KAAA,SAAAR,IAAA,UAIAv1B,EAAAg2B,OAAA,WAAAT,IAAA,YAIAv1B,EAAAi2B,QAAA,YAAAV,IAAA,UAIAv1B,EAAAk2B,QAAA,YAAAX,IAAA,UAIAv1B,EAAAsyB,QAAA,YAAAiD,IAAA,UAIAv1B,EAAAuyB,QAAA,YAAAgD,IAAA,UAIAv1B,EAAAm2B,QAAA,YAAAZ,KAAA,QAIAv1B,EAAAo2B,OAAA,WAAAb,KAAA,OAIAv1B,EAAAq2B,SAAA,aAAAd,KAAA,SAIAv1B,EAAAs2B,QAAA,YAAAf,KAAA,QAIAv1B,EAAAsxB,OAAA,WAAAiE,IAAA,SAIAv1B,EAAAu2B,cAAA,kBAAAhB,EACAA,EAAA,mBAMAv1B,EAAA+xB,UAAA,cAAAwD,IAAA,YAIAv1B,EAAArF,MAAA,UAAA46B,IAAA,QAIAv1B,EAAApQ,OAAA,WAAA2lC,IAAA,SAIAv1B,EAAAw2B,MAAA,UAAAjB,IAAA,QAIAv1B,EAAAy2B,MAAA,UAAAlB,IAAA,QAIAv1B,EAAAiyB,YAAA,gBAAAsD,IAAA,eAIAv1B,EAAA02B,YAAA,gBAAAnB,IAAA,cAIAv1B,EAAAgyB,UAAA,cAAAuD,KAAA,UAEArH,EAAA1qB,iBACAxD,EAAAwD,eAAA,WACA0qB,EAAA1qB,mBAGAxD,EAEA,OAhIIm1B,GAASE,EAAAx1B,GAgIbw1B,EAjIA,CAkIEhyB,IAmEF,WACA,IACA,IAAAszB,EAAA,IAAAC,WAAA,SAA0CpB,QAAA,IAC1CJ,GAAA,IAAAuB,EAAAnB,QAEA,MAAAtnC,KALA,GASe,IAAA2oC,GAAA,GC7PXC,GAAyB,WAC7B,IAAAz3B,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2D7B,SAAAq3B,GAAAlG,GACA7hC,KAAAgoC,eAAAnG,GACA7hC,KAAAioC,iBAAApG,EAAAqG,eAAA,IACAloC,KAAAmoC,iBAAAtG,GACA7hC,KAAAooC,cACApoC,KAAAqoC,gBAAAxG,EAAA7hC,KAAAsoC,WAQA,SAAAC,GAAA1G,GACA7hC,KAAAqoC,gBAAAxG,EAAA7hC,KAAAwoC,cASA,SAAAC,GAAA5G,GACA7hC,KAAAmoC,iBAAAtG,GACA7hC,KAAAqoC,gBAAAxG,EAAA7hC,KAAA0oC,QASA,SAAAC,GAAA9G,GACA7hC,KAAAqoC,gBAAAxG,EAAA7hC,KAAA4oC,YAEA,IA6SeC,GA7SA,SAAAh4B,GAMf,SAAAi4B,EAAA1H,EAAA2H,GACA,IAAA/3B,EAAAhR,KACAqhC,EAAA,CACA0G,cACAQ,aACAE,YACAE,gBAmCA,OAjCA33B,EAAAH,EAAAxT,KAAA2C,KAAAohC,EAAAC,IAAArhC,MAKA+hC,WAAAX,EAAAW,WAKA/wB,EAAA+3B,cAKA/3B,EAAAg4B,mBAAAp2B,EAKA5B,EAAAo3B,YAAA,EAKAp3B,EAAAi4B,SAOAj4B,EAAAk4B,cAAA,KACAl4B,EA4PA,OA1SI82B,GAASgB,EAAAj4B,GAqDbi4B,EAAAhqC,UAAAqqC,gBAAA,SAAAC,GACA,OAAAppC,KAAAgpC,gBAAAI,EAAAC,YAOAP,EAAAhqC,UAAAmpC,iBAAA,SAAAmB,GACA,IAAAE,EAAA1rC,OAAAmP,KAAA/M,KAAA+hC,YAAAhiC,QACA,IAAAupC,GAAA,IAAAA,GAA2C5H,GAAUx0B,aAAAlN,KAAA+hC,cACrD/hC,KAAAgpC,cAAAI,EAAAC,WACArpC,KAAAupC,2BAOAT,EAAAhqC,UAAA0qC,sBAAA,SAAAC,GACAA,EAAAzG,YACAhjC,KAAAgpC,mBAAAp2B,EACA5S,KAAA0pC,qBAMAZ,EAAAhqC,UAAA4qC,iBAAA,WACA1pC,KAAAipC,SAAA/6B,WAAAlO,KAAA2pC,wBAAAjrC,KAAAsB,MApIA,MAyIA8oC,EAAAhqC,UAAA6qC,wBAAA,WACA3pC,KAAAooC,YAAA,EACApoC,KAAAipC,cAAAr2B,GAKAk2B,EAAAhqC,UAAAyqC,uBAAA,gBACA32B,IAAA5S,KAAAipC,UACAW,aAAA5pC,KAAAipC,WASAH,EAAAhqC,UAAA+qC,gBAAA,SAAA7K,EAAAoK,GACA,IAAAlqC,EAAAc,KAAAohC,WAAAyB,WAAA7D,EAAAoK,GAuBA,OAnBAlqC,EAAA6jC,UAAAqG,EAAAC,WAAA,EAGAnqC,EAAA2nC,SAAA,EACA3nC,EAAA4nC,YAAA,EACA5nC,EAAA8nC,OAAAhnC,KAAAooC,YACAlpC,EAAAojC,OAAA,EACApjC,EAAAsnC,QAAA,EACAtnC,EAAAyM,MAAAy9B,EAAAU,SAAA,EACA5qC,EAAA0B,OAAAwoC,EAAAW,SAAA,EACA7qC,EAAAynC,SAAAyC,EAAAY,OAAA,GACA9qC,EAAA8jC,UAAAhjC,KAAAmpC,gBAAAC,GACAlqC,EAAA+jC,YAxKgB,QA2KhB/jC,EAAAokC,QAAA8F,EAAA9F,QACApkC,EAAAqkC,QAAA6F,EAAA7F,QACArkC,EAAA+nC,QAAAmC,EAAAnC,QACA/nC,EAAAgoC,QAAAkC,EAAAlC,QACAhoC,GAOA4pC,EAAAhqC,UAAAupC,gBAAA,SAAAxG,EAAAoI,GACA,IAAAC,EAAA99B,MAAAtN,UAAA0C,MAAAnE,KAAAwkC,EAAAqG,gBACAoB,EAAAY,EAAAnqC,OACA,SAAAyU,IACAqtB,EAAArtB,iBAEA,QAAAtX,EAAA,EAAuBA,EAAAosC,IAAWpsC,EAAA,CAClC,IAAAitC,EAAAnqC,KAAA6pC,gBAAAhI,EAAAqI,EAAAhtC,IAEAitC,EAAA31B,iBACAy1B,EAAA5sC,KAAA2C,KAAA6hC,EAAAsI,KASArB,EAAAhqC,UAAAsrC,WAAA,SAAAC,EAAAC,GAEA,IADA,IAAAntC,EAAAktC,EAAAtqC,OACA7C,EAAA,EAAuBA,EAAAC,EAAOD,IAAA,CAE9B,GADAmtC,EAAAntC,GACAmsC,aAAAiB,EACA,SAGA,UAaAxB,EAAAhqC,UAAAkpC,eAAA,SAAAnG,GACA,IAAAwI,EAAAxI,EAAAqI,QAGAn9B,EAAAnP,OAAAmP,KAAA/M,KAAA+hC,YACAuH,EAAAv8B,EAAAhN,OACA,GAAAupC,GAAAe,EAAAtqC,OAAA,CAEA,IADA,IAAAvC,EAAA,GACAN,EAAA,EAA2BA,EAAAosC,IAAWpsC,EAAA,CACtC,IAAAuB,EAAA8rC,OAAAx9B,EAAA7P,IACAiB,EAAA6B,KAAA+hC,WAAAtjC,GAIAA,GAA2BijC,IAAU1hC,KAAAoqC,WAAAC,EAAA5rC,EAAA,IACrCjB,EAAAsD,KAAA3C,EAAAqsC,KAGA,IAAAttC,EAAA,EAA2BA,EAAAM,EAAAuC,SAAc7C,EACzC8C,KAAA4oC,WAAA/G,EAAArkC,EAAAN,MASA4rC,EAAAhqC,UAAAwpC,UAAA,SAAAtJ,EAAAyK,GACAzpC,KAAA+hC,WAAA0H,EAAA1G,WAAA,CACAtxB,OAAAg4B,EAAAh4B,OACA+4B,IAAAf,EACAgB,UAAAhB,EAAAh4B,QAEAzR,KAAAohC,WAAAsJ,KAAAjB,EAAAzK,GACAh/B,KAAAohC,WAAAuJ,MAAAlB,EAAAzK,GACAh/B,KAAAohC,WAAAc,KAAAuH,EAAAzK,IAOA8J,EAAAhqC,UAAA0pC,aAAA,SAAAxJ,EAAAyK,GACA,IAAAj6B,EAAAi6B,EACAU,EAAAnqC,KAAA+hC,WAAAvyB,EAAAuzB,WAEA,GAAAoH,EAAA,CAGA,IAAAS,EAAAT,EAAAK,IACAC,EAAAN,EAAAM,UACAzqC,KAAAohC,WAAAgB,KAAA5yB,EAAAwvB,GACA4L,GAAAH,IAAAj7B,EAAAiC,SACAm5B,EAAArD,cAAA/3B,EAAAiC,OAC8B,EAAA81B,cAAAkD,EAE9BG,EAAAn5B,OAAAg5B,EACAj7B,EAAAiC,QACAzR,KAAAohC,WAAAwB,SAAAgI,EAAA5L,GACAh/B,KAAAohC,WAAAsB,UAAAlzB,EAAAwvB,KAIkC,EAAAvtB,OAAAg5B,EACA,EAAAlD,cAAA,KAClCvnC,KAAA4oC,WAAA5J,EAAAxvB,KAGA26B,EAAAK,IAAAh7B,EACA26B,EAAAM,UAAAj7B,EAAAiC,SAOAq3B,EAAAhqC,UAAA4pC,OAAA,SAAA1J,EAAAyK,GACAzpC,KAAAohC,WAAAmB,GAAAkH,EAAAzK,GACAh/B,KAAAohC,WAAAoJ,IAAAf,EAAAzK,GACAh/B,KAAAohC,WAAAyJ,MAAApB,EAAAzK,GACAh/B,KAAA8qC,gBAAArB,IAOAX,EAAAhqC,UAAA8pC,WAAA,SAAA5J,EAAAyK,GACAzpC,KAAAohC,WAAAY,OAAAyH,EAAAzK,GACAh/B,KAAAohC,WAAAoJ,IAAAf,EAAAzK,GACAh/B,KAAAohC,WAAAyJ,MAAApB,EAAAzK,GACAh/B,KAAA8qC,gBAAArB,IAMAX,EAAAhqC,UAAAgsC,gBAAA,SAAArB,UACAzpC,KAAA+hC,WAAA0H,EAAA1G,WACA/iC,KAAAwpC,sBAAAC,IAQAX,EAAAhqC,UAAAqpC,iBAAA,SAAAtG,GACA,IAAAwB,EAAArjC,KAAA+oC,YAAA3F,YACAhlC,EAAAyjC,EAAAqG,eAAA,GAEA,GAAAloC,KAAAmpC,gBAAA/qC,GAAA,CAEA,IAAA2sC,EAAA,CAAA3sC,EAAAklC,QAAAllC,EAAAmlC,SACAF,EAAAviC,KAAAiqC,GACA78B,WAAA,W9CjQO,IAAe3J,EAAAkF,EACtBvM,EADsBuM,E8CmQAshC,E9ClQtB7tC,GADsBqH,E8CmQA8+B,G9ClQtBhjC,QAAAoJ,GACAvM,GAAA,GAEAqH,EAAA3C,OAAA1E,EAAA,I8CgQa8C,KAAAkpC,iBAGbJ,EA3Se,CA4Sb5H,IC5YE8J,GAAyB,WAC7B,IAAA36B,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAsD7Bu6B,GAAA,CAEA,eACA,kBACA,cACA,gBACA,cACA,cACA,cACA,cACA,eACA,cACA,gBACA,eACA,aACA,uBAEA,cAEA,gBACA,YACA,aACA,eACA,YACA,YACA,mBACA,kBACA,iBAEA,YACA,gBACA,uBACA,aA4SeC,GA1SQ,SAAAr6B,GAKvB,SAAAs6B,EAAAvyB,GACA,IAAA5H,EAAAH,EAAAxT,KAAA2C,YAuBA,OAjBAgR,EAAAo6B,SAAAxyB,EAKA5H,EAAA+wB,WAAA,GAKA/wB,EAAAq6B,UAAA,GAKAr6B,EAAAs6B,iBAAA,GACAt6B,EAAAu6B,kBACAv6B,EA2QA,OAvSIg6B,GAASG,EAAAt6B,GAkCbs6B,EAAArsC,UAAAysC,gBAAA,WACA,GAAYvL,GACZhgC,KAAAwrC,eAAA,aAA8C/F,GAAYzlC,YAE1D,GAAiBigC,GACjBjgC,KAAAwrC,eAAA,SAA0CnH,GAAQrkC,WAElD,CACA,IAAA+oC,EAAA,IAAkC7F,GAAWljC,MAC7CA,KAAAwrC,eAAA,QAAAzC,GACgBhJ,IAChB//B,KAAAwrC,eAAA,YAAiD3C,GAAW7oC,KAAA+oC,IAI5D/oC,KAAAyrC,aAQAN,EAAArsC,UAAA0sC,eAAA,SAAA/tC,EAAA6P,GACA,IAAArO,EAAAqO,EACAo+B,EAAAzsC,EAAAsiC,YACAmK,IACAA,EAAAjyB,QAAA,SAAAva,GACA,IAAAysC,EAAA1sC,EAAAuiC,mBAAAtiC,GACAysC,IACA3rC,KAAAqrC,UAAAnsC,GAAAysC,EAAAjtC,KAAAO,KAEaP,KAAAsB,OACbA,KAAAsrC,iBAAAxqC,KAAA7B,KAOAksC,EAAArsC,UAAA2sC,UAAA,WAEA,IADA,IAAAtuC,EAAA6C,KAAAsrC,iBAAAvrC,OACA7C,EAAA,EAAuBA,EAAAC,EAAOD,IAAA,CAC9B,IAAA0uC,EAAA5rC,KAAAsrC,iBAAApuC,GACA8C,KAAA6rC,WAAAD,EAAArK,eAOA4J,EAAArsC,UAAAgtC,YAAA,WAEA,IADA,IAAA3uC,EAAA6C,KAAAsrC,iBAAAvrC,OACA7C,EAAA,EAAuBA,EAAAC,EAAOD,IAAA,CAC9B,IAAA0uC,EAAA5rC,KAAAsrC,iBAAApuC,GACA8C,KAAA+rC,cAAAH,EAAArK,eAQA4J,EAAArsC,UAAAktC,cAAA,SAAAnK,GACA,IAAAz+B,EAAAy+B,EAAAz+B,KACAuoC,EAAA3rC,KAAAqrC,UAAAjoC,GACAuoC,GACAA,EAAA9J,IAQAsJ,EAAArsC,UAAA+sC,WAAA,SAAAI,GACAA,EAAAxyB,QAAA,SAAAyyB,GACY/4B,EAAMnT,KAAAorC,SAAAc,EAAAlsC,KAAAgsC,cAAAhsC,OACTtB,KAAAsB,QAOTmrC,EAAArsC,UAAAitC,cAAA,SAAAE,GACAA,EAAAxyB,QAAA,SAAAva,GACYwU,EAAQ1T,KAAAorC,SAAAlsC,EAAAc,KAAAgsC,cAAAhsC,OACXtB,KAAAsB,QAWTmrC,EAAArsC,UAAA+jC,WAAA,SAAArzB,EAAAqyB,GAEA,IADA,IAAAsK,EAAA,GACAjvC,EAAA,EAAA0U,EAAAq5B,GAAAlrC,OAAgD7C,EAAA0U,EAAQ1U,IAAA,CACxD,IAAA8B,EAAAisC,GAAA/tC,GAAA,GACAivC,EAAAntC,GAAAwQ,EAAAxQ,IAAA6iC,EAAA7iC,IAAAisC,GAAA/tC,GAAA,GAEA,OAAAivC,GAQAhB,EAAArsC,UAAAojC,KAAA,SAAAjhC,EAAAuO,GACAxP,KAAAosC,UAAuBnL,GAAgBX,YAAAr/B,EAAAuO,IAOvC27B,EAAArsC,UAAAsjC,KAAA,SAAAnhC,EAAAuO,GACAxP,KAAAosC,UAAuBnL,GAAgBZ,YAAAp/B,EAAAuO,IAOvC27B,EAAArsC,UAAAyjC,GAAA,SAAAthC,EAAAuO,GACAxP,KAAAosC,UAAuBnL,GAAgBV,UAAAt/B,EAAAuO,IAOvC27B,EAAArsC,UAAA6rC,MAAA,SAAA1pC,EAAAuO,GACAvO,EAAA4lC,SAAA,EACA7mC,KAAAosC,UAAuBnL,GAAgBP,aAAAz/B,EAAAuO,IAOvC27B,EAAArsC,UAAA+rC,MAAA,SAAA5pC,EAAAuO,GACAvO,EAAA4lC,SAAA,EACA7mC,KAAAosC,UAAuBnL,GAAgBN,aAAA1/B,EAAAuO,IAOvC27B,EAAArsC,UAAA4rC,KAAA,SAAAzpC,EAAAuO,GACAvO,EAAA4lC,SAAA,EACA7mC,KAAAosC,UAAuBnL,GAAgBT,YAAAv/B,EAAAuO,IAOvC27B,EAAArsC,UAAA0rC,IAAA,SAAAvpC,EAAAuO,GACAvO,EAAA4lC,SAAA,EACA7mC,KAAAosC,UAAuBnL,GAAgBR,WAAAx/B,EAAAuO,IAOvC27B,EAAArsC,UAAAkjC,OAAA,SAAA/gC,EAAAuO,GACAxP,KAAAosC,UAAuBnL,GAAgBL,cAAA3/B,EAAAuO,IAOvC27B,EAAArsC,UAAA8jC,SAAA,SAAA3hC,EAAAuO,GACAxP,KAAAwqC,IAAAvpC,EAAAuO,GACAxP,KAAAqsC,UAAAprC,EAAAwQ,OAAAxQ,EAAAsmC,gBACAvnC,KAAA6qC,MAAA5pC,EAAAuO,IAQA27B,EAAArsC,UAAA4jC,UAAA,SAAAzhC,EAAAuO,GACAxP,KAAA0qC,KAAAzpC,EAAAuO,GACAxP,KAAAqsC,UAAAprC,EAAAwQ,OAAAxQ,EAAAsmC,gBACAvnC,KAAA2qC,MAAA1pC,EAAAuO,IAUA27B,EAAArsC,UAAAutC,UAAA,SAAAC,EAAAC,GACA,SAAAD,IAAAC,IAGAD,EAAAE,SAAAD,IAYApB,EAAArsC,UAAAqlC,UAAA,SAAAsI,EAAAxrC,EAAAuO,GACA,WAAmBq4B,GAAY4E,EAAAj9B,EAAAvO,IAQ/BkqC,EAAArsC,UAAAstC,UAAA,SAAAK,EAAAxrC,EAAAuO,GACA,IAAAtQ,EAAAc,KAAAmkC,UAAAsI,EAAAxrC,EAAAuO,GACAxP,KAAA+U,cAAA7V,IAOAisC,EAAArsC,UAAAmmC,gBAAA,SAAAz1B,GACA,IAAAtQ,EAAAc,KAAAmkC,UAAA30B,EAAApM,KAAAoM,KACAxP,KAAA+U,cAAA7V,IASAisC,EAAArsC,UAAA4tC,eAAA,SAAAz0B,EAAAzI,GAEA,OADAxP,KAAAmkC,UAAAlsB,EAAqDgqB,GAAiBzyB,EAAAxP,MAAAwP,IAMtE27B,EAAArsC,UAAAkV,gBAAA,WACAhU,KAAA8rC,cACAj7B,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAEAmrC,EAxSuB,CAySrBz2B,GCpYEi4B,GAAyB,WAC7B,IAAAt8B,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4Rdk8B,GArQW,SAAA/7B,GAM1B,SAAAg8B,EAAA5/B,EAAA6/B,GACA,IAAA97B,EAAAH,EAAAxT,KAAA2C,YAMAgR,EAAA+7B,KAAA9/B,EAKA+D,EAAAg8B,gBAKAh8B,EAAAi8B,WAAA,EAKAj8B,EAAAk8B,kBAAA,GAKAl8B,EAAAm8B,eAAAL,EACAA,EAA4BjN,GAAqBA,GAOjD7uB,EAAAo8B,MAAA,KACA,IAAAx0B,EAAA5H,EAAA+7B,KAAAM,cAqCA,OAhCAr8B,EAAAs8B,gBAAA,EAKAt8B,EAAAu8B,gBAAA,GAQAv8B,EAAAw8B,qBAAA,IAAyCtC,GAAmBtyB,GAQ5D5H,EAAAy8B,6BAAA,KAKAz8B,EAAA08B,wBAAwCv6B,EAAMnC,EAAAw8B,qBAA6BvM,GAAgBX,YAAAtvB,EAAA28B,mBAAA38B,GAK3FA,EAAA48B,oBAAoCz6B,EAAMnC,EAAAw8B,qBAA6BvM,GAAgBZ,YAAArvB,EAAA68B,YAAA78B,GACvFA,EAoLA,OAlQI27B,GAASE,EAAAh8B,GAqFbg8B,EAAA/tC,UAAAgvC,cAAA,SAAA9M,GACA,IAAA+M,EAAA,IAA2BjN,GAAuBZ,GAAmBzqB,MAAAzV,KAAA+sC,KAAA/L,GACrEhhC,KAAA+U,cAAAg5B,QACAn7B,IAAA5S,KAAAgtC,iBAEApD,aAAA5pC,KAAAgtC,iBACAhtC,KAAAgtC,qBAAAp6B,EACAm7B,EAAA,IAA2BjN,GAAuBZ,GAAmBxqB,SAAA1V,KAAA+sC,KAAA/L,GACrEhhC,KAAA+U,cAAAg5B,IAIA/tC,KAAAgtC,gBAAA9+B,WAAA,WACAlO,KAAAgtC,qBAAAp6B,EACA,IAAAm7B,EAAA,IAAmCjN,GAAuBZ,GAAmBC,YAAAngC,KAAA+sC,KAAA/L,GAC7EhhC,KAAA+U,cAAAg5B,IACarvC,KAAAsB,MAAA,MAUb6sC,EAAA/tC,UAAAkvC,sBAAA,SAAAhN,GACA,IAAAxxB,EAAAwxB,EACAxxB,EAAApM,MAA0B88B,GAAmBK,WAC7C/wB,EAAApM,MAA0B88B,GAAmBU,qBAC7C5gC,KAAAutC,gBAAA/9B,EAAAuzB,WAEAvzB,EAAApM,MAA+B88B,GAAmBI,cAClDtgC,KAAAutC,gBAAA/9B,EAAAuzB,YAAA,GAEA/iC,KAAAstC,gBAAA1vC,OAAAmP,KAAA/M,KAAAutC,iBAAAxtC,QAOA8sC,EAAA/tC,UAAAmvC,iBAAA,SAAAjN,GACAhhC,KAAAguC,sBAAAhN,GACA,IAAA+M,EAAA,IAA2BjN,GAAuBZ,GAAmBK,UAAAvgC,KAAA+sC,KAAA/L,GACrEhhC,KAAA+U,cAAAg5B,GAOAA,EAAAx5B,oBAAAvU,KAAAitC,YAAAjtC,KAAAkuC,qBAAAlN,IACAhhC,KAAA8tC,cAAA9tC,KAAAotC,OAEA,IAAAptC,KAAAstC,kBACAttC,KAAAktC,kBAAAzzB,QAA2ClG,GAC3CvT,KAAAktC,kBAAAntC,OAAA,EACAC,KAAAitC,WAAA,EACAjtC,KAAAotC,MAAA,KACAptC,KAAAytC,6BAAA15B,UACA/T,KAAAytC,6BAAA,OASAZ,EAAA/tC,UAAAovC,qBAAA,SAAAlN,GACA,WAAAA,EAAAsB,QAOAuK,EAAA/tC,UAAA6uC,mBAAA,SAAA3M,GACAhhC,KAAAguC,sBAAAhN,GACA,IAAA+M,EAAA,IAA2BjN,GAAuBZ,GAAmBI,YAAAtgC,KAAA+sC,KAAA/L,GACrEhhC,KAAA+U,cAAAg5B,GACA/tC,KAAAotC,MAAApM,EACA,IAAAhhC,KAAAktC,kBAAAntC,SAKAC,KAAAytC,6BACA,IAAoBvC,GAAmBt7B,UACvC5P,KAAAktC,kBAAApsC,KAAwCqS,EAAMnT,KAAAytC,6BAAoCvN,GAAmBG,YAAArgC,KAAAmuC,mBAAAnuC,MAA8CmT,EAAMnT,KAAAytC,6BAAoCvN,GAAmBK,UAAAvgC,KAAAiuC,iBAAAjuC,MAcpMmT,EAAMnT,KAAAwtC,qBAA4BtN,GAAmBU,cAAA5gC,KAAAiuC,iBAAAjuC,SAQjE6sC,EAAA/tC,UAAAqvC,mBAAA,SAAAnN,GAIA,GAAAhhC,KAAAouC,UAAApN,GAAA,CACAhhC,KAAAitC,WAAA,EACA,IAAAc,EAAA,IAA+BjN,GAAuBZ,GAAmBE,YAAApgC,KAAA+sC,KAAA/L,EAAAhhC,KAAAitC,WACzEjtC,KAAA+U,cAAAg5B,GAMA/M,EAAAxsB,kBASAq4B,EAAA/tC,UAAA+uC,YAAA,SAAA7M,GACA,IAAA3B,KAAAr/B,KAAAotC,QAAAptC,KAAAouC,UAAApN,IACAhhC,KAAA+U,cAAA,IAA+B+rB,GAAsBE,EAAA59B,KAAApD,KAAA+sC,KAAA/L,EAAA3B,KAQrDwN,EAAA/tC,UAAAsvC,UAAA,SAAApN,GACA,OAAAhhC,KAAAitC,WACA5tC,KAAA6L,IAAA81B,EAAAsC,QAAAtjC,KAAAotC,MAAA9J,SAAAtjC,KAAAmtC,gBACA9tC,KAAA6L,IAAA81B,EAAAuC,QAAAvjC,KAAAotC,MAAA7J,SAAAvjC,KAAAmtC,gBAKAN,EAAA/tC,UAAAkV,gBAAA,WACAhU,KAAA4tC,sBACYr6B,EAAavT,KAAA4tC,qBACzB5tC,KAAA4tC,oBAAA,MAEA5tC,KAAA0tC,0BACYn6B,EAAavT,KAAA0tC,yBACzB1tC,KAAA0tC,wBAAA,MAEA1tC,KAAAktC,kBAAAzzB,QAAuClG,GACvCvT,KAAAktC,kBAAAntC,OAAA,EACAC,KAAAytC,+BACAztC,KAAAytC,6BAAA15B,UACA/T,KAAAytC,6BAAA,MAEAztC,KAAAwtC,uBACAxtC,KAAAwtC,qBAAAz5B,UACA/T,KAAAwtC,qBAAA,MAEA38B,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAEA6sC,EAnQ0B,CAoQxBn4B,GCrRa25B,GAMf,aANeA,GAYf,YAZeA,GAkBf,UClBeC,GAAA,CACfC,WAAA,aACAC,KAAA,OACAC,OAAA,SACAC,KAAA,QCJeC,GAMf,YANeA,GAYf,aAZeA,GAkBf,aAlBeA,GAwBf,cAxBeA,GA+Bf,iBC/BeC,GAAA,CACfC,KAAA,EACAC,QAAA,EACAC,OAAA,EAKAz5B,MAAA,EACA05B,MAAA,EACAC,MAAA,GC8NeC,GAzNE,WAKjB,SAAAC,EAAAC,EAAAC,GAKArvC,KAAAsvC,kBAAAF,EAKApvC,KAAAuvC,aAAAF,EAKArvC,KAAAwvC,UAAA,GAKAxvC,KAAAyvC,YAAA,GAKAzvC,KAAA0vC,gBAAA,GAyLA,OApLAP,EAAArwC,UAAAsB,MAAA,WACAJ,KAAAwvC,UAAAzvC,OAAA,EACAC,KAAAyvC,YAAA1vC,OAAA,EACQK,EAAKJ,KAAA0vC,kBAMbP,EAAArwC,UAAA6wC,QAAA,WACA,IAAAC,EAAA5vC,KAAAwvC,UACAK,EAAA7vC,KAAAyvC,YACA72B,EAAAg3B,EAAA,GACA,GAAAA,EAAA7vC,QACA6vC,EAAA7vC,OAAA,EACA8vC,EAAA9vC,OAAA,IAGA6vC,EAAA,GAAAA,EAAA/uC,MACAgvC,EAAA,GAAAA,EAAAhvC,MACAb,KAAA8vC,QAAA,IAEA,IAAAC,EAAA/vC,KAAAuvC,aAAA32B,GAEA,cADA5Y,KAAA0vC,gBAAAK,GACAn3B,GAOAu2B,EAAArwC,UAAAkxC,QAAA,SAAAp3B,GACQsB,IAAMla,KAAAuvC,aAAA32B,KAAA5Y,KAAA0vC,iBAAA,IACd,IAAAO,EAAAjwC,KAAAsvC,kBAAA12B,GACA,OAAAq3B,GAlFOjlC,MAmFPhL,KAAAwvC,UAAA1uC,KAAA8X,GACA5Y,KAAAyvC,YAAA3uC,KAAAmvC,GACAjwC,KAAA0vC,gBAAA1vC,KAAAuvC,aAAA32B,KAAA,EACA5Y,KAAAkwC,UAAA,EAAAlwC,KAAAwvC,UAAAzvC,OAAA,IACA,IAOAovC,EAAArwC,UAAAqxC,SAAA,WACA,OAAAnwC,KAAAwvC,UAAAzvC,QAQAovC,EAAArwC,UAAAsxC,mBAAA,SAAA7gC,GACA,SAAAA,EAAA,GAQA4/B,EAAArwC,UAAAuxC,oBAAA,SAAA9gC,GACA,SAAAA,EAAA,GAQA4/B,EAAArwC,UAAAwxC,gBAAA,SAAA/gC,GACA,OAAAA,EAAA,MAMA4/B,EAAArwC,UAAAyxC,SAAA,WACA,IAAArzC,EACA,IAAAA,GAAA8C,KAAAwvC,UAAAzvC,QAAA,KAAkD7C,GAAA,EAAQA,IAC1D8C,KAAA8vC,QAAA5yC,IAMAiyC,EAAArwC,UAAAkT,QAAA,WACA,WAAAhS,KAAAwvC,UAAAzvC,QAMAovC,EAAArwC,UAAA0xC,YAAA,SAAA/xC,GACA,OAAAA,KAAAuB,KAAA0vC,iBAMAP,EAAArwC,UAAA2xC,SAAA,SAAA73B,GACA,OAAA5Y,KAAAwwC,YAAAxwC,KAAAuvC,aAAA32B,KAMAu2B,EAAArwC,UAAAgxC,QAAA,SAAAvgC,GAOA,IANA,IAAAqgC,EAAA5vC,KAAAwvC,UACAK,EAAA7vC,KAAAyvC,YACAnG,EAAAsG,EAAA7vC,OACA6Y,EAAAg3B,EAAArgC,GACA0gC,EAAAJ,EAAAtgC,GACAmhC,EAAAnhC,EACAA,EAAA+5B,GAAA,IACA,IAAAqH,EAAA3wC,KAAAowC,mBAAA7gC,GACAqhC,EAAA5wC,KAAAqwC,oBAAA9gC,GACAshC,EAAAD,EAAAtH,GACAuG,EAAAe,GAAAf,EAAAc,GACAC,EAAAD,EACAf,EAAArgC,GAAAqgC,EAAAiB,GACAhB,EAAAtgC,GAAAsgC,EAAAgB,GACAthC,EAAAshC,EAEAjB,EAAArgC,GAAAqJ,EACAi3B,EAAAtgC,GAAA0gC,EACAjwC,KAAAkwC,UAAAQ,EAAAnhC,IAOA4/B,EAAArwC,UAAAoxC,UAAA,SAAAQ,EAAAnhC,GAKA,IAJA,IAAAqgC,EAAA5vC,KAAAwvC,UACAK,EAAA7vC,KAAAyvC,YACA72B,EAAAg3B,EAAArgC,GACA0gC,EAAAJ,EAAAtgC,GACAA,EAAAmhC,GAAA,CACA,IAAAI,EAAA9wC,KAAAswC,gBAAA/gC,GACA,KAAAsgC,EAAAiB,GAAAb,GAMA,MALAL,EAAArgC,GAAAqgC,EAAAkB,GACAjB,EAAAtgC,GAAAsgC,EAAAiB,GACAvhC,EAAAuhC,EAMAlB,EAAArgC,GAAAqJ,EACAi3B,EAAAtgC,GAAA0gC,GAKAd,EAAArwC,UAAAiyC,aAAA,WACA,IAKAn4B,EAAA1b,EAAA+yC,EALAb,EAAApvC,KAAAsvC,kBACAM,EAAA5vC,KAAAwvC,UACAK,EAAA7vC,KAAAyvC,YACAlgC,EAAA,EACA5Q,EAAAixC,EAAA7vC,OAEA,IAAA7C,EAAA,EAAmBA,EAAAyB,IAAOzB,GAE1B+yC,EAAAb,EADAx2B,EAAAg3B,EAAA1yC,MAtNO8N,WAyNPhL,KAAA0vC,gBAAA1vC,KAAAuvC,aAAA32B,KAGAi3B,EAAAtgC,GAAA0gC,EACAL,EAAArgC,KAAAqJ,GAGAg3B,EAAA7vC,OAAAwP,EACAsgC,EAAA9vC,OAAAwP,EACAvP,KAAAuwC,YAEApB,EAvNiB,GCrBb6B,GAAyB,WAC7B,IAAA3gC,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgIdugC,GAzGF,SAAApgC,GAMb,SAAAqgC,EAAAC,EAAAC,GACA,IAAApgC,EAAAH,EAAAxT,KAAA2C,KAKA,SAAA4Y,GACA,OAAAu4B,EAAAjvC,MAAA,KAAA0W,IAMA,SAAAA,GACA,OAA4DA,EAAA,GAAAy4B,YACnDrxC,KAgBT,OAXAgR,EAAAsgC,oBAAAF,EAKApgC,EAAAugC,cAAA,EAKAvgC,EAAAwgC,kBAAA,GACAxgC,EAkEA,OAtGIggC,GAASE,EAAArgC,GAyCbqgC,EAAApyC,UAAAkxC,QAAA,SAAAp3B,GACA,IAAA64B,EAAA5gC,EAAA/R,UAAAkxC,QAAA3yC,KAAA2C,KAAA4Y,GACA64B,GAEYt+B,EADZyF,EAAA,GACyBxD,EAASC,OAAArV,KAAA0xC,iBAAA1xC,MAElC,OAAAyxC,GAKAP,EAAApyC,UAAA6yC,gBAAA,WACA,OAAA3xC,KAAAuxC,eAMAL,EAAApyC,UAAA4yC,iBAAA,SAAAliC,GACA,IAAAoiC,EAA0DpiC,EAAA,OAC1DqiC,EAAAD,EAAAE,WACA,GAAAF,EAAAG,MAAAF,IAAmCjD,GAASG,QAAA8C,IAAqBjD,GAASt5B,OAC1Eu8B,IAAsBjD,GAASI,OAAA6C,IAAoBjD,GAASK,MAAA,CAChDv7B,EAAQk+B,EAAOx8B,EAASC,OAAArV,KAAA0xC,iBAAA1xC,MACpC,IAAAgyC,EAAAJ,EAAAP,SACAW,KAAAhyC,KAAAwxC,2BACAxxC,KAAAwxC,kBAAAQ,KACAhyC,KAAAuxC,eAEAvxC,KAAAsxC,wBAOAJ,EAAApyC,UAAAmzC,cAAA,SAAAC,EAAAC,GAIA,IAHA,IAEAN,EAAAD,EAAAI,EAFAI,EAAA,EACAC,GAAA,EAEAryC,KAAAuxC,cAAAW,GAAAE,EAAAD,GACAnyC,KAAAmwC,WAAA,GAEA6B,GADAJ,EAA0D5xC,KAAA2vC,UAAA,IAC1D0B,UACAQ,EAAAD,EAAAE,cAC0BlD,GAASK,MACnCoD,GAAA,EAEAR,IAA+BjD,GAASC,MAAAmD,KAAAhyC,KAAAwxC,oBACxCxxC,KAAAwxC,kBAAAQ,IAAA,IACAhyC,KAAAuxC,gBACAa,EACAR,EAAAvwC,QAGA,IAAA+wC,GAAAC,GAGAryC,KAAAsxC,uBAGAJ,EAvGa,CAwGXhC,ICxHKoD,GAAA,GAKAC,GAAA,ICEA,SAAAC,GAAAt0B,EAAAu0B,EAAAC,GACP,gBAQA9xB,EAAAC,EAAAE,EAAA4xB,GACA,GAAA/xB,EAAA,CACA,IAAAgyB,EAAAH,EAAA,EAAA1xB,EAAA,GAAAF,EACAgyB,EAAAJ,EAAA,EAAA1xB,EAAA,GAAAF,EACAtgB,EAAA2d,EAAA,GAAA00B,EAAA,EACAnyC,EAAAyd,EAAA,GAAA00B,EAAA,EACApyC,EAAA0d,EAAA,GAAA20B,EAAA,EACAnyC,EAAAwd,EAAA,GAAA20B,EAAA,EAGAtyC,EAAAE,IACAF,EAAAE,KAAAF,GAAA,GAEAC,EAAAE,IACAF,EAAAE,KAAAF,GAAA,GAEA,IAAAV,EAAoBukB,GAAKzD,EAAA,GAAArgB,EAAAE,GACzB+d,EAAoB6F,GAAKzD,EAAA,GAAApgB,EAAAE,GACzBoyC,EAAA,GAAAjyB,EAQA,OANA8xB,GAAAD,IACA5yC,IAAAgzC,EAAAzzC,KAAAC,IAAA,EAAAD,KAAAM,IAAA,EAAAY,EAAAqgB,EAAA,IAAAkyB,GACAA,EAAAzzC,KAAAC,IAAA,EAAAD,KAAAM,IAAA,EAAAihB,EAAA,GAAAngB,GAAAqyC,GACAt0B,IAAAs0B,EAAAzzC,KAAAC,IAAA,EAAAD,KAAAM,IAAA,EAAAa,EAAAogB,EAAA,IAAAkyB,GACAA,EAAAzzC,KAAAC,IAAA,EAAAD,KAAAM,IAAA,EAAAihB,EAAA,GAAAlgB,GAAAoyC,IAEA,CAAAhzC,EAAA0e,KAWO,SAAAu0B,GAAAnyB,GACP,OAAAA,EC5CA,SAAAoyB,GAAAnyB,EAAAoyB,EAAAC,GACA,IAAAC,EAAsB7yB,GAAQ2yB,GAAAC,EAAA,GAC9BE,EAAsB7yB,GAAS0yB,GAAAC,EAAA,GAC/B,OAAA7zC,KAAAQ,IAAAghB,EAAAxhB,KAAAQ,IAAAszC,EAAAC,IAcA,SAAAC,GAAAxyB,EAAAyyB,EAAAC,GACA,IAAAvtC,EAAA3G,KAAAQ,IAAAghB,EAAAyyB,GAOA,OALAttC,GAAA3G,KAAAC,IAAA,EADA,GACAD,KAAAM,IAAA,EAAAkhB,EAAAyyB,EAAA,IADA,GACA,EACAC,IACAvtC,EAAA3G,KAAAM,IAAAqG,EAAAutC,GACAvtC,GAAA3G,KAAAC,IAAA,EAJA,GAIAD,KAAAM,IAAA,EAAA4zC,EAAA1yB,EAAA,IAJA,GAIA,GAEWwD,GAAKre,EAAAutC,EAAA,IAAAD,GA0FT,SAAAE,GAAAF,EAAAC,EAAAE,EAAAC,GACP,gBAQA7yB,EAAAxE,EAAA0E,EAAA4xB,GACA,QAAA//B,IAAAiO,EAAA,CACA,IAAA8yB,EAAAD,EACAV,GAAAM,EAAAI,EAAA3yB,GACAuyB,EAEA,YADA1gC,IAAA6gC,OACAd,EAGAU,GAAAxyB,EAAA8yB,EAAAJ,GAFuBlvB,GAAKxD,EAAA0yB,EAAAI,KCzIrB,SAAAC,GAAA9yB,GACP,YAAAlO,IAAAkO,EACA,OAGA,EAOO,SAAS+yB,GAAI/yB,GACpB,YAAAlO,IAAAkO,EACAA,OAGA,ECtBe,IAAAgzB,GACf,EADeA,GAEf,ECFeC,GACf,SADeA,GAEf,aAFeA,GAGf,WCAO,SAAAC,GAAAC,EAAAtoC,EAAAuoC,GACP,IAAAC,OAAAvhC,IAAAshC,EAAAD,EAAAG,QAAAF,GAAA,GAAAD,EACAI,EAAAF,EAAA9zC,QAAA,KAEA,OADAg0C,GAAA,IAAAA,EAAAF,EAAAp0C,OAAAs0C,GACA1oC,EAAAwoC,EAAA,IAAA/nC,MAAA,EAAAT,EAAA0oC,GAAArlB,KAAA,KAAAmlB,EAQO,SAAAG,GAAAC,EAAAC,GAGP,IAFA,IAAAC,GAAA,GAAAF,GAAArjC,MAAA,KACAwjC,GAAA,GAAAF,GAAAtjC,MAAA,KACAhU,EAAA,EAAmBA,EAAAmC,KAAAM,IAAA80C,EAAA10C,OAAA20C,EAAA30C,QAAoC7C,IAAA,CACvD,IAAAy3C,EAAAC,SAAAH,EAAAv3C,IAAA,QACA23C,EAAAD,SAAAF,EAAAx3C,IAAA,QACA,GAAAy3C,EAAAE,EACA,SAEA,GAAAA,EAAAF,EACA,SAGA,SCCO,SAASG,GAAGl2B,EAAAm2B,GAGnB,OAFAn2B,EAAA,KAAAm2B,EAAA,GACAn2B,EAAA,KAAAm2B,EAAA,GACAn2B,EAsCO,SAAAo2B,GAAAp2B,EAAAq2B,GACP,IAYAn1C,EAAA0e,EAZAgD,EAAA5C,EAAA,GACAgD,EAAAhD,EAAA,GACA8X,EAAAue,EAAA,GACAhvC,EAAAgvC,EAAA,GACAxzB,EAAAiV,EAAA,GACA7U,EAAA6U,EAAA,GACAhV,EAAAzb,EAAA,GACA6b,EAAA7b,EAAA,GACAwY,EAAAiD,EAAAD,EACA/C,EAAAoD,EAAAD,EACAqzB,EAAA,IAAAz2B,GAAA,IAAAC,EAAA,GACAD,GAAA+C,EAAAC,GAAA/C,GAAAkD,EAAAC,KAAApD,IAAAC,KAAA,GAcA,OAZAw2B,GAAA,GACAp1C,EAAA2hB,EACAjD,EAAAqD,GAEAqzB,GAAA,GACAp1C,EAAA4hB,EACAlD,EAAAsD,IAGAhiB,EAAA2hB,EAAAyzB,EAAAz2B,EACAD,EAAAqD,EAAAqzB,EAAAx2B,GAEA,CAAA5e,EAAA0e,GA+CO,SAAA22B,GAAAC,EAAAC,EAAAC,GACP,IAAAC,EAA4BzwB,GAAMuwB,EAAA,aAClCv1C,EAAAT,KAAA6L,IAAA,KAAAqqC,GACAC,EAAAF,GAAA,EACAG,EAAAp2C,KAAA8C,IAAA,GAAAqzC,GACAE,EAAAr2C,KAAAO,MAAAE,EAAA,MACAD,EAAAR,KAAAO,OAAAE,EAAA,KAAA41C,GAAA,IACAC,EAAA71C,EAAA,KAAA41C,EAAA,GAAA71C,EAUA,OATA81C,EAAAt2C,KAAAc,KAAAw1C,EAAAF,OACA,KACAE,EAAA,EACA91C,GAAA,GAEAA,GAAA,KACAA,EAAA,EACA61C,GAAA,GAEAA,EAAA,KAA6B1B,GAASn0C,EAAA,QAC9Bm0C,GAAS2B,EAAA,EAAAH,GAAA,KACjB,GAAAD,EAAA,OAAAH,EAAAQ,OAAAL,EAAA,QAiCO,SAASM,GAAMj3B,EAAAk3B,EAAAR,GACtB,OAAA12B,EACAk3B,EACAC,QAAA,MAAyBn3B,EAAA,GAAAw1B,QAAAkB,IACzBS,QAAA,MAAyBn3B,EAAA,GAAAw1B,QAAAkB,IAGzB,GAQO,SAASU,GAAMC,EAAAC,GAEtB,IADA,IAAAt5B,GAAA,EACA1f,EAAA+4C,EAAAl2C,OAAA,EAAwC7C,GAAA,IAAQA,EAChD,GAAA+4C,EAAA/4C,IAAAg5C,EAAAh5C,GAAA,CACA0f,GAAA,EACA,MAGA,OAAAA,EAoBO,SAASu5B,GAAMv3B,EAAAmF,GACtB,IAAAqyB,EAAA/2C,KAAA4hB,IAAA8C,GACAsyB,EAAAh3C,KAAA8hB,IAAA4C,GACAjkB,EAAA8e,EAAA,GAAAw3B,EAAAx3B,EAAA,GAAAy3B,EACA73B,EAAAI,EAAA,GAAAw3B,EAAAx3B,EAAA,GAAAy3B,EAGA,OAFAz3B,EAAA,GAAA9e,EACA8e,EAAA,GAAAJ,EACAI,EAmBO,SAAS03B,GAAK13B,EAAAsR,GAGrB,OAFAtR,EAAA,IAAAsR,EACAtR,EAAA,IAAAsR,EACAtR,EAOO,SAAS23B,GAAeC,EAAAC,GAC/B,IAAAh4B,EAAA+3B,EAAA,GAAAC,EAAA,GACA/3B,EAAA83B,EAAA,GAAAC,EAAA,GACA,OAAAh4B,IAAAC,IAOO,SAASg4B,GAAQF,EAAAC,GACxB,OAAAp3C,KAAAK,KAAqB62C,GAAeC,EAAAC,IAU7B,SAAAE,GAAA/3B,EAAAq2B,GACP,OAAWsB,GAAe33B,EAAAo2B,GAAAp2B,EAAAq2B,IA8DnB,SAAA2B,GAAAh4B,EAAA02B,GACP,OAAWO,GAAMj3B,EAAA,WAAsB02B,GCpWhC,SAAAuB,GAAAz4C,GACP,OAAAiB,KAAA8C,IAAA/D,EAAA,GAQO,SAAA04C,GAAA14C,GACP,SAAAy4C,GAAA,EAAAz4C,GAQO,SAAA24C,GAAA34C,GACP,SAAAA,IAAA,EAAAA,MAQO,SAAA44C,GAAA54C,GACP,OAAAA,ECrCA,IAAI64C,GAAyB,WAC7B,IAAA5mC,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAsL7BwmC,GAAA,EA6lCA,SAAAC,GAAAtoC,EAAAuoC,GACAlpC,WAAA,WACAW,EAAAuoC,IACK,GA0IE,SAAAC,GAAAC,GACP,QAAAA,EAAAC,cAAAD,EAAAE,eACaxB,GAAgBsB,EAAAC,aAAAD,EAAAE,iBAI7BF,EAAAG,mBAAAH,EAAAI,kBAGAJ,EAAAK,iBAAAL,EAAAM,gBAKe,IAAAC,GA/qCP,SAAAhnC,GAKR,SAAAinC,EAAA9+B,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAsB1H,EAAM,GAAGyH,GAsC/B,OAjCAhI,EAAA+mC,OAAA,MAKA/mC,EAAAgnC,YAAA,GAKAhnC,EAAAinC,oBAMAjnC,EAAAknC,YAA4BlsB,GAAgB/S,EAAAmS,WAAA,aAK5Cpa,EAAAmnC,cAAA,KAKAnnC,EAAAonC,kBAKApnC,EAAAqnC,gBACArnC,EAAAsnC,cAAAr/B,GACAjI,EAi+BA,OA7gCIimC,GAASa,EAAAjnC,GAkDbinC,EAAAh5C,UAAAw5C,cAAA,SAAAr/B,GAIA,IACAs/B,EAw/BO,SAAAt/B,GACP,IAAAu/B,EACAlF,EACAC,EAKAkF,OAAA7lC,IAAAqG,EAAAw/B,QACAx/B,EAAAw/B,QAAAvB,GACAwB,OAAA9lC,IAAAqG,EAAAy/B,QACAz/B,EAAAy/B,QALA,GAMAC,OAAA/lC,IAAAqG,EAAA0/B,WACA1/B,EAAA0/B,WANA,EAOAC,OAAAhmC,IAAAqG,EAAA2/B,YACA3/B,EAAA2/B,WACAlG,OAAA9/B,IAAAqG,EAAA4/B,4BAAA5/B,EAAA4/B,2BACA,QAAAjmC,IAAAqG,EAAA6/B,YAAA,CACA,IAAAA,EAAA7/B,EAAA6/B,YACAxF,EAAAwF,EAAAL,GACAlF,OAAA3gC,IAAAkmC,EAAAJ,GACAI,EAAAJ,GAAAI,IAAA/4C,OAAA,GAEAy4C,EADAv/B,EAAA8/B,oBPnxCO,SAAAD,EAAArF,EAAAC,GACP,gBAQA7yB,EAAAxE,EAAA0E,EAAA4xB,GACA,QAAA//B,IAAAiO,EAAA,CACA,IAAAyyB,EAAAwF,EAAA,GACAvF,EAAAuF,IAAA/4C,OAAA,GACA4zC,EAAAD,EACAV,GAAAM,EAAAI,EAAA3yB,GACAuyB,EAEA,GAAAX,EAEA,YADA//B,IAAA6gC,KAIAJ,GAAAxyB,EAAA8yB,EAAAJ,GAF2BlvB,GAAKxD,EAAA0yB,EAAAI,GAIhC,IAAAqF,EAAA35C,KAAAQ,IAAA8zC,EAAA9yB,GACAo4B,EAAA55C,KAAAO,MAA+Bwc,EAAiB08B,EAAAE,EAAA38B,IAChD,OAAAy8B,EAAAG,KO0vCmCC,CAAuBJ,EAAApG,GAAAz5B,EAAAkgC,qBAAAlgC,EAAAiF,QAGvBs1B,GAAsBF,EAAAC,EAAAb,GAAAz5B,EAAAkgC,qBAAAlgC,EAAAiF,YAGzD,CAEA,IAAAkN,EAAyBY,GAAgB/S,EAAAmS,WAAA,aACzClN,EAAAkN,EAAApD,YACAjH,EAAA7C,EAIA7e,KAAAM,IAAqB2gB,GAAQpC,GAAUqC,GAASrC,IAFhD,IAAkByI,GAAgBC,GAAKP,SACvC+E,EAAAlD,mBAEAkxB,EAAAr4B,EAA0CwxB,GAAiBlzC,KAAA8C,IA/B3D,EA+B2D+0C,IAC3DmC,EAAAD,EAAA/5C,KAAA8C,IAhCA,EADA,GAiCA+0C,IA2BA,QAxBAtkC,KADA0gC,EAAAr6B,EAAAq6B,eAEAmF,EAAA,EAGAnF,EAAA8F,EAAA/5C,KAAA8C,IAAAw2C,EAAAF,QAIA7lC,KADA2gC,EAAAt6B,EAAAs6B,iBAIAA,OAFA3gC,IAAAqG,EAAAy/B,aACA9lC,IAAAqG,EAAAq6B,cACAA,EAAAj0C,KAAA8C,IAAAw2C,EAAAD,GAGAU,EAAA/5C,KAAA8C,IAAAw2C,EAAAD,GAIAW,GAIAX,EAAAD,EAAAp5C,KAAAO,MAAAP,KAAAC,IAAAg0C,EAAAC,GAAAl0C,KAAAC,IAAAq5C,IACApF,EAAAD,EAAAj0C,KAAA8C,IAAAw2C,EAAAD,EAAAD,GACAx/B,EAAA8/B,oBACAP,EPvxCO,SAAAc,EAAAhG,EAAAiG,EAAA9F,EAAAC,GACP,gBAQA7yB,EAAAxE,EAAA0E,EAAA4xB,GACA,QAAA//B,IAAAiO,EAAA,CACA,IAAA8yB,EAAAD,EACAV,GAAAM,EAAAI,EAAA3yB,GACAuyB,EACAC,OAAA3gC,IAAA2mC,IAAA,EAEA,GAAA5G,EAEA,YADA//B,IAAA6gC,KAIAJ,GAAAxyB,EAAA8yB,EAAAJ,GAF2BlvB,GAAKxD,EAAA0yB,EAAAI,GAIhC,IAAAppC,GAAA8R,GAAA,YACA28B,EAAA35C,KAAAQ,IAAA8zC,EAAA9yB,GACA24B,EAAAn6C,KAAAO,MAAAP,KAAAC,IAAAg0C,EAAA0F,GAAA35C,KAAAC,IAAAg6C,GAAA/uC,GAEA,OAAmB8Z,GADnBivB,EAAAj0C,KAAA8C,IAAAm3C,EAAAE,GACwBjG,EAAAI,KO4vCW8F,CAAiBd,EAAArF,EAAAC,EAAAb,GAAAz5B,EAAAkgC,qBAAAlgC,EAAAiF,YAEpD,CACA,IAAAi7B,EAAAlgC,EAAAkgC,oBACAO,EAAAzgC,EAAAiF,OACA06B,GAAAc,IAAAtuB,EAAA/C,aACA8wB,GAAA,EACAO,EAAAtuB,EAAApD,aAEAwwB,EAAmChF,GAAsBF,EAAAC,EAAAb,GAAAyG,GAAAO,IAGzD,OAAYC,WAAAnB,EAAAlF,gBACZC,gBAAAkF,UAAAE,cAxkCAiB,CAAA3gC,GAKAjZ,KAAA65C,eAAAtB,EAAAjF,cAKAtzC,KAAA85C,eAAAvB,EAAAhF,cAKAvzC,KAAA+5C,YAAAxB,EAAAI,WAKA34C,KAAAg6C,aAAA/gC,EAAA6/B,YAKA94C,KAAAi6C,SAAA1B,EAAAE,QACA,IAAAyB,EA28BO,SAAAjhC,GACP,QAAArG,IAAAqG,EAAAiF,OAAA,CACA,IAAAw0B,OAAA9/B,IAAAqG,EAAAkhC,wBAAAlhC,EAAAkhC,uBACA,OAAe3H,GAAYv5B,EAAAiF,OAAAjF,EAAAkgC,oBAAAzG,GAE3B,IAAAtnB,EAAqBY,GAAgB/S,EAAAmS,WAAA,aACrC,QAAAnS,EAAA2/B,YAAAxtB,EAAA/C,WAAA,CACA,IAAAnK,EAAAkN,EAAApD,YAAAxmB,QAGA,OAFA0c,EAAA,IAAAlT,IACAkT,EAAA,GAAAlT,IACewnC,GAAYt0B,GAAA,MAE3B,OAAW60B,GAv9BXqH,CAAAnhC,GACAu/B,EAAAD,EAAAoB,WACAU,EAkjCO,SAAAphC,GAGP,QAFArG,IAAAqG,EAAAqhC,gBACArhC,EAAAqhC,eACA,CACA,IAAAC,EAAAthC,EAAAshC,kBACA,YAAA3nC,IAAA2nC,IAAA,IAAAA,GN70CAjqB,EAAAkqB,GAAqC51B,GAAS,GAC9C,SAMA9D,EAAA6xB,GACA,OAAAA,EACA7xB,OAEAlO,IAAAkO,EACAzhB,KAAA6L,IAAA4V,IAAAwP,EACA,EAGAxP,OAIA,KM4zCA,IAAAy5B,EACmB1G,GAEnB,iBAAA0G,GN72CO57C,EM82CyB47C,EN72ChCE,EAAA,EAAAp7C,KAAAslB,GAAAhmB,EACA,SAMAmiB,EAAA6xB,GACA,OAAAA,EACA7xB,OAEAlO,IAAAkO,EACAA,EAAAzhB,KAAAO,MAAAkhB,EAAA25B,EAAA,IAAAA,OAIA,IMg2CmB5G,GAInB,OAAeD,GNr3CR,IAAAj1C,EACP87C,EAwBO,IAAAD,EACPlqB,EMsRAoqB,CAAAzhC,GAKAjZ,KAAA26C,aAAA,CACA/5B,OAAAs5B,EACAr5B,WAAA23B,EACA13B,SAAAu5B,GAEAr6C,KAAA46C,iBAAAhoC,IAAAqG,EAAA6H,SAAA7H,EAAA6H,SAAA,GACA9gB,KAAA66C,eAAAjoC,IAAAqG,EAAA2H,OAAA3H,EAAA2H,OAAA,WACAhO,IAAAqG,EAAA4H,WACA7gB,KAAA86C,cAAA7hC,EAAA4H,iBAEAjO,IAAAqG,EAAA8hC,MACA/6C,KAAAg7C,QAAA/hC,EAAA8hC,MAEA/6C,KAAAi7C,mBAAA,GACAj7C,KAAA6X,cAhDA,IAqDA7X,KAAAk7C,SAAAjiC,GAUA6+B,EAAAh5C,UAAAq8C,mBAAA,SAAAC,GACA,IAAAniC,EAAsB1H,EAAM,GAAGvR,KAAAk7C,UAY/B,YAVAtoC,IAAAqG,EAAA4H,WACA5H,EAAA4H,WAAA7gB,KAAAq7C,gBAGApiC,EAAA8hC,KAAA/6C,KAAAs7C,UAGAriC,EAAA2H,OAAA5gB,KAAAwgB,YAEAvH,EAAA6H,SAAA9gB,KAAAu7C,cACehqC,EAAM,GAAG0H,EAAAmiC,IAmCxBtD,EAAAh5C,UAAA08C,QAAA,SAAAC,GACAz7C,KAAA07C,UAAA17C,KAAA27C,gBACA37C,KAAAi7C,mBAAA,GAEAj7C,KAAA47C,SAAA15C,MAAAlC,KAAA6R,YAMAimC,EAAAh5C,UAAA88C,SAAA,SAAAH,GACA,IACA5sC,EADAgtC,EAAAhqC,UAAA9R,OAMA,GAJA87C,EAAA,sBAAAhqC,UAAAgqC,EAAA,KACAhtC,EAAAgD,UAAAgqC,EAAA,KACAA,IAEA77C,KAAA07C,QAAA,CAEA,IAAA7J,EAAAhgC,UAAAgqC,EAAA,GAaA,OAZAhK,EAAAjxB,QACA5gB,KAAA66C,UAAAhJ,EAAAjxB,aAEAhO,IAAAi/B,EAAAkJ,MACA/6C,KAAAg7C,QAAAnJ,EAAAkJ,WAEAnoC,IAAAi/B,EAAA/wB,UACA9gB,KAAA46C,YAAA/I,EAAA/wB,eAEAjS,GACAsoC,GAAAtoC,GAAA,IASA,IALA,IAAA6nB,EAAAwH,KAAAC,MACAvd,EAAA5gB,KAAAm4C,cAAA32C,QACAqf,EAAA7gB,KAAAo4C,kBACAt3B,EAAA9gB,KAAAq4C,gBACAyD,EAAA,GACA5+C,EAAA,EAAuBA,EAAA2+C,IAAoB3+C,EAAA,CAC3C,IAAA+b,EAAsDpH,UAAA3U,GACtDo6C,EAAA,CACA5gB,QACAqlB,UAAA,EACA/3B,OAAA/K,EAAA+K,OACAsa,cAAA1rB,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IACA0d,OAAA/iC,EAAA+iC,QAA0CjF,GAC1CloC,YAiBA,GAfAoK,EAAA2H,SACA02B,EAAAC,aAAA32B,EACA02B,EAAAE,aAAAv+B,EAAA2H,OAAApf,QACAof,EAAA02B,EAAAE,mBAEA5kC,IAAAqG,EAAA8hC,MACAzD,EAAAG,iBAAA52B,EACAy2B,EAAAI,iBAAA13C,KAAAi8C,qBAAAhjC,EAAA8hC,MACAl6B,EAAAy2B,EAAAI,kBAEAz+B,EAAA4H,aACAy2B,EAAAG,iBAAA52B,EACAy2B,EAAAI,iBAAAz+B,EAAA4H,WACAA,EAAAy2B,EAAAI,uBAEA9kC,IAAAqG,EAAA6H,SAAA,CACAw2B,EAAAK,eAAA72B,EACA,IAAAi0B,EAA4BjwB,GAAM7L,EAAA6H,WAAAzhB,KAAAslB,GAAA,EAAAtlB,KAAAslB,IAAAtlB,KAAAslB,GAClC2yB,EAAAM,eAAA92B,EAAAi0B,EACAj0B,EAAAw2B,EAAAM,eAGAP,GAAAC,GACAA,EAAAyE,UAAA,EAIArlB,GAAA4gB,EAAAhZ,SAEAwd,EAAAh7C,KAAAw2C,GAEAt3C,KAAAg4C,YAAAl3C,KAAAg7C,GACA97C,KAAAk8C,QAAqBpI,GAAQ,GAC7B9zC,KAAAm8C,qBAOArE,EAAAh5C,UAAA68C,aAAA,WACA,OAAA37C,KAAA+3C,OAA2BjE,IAAQ,GAOnCgE,EAAAh5C,UAAAs9C,eAAA,WACA,OAAAp8C,KAAA+3C,OAA2BjE,IAAQ,GAMnCgE,EAAAh5C,UAAAu9C,iBAAA,WACAr8C,KAAAk8C,QAAqBpI,IAAQ9zC,KAAA+3C,OAAyBjE,KACtD,QAAA52C,EAAA,EAAA0U,EAAA5R,KAAAg4C,YAAAj4C,OAAqD7C,EAAA0U,IAAQ1U,EAAA,CAC7D,IAAA4+C,EAAA97C,KAAAg4C,YAAA96C,GACA4+C,EAAA,GAAAjtC,UACAsoC,GAAA2E,EAAA,GAAAjtC,UAAA,GAGA7O,KAAAg4C,YAAAj4C,OAAA,GAKA+3C,EAAAh5C,UAAAq9C,kBAAA,WAKA,QAJAvpC,IAAA5S,KAAAi4C,sBACAqE,qBAAAt8C,KAAAi4C,qBACAj4C,KAAAi4C,yBAAArlC,GAEA5S,KAAA27C,eAAA,CAKA,IAFA,IAAAxd,EAAAD,KAAAC,MACAoe,GAAA,EACAr/C,EAAA8C,KAAAg4C,YAAAj4C,OAAA,EAAiD7C,GAAA,IAAQA,EAAA,CAGzD,IAFA,IAAA4+C,EAAA97C,KAAAg4C,YAAA96C,GACAs/C,GAAA,EACAhwC,EAAA,EAAA8C,EAAAwsC,EAAA/7C,OAA+CyM,EAAA8C,IAAQ9C,EAAA,CACvD,IAAA8qC,EAAAwE,EAAAtvC,GACA,IAAA8qC,EAAAyE,SAAA,CAGA,IAAAU,EAAAte,EAAAmZ,EAAA5gB,MACAgmB,EAAApF,EAAAhZ,SAAA,EAAAme,EAAAnF,EAAAhZ,SAAA,EACAoe,GAAA,GACApF,EAAAyE,UAAA,EACAW,EAAA,GAGAF,GAAA,EAEA,IAAAG,EAAArF,EAAA0E,OAAAU,GACA,GAAApF,EAAAC,aAAA,CACA,IAAA/1B,EAAA81B,EAAAC,aAAA,GACA31B,EAAA01B,EAAAC,aAAA,GAGAz3C,EAAA0hB,EAAAm7B,GAFArF,EAAAE,aAAA,GAEAh2B,GACAhD,EAAAoD,EAAA+6B,GAFArF,EAAAE,aAAA,GAEA51B,GACA5hB,KAAAm4C,cAAA,CAAAr4C,EAAA0e,GAEA,GAAA84B,EAAAG,kBAAAH,EAAAI,iBAAA,CACA,IAAA72B,EAAA,IAAA87B,EACArF,EAAAI,iBACAJ,EAAAG,iBAAAkF,GAAArF,EAAAI,iBAAAJ,EAAAG,kBACA,GAAAH,EAAAtzB,OAAA,CACA,IAAAjD,EAAA/gB,KAAA48C,qBAAA58C,KAAAu7C,eACAsB,EAAA78C,KAAA26C,aAAA95B,aAAA,EAAAE,GAAA,GACA/gB,KAAAm4C,cAAAn4C,KAAA88C,oBAAAD,EAAAvF,EAAAtzB,QAEAhkB,KAAAo4C,kBAAAv3B,EACA7gB,KAAA+8C,mBAAA,GAEA,QAAAnqC,IAAA0kC,EAAAK,qBAAA/kC,IAAA0kC,EAAAM,eAAA,CACA,IAAA92B,EAAA,IAAA67B,EACwB73B,GAAMwyB,EAAAM,eAAAv4C,KAAAslB,GAAA,EAAAtlB,KAAAslB,IAAAtlB,KAAAslB,GAC9B2yB,EAAAK,eAAAgF,GAAArF,EAAAM,eAAAN,EAAAK,gBACA,GAAAL,EAAAtzB,OAAA,CACA,IAAAg5B,EAAAh9C,KAAA26C,aAAA75B,YAAA,GACA9gB,KAAAm4C,cAAAn4C,KAAAi9C,sBAAAD,EAAA1F,EAAAtzB,QAEAhkB,KAAAq4C,gBAAAv3B,EAIA,GAFA9gB,KAAA+8C,mBAAA,GACAR,GAAA,GACAjF,EAAAyE,SACA,OAGA,GAAAS,EAAA,CACAx8C,KAAAg4C,YAAA96C,GAAA,KACA8C,KAAAk8C,QAA6BpI,IAAQ,GACrC,IAAAjlC,EAAAitC,EAAA,GAAAjtC,SACAA,GACAsoC,GAAAtoC,GAAA,IAKA7O,KAAAg4C,YAAAh4C,KAAAg4C,YAAAkF,OAAA/1C,SACAo1C,QAAA3pC,IAAA5S,KAAAi4C,sBACAj4C,KAAAi4C,oBAAAkF,sBAAAn9C,KAAAm8C,kBAAAz9C,KAAAsB,UAQA83C,EAAAh5C,UAAAm+C,sBAAA,SAAAn8B,EAAAkD,GACA,IAAApD,EACAw8B,EAAAp9C,KAAAwgB,YAMA,YALA5N,IAAAwqC,IAEYjH,GADZv1B,EAAA,CAAAw8B,EAAA,GAAAp5B,EAAA,GAAAo5B,EAAA,GAAAp5B,EAAA,IAC4BlD,EAAA9gB,KAAAu7C,eAChBzG,GAAal0B,EAAAoD,IAEzBpD,GAOAk3B,EAAAh5C,UAAAg+C,oBAAA,SAAAj8B,EAAAmD,GACA,IAAApD,EACAw8B,EAAAp9C,KAAAwgB,YACA68B,EAAAr9C,KAAAq7C,qBACAzoC,IAAAwqC,QAAAxqC,IAAAyqC,IAGAz8B,EAAA,CAFAoD,EAAA,GAAAnD,GAAAmD,EAAA,GAAAo5B,EAAA,IAAAC,EACAr5B,EAAA,GAAAnD,GAAAmD,EAAA,GAAAo5B,EAAA,IAAAC,IAGA,OAAAz8B,GAOAk3B,EAAAh5C,UAAA89C,qBAAA,SAAAU,GACA,IAAAv8B,EAAA,UACAw8B,EAAA,2BAAoDptC,EAAMnQ,MAAA,KAC1D4Y,EAAAhJ,SAAA4tC,cAAAD,GACA,GAAA3kC,EAAA,CACA,IAAA6kC,EAAAC,iBAAA9kC,GACAmI,EAAA,GAAA6zB,SAAA6I,EAAA9xC,MAAA,IACAoV,EAAA,GAAA6zB,SAAA6I,EAAA78C,OAAA,IAEA,GAAA08C,EAAA,CACA,IAAAK,EAAA58B,EAAA,GACA3hB,EAAA2hB,EAAA,GACAA,EAAA,GAAA1hB,KAAA6L,IAAAyyC,EAAAt+C,KAAA4hB,IAAAq8B,IAAAj+C,KAAA6L,IAAA9L,EAAAC,KAAA8hB,IAAAm8B,IACAv8B,EAAA,GAAA1hB,KAAA6L,IAAAyyC,EAAAt+C,KAAA8hB,IAAAm8B,IAAAj+C,KAAA6L,IAAA9L,EAAAC,KAAA4hB,IAAAq8B,IAEA,OAAAv8B,GAQA+2B,EAAAh5C,UAAA0hB,UAAA,WACA,OACkExgB,KAAAjC,IAAcg2C,KAKhF+D,EAAAh5C,UAAA8+C,eAAA,WACA,OAAA59C,KAAA26C,cAMA7C,EAAAh5C,UAAA++C,SAAA,SAAAC,GACA,YAAAlrC,IAAAkrC,GACAA,EAAA,GAAA99C,KAAA+3C,OAAA,GACA+F,EAAA,GAAA99C,KAAA+3C,OAAA,GACA+F,GAGA99C,KAAA+3C,OAAAv2C,SAaAs2C,EAAAh5C,UAAAi/C,gBAAA,SAAAC,GACA,IAAAj9B,EAAAi9B,GAAAh+C,KAAA48C,uBACAh8B,EAAsE5gB,KAAAwgB,YAC9DtG,EAAM0G,EAAA,GACd,IAAAC,EAA4C7gB,KAAAq7C,gBACpCnhC,OAAMtH,IAAAiO,EAAA,GACd,IAAAC,EAA0C9gB,KAAAu7C,cAE1C,OADQrhC,OAAMtH,IAAAkO,EAAA,GACCH,GAAiBC,EAAAC,EAAAC,EAAAC,IAOhC+2B,EAAAh5C,UAAAm/C,iBAAA,WACA,OAAAj+C,KAAA65C,gBAOA/B,EAAAh5C,UAAAo/C,iBAAA,WACA,OAAAl+C,KAAA85C,gBAOAhC,EAAAh5C,UAAAq/C,WAAA,WACA,OAAiCn+C,KAAAo+C,qBAAAp+C,KAAA85C,iBAOjChC,EAAAh5C,UAAAu/C,WAAA,SAAAtD,GACA/6C,KAAAs4C,cAAAt4C,KAAAm7C,mBAAA,CAAoDzC,QAAAqC,MAOpDjD,EAAAh5C,UAAAw/C,WAAA,WACA,OAAiCt+C,KAAAo+C,qBAAAp+C,KAAA65C,iBAOjC/B,EAAAh5C,UAAAy/C,WAAA,SAAAxD,GACA/6C,KAAAs4C,cAAAt4C,KAAAm7C,mBAAA,CAAoD1C,QAAAsC,MAOpDjD,EAAAh5C,UAAA0/C,uBAAA,SAAAC,GACAz+C,KAAAs4C,cAAAt4C,KAAAm7C,mBAAA,CAAoDpC,oBAAA0F,MAOpD3G,EAAAh5C,UAAA88B,cAAA,WACA,OAAA57B,KAAAk4C,aAQAJ,EAAAh5C,UAAAu8C,cAAA,WACA,OAA2Cr7C,KAAAjC,IAAcg2C,KAQzD+D,EAAAh5C,UAAA4/C,eAAA,WACA,OAAA1+C,KAAAg6C,cAUAlC,EAAAh5C,UAAA6/C,uBAAA,SAAAzgC,EAAA8/B,GACA,IAAAj9B,EAAAi9B,GAAAh+C,KAAA48C,uBACAzJ,EAA0B7yB,GAAQpC,GAAA6C,EAAA,GAClCqyB,EAA0B7yB,GAASrC,GAAA6C,EAAA,GACnC,OAAA1hB,KAAAM,IAAAwzC,EAAAC,IAQA0E,EAAAh5C,UAAA8/C,8BAAA,SAAAC,GACA,IAAAvF,EAAAuF,GAAA,EACAvL,EAAAtzC,KAAA65C,eACAtG,EAAAvzC,KAAA85C,eACAn6C,EAAAN,KAAAC,IAAAg0C,EAAAC,GAAAl0C,KAAAC,IAAAg6C,GACA,gBAKAn7C,GAEA,OADAm1C,EAAAj0C,KAAA8C,IAAAm3C,EAAAn7C,EAAAwB,KAUAm4C,EAAAh5C,UAAAy8C,YAAA,WACA,OAAiCv7C,KAAAjC,IAAcg2C,KAQ/C+D,EAAAh5C,UAAAggD,8BAAA,SAAAD,GACA,IAAAvF,EAAAuF,GAAA,EACAvL,EAAAtzC,KAAA65C,eACAtG,EAAAvzC,KAAA85C,eACAn6C,EAAAN,KAAAC,IAAAg0C,EAAAC,GAAAl0C,KAAAC,IAAAg6C,GACA,gBAKAz4B,GAEA,OADAxhB,KAAAC,IAAAg0C,EAAAzyB,GAAAxhB,KAAAC,IAAAg6C,GAAA35C,IAQAm4C,EAAAh5C,UAAAgzC,SAAA,SAAAiN,GACA,IAAAn+B,EAAqE5gB,KAAAwgB,YACrE4K,EAAAprB,KAAA47B,gBACA/a,EAA2C7gB,KAAAq7C,gBAC3Cv6B,EAAA9gB,KAAAu7C,cACA,OACA36B,SAAApf,MAAA,GACA4pB,gBAAAxY,IAAAwY,IAAA,KACAvK,aACAC,WACAi6B,KAAA/6C,KAAAs7C,YAUAxD,EAAAh5C,UAAAw8C,QAAA,WACA,IAAAP,EACAl6B,EAAA7gB,KAAAq7C,gBAIA,YAHAzoC,IAAAiO,IACAk6B,EAAA/6C,KAAAo+C,qBAAAv9B,IAEAk6B,GAQAjD,EAAAh5C,UAAAs/C,qBAAA,SAAAv9B,GACA,IACAlhB,EAAAg5C,EADApuC,EAAAvK,KAAAi6C,UAAA,EAEA,GAAAj6C,KAAAg6C,aAAA,CACA,IAAAgF,EAA0B5iC,EAAiBpc,KAAAg6C,aAAAn5B,EAAA,GAC3CtW,EAAAy0C,EACAr/C,EAAAK,KAAAg6C,aAAAgF,GAEArG,EADAqG,GAAAh/C,KAAAg6C,aAAAj6C,OAAA,EACA,EAGAJ,EAAAK,KAAAg6C,aAAAgF,EAAA,QAIAr/C,EAAAK,KAAA65C,eACAlB,EAAA34C,KAAA+5C,YAEA,OAAAxvC,EAAAlL,KAAAC,IAAAK,EAAAkhB,GAAAxhB,KAAAC,IAAAq5C,IAQAb,EAAAh5C,UAAAm9C,qBAAA,SAAAlB,GACA,GAAA/6C,KAAAg6C,aAAA,CACA,GAAAh6C,KAAAg6C,aAAAj6C,QAAA,EACA,SAEA,IAAAk/C,EAA4B56B,GAAKhlB,KAAAO,MAAAm7C,GAAA,EAAA/6C,KAAAg6C,aAAAj6C,OAAA,GACjC44C,EAAA34C,KAAAg6C,aAAAiF,GAAAj/C,KAAAg6C,aAAAiF,EAAA,GACA,OAAAj/C,KAAAg6C,aAAAiF,GAAA5/C,KAAA8C,IAAAw2C,EAAuEt0B,GAAK02B,EAAAkE,EAAA,MAG5E,OAAAj/C,KAAA65C,eAAAx6C,KAAA8C,IAAAnC,KAAA+5C,YAAAgB,EAAA/6C,KAAAi6C,WAaAnC,EAAAh5C,UAAAogD,IAAA,SAAAC,EAAAnmC,GACA,IAMAgC,EANA/B,EAAAD,GAAA,GACA+H,EAAA9H,EAAA8H,KACAA,IACAA,EAAA/gB,KAAA48C,wBAIQ1iC,EAAM9N,MAAA+K,QAAAgoC,IAAwD,qBAAApkC,sBAAA,IACtE3O,MAAA+K,QAAAgoC,IACYjlC,GAAQmG,GAAO8+B,GAAA,IAC3BnkC,EAAuBse,GAAiB6lB,IAExCA,EAAA3uB,YAAgDxN,GAAYS,QAE5DzI,EAAuBse,GADvB6lB,IAAAn3B,cAEAlE,OAAA9jB,KAAAu7C,cAAgD/6B,GAAS2+B,IAGzDnkC,EAAAmkC,EAEA,IAEA5L,EAFA6L,OAAAxsC,IAAAqG,EAAAmmC,QAAAnmC,EAAAmmC,QAAA,UACAJ,OAAApsC,IAAAqG,EAAA+lC,SAAA/lC,EAAA+lC,QAGAzL,OADA3gC,IAAAqG,EAAAs6B,cACAt6B,EAAAs6B,mBAEA3gC,IAAAqG,EAAAy/B,QACA14C,KAAAi8C,qBAAAhjC,EAAAy/B,SAGA,EAYA,IAVA,IAAApc,EAAAthB,EAAAsW,qBAEAxQ,EAAA9gB,KAAAu7C,cACAnF,EAAA/2C,KAAA4hB,KAAAH,GACAu1B,EAAAh3C,KAAA8hB,KAAAL,GACAu+B,EAAAr0C,IACAs0C,EAAAt0C,IACAu0C,GAAAv0C,IACAw0C,GAAAx0C,IACAwU,EAAAxE,EAAA2W,YACAz0B,EAAA,EAAA0U,EAAA0qB,EAAAv8B,OAA2C7C,EAAA0U,EAAQ1U,GAAAsiB,EAAA,CACnD,IAAAigC,EAAAnjB,EAAAp/B,GAAAk5C,EAAA9Z,EAAAp/B,EAAA,GAAAm5C,EACAqJ,EAAApjB,EAAAp/B,GAAAm5C,EAAA/Z,EAAAp/B,EAAA,GAAAk5C,EACAiJ,EAAAhgD,KAAAQ,IAAAw/C,EAAAI,GACAH,EAAAjgD,KAAAQ,IAAAy/C,EAAAI,GACAH,EAAAlgD,KAAAM,IAAA4/C,EAAAE,GACAD,EAAAngD,KAAAM,IAAA6/C,EAAAE,GAGA,IAAA7+B,EAAA7gB,KAAA2+C,uBAAA,CAAAU,EAAAC,EAAAC,EAAAC,GAAA,CAAAz+B,EAAA,GAAAq+B,EAAA,GAAAA,EAAA,GAAAr+B,EAAA,GAAAq+B,EAAA,GAAAA,EAAA,KACAv+B,EAAA1V,MAAA0V,GAAA0yB,EACAl0C,KAAAM,IAAAkhB,EAAA0yB,GACA1yB,EAAA7gB,KAAA2/C,yBAAA9+B,EAAAm+B,EAAA,KAEA3I,KACA,IAAAuJ,GAAAP,EAAAE,GAAA,EACAM,GAAAP,EAAAE,GAAA,EAKA5+B,EAAA,EAJAg/B,IAAAR,EAAA,GAAAA,EAAA,MAAAv+B,GAEAu1B,GADAyJ,IAAAT,EAAA,GAAAA,EAAA,MAAAv+B,GACAw1B,EACAwJ,EAAAzJ,EAAAwJ,EAAAvJ,GAEAxnC,EAAAoK,EAAApK,SAAAoK,EAAApK,SAA6DsF,OAC7DvB,IAAAqG,EAAAqlB,SACAt+B,KAAA47C,SAAA,CACA/6B,aACAD,OAAA5gB,KAAA8/C,qBAAAl/B,EAAAC,GACAyd,SAAArlB,EAAAqlB,SACA0d,OAAA/iC,EAAA+iC,QACantC,IAGb7O,KAAAo4C,kBAAAv3B,EACA7gB,KAAAm4C,cAAAv3B,EACA5gB,KAAA+8C,mBAAA,MACA5F,GAAAtoC,GAAA,KAUAipC,EAAAh5C,UAAAihD,SAAA,SAAAnhC,EAAAmC,EAAAsb,GAEA,IAAAvb,EAAA9gB,KAAAu7C,cACAnF,EAAA/2C,KAAA4hB,KAAAH,GACAu1B,EAAAh3C,KAAA8hB,KAAAL,GACA2+B,EAAA7gC,EAAA,GAAAw3B,EAAAx3B,EAAA,GAAAy3B,EACAqJ,EAAA9gC,EAAA,GAAAw3B,EAAAx3B,EAAA,GAAAy3B,EACAx1B,EAAA7gB,KAAAq7C,gBAKA2E,GAJAP,IAAA1+B,EAAA,KAAAsb,EAAA,IAAAxb,GAIAu1B,GAHAsJ,IAAArjB,EAAA,GAAAtb,EAAA,MAAAF,IAEAw1B,MAEA4J,EAAAP,EAAAtJ,EAAAqJ,EAAApJ,EACAr2C,KAAA66C,UAAA,CAAAmF,EAAAC,KAKAnI,EAAAh5C,UAAA48C,MAAA,WACA,QAAA17C,KAAAwgB,kBAAA5N,IAAA5S,KAAAq7C,iBAOAvD,EAAAh5C,UAAAohD,aAAA,SAAAC,GACA,IAAAv/B,EAAA5gB,KAAAm4C,cACAn4C,KAAA66C,UAAA,CAAAj6B,EAAA,GAAAu/B,EAAA,GAAAv/B,EAAA,GAAAu/B,EAAA,MAUArI,EAAAh5C,UAAAshD,iBAAA,SAAAtN,EAAA1iB,GACA,IAAAiwB,EAAArgD,KAAA27C,gBAAA37C,KAAAo8C,iBACAr7B,EAAA/gB,KAAA48C,qBAAA58C,KAAAu7C,eACA+E,EAAAtgD,KAAA26C,aAAA95B,WAAA7gB,KAAAo4C,kBAAAtF,EAAA,EAAA/xB,EAAAs/B,QACAztC,IAAAwd,IACApwB,KAAAm4C,cAAAn4C,KAAA88C,oBAAAwD,EAAAlwB,IAEApwB,KAAAo4C,mBAAAtF,EACA9yC,KAAA+8C,qBASAjF,EAAAh5C,UAAAyhD,WAAA,SAAAxL,EAAA3kB,GACApwB,KAAAogD,iBAAA/gD,KAAA8C,IAAAnC,KAAA+5C,aAAAhF,GAAA3kB,IAUA0nB,EAAAh5C,UAAA0hD,eAAA,SAAAzL,EAAA3kB,GACA,IAAAiwB,EAAArgD,KAAA27C,gBAAA37C,KAAAo8C,iBACAqE,EAAAzgD,KAAA26C,aAAA75B,SAAA9gB,KAAAq4C,gBAAAtD,EAAAsL,QACAztC,IAAAwd,IACApwB,KAAAm4C,cAAAn4C,KAAAi9C,sBAAAwD,EAAArwB,IAEApwB,KAAAq4C,iBAAAtD,EACA/0C,KAAA+8C,qBAQAjF,EAAAh5C,UAAA+7C,UAAA,SAAAj6B,GACA5gB,KAAAm4C,cAAAv3B,EACA5gB,KAAA+8C,qBAOAjF,EAAAh5C,UAAAo9C,QAAA,SAAAwE,EAAA3L,GAGA,OAFA/0C,KAAA+3C,OAAA2I,IAAA3L,EACA/0C,KAAAgX,UACAhX,KAAA+3C,OAAA2I,IAQA5I,EAAAh5C,UAAAg8C,cAAA,SAAAj6B,GACA7gB,KAAAo4C,kBAAAv3B,EACA7gB,KAAA+8C,qBAQAjF,EAAAh5C,UAAA87C,YAAA,SAAA95B,GACA9gB,KAAAq4C,gBAAAv3B,EACA9gB,KAAA+8C,qBAOAjF,EAAAh5C,UAAAk8C,QAAA,SAAAD,GACA/6C,KAAA86C,cAAA96C,KAAAi8C,qBAAAlB,KAUAjD,EAAAh5C,UAAAi+C,kBAAA,SAAA4D,EAAAC,GACA,IAAAP,EAAArgD,KAAA27C,gBAAA37C,KAAAo8C,kBAAAwE,EAEAH,EAAAzgD,KAAA26C,aAAA75B,SAAA9gB,KAAAq4C,gBAAAgI,GACAt/B,EAAA/gB,KAAA48C,qBAAA6D,GACAH,EAAAtgD,KAAA26C,aAAA95B,WAAA7gB,KAAAo4C,kBAAA,EAAAr3B,EAAAs/B,GACAQ,EAAA7gD,KAAA26C,aAAA/5B,OAAA5gB,KAAAm4C,cAAAmI,EAAAv/B,EAAAs/B,GACArgD,KAAAjC,IAAqBg2C,MAAY0M,GACjCzgD,KAAA2I,IAAqBorC,GAAY0M,GAEjCzgD,KAAAjC,IAAqBg2C,MAAYuM,GACjCtgD,KAAA2I,IAAqBorC,GAAYuM,GAEjCtgD,KAAAjC,IAAsBg2C,KAAyBiC,GAAMh2C,KAAAjC,IAAUg2C,IAAY8M,IAC3E7gD,KAAA2I,IAAqBorC,GAAY8M,GAEjC7gD,KAAA27C,iBAAAgF,GACA3gD,KAAAq8C,oBAYAvE,EAAAh5C,UAAAm8C,mBAAA,SAAA6F,EAAAC,EAAA3wB,GACA,IAAAkO,OAAA1rB,IAAAkuC,IAAA,IACAzkC,EAAA0kC,GAAA,EACAN,EAAAzgD,KAAA26C,aAAA75B,SAAA9gB,KAAAq4C,iBACAt3B,EAAA/gB,KAAA48C,qBAAA6D,GACAH,EAAAtgD,KAAA26C,aAAA95B,WAAA7gB,KAAAo4C,kBAAA/7B,EAAA0E,GACA8/B,EAAA7gD,KAAA26C,aAAA/5B,OAAA5gB,KAAAm4C,cAAAmI,EAAAv/B,GACA,OAAAud,EAKA,OAJAt+B,KAAAo4C,kBAAAkI,EACAtgD,KAAAq4C,gBAAAoI,EACAzgD,KAAAm4C,cAAA0I,OACA7gD,KAAA+8C,oBAGA/8C,KAAAq7C,kBAAAiF,GACAtgD,KAAAu7C,gBAAAkF,GACAzgD,KAAAwgB,aACaw1B,GAAMh2C,KAAAwgB,YAAAqgC,KACnB7gD,KAAA27C,gBACA37C,KAAAq8C,mBAEAr8C,KAAA47C,SAAA,CACA96B,SAAA2/B,EACA7/B,OAAAigC,EACAhgC,WAAAy/B,EACAhiB,WACA0d,OAAwBlF,GACxB9yB,OAAAoM,MAUA0nB,EAAAh5C,UAAAkiD,iBAAA,WACAhhD,KAAAi7C,mBAAA,GACAj7C,KAAAk8C,QAAqBpI,GAAQ,IAU7BgE,EAAAh5C,UAAAmiD,eAAA,SAAAH,EAAAC,EAAA3wB,GACApwB,KAAAk8C,QAAqBpI,IAAQ,GAC7B9zC,KAAAi7C,mBAAA6F,EAAAC,EAAA3wB,IASA0nB,EAAAh5C,UAAAghD,qBAAA,SAAAtI,EAAA0J,GACA,IAAAngC,EAAA/gB,KAAA48C,qBAAA58C,KAAAu7C,eACA,OAAAv7C,KAAA26C,aAAA/5B,OAAA42B,EAAA0J,GAAAlhD,KAAAq7C,gBAAAt6B,IAUA+2B,EAAAh5C,UAAAqiD,mBAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAthD,KAAAi8C,qBAAAmF,GACA,OAAAphD,KAAAo+C,qBAAAp+C,KAAA2/C,yBAAA2B,KAUAxJ,EAAAh5C,UAAA6gD,yBAAA,SAAAjI,EAAA2J,GACA,IAAAhlC,EAAAglC,GAAA,EACAtgC,EAAA/gB,KAAA48C,qBAAA58C,KAAAu7C,eACA,OAAAv7C,KAAA26C,aAAA95B,WAAA62B,EAAAr7B,EAAA0E,IAEA+2B,EA9gCQ,CA+gCNx/B,GCrwCK,SAAAipC,GAAAC,EAAAC,GACP,IAAAC,EAAA9xC,SAAAC,cAAA,UAOA,OANA2xC,IACAE,EAAA/1C,MAAA61C,GAEAC,IACAC,EAAA9gD,OAAA6gD,GAEAC,EAAA5xC,WAAA,MASO,SAAS6xC,GAAU/oC,GAC1B,IAAAjN,EAAAiN,EAAAgpC,YACArmC,EAAAmiC,iBAAA9kC,GAEA,OADAjN,GAAAipC,SAAAr5B,EAAAsmC,WAAA,IAAAjN,SAAAr5B,EAAAumC,YAAA,IAUO,SAASC,GAAWnpC,GAC3B,IAAAhY,EAAAgY,EAAAopC,aACAzmC,EAAAmiC,iBAAA9kC,GAEA,OADAhY,GAAAg0C,SAAAr5B,EAAA0mC,UAAA,IAAArN,SAAAr5B,EAAA2mC,aAAA,IAOO,SAAAC,GAAAC,EAAAC,GACP,IAAAC,EAAAD,EAAAE,WACAD,GACAA,EAAAE,aAAAJ,EAAAC,GAOO,SAAAI,GAAAC,GACP,OAAAA,KAAAH,WAAAG,EAAAH,WAAAI,YAAAD,GAAA,KAKO,SAAAE,GAAAF,GACP,KAAAA,EAAAG,WACAH,EAAAC,YAAAD,EAAAG,WC7De,IAAAC,GAAA,CACfC,QAAA,UACAC,QAAA,UACA/5B,OAAA,SACAg6B,QAAA,SACAC,eAAA,gBACAC,eAAA,gBACAC,OAAA,UCbIC,GAAyB,WAC7B,IAAAhzC,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAuPd4yC,GAxMF,SAAAzyC,GAKb,SAAA0yC,EAAAtqC,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,YAIAkb,EAAyB3J,EAAM,GAAG0H,GAsBlC,OArBAiC,EAAmB4nC,GAAaC,cAChCnwC,IAAAqG,EAAAuqC,QAAAvqC,EAAAuqC,QAAA,EACAtoC,EAAmB4nC,GAAaE,cAChCpwC,IAAAqG,EAAAwqC,SAAAxqC,EAAAwqC,QACAvoC,EAAmB4nC,GAAaG,SAAAhqC,EAAAyqC,OAChCxoC,EAAmB4nC,GAAaI,qBAChCtwC,IAAAqG,EAAAq6B,cAAAr6B,EAAAq6B,cAAAtoC,IACAkQ,EAAmB4nC,GAAaK,qBAChCvwC,IAAAqG,EAAAs6B,cAAAt6B,EAAAs6B,cAAA,EAKAviC,EAAA2yC,gBAAA/wC,IAAAsI,EAAA0oC,UAAA3qC,EAAA2qC,UAAA,kBACA1oC,EAAA0oC,UACA5yC,EAAA6G,cAAAqD,GAKAlK,EAAA6yC,OAAA,KACA7yC,EAsKA,OArMIqyC,GAASE,EAAA1yC,GAoCb0yC,EAAAzkD,UAAAglD,aAAA,WACA,OAAA9jD,KAAA2jD,YAMAJ,EAAAzkD,UAAAilD,cAAA,SAAAC,GAEA,IAAAnS,EAAA7xC,KAAA6jD,QAAgD,CAChDI,MAAAjkD,KACAkkD,aAAAtxC,IAAAoxC,MAUA,OARAnS,EAAA2R,QAAwBn/B,GAAKhlB,KAAAw1B,MAAA,IAAA70B,KAAAmkD,cAAA,SAC7BtS,EAAAuS,YAAApkD,KAAAqkD,iBACAxS,EAAA4R,QAAAzjD,KAAAskD,aACAzS,EAAA3zB,OAAAle,KAAAgoB,YACA6pB,EAAA6R,OAAA1jD,KAAA8b,eAAA,IAAA+1B,EAAAqS,QAAAl5C,IAAA,GACA6mC,EAAAyB,cAAAtzC,KAAAi+C,mBACApM,EAAA0B,cAAAl0C,KAAAM,IAAAK,KAAAk+C,mBAAA,GACAl+C,KAAA6jD,OAAAhS,EACAA,GAQA0R,EAAAzkD,UAAAylD,eAAA,SAAAxrC,GACA,OAAe9I,KAQfszC,EAAAzkD,UAAA0lD,oBAAA,SAAAC,GACA,OAAex0C,KASfszC,EAAAzkD,UAAAkpB,UAAA,WACA,OAC2DhoB,KAAAjC,IAAc+kD,GAAa75B,SAQtFs6B,EAAAzkD,UAAAm/C,iBAAA,WACA,OAAiCj+C,KAAAjC,IAAc+kD,GAAaI,iBAQ5DK,EAAAzkD,UAAAo/C,iBAAA,WACA,OAAiCl+C,KAAAjC,IAAc+kD,GAAaK,iBAQ5DI,EAAAzkD,UAAAqlD,WAAA,WACA,OAAiCnkD,KAAAjC,IAAc+kD,GAAaC,UAM5DQ,EAAAzkD,UAAAulD,eAAA,WACA,OAAep0C,KAQfszC,EAAAzkD,UAAAwlD,WAAA,WACA,OAAkCtkD,KAAAjC,IAAc+kD,GAAaE,UAS7DO,EAAAzkD,UAAAgd,UAAA,WACA,OAAiC9b,KAAAjC,IAAc+kD,GAAaG,UAS5DM,EAAAzkD,UAAA4pB,UAAA,SAAAxK,GACAle,KAAA2I,IAAiBm6C,GAAa75B,OAAA/K,IAQ9BqlC,EAAAzkD,UAAA4lD,iBAAA,SAAApR,GACAtzC,KAAA2I,IAAiBm6C,GAAaI,eAAA5P,IAQ9BiQ,EAAAzkD,UAAA6lD,iBAAA,SAAApR,GACAvzC,KAAA2I,IAAiBm6C,GAAaK,eAAA5P,IAQ9BgQ,EAAAzkD,UAAA8lD,WAAA,SAAApB,GACAxjD,KAAA2I,IAAiBm6C,GAAaC,QAAAS,IAQ9BD,EAAAzkD,UAAA+lD,WAAA,SAAApB,GACAzjD,KAAA2I,IAAiBm6C,GAAaE,QAAAS,IAS9BF,EAAAzkD,UAAAgmD,UAAA,SAAAC,GACA/kD,KAAA2I,IAAiBm6C,GAAaG,QAAA8B,IAE9BxB,EAtMa,CAuMXjrC,GC/Oa0sC,GAAA,CACfC,UAAA,YACAnW,QAAA,UACAoW,MAAA,QACA5vC,MAAA,SCXI6vC,GAAyB,WAC7B,IAAA90C,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgDzB00C,GAAQ,CACZC,OAAA,UAsKeC,GA5JD,SAAAz0C,GAKd,SAAA00C,EAAAvsC,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAwsC,EAAkDj0C,EAAM,GAAG0H,UAC3DusC,EAAAC,OACA,IAAAA,EAAAxsC,EAAAwsC,OAyBA,OAxBAz0C,EAAAH,EAAAxT,KAAA2C,KAAAwlD,IAAAxlD,MAKA0lD,oBAAA,GAKA10C,EAAA20C,cAAA,GACQxyC,EAAMnC,EAAQkH,EAAmBktC,GAAQC,QAAAr0C,EAAA40C,qBAAA50C,GACjDy0C,EACAr5C,MAAA+K,QAAAsuC,GACAA,EAAA,IAA6B5sC,EAAU4sC,EAAAjkD,QAAA,CAAkB2X,QAAA,IAGzCe,EAA2B,qBAAAR,SAAA,IAI3C+rC,EAAA,IAAyB5sC,OAAUjG,EAAA,CAAauG,QAAA,IAEhDnI,EAAA60C,UAAAJ,GACAz0C,EAuHA,OAzJIm0C,GAASI,EAAA10C,GAuCb00C,EAAAzmD,UAAAgnD,mBAAA,WACA9lD,KAAAgX,WAKAuuC,EAAAzmD,UAAA8mD,qBAAA,WACA5lD,KAAA0lD,oBAAAjsC,QAAyClG,GACzCvT,KAAA0lD,oBAAA3lD,OAAA,EACA,IAAA0lD,EAAAzlD,KAAA+lD,YAEA,QAAA9pC,KADAjc,KAAA0lD,oBAAA5kD,KAAsCqS,EAAMsyC,EAASt0C,EAAmBC,IAAApR,KAAAgmD,iBAAAhmD,MAAoCmT,EAAMsyC,EAASt0C,EAAmBE,OAAArR,KAAAimD,oBAAAjmD,OAC9IA,KAAA2lD,cACA3lD,KAAA2lD,cAAA1pC,GAAAxC,QAA2ClG,GAEnCnT,EAAKJ,KAAA2lD,eAEb,IADA,IAAAO,EAAAT,EAAA/rC,WACAxc,EAAA,EAAA0U,EAAAs0C,EAAAnmD,OAAgD7C,EAAA0U,EAAQ1U,IAAA,CACxD,IAAA+mD,EAAAiC,EAAAhpD,GACA8C,KAAA2lD,cAA+Bx1C,EAAM8zC,IAAA,CACrB9wC,EAAM8wC,EAAQ3yC,EAAetR,KAAA8lD,mBAAA9lD,MAC7BmT,EAAM8wC,EAAQ7uC,EAASC,OAAArV,KAAA8lD,mBAAA9lD,OAGvCA,KAAAgX,WAMAuuC,EAAAzmD,UAAAknD,iBAAA,SAAAG,GACA,IAAAlC,EAA2DkC,EAAA,QAC3DnmD,KAAA2lD,cAA2Bx1C,EAAM8zC,IAAA,CACrB9wC,EAAM8wC,EAAQ3yC,EAAetR,KAAA8lD,mBAAA9lD,MAC7BmT,EAAM8wC,EAAQ7uC,EAASC,OAAArV,KAAA8lD,mBAAA9lD,OAEnCA,KAAAgX,WAMAuuC,EAAAzmD,UAAAmnD,oBAAA,SAAAE,GACA,IACA1nD,EAAkB0R,EADyCg2C,EAAA,SAE3DnmD,KAAA2lD,cAAAlnD,GAAAgb,QAAwClG,UACxCvT,KAAA2lD,cAAAlnD,GACAuB,KAAAgX,WAUAuuC,EAAAzmD,UAAAinD,UAAA,WACA,OACoF/lD,KAAAjC,IAAcqnD,GAAQC,SAU1GE,EAAAzmD,UAAA+mD,UAAA,SAAAJ,GACAzlD,KAAA2I,IAAiBy8C,GAAQC,OAAAI,IAKzBF,EAAAzmD,UAAAylD,eAAA,SAAAxrC,GACA,IAAAtM,OAAAmG,IAAAmG,IAAA,GAIA,OAHA/Y,KAAA+lD,YAAAtsC,QAAA,SAAAwqC,GACAA,EAAAM,eAAA93C,KAEAA,GAKA84C,EAAAzmD,UAAA0lD,oBAAA,SAAAC,GACA,IAAA2B,OAAAxzC,IAAA6xC,IAAA,GACAthD,EAAAijD,EAAArmD,OACAC,KAAA+lD,YAAAtsC,QAAA,SAAAwqC,GACAA,EAAAO,oBAAA4B,KAGA,IADA,IAAAC,EAAArmD,KAAA+jD,gBACA7mD,EAAAiG,EAAAyO,EAAAw0C,EAAArmD,OAA6C7C,EAAA0U,EAAQ1U,IAAA,CACrD,IAAAopD,EAAAF,EAAAlpD,GACAopD,EAAA9C,SAAA6C,EAAA7C,QACA8C,EAAA7C,QAAA6C,EAAA7C,SAAA4C,EAAA5C,QACA6C,EAAAhT,cAAAj0C,KAAAQ,IAAAymD,EAAAhT,cAAA+S,EAAA/S,eACAgT,EAAA/S,cAAAl0C,KAAAM,IAAA2mD,EAAA/S,cAAA8S,EAAA9S,oBACA3gC,IAAAyzC,EAAAnoC,cACAtL,IAAA0zC,EAAApoC,OACAooC,EAAApoC,OAAwC8D,GAAeskC,EAAApoC,OAAAmoC,EAAAnoC,QAGvDooC,EAAApoC,OAAAmoC,EAAAnoC,QAIA,OAAAkoC,GAKAb,EAAAzmD,UAAAulD,eAAA,WACA,OAAeW,GAAWE,OAE1BK,EA1Jc,CA2JZjC,ICvMK,SAASiD,GAAMxlC,EAAA9Z,EAAA+2C,GAMtB,YALAprC,IAAAorC,IACAA,EAAA,OAEAA,EAAA,GAAAj9B,EAAA,KAAA9Z,EACA+2C,EAAA,GAAAj9B,EAAA,KAAA9Z,EACA+2C,EAiBO,SAASwI,GAAKzlC,EAAA+xB,EAAAkL,GAMrB,YALAprC,IAAAorC,IACAA,EAAA,OAEAA,EAAA,GAAAj9B,EAAA,GAAA+xB,EAAA,KACAkL,EAAA,GAAAj9B,EAAA,GAAA+xB,EAAA,KACAkL,EAWO,SAAAyI,GAAA1lC,EAAAi9B,GACP,OAAA5xC,MAAA+K,QAAA4J,GACAA,QAGAnO,IAAAorC,EACAA,EAAA,CAAAj9B,KAGAi9B,EAAA,GAAAA,EAAA,GAA0D,EAE1DA,GClEA,IAAI0I,GAAyB,WAC7B,IAAAr2C,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAixCd,IC5tCf6K,GACAorC,GD2tCeC,GA5oCC,SAAA/1C,GAKhB,SAAAg2C,EAAA5tC,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,YACA8mD,EAwkCA,SAAA7tC,GAIA,IAAA8tC,EAAA,UACAn0C,IAAAqG,EAAA8tC,sBACAA,EAAA,iBAAA9tC,EAAA8tC,oBACAn3C,SAAAo3C,eAAA/tC,EAAA8tC,qBACA9tC,EAAA8tC,qBAKA,IAOAE,EAUAC,EAUAC,EA3BAp1C,EAAA,GACAq1C,EAAAnuC,EAAAwsC,QAA2D,mBAAAxsC,EAAA,OAAA8sC,UAC7B9sC,EAAA,WAA2BqsC,GAAU,CAAEG,OAA+BxsC,EAAA,SACpGlH,EAAWu8B,GAAWC,YAAA6Y,EACtBr1C,EAAWu8B,GAAWG,QAAAx1B,EAAAxH,OACtBM,EAAWu8B,GAAWI,WAAA97B,IAAAqG,EAAA8tB,KACtB9tB,EAAA8tB,KAAA,IAA2B8Q,QAE3BjlC,IAAAqG,EAAAguC,WACA76C,MAAA+K,QAAA8B,EAAAguC,UACAA,EAAA,IAA2BpuC,EAAUI,EAAAguC,SAAAzlD,UAGzB0Y,EAA2B,mBAAAjB,EAAA,SAAAS,SAAA,IACvCutC,EAA6ChuC,EAAA,gBAI7CrG,IAAAqG,EAAAiuC,eACA96C,MAAA+K,QAAA8B,EAAAiuC,cACAA,EAAA,IAA+BruC,EAAUI,EAAAiuC,aAAA1lD,UAG7B0Y,EAA2B,mBAAAjB,EAAA,aAAAS,SAAA,IACvCwtC,EAAiDjuC,EAAA,oBAIjDrG,IAAAqG,EAAAkuC,SACA/6C,MAAA+K,QAAA8B,EAAAkuC,UACAA,EAAA,IAA2BtuC,EAAUI,EAAAkuC,SAAA3lD,UAGzB0Y,EAA2B,mBAAAjB,EAAA,SAAAS,SAAA,IACvCytC,EAAAluC,EAAAkuC,UAIAA,EAAA,IAAuBtuC,EAEvB,OACAouC,WACAC,eACAH,sBACAI,WACAp1C,UAloCAs1C,CAAApuC,GAyGA,QAAAxa,KApGAuS,EAAAs2C,sBAAA10C,IAAAqG,EAAAsuC,gBAAAtuC,EAAAsuC,gBAAA,GAKAv2C,EAAAw2C,iBAAA50C,IAAAqG,EAAA8lC,WACA9lC,EAAA8lC,WAAiClf,GAKjC7uB,EAAAy2C,mBAIAz2C,EAAA02C,gBAAA,WACA1nD,KAAAynD,wBAAA70C,EACA5S,KAAA2nD,aAAAzpB,KAAAC,QACSz/B,KAAAsS,GAKTA,EAAA42C,4BvD1IA,cuD+IA52C,EAAA62C,4BvD/IA,cuDoJA72C,EAAA82C,YAAA,EAKA92C,EAAA+2C,YAAA,KAMA/2C,EAAAg3C,gBAAA,KAKAh3C,EAAAi3C,yBAAA,KAKAj3C,EAAAk3C,uBAAA,KAKAl3C,EAAAm3C,gCAAA,KAKAn3C,EAAAo3C,UAAAx4C,SAAAC,cAAA,OACAmB,EAAAo3C,UAAAxE,UAAA,eAAqD7jB,GAAK,gBAC1D/uB,EAAAo3C,UAAA7sC,MAAA8gB,SAAA,WACArrB,EAAAo3C,UAAA7sC,MAAA8sC,SAAA,SACAr3C,EAAAo3C,UAAA7sC,MAAA5P,MAAA,OACAqF,EAAAo3C,UAAA7sC,MAAA3a,OAAA,OAEAoQ,EAAAo3C,UAAA7sC,MAAA+sC,cAAA,OACAt3C,EAAAo3C,UAAA7sC,MAAAgtC,YAAA,OAKAv3C,EAAAw3C,kBAAA54C,SAAAC,cAAA,OACAmB,EAAAw3C,kBAAAjtC,MAAA8gB,SAAA,WACArrB,EAAAw3C,kBAAAjtC,MAAAmoC,OAAA,IACA1yC,EAAAw3C,kBAAAjtC,MAAA5P,MAAA,OACAqF,EAAAw3C,kBAAAjtC,MAAA3a,OAAA,OACAoQ,EAAAw3C,kBAAA5E,UAAA,sBACA5yC,EAAAo3C,UAAAK,YAAAz3C,EAAAw3C,mBAKAx3C,EAAA03C,2BAAA94C,SAAAC,cAAA,OACAmB,EAAA03C,2BAAAntC,MAAA8gB,SAAA,WACArrB,EAAA03C,2BAAAntC,MAAAmoC,OAAA,IACA1yC,EAAA03C,2BAAAntC,MAAA5P,MAAA,OACAqF,EAAA03C,2BAAAntC,MAAA3a,OAAA,OACAoQ,EAAA03C,2BAAA9E,UAAA,gCACA5yC,EAAAo3C,UAAAK,YAAAz3C,EAAA03C,4BAKA13C,EAAA23C,wBAAA,IAA4C/b,GAAsB57B,EAAAiI,EAAA6zB,eAC1C5M,GACZ/sB,EAAMnC,EAAA23C,wBAAgCzoB,GAAmBzhC,GAAAuS,EAAA43C,sBAAA53C,GA8IrE,OAxIAA,EAAA63C,qBAAA/B,EAAAC,oBAKA/1C,EAAA83C,gBAAA,KACQ31C,EAAMnC,EAAAo3C,UAAkBhzC,EAASI,YAAAxE,EAAA+3C,mBAAA/3C,GACjCmC,EAAMnC,EAAAo3C,UAAkBhzC,EAASuB,MAAA3F,EAAA+3C,mBAAA/3C,GACjCmC,EAAMnC,EAAAo3C,UAAkBhzC,EAASiB,WAAArF,EAAA+3C,mBAAA/3C,GAKzCA,EAAAi2C,SAAAH,EAAAG,UAAA,IAAyDpuC,EAKzD7H,EAAAk2C,aAAAJ,EAAAI,cAAA,IAAiEruC,EAIjE7H,EAAAg4C,uBAKAh4C,EAAAi4C,UAAAnC,EAAAK,SAMAn2C,EAAAk4C,gBAAA,GAKAl4C,EAAAm4C,UAAAn4C,EAAAo4C,iBAKAp4C,EAAAq4C,cAKAr4C,EAAAs4C,OAAA,KAKAt4C,EAAAu4C,qBAAA,GAKAv4C,EAAAw4C,WAAA,IAA+BvY,GAASjgC,EAAAy4C,gBAAA/qD,KAAAsS,KAAA04C,kBAAAhrD,KAAAsS,IAMxCA,EAAA24C,oBAAA,GACQx2C,EAAMnC,EAAQkH,EAAmBo2B,GAAWC,YAAAv9B,EAAA44C,yBAAA54C,GAC5CmC,EAAMnC,EAAQkH,EAAmBo2B,GAAWI,MAAA19B,EAAA64C,mBAAA74C,GAC5CmC,EAAMnC,EAAQkH,EAAmBo2B,GAAWE,MAAAx9B,EAAA84C,mBAAA94C,GAC5CmC,EAAMnC,EAAQkH,EAAmBo2B,GAAWG,QAAAz9B,EAAA+4C,qBAAA/4C,GAGpDA,EAAA6G,cAAAivC,EAAA/0C,QACAf,EAAAi2C,SAAAxtC,QAKA,SAAAuwC,GACAA,EAAAC,OAAAjqD,OACStB,KAAAsS,IACDmC,EAAMnC,EAAAi2C,SAAiB91C,EAAmBC,IAIlD,SAAA5B,GACAA,EAAAoJ,QAAAqxC,OAAAjqD,OACSgR,GACDmC,EAAMnC,EAAAi2C,SAAiB91C,EAAmBE,OAIlD,SAAA7B,GACAA,EAAAoJ,QAAAqxC,OAAA,OACSj5C,GACTA,EAAAk2C,aAAAztC,QAKA,SAAAywC,GACAA,EAAAD,OAAAjqD,OACStB,KAAAsS,IACDmC,EAAMnC,EAAAk2C,aAAqB/1C,EAAmBC,IAItD,SAAA5B,GACAA,EAAAoJ,QAAAqxC,OAAAjqD,OACSgR,GACDmC,EAAMnC,EAAAk2C,aAAqB/1C,EAAmBE,OAItD,SAAA7B,GACAA,EAAAoJ,QAAAqxC,OAAA,OACSj5C,GACTA,EAAAi4C,UAAAxvC,QAAAzI,EAAAm5C,oBAAAzrD,KAAAsS,IACQmC,EAAMnC,EAAAi4C,UAAkB93C,EAAmBC,IAInD,SAAA5B,GACAxP,KAAAmqD,oBAA+E36C,EAAA,UACtEwB,GACDmC,EAAMnC,EAAAi4C,UAAkB93C,EAAmBE,OAInD,SAAA7B,GACA,IACAyM,EADoEzM,EAAA,QACpEkM,aACA9I,IAAAqJ,UACAjc,KAAAkpD,gBAAAjtC,EAAA/O,YAEAsC,EAAAoJ,QAAAqxC,OAAA,OACSj5C,GACTA,EA00BA,OAxkCI01C,GAASG,EAAAh2C,GAoQbg2C,EAAA/nD,UAAAsqD,eAAA,WACA,UAAAviD,MAAA,oDAOAggD,EAAA/nD,UAAAsrD,WAAA,SAAAJ,GACAhqD,KAAAqqD,cAAAvpD,KAAAkpD,IAWAnD,EAAA/nD,UAAAwrD,eAAA,SAAAJ,GACAlqD,KAAAuqD,kBAAAzpD,KAAAopD,IASArD,EAAA/nD,UAAA0rD,SAAA,SAAAvG,GACAjkD,KAAAyqD,gBAAA1E,YACAjlD,KAAAmjD,IAOA4C,EAAA/nD,UAAA4rD,WAAA,SAAAC,GACA3qD,KAAA4qD,cAAA9pD,KAAA6pD,IAOA9D,EAAA/nD,UAAAqrD,oBAAA,SAAAQ,GACA,IAAA1uC,EAAA0uC,EAAAjvC,aACA9I,IAAAqJ,IACAjc,KAAAkpD,gBAAAjtC,EAAA/O,YAAAy9C,GAEAA,EAAAV,OAAAjqD,OAMA6mD,EAAA/nD,UAAA+rD,iBAAA,SAAAC,GACA9qD,KAAA+qD,mBACA/qD,KAAAgpD,uBAAsC71C,EAAM23C,EAAa11C,EAASG,MAAAvV,KAAAgrD,WAAAtsD,KAAAsB,QAKlE6mD,EAAA/nD,UAAAisD,iBAAA,WACA/qD,KAAAgpD,wBACYz1C,EAAavT,KAAAgpD,yBAOzBnC,EAAA/nD,UAAAkV,gBAAA,WACAhU,KAAA2oD,wBAAA50C,UACQL,EAAQ1T,KAAAooD,UAAiBhzC,EAASI,YAAAxV,KAAA+oD,mBAAA/oD,MAClC0T,EAAQ1T,KAAAooD,UAAiBhzC,EAASuB,MAAA3W,KAAA+oD,mBAAA/oD,MAClC0T,EAAQ1T,KAAAooD,UAAiBhzC,EAASiB,WAAArW,KAAA+oD,mBAAA/oD,WAC1C4S,IAAA5S,KAAAqpD,gBACAr2C,oBAAgCoC,EAASmB,OAAAvW,KAAAqpD,eAAA,GACzCrpD,KAAAqpD,mBAAAz2C,GAEA5S,KAAAynD,qBACAnL,qBAAAt8C,KAAAynD,oBACAznD,KAAAynD,wBAAA70C,GAEA5S,KAAA+qD,mBACA/qD,KAAAirD,UAAA,MACAp6C,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAqBA6mD,EAAA/nD,UAAAosD,sBAAA,SAAAx+C,EAAAmC,EAAAmK,GACA,GAAAhZ,KAAA+nD,YAAA,CAGA,IAAAnpC,EAAA5e,KAAAo/B,uBAAA1yB,GAGAy+C,OAAAv4C,KAFAoG,OAAApG,IAAAoG,IACsC,IACtCmyC,aACAnyC,EAAAmyC,aAAAnrD,KAAA+nD,YAAAhJ,WAAA,EACAqM,OAAAx4C,IAAAoG,EAAAoyC,YACApyC,EAAAoyC,YAAsCn3C,EACtC,OAAAjU,KAAAmpD,UAAAkC,2BAAAzsC,EAAA5e,KAAA+nD,YAAAoD,EAAAt8C,EAAA,KAAAu8C,EAAA,QAUAvE,EAAA/nD,UAAAwsD,mBAAA,SAAA5+C,EAAAsM,GACA,IAAAuyC,EAAA,KAOA,OANAvrD,KAAAkrD,sBAAAx+C,EAAA,SAAA8+C,GACAD,IACAA,EAAA,IAEAA,EAAAzqD,KAAA0qD,IACSxyC,GACTuyC,GAmBA1E,EAAA/nD,UAAA2sD,oBAAA,SAAA/+C,EAAAmC,EAAAmK,GACA,GAAAhZ,KAAA+nD,YAAA,CAGA,IAAA9uC,EAAAD,GAA+D,GAC/DmyC,OAAAv4C,IAAAqG,EAAAkyC,aACAnyC,EAAAmyC,aAAAnrD,KAAA+nD,YAAAhJ,WAAA,EACAqM,EAAAnyC,EAAAmyC,aAAiDn3C,EACjD,OAAAjU,KAAAmpD,UAAAsC,oBAAA/+C,EAAA1M,KAAA+nD,YAAAoD,EAAAt8C,EAAAu8C,KAUAvE,EAAA/nD,UAAA4sD,kBAAA,SAAAh/C,EAAAsM,GACA,IAAAhZ,KAAA+nD,YACA,SAEA,IAAAnpC,EAAA5e,KAAAo/B,uBAAA1yB,GAGA0+C,OAAAx4C,KAFAoG,OAAApG,IAAAoG,IACsC,IACtCoyC,YAAApyC,EAAAoyC,YAA4Fn3C,EAC5Fk3C,OAAAv4C,IAAAoG,EAAAmyC,aACAnyC,EAAAmyC,aAAAnrD,KAAA+nD,YAAAhJ,WAAA,EACA,OAAA/+C,KAAAmpD,UAAAwC,uBAAA/sC,EAAA5e,KAAA+nD,YAAAoD,EAAAC,EAAA,OAQAvE,EAAA/nD,UAAA8sD,mBAAA,SAAAp8C,GACA,OAAAxP,KAAAo/B,uBAAAp/B,KAAAm/B,cAAA3vB,KAQAq3C,EAAA/nD,UAAAqgC,cAAA,SAAA3vB,GACA,IAAAq8C,EAAA7rD,KAAAooD,UAAA0D,wBACAC,EAAA,mBAAAv8C,EACkC,EAAA04B,eAAA,GACA,EAClC,OACA6jB,EAAAzoB,QAAAuoB,EAAAG,KACAD,EAAAxoB,QAAAsoB,EAAAI,MAYApF,EAAA/nD,UAAAotD,UAAA,WACA,OAAuDlsD,KAAAjC,IAAcuwC,GAAWG,SAShFoY,EAAA/nD,UAAAqtD,iBAAA,WACA,IAAA16C,EAAAzR,KAAAksD,YACA,YAAAt5C,IAAAnB,EACA,iBAAAA,EAAA7B,SAAAo3C,eAAAv1C,KAGA,MAUAo1C,EAAA/nD,UAAAsgC,uBAAA,SAAA1yB,GACA,IAAAkyB,EAAA5+B,KAAA+nD,YACA,OAAAnpB,EAImB18B,GAAc08B,EAAAwtB,2BAAA1/C,EAAAlL,SAHjC,MAYAqlD,EAAA/nD,UAAAurD,YAAA,WACA,OAAArqD,KAAAinD,UAQAJ,EAAA/nD,UAAA8rD,YAAA,WACA,OAAA5qD,KAAAipD,WAUApC,EAAA/nD,UAAAutD,eAAA,SAAApwC,GACA,IAAA0uC,EAAA3qD,KAAAkpD,gBAAAjtC,EAAA/O,YACA,YAAA0F,IAAA+3C,IAAA,MAUA9D,EAAA/nD,UAAAyrD,gBAAA,WACA,OAAAvqD,KAAAknD,cAQAL,EAAA/nD,UAAA2rD,cAAA,WACA,OAC8BzqD,KAAAjC,IAAcuwC,GAAWC,aAOvDsY,EAAA/nD,UAAAinD,UAAA,WAEA,OADA/lD,KAAAyqD,gBAAA1E,aAMAc,EAAA/nD,UAAAwtD,WAAA,WAEA,IADA,IAAAC,EAAAvsD,KAAAyqD,gBAAAjG,sBACAtnD,EAAA,EAAA0U,EAAA26C,EAAAxsD,OAAqD7C,EAAA0U,IAAQ1U,EAAA,CAC7D,IACAoQ,EADAi/C,EAAArvD,GAAA+mD,MACuEuI,YACvE,GAAAl/C,KAAAm/C,QACA,SAGA,UASA5F,EAAA/nD,UAAA4tD,uBAAA,SAAA9tC,GACA,IAAAggB,EAAA5+B,KAAA+nD,YACA,OAAAnpB,EAImB18B,GAAc08B,EAAA+tB,2BAAA/tC,EAAApd,MAAA,MAHjC,MAUAqlD,EAAA/nD,UAAA8tD,YAAA,WACA,OAAA5sD,KAAAmpD,WAQAtC,EAAA/nD,UAAA+tD,QAAA,WACA,OACsD7sD,KAAAjC,IAAcuwC,GAAWE,OAS/EqY,EAAA/nD,UAAAguD,QAAA,WACA,OACwB9sD,KAAAjC,IAAcuwC,GAAWI,OAOjDmY,EAAA/nD,UAAAuuC,YAAA,WACA,OAAArtC,KAAAooD,WASAvB,EAAA/nD,UAAAiuD,oBAAA,WACA,OAAA/sD,KAAAwoD,mBASA3B,EAAA/nD,UAAAkuD,6BAAA,WACA,OAAAhtD,KAAA0oD,4BASA7B,EAAA/nD,UAAA2qD,gBAAA,SAAA7X,EAAAqb,EAAAC,EAAAC,GAGA,IAAAvuB,EAAA5+B,KAAA+nD,YACA,KAAAnpB,GAAAquB,KAAAruB,EAAAwuB,aACA,OlBjyBOpiD,IkBmyBP,IAAA4zB,EAAAwuB,YAAAH,GAAArb,EAAAP,UACA,OlBpyBOrmC,IkB4yBP,IAAAoX,EAAA8qC,EAAA,GAAAtuB,EAAAyuB,MAAA,GACAhrC,EAAA6qC,EAAA,GAAAtuB,EAAAyuB,MAAA,GACA,aAAAhuD,KAAAC,IAAA6tD,GACA9tD,KAAAK,KAAA0iB,IAAAC,KAAA8qC,GAMAtG,EAAA/nD,UAAAiqD,mBAAA,SAAA/pB,EAAA7pB,GACA,IAAA/R,EAAA+R,GAAA6pB,EAAA57B,KACAkqD,EAAA,IAAkCxuB,GAAe17B,EAAApD,KAAAg/B,GACjDh/B,KAAA4oD,sBAAA0E,IAKAzG,EAAA/nD,UAAA8pD,sBAAA,SAAA0E,GACA,GAAAttD,KAAA+nD,YAAA,CAMA,IADA,IAAAt2C,EAAA67C,EAAApuB,cAAAztB,OACAA,aAAA87C,aAAA,CACA,GAAA97C,EAAA+7C,gBAAAxtD,KAAA0oD,2BACA,OAEAj3C,IAAA+7C,cAEAxtD,KAAAspD,OAAAgE,EAAA1uC,WACA0uC,EAAA1uB,WAAA5+B,KAAA+nD,YACA,IAAA0F,EAAAztD,KAAAuqD,kBAAA7wC,WACA,QAAA1Z,KAAA+U,cAAAu4C,GACA,QAAApwD,EAAAuwD,EAAA1tD,OAAA,EAAsD7C,GAAA,EAAQA,IAAA,CAC9D,IAAAgtD,EAAAuD,EAAAvwD,GACA,GAAAgtD,EAAAwD,YAIA,IADAxD,EAAAyD,YAAAL,GAEA,SAQAzG,EAAA/nD,UAAA8uD,iBAAA,WACA,IAAAhvB,EAAA5+B,KAAA+nD,YAUA8F,EAAA7tD,KAAAwpD,WACA,IAAAqE,EAAA77C,UAAA,CACA,IAAAkgC,EAAAlyC,KAAAsnD,iBACAnV,EAAAD,EACA,GAAAtT,EAAA,CACA,IAAAkvB,EAAAlvB,EAAAmvB,UACA,GAAAD,EAA0Bha,KAAQga,EAAqBha,IAAQ,CAC/D,IAAAka,EAAA9vB,KAAAC,MAAAS,EAAAqvB,KAAA,EACA/b,EAAA8b,EAAA,IACA7b,EAAA6b,EAAA,KAGAH,EAAAlc,kBAAAO,IACA2b,EAAA9c,eACA8c,EAAA5b,cAAAC,EAAAC,KAGAvT,IAAA5+B,KAAAkV,YAA2Cy5B,KAAe/P,EAAA4c,SAC1Dx7C,KAAAwpD,WAAA7X,mBAAA3xC,KAAAssD,cACAtsD,KAAAmpD,UAAA+E,oBAA+Cvf,GAAe/P,GAG9D,IADA,IAAAuvB,EAAAnuD,KAAAupD,qBACArsD,EAAA,EAAA0U,EAAAu8C,EAAApuD,OAAwD7C,EAAA0U,IAAQ1U,EAChEixD,EAAAjxD,GAAA8C,KAAA4+B,GAEAuvB,EAAApuD,OAAA,GAKA8mD,EAAA/nD,UAAAgrD,mBAAA,WACA9pD,KAAA8sD,WACA9sD,KAAA8sD,UAAA7R,mBAAA,GAEAj7C,KAAAouD,UAKAvH,EAAA/nD,UAAAirD,qBAAA,WAKA,IAAAsE,EAIA,GAHAruD,KAAAksD,cACAmC,EAAAruD,KAAAmsD,oBAEAnsD,KAAA8oD,gBAAA,CACA,QAAA5rD,EAAA,EAAA0U,EAAA5R,KAAA8oD,gBAAA/oD,OAA6D7C,EAAA0U,IAAQ1U,EACrDqW,EAAavT,KAAA8oD,gBAAA5rD,IAE7B8C,KAAA8oD,gBAAA,KAEA,GAAAuF,EAOA,CACAA,EAAA5F,YAAAzoD,KAAAooD,WACA,IAAArB,EAAA/mD,KAAA6oD,qBACA7oD,KAAA6oD,qBAAAwF,EACAruD,KAAA8oD,gBAAA,CACgB31C,EAAM4zC,EAAsB3xC,EAASU,QAAA9V,KAAA+oD,mBAAA/oD,MACrCmT,EAAM4zC,EAAsB3xC,EAASW,SAAA/V,KAAA+oD,mBAAA/oD,OAErDA,KAAAqpD,gBACArpD,KAAAqpD,cAAArpD,KAAAsuD,WAAA5vD,KAAAsB,MACA2N,iBAAiCyH,EAASmB,OAAAvW,KAAAqpD,eAAA,SAhB9B5G,GAAUziD,KAAAooD,gBACtBx1C,IAAA5S,KAAAqpD,gBACAr2C,oBAAoCoC,EAASmB,OAAAvW,KAAAqpD,eAAA,GAC7CrpD,KAAAqpD,mBAAAz2C,GAgBA5S,KAAAsuD,cAOAzH,EAAA/nD,UAAA4qD,kBAAA,WACA1pD,KAAAouD,UAKAvH,EAAA/nD,UAAAyvD,2BAAA,WACAvuD,KAAAouD,UAKAvH,EAAA/nD,UAAA+qD,mBAAA,WACA7pD,KAAAioD,2BACY10C,EAAavT,KAAAioD,0BACzBjoD,KAAAioD,yBAAA,MAEAjoD,KAAAkoD,yBACY30C,EAAavT,KAAAkoD,wBACzBloD,KAAAkoD,uBAAA,MAEA,IAAAnhB,EAAA/mC,KAAA8sD,UACA/lB,IACA/mC,KAAAooD,UAAAoG,aAAA,YAAqDr+C,EAAM42B,IAC3D/mC,KAAAioD,yBAA4C90C,EAAM4zB,EAAOz1B,EAAetR,KAAAuuD,2BAAAvuD,MACxEA,KAAAkoD,uBAA0C/0C,EAAM4zB,EAAO3xB,EAASC,OAAArV,KAAAuuD,2BAAAvuD,MAChE+mC,EAAAkU,mBAAA,IAEAj7C,KAAAouD,UAKAvH,EAAA/nD,UAAA8qD,yBAAA,WACA5pD,KAAAmoD,kCACAnoD,KAAAmoD,gCAAA1uC,QAAyDlG,GACzDvT,KAAAmoD,gCAAA,MAEA,IAAAf,EAAApnD,KAAAyqD,gBACArD,IACApnD,KAAAmoD,gCAAA,CACgBh1C,EAAMi0C,EAAa91C,EAAetR,KAAAouD,OAAApuD,MAClCmT,EAAMi0C,EAAahyC,EAASC,OAAArV,KAAAouD,OAAApuD,QAG5CA,KAAAouD,UAKAvH,EAAA/nD,UAAA2vD,WAAA,WACA,QAAAzuD,KAAA+nD,aAMAlB,EAAA/nD,UAAA4vD,WAAA,WACA1uD,KAAAynD,oBACAnL,qBAAAt8C,KAAAynD,oBAEAznD,KAAA0nD,mBAKAb,EAAA/nD,UAAAksD,WAAA,WAEA,IADA,IAAA2D,EAAA3uD,KAAAyqD,gBAAAjG,sBACAtnD,EAAA,EAAA0U,EAAA+8C,EAAA5uD,OAAgD7C,EAAA0U,IAAQ1U,EAAA,CACxD,IAAA+mD,EAAA0K,EAAAzxD,GAAA+mD,MACAA,EAAA2K,eACA3K,EAAA2I,cAAAiC,uBAQAhI,EAAA/nD,UAAAsvD,OAAA,gBACAx7C,IAAA5S,KAAAynD,qBACAznD,KAAAynD,mBAAAtK,sBAAAn9C,KAAA0nD,mBAUAb,EAAA/nD,UAAAgwD,cAAA,SAAA9E,GACA,OAAAhqD,KAAAqqD,cAAA1oD,OAAAqoD,IASAnD,EAAA/nD,UAAAiwD,kBAAA,SAAA7E,GACA,OAAAlqD,KAAAuqD,kBAAA5oD,OAAAuoD,IASArD,EAAA/nD,UAAAkwD,YAAA,SAAA/K,GAEA,OADAjkD,KAAAyqD,gBAAA1E,YACApkD,OAAAsiD,IASA4C,EAAA/nD,UAAAmwD,cAAA,SAAAtE,GACA,OAAA3qD,KAAA4qD,cAAAjpD,OAAAgpD,IAMA9D,EAAA/nD,UAAA6oD,aAAA,SAAAsG,GACA,IAAAiB,EACAnuC,EAAA/gB,KAAA6sD,UACA9lB,EAAA/mC,KAAA8sD,UACA5uC,EpE14BA,CAAAlT,SAAA,UoE24BAmkD,EAAAnvD,KAAA+nD,YAEAnpB,EAAA,KACA,QAAAhsB,IAAAmO,GD9iCO,SAAAA,GACP,OAAAA,EAAA,MAAAA,EAAA,KC6iCkCquC,CAAOruC,IAAAgmB,KAAA2U,QAAA,CACzC,IAAAqS,EAAAhnB,EAAA8W,SAAA79C,KAAA+nD,YAAA/nD,KAAA+nD,YAAAgG,eAAAn7C,GACAs8C,EAAAnoB,EAAA+K,SAAA9xC,KAAAwnD,aACA5oB,EAA+C,CAC/C4c,SAAA,EACAmR,2BAAA3sD,KAAA4nD,4BACAyH,eAAAF,IAAAE,eAAA,GACAnxC,SACAmvC,MAAArtD,KAAAspD,OAAAtpD,KAAAspD,OAAA4F,EAAAtuC,OACArR,MAAAvP,KAAA8nD,cACAyE,iBAAAvsD,KAAAyqD,gBAAAjG,sBACAzF,WAAA/+C,KAAAwnD,YACA4E,2BAAApsD,KAAA6nD,4BACAsG,oBAAA,GACAptC,OACAuuC,mBAAAtvD,KAAA2pD,oBACAkE,UAAA7tD,KAAAwpD,WACAyE,OACAsB,UAAA,GACAL,YACAnB,YACAX,YAAA,IAQA,GALAxuB,IACAA,EAAA1gB,OAAgCyC,GAAiBuuC,EAAAtuC,OAAAsuC,EAAAruC,WAAAquC,EAAApuC,SAAA8d,EAAA7d,KAAA7C,IAEjDle,KAAA+nD,YAAAnpB,EACA5+B,KAAAmpD,UAAAqG,YAAA5wB,GACAA,EAAA,CAKA,GAJAA,EAAA4c,SACAx7C,KAAAouD,SAEAhiD,MAAAtN,UAAAgC,KAAAoB,MAAAlC,KAAAupD,qBAAA3qB,EAAAuvB,qBACAgB,IACAnvD,KAAAgoD,kBACsB3nC,GAAOrgB,KAAAgoD,mBACJtoC,GAAMkf,EAAA1gB,OAAAle,KAAAgoD,oBAE/BhoD,KAAA+U,cAAA,IAA2C0pB,GAAS4P,GAAYruC,KAAAmvD,IAChEnvD,KAAAgoD,gBAA2C5oC,GAAmBpf,KAAAgoD,kBAG9DhoD,KAAAgoD,kBACAppB,EAAAmvB,UAAsCja,MACtClV,EAAAmvB,UAAsCja,MACrBp0B,GAAMkf,EAAA1gB,OAAAle,KAAAgoD,mBAEvBhoD,KAAA+U,cAAA,IAAuC0pB,GAAS4P,GAAYruC,KAAA4+B,IAC5CzjB,GAAKyjB,EAAA1gB,OAAAle,KAAAgoD,kBAGrBhoD,KAAA+U,cAAA,IAA+B0pB,GAAS4P,GAAYruC,KAAA4+B,IACpD1wB,WAAAlO,KAAA4tD,iBAAAlvD,KAAAsB,MAAA,IAQA6mD,EAAA/nD,UAAA2wD,cAAA,SAAArI,GACApnD,KAAA2I,IAAiB2lC,GAAWC,WAAA6Y,IAQ5BP,EAAA/nD,UAAA4wD,QAAA,SAAA3uC,GACA/gB,KAAA2I,IAAiB2lC,GAAWE,KAAAztB,IAS5B8lC,EAAA/nD,UAAAmsD,UAAA,SAAAx5C,GACAzR,KAAA2I,IAAiB2lC,GAAWG,OAAAh9B,IAQ5Bo1C,EAAA/nD,UAAA6wD,QAAA,SAAA5oB,GACA/mC,KAAA2I,IAAiB2lC,GAAWI,KAAA3H,IAK5B8f,EAAA/nD,UAAA8wD,YAAA,SAAApE,GACAxrD,KAAA2pD,oBAAiCx5C,EAAMq7C,KAAA,EACvCxrD,KAAAouD,UAOAvH,EAAA/nD,UAAAwvD,WAAA,WACA,IAAAD,EAAAruD,KAAAmsD,mBACA,GAAAkC,EAGA,CACA,IAAAwB,EAAAnS,iBAAA2Q,GACAruD,KAAA0vD,QAAA,CACArB,EAAAzM,YACAkO,WAAAD,EAAA,iBACAC,WAAAD,EAAA,aACAC,WAAAD,EAAA,cACAC,WAAAD,EAAA,kBACAxB,EAAArM,aACA8N,WAAAD,EAAA,gBACAC,WAAAD,EAAA,YACAC,WAAAD,EAAA,eACAC,WAAAD,EAAA,0BAdA7vD,KAAA0vD,aAAA98C,IAqBAi0C,EAAA/nD,UAAAixD,cAAA,SAAAvE,UACAxrD,KAAA2pD,oBAAwCx5C,EAAMq7C,IAC9CxrD,KAAAouD,UAEAvH,EAzkCgB,CA0kCdvuC,GE/sCE03C,GAAyB,WAC7B,IAAA3/C,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqJdu/C,GA7FJ,SAAAp/C,GAKX,SAAAq/C,EAAAj3C,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,YA4BA,OAvBAgR,EAAA4H,QAAAK,EAAAL,QAAAK,EAAAL,QAAA,KAKA5H,EAAAm/C,QAAA,KAKAn/C,EAAA+7B,KAAA,KAKA/7B,EAAAo/C,aAAA,GAIAp/C,EAAAo9C,OAAAn1C,EAAAm1C,OAAAn1C,EAAAm1C,OAAyDj6C,EACzD8E,EAAAxH,QACAT,EAAAi6C,UAAAhyC,EAAAxH,QAEAT,EAyDA,OA1FIg/C,GAASE,EAAAr/C,GAsCbq/C,EAAApxD,UAAAkV,gBAAA,WACQyuC,GAAUziD,KAAA4Y,SAClB/H,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAOAkwD,EAAApxD,UAAAuxD,OAAA,WACA,OAAArwD,KAAA+sC,MASAmjB,EAAApxD,UAAAmrD,OAAA,SAAAh9C,GACAjN,KAAA+sC,MACY0V,GAAUziD,KAAA4Y,SAEtB,QAAA1b,EAAA,EAAA0U,EAAA5R,KAAAowD,aAAArwD,OAAsD7C,EAAA0U,IAAQ1U,EAClDqW,EAAavT,KAAAowD,aAAAlzD,KAEzB8C,KAAAowD,aAAArwD,OAAA,EACAC,KAAA+sC,KAAA9/B,EACAjN,KAAA+sC,SACA/sC,KAAAmwD,QACAnwD,KAAAmwD,QAAAljD,EAAA+/C,gCACAvE,YAAAzoD,KAAA4Y,SACA5Y,KAAAouD,SAAgCj6C,GAChCnU,KAAAowD,aAAAtvD,KAAuCqS,EAAMlG,EAAMohC,GAAYruC,KAAAouD,OAAApuD,OAE/DiN,EAAAmhD,WAYA8B,EAAApxD,UAAAmsD,UAAA,SAAAx5C,GACAzR,KAAAmwD,QAAA,iBAAA1+C,EACA7B,SAAAo3C,eAAAv1C,GACAA,GAEAy+C,EA3FW,CA4FT53C,GD3IKg4C,GAAA,YAOAC,GAAA,gBAOAC,GAAA,kBAOAC,GAAA,iBAOAC,GAAA,aAQAC,GAAA,eAOAC,IAEPjK,GAAA,GACA,SAAAkK,GAIA,GAHAt1C,KACAA,GAAA3L,SAAAC,cAAA,OAAA0L,SAEAs1C,KAAAlK,IAAA,CACAprC,GAAAs1C,OACA,IAAAC,EAAAv1C,GAAAw1C,WAEA,GADAx1C,GAAAs1C,KAAA,IACAC,EACA,YAEAnK,GAAAkK,GAAAC,EAAA5/C,MAAA,QAEA,OAAAy1C,GAAAkK,KEpEIG,GAAyB,WAC7B,IAAA3gD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0QtB,SAAAugD,GAAA3K,EAAAzlC,GACP,OAAAylC,EAAA7C,SAAA5iC,GAAAylC,EAAA/S,eACA1yB,EAAAylC,EAAAhT,cAEe,IAAA4d,GA3LN,SAAArgD,GAKT,SAAAsgD,EAAAl4C,GACA,IAAAjI,EAAAhR,KACAwlD,EAA0Bj0C,EAAM,GAAG0H,UACnCusC,EAAAl4C,QACA0D,EAAAH,EAAAxT,KAAA2C,KAAAwlD,IAAAxlD,MAKAoxD,kBAAA,KAKApgD,EAAAqgD,cAAA,KAKArgD,EAAAsgD,iBAAA,KAKAtgD,EAAAm4C,UAAA,KAEAlwC,EAAAm1C,SACAp9C,EAAAo9C,OAAAn1C,EAAAm1C,QAEAn1C,EAAAhM,KACA+D,EAAAi5C,OAAAhxC,EAAAhM,KAEQkG,EAAMnC,EAAQkH,EAAmB4qC,GAAaM,QAAApyC,EAAAugD,4BAAAvgD,GACtD,IAAA1D,EAAA2L,EAAA3L,OAA4D2L,EAAA,YAE5D,OADAjI,EAAAwgD,UAAAlkD,GACA0D,EAqIA,OA5KIggD,GAASG,EAAAtgD,GA4CbsgD,EAAAryD,UAAAylD,eAAA,SAAAxrC,GACA,IAAAtM,EAAAsM,GAAA,GAEA,OADAtM,EAAA3L,KAAAd,MACAyM,GAKA0kD,EAAAryD,UAAA0lD,oBAAA,SAAAC,GACA,IAAA2B,EAAA3B,GAAA,GAEA,OADA2B,EAAAtlD,KAAAd,KAAA+jD,iBACAqC,GAQA+K,EAAAryD,UAAA0tD,UAAA,WACA,OAAqCxsD,KAAAjC,IAAc+kD,GAAaM,SAAA,MAKhE+N,EAAAryD,UAAAulD,eAAA,WACA,IAAA/2C,EAAAtN,KAAAwsD,YACA,OAAAl/C,EAAoCA,EAAAwkC,WAAXkT,GAAWC,WAKpCkM,EAAAryD,UAAA2yD,oBAAA,WACAzxD,KAAAgX,WAKAm6C,EAAAryD,UAAAyyD,4BAAA,WACAvxD,KAAAsxD,mBACY/9C,EAAavT,KAAAsxD,kBACzBtxD,KAAAsxD,iBAAA,MAEA,IAAAhkD,EAAAtN,KAAAwsD,YACAl/C,IACAtN,KAAAsxD,iBAAoCn+C,EAAM7F,EAAS8H,EAASC,OAAArV,KAAAyxD,oBAAAzxD,OAE5DA,KAAAgX,WAQAm6C,EAAAryD,UAAAsvD,OAAA,SAAAxvB,GACA,IAAA8yB,EAAA1xD,KAAA4sD,cACAtG,EAAAtmD,KAAA+jD,gBACA,GAAA2N,EAAAC,aAAA/yB,EAAA0nB,GACA,OAAAoL,EAAAlC,YAAA5wB,EAAA0nB,IAeA6K,EAAAryD,UAAAmrD,OAAA,SAAAh9C,GACAjN,KAAAoxD,oBACY79C,EAAavT,KAAAoxD,mBACzBpxD,KAAAoxD,kBAAA,MAEAnkD,GACAjN,KAAAgX,UAEAhX,KAAAqxD,gBACY99C,EAAavT,KAAAqxD,eACzBrxD,KAAAqxD,cAAA,MAEApkD,IACAjN,KAAAoxD,kBAAqCj+C,EAAMlG,EAAM0hC,GAAe,SAAAr7B,GACkB,EAClFsrB,WAAA2tB,iBAAAzrD,KAAAd,KAAA+jD,eAAA,KACa/jD,MACbA,KAAAqxD,cAAiCl+C,EAAMnT,KAAOoV,EAASC,OAAApI,EAAAmhD,OAAAnhD,GACvDjN,KAAAgX,YASAm6C,EAAAryD,UAAA0yD,UAAA,SAAAlkD,GACAtN,KAAA2I,IAAiBm6C,GAAaM,OAAA91C,IAM9B6jD,EAAAryD,UAAA8tD,YAAA,WAIA,OAHA5sD,KAAAmpD,YACAnpD,KAAAmpD,UAAAnpD,KAAAopD,kBAEAppD,KAAAmpD,WAKAgI,EAAAryD,UAAA8vD,YAAA,WACA,QAAA5uD,KAAAmpD,WAOAgI,EAAAryD,UAAAsqD,eAAA,WACA,aAEA+H,EA7KS,CA8KP7N,ICjQEsO,GAAyB,WAC7B,IAAAvhD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgTtB,SAASmhD,GAAMC,GACtB9xD,KAAA+xD,eAAAD,EAAAlzB,YAEe,IAAAozB,GA7PA,SAAAnhD,GAKf,SAAAohD,EAAAj5C,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,IACAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA4Y,QAAAhJ,SAAAC,cAAA,OACAu+C,OAAAn1C,EAAAm1C,QAAsCyD,GACtCpgD,OAAAwH,EAAAxH,UACSzR,MAKTkyD,WAAAtiD,SAAAC,cAAA,MAKAmB,EAAAmhD,gBAAAv/C,IAAAqG,EAAAm5C,WAAAn5C,EAAAm5C,UAKAphD,EAAAqhD,0BAAAz/C,IAAAqG,EAAAq5C,YAKAthD,EAAAuhD,kBAAA3/C,IAAAqG,EAAAq5C,aACAr5C,EAAAq5C,YACAthD,EAAAuhD,eACAvhD,EAAAmhD,YAAA,GAEA,IAAAvO,OAAAhxC,IAAAqG,EAAA2qC,UAAA3qC,EAAA2qC,UAAA,iBACA4O,OAAA5/C,IAAAqG,EAAAu5C,SAAAv5C,EAAAu5C,SAAA,eACAC,OAAA7/C,IAAAqG,EAAAw5C,cAAAx5C,EAAAw5C,cAAA,IACA,iBAAAA,GAKAzhD,EAAA0hD,eAAA9iD,SAAAC,cAAA,QACAmB,EAAA0hD,eAAAC,YAAAF,GAGAzhD,EAAA0hD,eAAAD,EAEA,IAAAG,OAAAhgD,IAAAqG,EAAA25C,MAAA35C,EAAA25C,MAAA,IACA,iBAAAA,GAKA5hD,EAAA6hD,OAAAjjD,SAAAC,cAAA,QACAmB,EAAA6hD,OAAAF,YAAAC,GAGA5hD,EAAA6hD,OAAAD,EAEA,IAAAE,EAAA9hD,EAAAuhD,eAAAvhD,EAAAmhD,WACAnhD,EAAA0hD,eAAA1hD,EAAA6hD,OACAvwB,EAAA1yB,SAAAC,cAAA,UACAyyB,EAAAksB,aAAA,iBACAlsB,EAAAywB,MAAAP,EACAlwB,EAAAmmB,YAAAqK,GACQ3/C,EAAMmvB,EAASltB,EAASK,MAAAzE,EAAAgiD,aAAAhiD,GAChC,IAAAiiD,EAAArP,EAAA,IAA2C4M,GAAkB,IAASE,IACtE1/C,EAAAmhD,YAAAnhD,EAAAuhD,aAAA,IAA4D5B,GAAe,KAC3E3/C,EAAAuhD,aAAA,wBACA35C,EAAA5H,EAAA4H,QAeA,OAdAA,EAAAgrC,UAAAqP,EACAr6C,EAAA6vC,YAAAz3C,EAAAkhD,YACAt5C,EAAA6vC,YAAAnmB,GAMAtxB,EAAAkiD,sBAAA,GAKAliD,EAAAmiD,kBAAA,EACAniD,EA0JA,OAjPI4gD,GAASK,EAAAphD,GA+FbohD,EAAAnzD,UAAAs0D,2BAAA,SAAAx0B,GAaA,IARA,IAAAy0B,EAAA,GAKAC,EAAA,GACA/G,EAAA3tB,EAAA2tB,iBACA1rC,EAAA+d,EAAAswB,UAAAruC,WACA3jB,EAAA,EAAA0U,EAAA26C,EAAAxsD,OAAqD7C,EAAA0U,IAAQ1U,EAAA,CAC7D,IAAAopD,EAAAiG,EAAArvD,GACA,GAAiB+zD,GAAmB3K,EAAAzlC,GAApC,CAGA,IAAAvT,EAAwEg5C,EAAA,MAAAkG,YACxE,GAAAl/C,EAAA,CAGA,IAAAimD,EAAAjmD,EAAAkmD,kBACA,GAAAD,EAAA,CAGA,IAAAE,EAAAF,EAAA30B,GACA,GAAA60B,EAMA,GAHAzzD,KAAAqyD,uBAAA,IAAA/kD,EAAAomD,8BACA1zD,KAAA2zD,gBAAA,GAEAvnD,MAAA+K,QAAAs8C,GACA,QAAAjnD,EAAA,EAAA8C,EAAAmkD,EAAA1zD,OAAyDyM,EAAA8C,IAAQ9C,EACjEinD,EAAAjnD,KAAA6mD,IACAC,EAAAxyD,KAAA2yD,EAAAjnD,IACA6mD,EAAAI,EAAAjnD,KAAA,QAKAinD,KAAAJ,IACAC,EAAAxyD,KAAA2yD,GACAJ,EAAAI,IAAA,MAIA,OAAAH,GAMArB,EAAAnzD,UAAAizD,eAAA,SAAAnzB,GACA,GAAAA,EAAA,CAOA,IAAA60B,EAAAzzD,KAAAozD,2BAAAx0B,GACA6kB,EAAAgQ,EAAA1zD,OAAA,EAKA,GAJAC,KAAAmzD,kBAAA1P,IACAzjD,KAAA4Y,QAAA2C,MAAAq4C,QAAAnQ,EAAA,UACAzjD,KAAAmzD,iBAAA1P,IAEY7mC,GAAM62C,EAAAzzD,KAAAkzD,uBAAlB,CAGQtQ,GAAc5iD,KAAAkyD,YAEtB,QAAAh1D,EAAA,EAAA0U,EAAA6hD,EAAA1zD,OAAiD7C,EAAA0U,IAAQ1U,EAAA,CACzD,IAAA0b,EAAAhJ,SAAAC,cAAA,MACA+I,EAAAi7C,UAAAJ,EAAAv2D,GACA8C,KAAAkyD,WAAAzJ,YAAA7vC,GAEA5Y,KAAAkzD,sBAAAO,QAtBAzzD,KAAAmzD,mBACAnzD,KAAA4Y,QAAA2C,MAAAq4C,QAAA,OACA5zD,KAAAmzD,kBAAA,IA0BAlB,EAAAnzD,UAAAk0D,aAAA,SAAAxjD,GACAA,EAAAgF,iBACAxU,KAAA8zD,iBAKA7B,EAAAnzD,UAAAg1D,cAAA,WACA9zD,KAAA4Y,QAAAm7C,UAAAC,OAAsCrD,IACtC3wD,KAAAmyD,WACYhQ,GAAWniD,KAAA0yD,eAAA1yD,KAAA6yD,QAGX1Q,GAAWniD,KAAA6yD,OAAA7yD,KAAA0yD,gBAEvB1yD,KAAAmyD,YAAAnyD,KAAAmyD,YAOAF,EAAAnzD,UAAAm1D,eAAA,WACA,OAAAj0D,KAAAuyD,cAOAN,EAAAnzD,UAAA60D,eAAA,SAAArB,GACAtyD,KAAAuyD,eAAAD,IAGAtyD,KAAAuyD,aAAAD,EACAtyD,KAAA4Y,QAAAm7C,UAAAC,OAAA,qBACA1B,GAAAtyD,KAAAmyD,YACAnyD,KAAA8zD,kBAUA7B,EAAAnzD,UAAAo1D,aAAA,SAAA9B,GACApyD,KAAAuyD,cAAAvyD,KAAAmyD,aAAAC,GAGApyD,KAAA8zD,iBAQA7B,EAAAnzD,UAAAq1D,aAAA,WACA,OAAAn0D,KAAAmyD,YAEAF,EAlPe,CAmPbhC,ICzSEmE,GAAyB,WAC7B,IAAA/jD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAsJtB,SAAS2jD,GAAMvC,GACtB,IAAAlzB,EAAAkzB,EAAAlzB,WACA,GAAAA,EAAA,CAGA,IAAA9d,EAAA8d,EAAAswB,UAAApuC,SACA,GAAAA,GAAA9gB,KAAAs0D,UAAA,CACA,IAAA3wC,EAAA,UAAA7C,EAAA,OACA,GAAA9gB,KAAAu0D,UAAA,CACA,IAAA/nB,EAAAxsC,KAAA4Y,QAAAm7C,UAAAvnB,SAA2D8jB,IAC3D9jB,GAAA,IAAA1rB,EAGA0rB,GAAA,IAAA1rB,GACA9gB,KAAA4Y,QAAAm7C,UAAApyD,OAA8C2uD,IAH9CtwD,KAAA4Y,QAAAm7C,UAAAS,IAA2ClE,IAM3CtwD,KAAA6yD,OAAAt3C,MAAAoI,YAEA3jB,KAAAs0D,UAAAxzC,GAEe,IAAA2zC,GA/HL,SAAA5jD,GAKV,SAAA6jD,EAAA17C,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA4Y,QAAAhJ,SAAAC,cAAA,OACAu+C,OAAAn1C,EAAAm1C,QAAsCiG,GACtC5iD,OAAAwH,EAAAxH,UACSzR,KACT,IAAA4jD,OAAAhxC,IAAAqG,EAAA2qC,UAAA3qC,EAAA2qC,UAAA,YACAgP,OAAAhgD,IAAAqG,EAAA25C,MAAA35C,EAAA25C,MAAA,IAKA5hD,EAAA6hD,OAAA,KACA,iBAAAD,GACA5hD,EAAA6hD,OAAAjjD,SAAAC,cAAA,QACAmB,EAAA6hD,OAAAjP,UAAA,aACA5yC,EAAA6hD,OAAAF,YAAAC,IAGA5hD,EAAA6hD,OAAAD,EACA5hD,EAAA6hD,OAAAkB,UAAAS,IAAA,eAEA,IAAAhC,EAAAv5C,EAAAu5C,SAAAv5C,EAAAu5C,SAAA,iBACAlwB,EAAA1yB,SAAAC,cAAA,UACAyyB,EAAAshB,YAAA,SACAthB,EAAAksB,aAAA,iBACAlsB,EAAAywB,MAAAP,EACAlwB,EAAAmmB,YAAAz3C,EAAA6hD,QACQ1/C,EAAMmvB,EAASltB,EAASK,MAAAzE,EAAAgiD,aAAAhiD,GAChC,IAAAiiD,EAAArP,EAAA,IAA2C4M,GAAkB,IAASE,GACtE93C,EAAA5H,EAAA4H,QAsBA,OArBAA,EAAAgrC,UAAAqP,EACAr6C,EAAA6vC,YAAAnmB,GACAtxB,EAAA2jD,gBAAA17C,EAAA27C,WAAA37C,EAAA27C,gBAAAhiD,EAKA5B,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IAKAttB,EAAAujD,eAAA3hD,IAAAqG,EAAA67C,UAAA77C,EAAA67C,SAKA9jD,EAAAsjD,eAAA1hD,EACA5B,EAAAujD,WACAvjD,EAAA4H,QAAAm7C,UAAAS,IAAwClE,IAExCt/C,EAuCA,OAjGIojD,GAASM,EAAA7jD,GAgEb6jD,EAAA51D,UAAAk0D,aAAA,SAAAxjD,GACAA,EAAAgF,sBACA5B,IAAA5S,KAAA20D,gBACA30D,KAAA20D,kBAGA30D,KAAA+0D,eAMAL,EAAA51D,UAAAi2D,YAAA,WACA,IACAhuB,EADA/mC,KAAAqwD,SACAvD,UACA/lB,QAKAn0B,IAAAm0B,EAAAwU,gBACAv7C,KAAA60D,UAAA,EACA9tB,EAAAyU,QAAA,CACA16B,SAAA,EACAwd,SAAAt+B,KAAA60D,UACA7Y,OAA4BlF,KAI5B/P,EAAA6T,YAAA,KAIA8Z,EAlGU,CAmGRzE,IC/IE+E,GAAyB,WAC7B,IAAA3kD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgIdukD,GArFP,SAAApkD,GAKR,SAAAqkD,EAAAl8C,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA4Y,QAAAhJ,SAAAC,cAAA,OACA4B,OAAAwH,EAAAxH,UACSzR,KACT,IAAA4jD,OAAAhxC,IAAAqG,EAAA2qC,UAAA3qC,EAAA2qC,UAAA,UACA7O,OAAAniC,IAAAqG,EAAA87B,MAAA97B,EAAA87B,MAAA,EACAogB,OAAAviD,IAAAqG,EAAAk8C,YAAAl8C,EAAAk8C,YAAA,IACAC,OAAAxiD,IAAAqG,EAAAm8C,aAAAn8C,EAAAm8C,aAAA,IACAC,OAAAziD,IAAAqG,EAAAo8C,eACAp8C,EAAAo8C,eAAA,UACAC,OAAA1iD,IAAAqG,EAAAq8C,gBACAr8C,EAAAq8C,gBAAA,WACAC,EAAA3lD,SAAAC,cAAA,UACA0lD,EAAA3R,YAAA,MACA2R,EAAA/G,aAAA,iBACA+G,EAAAxC,MAAAsC,EACAE,EAAA9M,YAAA,iBAAA0M,EAAAvlD,SAAA4lD,eAAAL,MACQhiD,EAAMoiD,EAAYngD,EAASK,MAAAzE,EAAAgiD,aAAAt0D,KAAAsS,EAAA+jC,IACnC,IAAA0gB,EAAA7lD,SAAAC,cAAA,UACA4lD,EAAA7R,YAAA,OACA6R,EAAAjH,aAAA,iBACAiH,EAAA1C,MAAAuC,EACAG,EAAAhN,YAAA,iBAAA2M,EAAAxlD,SAAA4lD,eAAAJ,MACQjiD,EAAMsiD,EAAargD,EAASK,MAAAzE,EAAAgiD,aAAAt0D,KAAAsS,GAAA+jC,IACpC,IAAAke,EAAArP,EAAA,IAA2C4M,GAAkB,IAASE,GACtE93C,EAAA5H,EAAA4H,QASA,OARAA,EAAAgrC,UAAAqP,EACAr6C,EAAA6vC,YAAA8M,GACA38C,EAAA6vC,YAAAgN,GAKAzkD,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IACAttB,EAyCA,OAlFIgkD,GAASE,EAAArkD,GAgDbqkD,EAAAp2D,UAAAk0D,aAAA,SAAAje,EAAAvlC,GACAA,EAAAgF,iBACAxU,KAAA01D,aAAA3gB,IAMAmgB,EAAAp2D,UAAA42D,aAAA,SAAA3gB,GACA,IACAhO,EADA/mC,KAAAqwD,SACAvD,UACA,GAAA/lB,EAAA,CAKA,IAAA4uB,EAAA5uB,EAAAuU,UACA,QAAA1oC,IAAA+iD,EAAA,CACA,IAAAC,EAAA7uB,EAAAoa,mBAAAwU,EAAA5gB,GACA/0C,KAAA60D,UAAA,GACA9tB,EAAA4U,gBACA5U,EAAAsV,mBAEAtV,EAAAyU,QAAA,CACAT,KAAA6a,EACAt3B,SAAAt+B,KAAA60D,UACA7Y,OAA4BlF,MAI5B/P,EAAAiU,QAAA4a,MAIAV,EAnFQ,CAoFNjF,ICjFK,SAAA4F,GAAA78C,GACP,IAAAC,EAAAD,GAAA,GACAiuC,EAAA,IAAuBpuC,EAcvB,YAbAjG,IAAAqG,EAAA8hC,MAAA9hC,EAAA8hC,OAEAkM,EAAAnmD,KAAA,IAA0Bm0D,GAAIh8C,EAAA68C,oBAE9BljD,IAAAqG,EAAA6K,QAAA7K,EAAA6K,SAEAmjC,EAAAnmD,KAAA,IAA0B2zD,GAAMx7C,EAAA88C,sBAEhCnjD,IAAAqG,EAAA+8C,aACA/8C,EAAA+8C,cAEA/O,EAAAnmD,KAAA,IAA0BkxD,GAAW/4C,EAAAg9C,qBAErChP,ECxDe,IAAAiP,GAAA,CACfC,OAAA,UCPIC,GAAyB,WAC7B,IAAA/lD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgItB,SAAA2lD,GAAAtvB,EAAAgO,EAAA3kB,EAAA0wB,GACP,IAAA6U,EAAA5uB,EAAAuU,UACA,QAAA1oC,IAAA+iD,EAAA,CAGA,IAAAC,EAAA7uB,EAAAoa,mBAAAwU,EAAA5gB,GACAuL,EAAAvZ,EAAAkV,qBAAA2Z,GACA7uB,EAAA4U,gBACA5U,EAAAsV,mBAEAtV,EAAAyU,QAAA,CACA36B,WAAAy/B,EACAt8B,OAAAoM,EACAkO,cAAA1rB,IAAAkuC,IAAA,IACA9E,OAAgBlF,MAGD,IAAAwf,GAvGA,SAAAzlD,GAKf,SAAA0lD,EAAAt9C,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,YAUA,OATAiZ,EAAA00C,cACA38C,EAAA28C,YAAA10C,EAAA00C,aAMA38C,EAAA+7B,KAAA,KACA/7B,EAAAwlD,WAAA,GACAxlD,EA8CA,OA7DIolD,GAASG,EAAA1lD,GAuBb0lD,EAAAz3D,UAAA4uD,UAAA,WACA,OAAkC1tD,KAAAjC,IAAcm4D,GAAmBC,SAOnEI,EAAAz3D,UAAAuxD,OAAA,WACA,OAAArwD,KAAA+sC,MAQAwpB,EAAAz3D,UAAA6uD,YAAA,SAAAL,GACA,UAQAiJ,EAAAz3D,UAAA03D,UAAA,SAAAC,GACAz2D,KAAA2I,IAAiButD,GAAmBC,OAAAM,IAQpCF,EAAAz3D,UAAAmrD,OAAA,SAAAh9C,GACAjN,KAAA+sC,KAAA9/B,GAEAspD,EA9De,CA+Dbj+C,GCzGEo+C,GAAyB,WAC7B,IAAArmD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2D7B,SAAAi9C,GAAAL,GACA,IAAAqJ,GAAA,EACA,GAAArJ,EAAAlqD,MAAgC88B,GAAmBxqB,SAAA,CACnD,IAAAspB,EAAiDsuB,EAAA,cACjDrgD,EAAAqgD,EAAArgD,IACA+W,EAAAspC,EAAA1uC,WACAm2B,EAAA/V,EAAAqI,UAAArnC,KAAA42D,OAAA52D,KAAA42D,OAEQP,GADRppD,EAAA6/C,UACmB/X,EAAA/wB,EAAAhkB,KAAA60D,WACnBvH,EAAA94C,iBACAmiD,GAAA,EAEA,OAAAA,EAEe,IAAAE,GA7Cf,SAAAhmD,GAKA,SAAAimD,EAAA99C,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA2tD,kBACS3tD,KACTiZ,EAAAD,GAAA,GAWA,OANAhI,EAAA4lD,OAAA39C,EAAA87B,MAAA97B,EAAA87B,MAAA,EAKA/jC,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IACAttB,EAEA,OArBI0lD,GAASI,EAAAjmD,GAqBbimD,EAtBA,CAuBER,IC9BKS,GAAA,SAAAzJ,GACP,IAAApuB,EAAuEouB,EAAA,cACvE,OAAApuB,EAAAkI,UACAlI,EAAAoI,SAAApI,EAAAiI,WACAjI,EAAAmI,UAUO2vB,GAAA,SAAA1J,GACP,IAAApuB,EAAuEouB,EAAA,cACvE,OAAApuB,EAAAkI,UACAlI,EAAAoI,SAAApI,EAAAiI,UACAjI,EAAAmI,UAUW4vB,GAAK,SAAAznD,GAChB,OAAAA,EAAAiC,OAAA06C,qBAAAv8C,SAAAsnD,eASOC,GAAaljD,EAoBbmjD,GAAA,SAAA9J,GACP,IAAApuB,EAA8CouB,EAAA,cAC9C,UAAApuB,EAAAoD,UACU3C,IAAUC,IAAGV,EAAAiI,UAShBkwB,GAAYnjD,EASRojD,GAAW,SAAAhK,GACtB,qBAAAA,EAAAlqD,MASOm0D,GAAA,SAAAjK,GACP,OAAAA,EAAAlqD,MAAmC88B,GAAmBC,aAoB/Cq3B,GAAA,SAAAlK,GACP,IAAApuB,EAAuEouB,EAAA,cACvE,OAAApuB,EAAAkI,UACAlI,EAAAoI,SAAApI,EAAAiI,WACAjI,EAAAmI,UAyBOowB,GAAA,SAAAnK,GACP,IAAApuB,EAAuEouB,EAAA,cACvE,OAAApuB,EAAAkI,UACAlI,EAAAoI,SAAApI,EAAAiI,UACAjI,EAAAmI,UAUOqwB,GAAA,SAAApK,GACP,IACAqK,EADArK,EAAApuB,cAAAztB,OACqCkmD,QACrC,gBAAAA,GACA,WAAAA,GACA,aAAAA,GASOC,GAAA,SAAAtK,GACP,IAAAtsB,EAA8E,EAAAA,aAG9E,OAFI9mB,OAAMtH,IAAAouB,EAAA,IAEV,SAAAA,EAAAiC,aAqCO40B,GAAA,SAAAvK,GACP,IAAAtsB,EAA8E,EAAAA,aAE9E,OADI9mB,OAAMtH,IAAAouB,EAAA,IACVA,EAAAgC,WAAA,IAAAhC,EAAAsB,QCxOIw1B,GAAyB,WAC7B,IAAAznD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAuMtB,SAASqnD,GAAQC,GAIxB,IAHA,IAAAj4D,EAAAi4D,EAAAj4D,OACAujC,EAAA,EACAC,EAAA,EACArmC,EAAA,EAAmBA,EAAA6C,EAAY7C,IAC/BomC,GAAA00B,EAAA96D,GAAAomC,QACAC,GAAAy0B,EAAA96D,GAAAqmC,QAEA,OAAAD,EAAAvjC,EAAAwjC,EAAAxjC,GAae,IAAAk4D,GAtKO,SAAApnD,GAKtB,SAAAqnD,EAAAl/C,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GAgCA,OA/BAhI,EAAAH,EAAAxT,KAAA2C,KAA2F,IAAAA,KAC3FiZ,EAAAk/C,kBACAnnD,EAAAmnD,gBAAAl/C,EAAAk/C,iBAEAl/C,EAAAm/C,kBACApnD,EAAAonD,gBAAAn/C,EAAAm/C,iBAEAn/C,EAAAo/C,kBACArnD,EAAAqnD,gBAAAp/C,EAAAo/C,iBAEAp/C,EAAAq/C,gBACAtnD,EAAAsnD,cAAAr/C,EAAAq/C,eAEAr/C,EAAAs/C,WACAvnD,EAAAunD,SAAAt/C,EAAAs/C,UAMAvnD,EAAAwnD,wBAAA,EAKAxnD,EAAAynD,iBAAA,GAKAznD,EAAA0nD,eAAA,GACA1nD,EAoGA,OA1II8mD,GAASI,EAAArnD,GA8CbqnD,EAAAp5D,UAAAq5D,gBAAA,SAAA7K,GACA,UAOA4K,EAAAp5D,UAAAs5D,gBAAA,SAAA9K,KAQA4K,EAAAp5D,UAAA6uD,YAAA,SAAAL,GACA,IAAyE,eACzE,SAEA,IAAAqJ,GAAA,EAEA,GADA32D,KAAA24D,uBAAArL,GACAttD,KAAAw4D,wBACA,GAAAlL,EAAAlqD,MAAwC88B,GAAmBE,YAC3DpgC,KAAAo4D,gBAAA9K,QAEA,GAAAA,EAAAlqD,MAA6C88B,GAAmBK,UAAA,CAChE,IAAAq4B,EAAA54D,KAAAs4D,cAAAhL,GACAttD,KAAAw4D,uBAAAI,GAAA54D,KAAA04D,eAAA34D,OAAA,QAIA,GAAAutD,EAAAlqD,MAAwC88B,GAAmBI,YAAA,CAC3D,IAAAu4B,EAAA74D,KAAAm4D,gBAAA7K,GACAuL,GACAvL,EAAA94C,iBAEAxU,KAAAw4D,uBAAAK,EACAlC,EAAA32D,KAAAu4D,SAAAM,QAEAvL,EAAAlqD,MAA6C88B,GAAmBG,aAChErgC,KAAAq4D,gBAAA/K,GAGA,OAAAqJ,GAOAuB,EAAAp5D,UAAAu5D,gBAAA,SAAA/K,KAOA4K,EAAAp5D,UAAAw5D,cAAA,SAAAhL,GACA,UAQA4K,EAAAp5D,UAAAy5D,SAAA,SAAAM,GACA,OAAAA,GAMAX,EAAAp5D,UAAA65D,uBAAA,SAAArL,GACA,GAsCA,SAAAA,GACA,IAAAlqD,EAAAkqD,EAAAlqD,KACA,OAAAA,IAAoB88B,GAAmBI,aACvCl9B,IAAiB88B,GAAmBE,aACpCh9B,IAAiB88B,GAAmBK,UA1CpCu4B,CAAAxL,GAAA,CACA,IAAAyL,EAAAzL,EAAAtsB,aACA/kB,EAAA88C,EAAAh2B,UAAA71B,WACAogD,EAAAlqD,MAAwC88B,GAAmBK,iBAC3DvgC,KAAAy4D,iBAAAx8C,GAEAqxC,EAAAlqD,MACgB88B,GAAmBI,YACnCtgC,KAAAy4D,iBAAAx8C,GAAA88C,EAEA98C,KAAAjc,KAAAy4D,mBAEAz4D,KAAAy4D,iBAAAx8C,GAAA88C,GAEA/4D,KAAA04D,eAAkC5mD,EAAS9R,KAAAy4D,oBAG3CP,EA3IsB,CA4IpB5B,IClME0C,GAAyB,WAC7B,IAAA3oD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8K7B,SAAAuoD,GAAA3L,GACA,OAAWkK,GAAclK,IAAqBuK,GAAavK,GAE5C,IAAA4L,GAhJJ,SAAAroD,GAKX,SAAAsoD,EAAAngD,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAu4D,SAAsBrkD,KACblU,KACTiZ,EAAAD,GAAA,GA4BA,OAvBAhI,EAAAooD,SAAAngD,EAAAogD,QAIAroD,EAAAsoD,aAAA,KAIAtoD,EAAAuoD,mBAIAvoD,EAAAwoD,UAAA,EAKAxoD,EAAAyoD,WAAAxgD,EAAAygD,UAAAzgD,EAAAygD,UAAAT,GAKAjoD,EAAA2oD,YAAA,EACA3oD,EAkGA,OAtIIgoD,GAASG,EAAAtoD,GAyCbsoD,EAAAr6D,UAAAs5D,gBAAA,SAAA9K,GACAttD,KAAAw5D,WACAx5D,KAAAw5D,UAAA,EACAx5D,KAAAqwD,SAAAvD,UAAA9L,oBAEA,IAAA0X,EAAA14D,KAAA04D,eACAkB,EAAuB7B,GAAoBW,GAC3C,GAAAA,EAAA34D,QAAAC,KAAAu5D,oBAIA,GAHAv5D,KAAAo5D,UACAp5D,KAAAo5D,SAAAn7B,OAAA27B,EAAA,GAAAA,EAAA,IAEA55D,KAAAs5D,aAAA,CACA,IAAAvkB,EAAA,CACA/0C,KAAAs5D,aAAA,GAAAM,EAAA,GACAA,EAAA,GAAA55D,KAAAs5D,aAAA,IAGAvyB,EADAumB,EAAArgD,IACA6/C,UACgBxW,GAAevB,EAAAhO,EAAAsU,iBACflF,GAAgBpB,EAAAhO,EAAAwU,eAChCxU,EAAAmZ,aAAAnL,SAGA/0C,KAAAo5D,UAGAp5D,KAAAo5D,SAAA78C,QAEAvc,KAAAs5D,aAAAM,EACA55D,KAAAu5D,mBAAAb,EAAA34D,QAKAo5D,EAAAr6D,UAAAw5D,cAAA,SAAAhL,GACA,IAAArgD,EAAAqgD,EAAArgD,IACA85B,EAAA95B,EAAA6/C,UACA,OAAA9sD,KAAA04D,eAAA34D,OAAA,CACA,IAAAC,KAAA25D,YAAA35D,KAAAo5D,UAAAp5D,KAAAo5D,SAAAnzD,MAAA,CACA,IAAA6f,EAAA9lB,KAAAo5D,SAAAn0C,cACAlB,EAAA/jB,KAAAo5D,SAAA76B,WACA3d,EAA+EmmB,EAAAvmB,YAC/Eq5C,EAAA5sD,EAAAy/C,uBAAA9rC,GACAiD,EAAA5W,EAAAmyB,uBAAA,CACAy6B,EAAA,GAAA/zC,EAAAzmB,KAAA4hB,IAAA8C,GACA81C,EAAA,GAAA/zC,EAAAzmB,KAAA8hB,IAAA4C,KAEAgjB,EAAAyU,QAAA,CACA56B,OAAAmmB,EAAA+Y,qBAAAj8B,GACAya,SAAA,IACA0d,OAA4BlF,KAO5B,OAJA92C,KAAAw5D,WACAx5D,KAAAw5D,UAAA,EACAzyB,EAAAka,mBAEA,EASA,OANAjhD,KAAAo5D,UAGAp5D,KAAAo5D,SAAA78C,QAEAvc,KAAAs5D,aAAA,MACA,GAMAH,EAAAr6D,UAAAq5D,gBAAA,SAAA7K,GACA,GAAAttD,KAAA04D,eAAA34D,OAAA,GAAAC,KAAAy5D,WAAAnM,GAAA,CACA,IACAvmB,EADAumB,EAAArgD,IACA6/C,UAYA,OAXA9sD,KAAAs5D,aAAA,KAEAvyB,EAAA4U,gBACA5U,EAAAsV,mBAEAr8C,KAAAo5D,UACAp5D,KAAAo5D,SAAA78C,QAIAvc,KAAA25D,WAAA35D,KAAA04D,eAAA34D,OAAA,GACA,EAGA,UAGAo5D,EAvIW,CAwITlB,ICzKE6B,GAAyB,WAC7B,IAAAzpD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqHdqpD,GAhFD,SAAAlpD,GAKd,SAAAmpD,EAAAhhD,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GAmBA,OAlBAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAu4D,SAAsBrkD,KACblU,MAKTy5D,WAAAxgD,EAAAygD,UAAAzgD,EAAAygD,UAAmE1C,GAKnEhmD,EAAAipD,gBAAArnD,EAKA5B,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IACAttB,EAoDA,OA7EI8oD,GAASE,EAAAnpD,GA8BbmpD,EAAAl7D,UAAAs5D,gBAAA,SAAA9K,GACA,GAAasK,GAAStK,GAAtB,CAGA,IAAArgD,EAAAqgD,EAAArgD,IACA85B,EAAA95B,EAAA6/C,UACA,GAAA/lB,EAAA6W,iBAAA98B,WAA+C8yB,GAA/C,CAGA,IAAA7yB,EAAA9T,EAAA4/C,UACAtiD,EAAA+iD,EAAA5gD,MACA+tC,EAAAp7C,KAAAqmB,MAAA3E,EAAA,KAAAxW,EAAA,GAAAA,EAAA,GAAAwW,EAAA,MACA,QAAAnO,IAAA5S,KAAAi6D,WAAA,CACA,IAAAllB,EAAA0F,EAAAz6C,KAAAi6D,WACAlzB,EAAAyZ,gBAAAzL,GAEA/0C,KAAAi6D,WAAAxf,KAKAuf,EAAAl7D,UAAAw5D,cAAA,SAAAhL,GACA,OAAasK,GAAStK,KAGtBA,EAAArgD,IACA6/C,UACA7L,eAAAjhD,KAAA60D,YACA,IAKAmF,EAAAl7D,UAAAq5D,gBAAA,SAAA7K,GACA,QAAasK,GAAStK,QAGV8J,GAAiB9J,KAAAttD,KAAAy5D,WAAAnM,MAC7BA,EAAArgD,IACA6/C,UAAA9L,mBACAhhD,KAAAi6D,gBAAArnD,GACA,KAMAonD,EA9Ec,CA+EZ/B,ICjHEiC,GAAyB,WAC7B,IAAA7pD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4HdypD,GA7GF,SAAAtpD,GAKb,SAAAupD,EAAAxW,GACA,IAAA5yC,EAAAH,EAAAxT,KAAA2C,YA4BA,OAvBAgR,EAAAqpD,UAAA,KAKArpD,EAAAo6B,SAAAx7B,SAAAC,cAAA,OACAmB,EAAAo6B,SAAA7vB,MAAA8gB,SAAA,WACArrB,EAAAo6B,SAAAwY,UAAA,UAAAA,EAKA5yC,EAAA+7B,KAAA,KAKA/7B,EAAAspD,YAAA,KAKAtpD,EAAAupD,UAAA,KACAvpD,EAyEA,OA1GIkpD,GAASE,EAAAvpD,GAsCbupD,EAAAt7D,UAAAkV,gBAAA,WACAhU,KAAAiqD,OAAA,OAKAmQ,EAAAt7D,UAAA07D,QAAA,WACA,IAAAC,EAAAz6D,KAAAs6D,YACAI,EAAA16D,KAAAu6D,UAEAh/C,EAAAvb,KAAAorC,SAAA7vB,MACAA,EAAAywC,KAAA3sD,KAAAQ,IAAA46D,EAAA,GAAAC,EAAA,IAFA,KAGAn/C,EAAA0wC,IAAA5sD,KAAAQ,IAAA46D,EAAA,GAAAC,EAAA,IAHA,KAIAn/C,EAAA5P,MAAAtM,KAAA6L,IAAAwvD,EAAA,GAAAD,EAAA,IAJA,KAKAl/C,EAAA3a,OAAAvB,KAAA6L,IAAAwvD,EAAA,GAAAD,EAAA,IALA,MAUAL,EAAAt7D,UAAAmrD,OAAA,SAAAh9C,GACA,GAAAjN,KAAA+sC,KAAA,CACA/sC,KAAA+sC,KAAAggB,sBAAApK,YAAA3iD,KAAAorC,UACA,IAAA7vB,EAAAvb,KAAAorC,SAAA7vB,MACAA,EAAAywC,KAAAzwC,EAAA0wC,IAAA1wC,EAAA5P,MAAA4P,EAAA3a,OAAA,UAEAZ,KAAA+sC,KAAA9/B,EACAjN,KAAA+sC,MACA/sC,KAAA+sC,KAAAggB,sBAAAtE,YAAAzoD,KAAAorC,WAOAgvB,EAAAt7D,UAAA67D,UAAA,SAAAF,EAAAC,GACA16D,KAAAs6D,YAAAG,EACAz6D,KAAAu6D,UAAAG,EACA16D,KAAA46D,yBACA56D,KAAAw6D,WAKAJ,EAAAt7D,UAAA87D,uBAAA,WACA,IAAAH,EAAAz6D,KAAAs6D,YACAI,EAAA16D,KAAAu6D,UAOAt8C,EANA,CACAw8C,EACA,CAAAA,EAAA,GAAAC,EAAA,IACAA,EACA,CAAAA,EAAA,GAAAD,EAAA,KAEAxtD,IAAAjN,KAAA+sC,KAAA3N,uBAAAp/B,KAAA+sC,MAEA9uB,EAAA,GAAAA,EAAA,GAAAzc,QACAxB,KAAAq6D,UAIAr6D,KAAAq6D,UAAAxoC,eAAA,CAAA5T,IAHAje,KAAAq6D,UAAA,IAAiCnhC,GAAO,CAAAjb,KASxCm8C,EAAAt7D,UAAAwc,YAAA,WACA,OAAAtb,KAAAq6D,WAEAD,EA3Ga,CA4GXxmD,GC9HEinD,GAAyB,WAC7B,IAAAxqD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6C7BoqD,GAMA,WANAA,GAYA,UAZAA,GAkBA,SAOAC,GAAA,SAAAlqD,GAOA,SAAAkqD,EAAA33D,EAAAwb,EAAA0uC,GACA,IAAAt8C,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAcA,OAPAgR,EAAA4N,aAMA5N,EAAAs8C,kBACAt8C,EAEA,OAvBI6pD,GAASE,EAAAlqD,GAuBbkqD,EAxBA,CAyBE1mD,GA4Ha2mD,GA7GJ,SAAAnqD,GAKX,SAAAoqD,EAAAjiD,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAiCA,OA5BAhI,EAAAkqD,KAAA,IAAyBf,GAASlhD,EAAA2qC,WAAA,cAKlC5yC,EAAAmqD,cAAAvoD,IAAAqG,EAAAmiD,QAAAniD,EAAAmiD,QAAA,GAMApqD,EAAAqqD,UAAApiD,EAAAqiD,SAAAriD,EAAAqiD,SAAgEnnD,EAKhEnD,EAAAspD,YAAA,KAKAtpD,EAAAyoD,WAAAxgD,EAAAygD,UAAAzgD,EAAAygD,UAAmEvC,GAKnEnmD,EAAAuqD,iBAAAtiD,EAAAuiD,gBACAviD,EAAAuiD,gBAAAxqD,EAAAyqD,uBACAzqD,EAmEA,OA1GI6pD,GAASI,EAAApqD,GAkDboqD,EAAAn8D,UAAA28D,uBAAA,SAAAnO,EAAAmN,EAAAC,GACA,IAAA/uD,EAAA+uD,EAAA,GAAAD,EAAA,GACA75D,EAAA85D,EAAA,GAAAD,EAAA,GACA,OAAA9uD,IAAA/K,KAAAZ,KAAAm7D,UAOAF,EAAAn8D,UAAAwc,YAAA,WACA,OAAAtb,KAAAk7D,KAAA5/C,eAKA2/C,EAAAn8D,UAAAs5D,gBAAA,SAAA9K,GACasK,GAAStK,KAGtBttD,KAAAk7D,KAAAP,UAAA36D,KAAAs6D,YAAAhN,EAAA5gD,OACA1M,KAAA+U,cAAA,IAAAgmD,GAAAD,GAAAxN,EAAA1uC,WAAA0uC,MAKA2N,EAAAn8D,UAAAw5D,cAAA,SAAAhL,GACA,OAAasK,GAAStK,KAGtBttD,KAAAk7D,KAAAjR,OAAA,MACAjqD,KAAAu7D,iBAAAjO,EAAAttD,KAAAs6D,YAAAhN,EAAA5gD,SACA1M,KAAAq7D,UAAA/N,GACAttD,KAAA+U,cAAA,IAAAgmD,GAAAD,GAAAxN,EAAA1uC,WAAA0uC,MAEA,IAKA2N,EAAAn8D,UAAAq5D,gBAAA,SAAA7K,GACA,QAAasK,GAAStK,QAGV8J,GAAiB9J,KAC7BttD,KAAAy5D,WAAAnM,MACAttD,KAAAs6D,YAAAhN,EAAA5gD,MACA1M,KAAAk7D,KAAAjR,OAAAqD,EAAArgD,KACAjN,KAAAk7D,KAAAP,UAAA36D,KAAAs6D,YAAAt6D,KAAAs6D,aACAt6D,KAAA+U,cAAA,IAAAgmD,GAAAD,GAAAxN,EAAA1uC,WAAA0uC,KACA,KAMA2N,EA3GW,CA4GThD,IC1NEyD,GAAyB,WAC7B,IAAArrD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAwE7B,SAAA4qD,KACA,IrFiKOr9C,EAAAK,EqFjKPrR,EAAAjN,KAAAqwD,SACAtpB,EAAwD95B,EAAA6/C,UACxD/rC,EAAqD9T,EAAA4/C,UACrD3uC,EAAAle,KAAAsb,cAAA0M,YACA,GAAAhoB,KAAA27D,KAAA,CACA,IAAAC,EAAA70B,EAAAgX,gBAAAh9B,GACA86C,GrF2JO59C,EqF3JmD,CAC1DhR,EAAAy/C,uBAAuC3sC,GAAa7B,IACpDjR,EAAAy/C,uBAAuCzsC,GAAW/B,KrF2JlD0B,GADAR,GAAAd,GACAL,IqFxJQkE,GAAey5C,EAAA,EADvB70B,EAAA4X,uBAAAkd,EAAA96C,IAEA7C,EAAA09C,EAEA,IAAA/6C,EAAAkmB,EAAA4Y,yBAAA5Y,EAAA4X,uBAAAzgC,EAAA6C,IACAH,EAAAmmB,EAAA+Y,qBAA2Ct/B,GAAStC,GAAA2C,GACpDkmB,EAAAyU,QAAA,CACA36B,aACAD,SACA0d,SAAAt+B,KAAA60D,UACA7Y,OAAgBlF,KAGD,IAAAglB,GAvDH,SAAAjrD,GAKZ,SAAAkrD,EAAA/iD,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACA0gD,EAAAzgD,EAAAygD,UAAAzgD,EAAAygD,UAAgEjC,GAgBhE,OAfAzmD,EAAAH,EAAAxT,KAAA2C,KAAA,CACA05D,YACA9V,UAAA3qC,EAAA2qC,WAAA,cACA0X,eACSt7D,MAKT60D,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IAKAttB,EAAA2qD,UAAA/oD,IAAAqG,EAAAuxB,KAAAvxB,EAAAuxB,IACAx5B,EAEA,OAzBI0qD,GAASK,EAAAlrD,GAyBbkrD,EA1BY,CA2BVf,IC7DagB,GAAA,CACfj+C,KAAA,GACAk+C,GAAA,GACAp+C,MAAA,GACAq+C,KAAA,ICXIC,GAAyB,WAC7B,IAAA9rD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6F7B,SAAS0rD,GAAW9O,GACpB,IAAAqJ,GAAA,EACA,GAAArJ,EAAAlqD,MAAgCgS,EAASU,QAAA,CACzC,IACAumD,EADgD/O,EAAA,cAChD+O,QACA,GAAAr8D,KAAAy5D,WAAAnM,KACA+O,GAAwBL,GAAOE,MAC/BG,GAA2BL,GAAOj+C,MAClCs+C,GAA2BL,GAAOn+C,OAClCw+C,GAA2BL,GAAOC,IAAA,CAClC,IACAl1B,EADAumB,EAAArgD,IACA6/C,UACAwP,EAAAv1B,EAAAsU,gBAAAr7C,KAAAu8D,YACAn6C,EAAA,EAAAC,EAAA,EACAg6C,GAA2BL,GAAOE,KAClC75C,GAAAi6C,EAEAD,GAAgCL,GAAOj+C,KACvCqE,GAAAk6C,EAEAD,GAAgCL,GAAOn+C,MACvCuE,EAAAk6C,EAGAj6C,EAAAi6C,EAEA,IAAAvnB,EAAA,CAAA3yB,EAAAC,GACY8zB,GAAgBpB,EAAAhO,EAAAwU,eVTrB,SAAAxU,EAAAgO,EAAA+L,GACP,IAAA1D,EAAArW,EAAAvmB,YACA,GAAA48B,EAAA,CACA,IAAAx8B,EAAA,CAAAw8B,EAAA,GAAArI,EAAA,GAAAqI,EAAA,GAAArI,EAAA,IACAhO,EAAA6U,SAAA,CACAtd,cAAA1rB,IAAAkuC,IAAA,IACA9E,OAAoBhF,GACpBp2B,OAAAmmB,EAAA+Y,qBAAAl/B,MUGY47C,CAAGz1B,EAAAgO,EAAA/0C,KAAA60D,WACfvH,EAAA94C,iBACAmiD,GAAA,GAGA,OAAAA,EAEe,IAAA8F,GAnFA,SAAA5rD,GAKf,SAAA6rD,EAAA1jD,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA2tD,YAAyByO,MAChBp8D,KACTiZ,EAAAD,GAAA,GA2BA,OArBAhI,EAAA2rD,kBAAA,SAAArP,GACA,OAAmBkK,GAAclK,IACjBoK,GAAiBpK,IAMjCt8C,EAAAyoD,gBAAA7mD,IAAAqG,EAAAygD,UACAzgD,EAAAygD,UAAA1oD,EAAA2rD,kBAKA3rD,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IAKAttB,EAAAurD,iBAAA3pD,IAAAqG,EAAA2jD,WACA3jD,EAAA2jD,WAAA,IACA5rD,EAEA,OArCImrD,GAASO,EAAA7rD,GAqCb6rD,EAtCe,CAuCbpG,ICpFEuG,GAAyB,WAC7B,IAAAxsD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8E7B,SAASosD,GAAWxP,GACpB,IAAAqJ,GAAA,EACA,GAAArJ,EAAAlqD,MAAgCgS,EAASU,SACzCw3C,EAAAlqD,MAAgCgS,EAASW,SAAA,CACzC,IACAgnD,EADgDzP,EAAA,cAChDyP,SACA,GAAA/8D,KAAAy5D,WAAAnM,KACAyP,GAAA,IAAA5zD,WAAA,IAAA4zD,GAAA,IAAA5zD,WAAA,KACA,IAAA8D,EAAAqgD,EAAArgD,IACA8nC,EAAAgoB,GAAA,IAAA5zD,WAAA,GAAAnJ,KAAA42D,QAAA52D,KAAA42D,OAEYP,GADZppD,EAAA6/C,UACuB/X,OAAAniC,EAAA5S,KAAA60D,WACvBvH,EAAA94C,iBACAmiD,GAAA,GAGA,OAAAA,EAEe,IAAAqG,GAvDC,SAAAnsD,GAKhB,SAAAosD,EAAAjkD,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA2tD,YAAyBmP,MAChB98D,KACTiZ,EAAAD,GAAA,GAgBA,OAXAhI,EAAAyoD,WAAAxgD,EAAAygD,UAAAzgD,EAAAygD,UAAmEhC,GAKnE1mD,EAAA4lD,OAAA39C,EAAA87B,MAAA97B,EAAA87B,MAAA,EAKA/jC,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IACAttB,EAEA,OA1BI6rD,GAASI,EAAApsD,GA0BbosD,EA3BgB,CA4Bd3G,ICrEE4G,GAAyB,WAC7B,IAAA7sD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAwBtBysD,GACP,WADOA,GAEP,QAqNeC,GAjMG,SAAAvsD,GAKlB,SAAAwsD,EAAArkD,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GAyEA,OAxEAhI,EAAAH,EAAAxT,KAAA2C,KAA2F,IAAAA,MAK3Fs9D,YAAA,EAKAtsD,EAAAusD,WAAA,EAKAvsD,EAAAmkB,eAAAviB,IAAAqG,EAAA6Z,SAAA7Z,EAAA6Z,SAAA,EAKA9hB,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IAKAttB,EAAAwsD,cAAA5qD,IAAAqG,EAAAwkD,QAAAxkD,EAAAwkD,QAAA,GAKAzsD,EAAA0sD,gBAAA9qD,IAAAqG,EAAA0kD,WAAA1kD,EAAA0kD,UAKA3sD,EAAAyoD,WAAAxgD,EAAAygD,UAAAzgD,EAAAygD,UAAmEvC,GAKnEnmD,EAAA4sD,YAAA,KAKA5sD,EAAA6sD,gBAAAjrD,EAKA5B,EAAA8sD,WAKA9sD,EAAA+sD,WAAAnrD,EAMA5B,EAAAgtD,kBAAA,IAIAhtD,EAAAitD,mBAMAjtD,EAAAktD,sBAAA,IACAltD,EA+GA,OA9LIksD,GAASG,EAAAxsD,GAoFbwsD,EAAAv+D,UAAAq/D,gBAAA,WACAn+D,KAAAi+D,wBAAArrD,EACA5S,KAAAqwD,SAAAvD,UACA7L,oBAAAruC,EAAAvT,KAAA++D,KAAAp+D,KAAAu9D,YAAAv9D,KAAA49D,cAOAP,EAAAv+D,UAAA6uD,YAAA,SAAAL,GACA,IAAAttD,KAAAy5D,WAAAnM,GACA,SAEA,IAAAlqD,EAAAkqD,EAAAlqD,KACA,GAAAA,IAAqBgS,EAASuB,OAAAvT,IAAmBgS,EAASiB,WAC1D,SAEAi3C,EAAA94C,iBACA,IAOAugC,EAPA9nC,EAAAqgD,EAAArgD,IACAoxD,EAA+C/Q,EAAA,cAuB/C,GAtBAttD,KAAA09D,aACA19D,KAAA49D,YAAAtQ,EAAA1uC,YAKA0uC,EAAAlqD,MAAoCgS,EAASuB,OAC7Co+B,EAAAspB,EAAAh8C,OACgBod,IAChB4+B,EAAAC,YAAAC,WAAAC,kBACAzpB,GAAyBlV,IAEzBw+B,EAAAC,YAAAC,WAAAE,iBACA1pB,GAAA,KAGAuY,EAAAlqD,MAAyCgS,EAASiB,aAClD0+B,GAAAspB,EAAAK,YACgBh/B,KAChBqV,GAAA,IAGA,IAAAA,EACA,SAGA/0C,KAAAu9D,WAAAxoB,EAEA,IAAA5W,EAAAD,KAAAC,MASA,QARAvrB,IAAA5S,KAAA69D,aACA79D,KAAA69D,WAAA1/B,KAEAn+B,KAAA+9D,OAAA5/B,EAAAn+B,KAAA69D,WAAA79D,KAAAg+D,qBACAh+D,KAAA+9D,MAAA1+D,KAAA6L,IAAA6pC,GAAA,EACAooB,GACAA,IAEAn9D,KAAA+9D,QAAAZ,GAAA,CACA,IAAAp2B,EAAA95B,EAAA6/C,UAUA,OATA9sD,KAAAi+D,mBACAr0B,aAAA5pC,KAAAi+D,oBAGAl3B,EAAAia,mBAEAhhD,KAAAi+D,mBAAA/vD,WAAAlO,KAAAm+D,gBAAAz/D,KAAAsB,WAAAg+D,mBACAj3B,EAAAwZ,YAAAxL,EAAA/0C,KAAAk+D,sBAAAl+D,KAAA49D,aACA59D,KAAA69D,WAAA1/B,GACA,EAEAn+B,KAAAs9D,aAAAvoB,EACA,IAAA4pB,EAAAt/D,KAAAM,IAAAK,KAAAw9D,UAAAr/B,EAAAn+B,KAAA69D,YAAA,GAGA,OAFAj0B,aAAA5pC,KAAA89D,YACA99D,KAAA89D,WAAA5vD,WAAAlO,KAAA4+D,iBAAAlgE,KAAAsB,KAAAiN,GAAA0xD,IACA,GAMAtB,EAAAv+D,UAAA8/D,iBAAA,SAAA3xD,GACA,IAAA85B,EAAA95B,EAAA6/C,UACA/lB,EAAA4U,gBACA5U,EAAAsV,mBAGQga,GAAWtvB,GADC1iB,GAAKrkB,KAAAs9D,aAAAt9D,KAAAm1B,UAAAn1B,KAAAm1B,WACNn1B,KAAA49D,YAAA59D,KAAA60D,WACnB70D,KAAA+9D,WAAAnrD,EACA5S,KAAAs9D,YAAA,EACAt9D,KAAA49D,YAAA,KACA59D,KAAA69D,gBAAAjrD,EACA5S,KAAA89D,gBAAAlrD,GAQAyqD,EAAAv+D,UAAA+/D,eAAA,SAAAlB,GACA39D,KAAA09D,WAAAC,EACAA,IACA39D,KAAA49D,YAAA,OAGAP,EA/LkB,CAgMhB/G,IC9OEwI,GAAyB,WAC7B,IAAAzuD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqJdquD,GAtHA,SAAAluD,GAKf,SAAAmuD,EAAAhmD,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAimD,EAAuE,EAmCvE,OAlCAA,EAAA1G,WACA0G,EAAA1G,SAAsCrkD,IAEtClD,EAAAH,EAAAxT,KAAA2C,KAAAi/D,IAAAj/D,MAKAk/D,QAAA,KAKAluD,EAAAipD,gBAAArnD,EAKA5B,EAAAmuD,WAAA,EAKAnuD,EAAAouD,eAAA,EAKApuD,EAAAquD,gBAAAzsD,IAAAqG,EAAAqmD,UAAArmD,EAAAqmD,UAAA,GAKAtuD,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IACAttB,EAyEA,OAnHI8tD,GAASE,EAAAnuD,GA+CbmuD,EAAAlgE,UAAAs5D,gBAAA,SAAA9K,GACA,IAAAiS,EAAA,EACAC,EAAAx/D,KAAA04D,eAAA,GACA+G,EAAAz/D,KAAA04D,eAAA,GAEA30C,EAAA1kB,KAAAqmB,MAAA+5C,EAAAl8B,QAAAi8B,EAAAj8B,QAAAk8B,EAAAn8B,QAAAk8B,EAAAl8B,SACA,QAAA1wB,IAAA5S,KAAAi6D,WAAA,CACA,IAAAllB,EAAAhxB,EAAA/jB,KAAAi6D,WACAj6D,KAAAo/D,gBAAArqB,GACA/0C,KAAAm/D,WACA9/D,KAAA6L,IAAAlL,KAAAo/D,gBAAAp/D,KAAAq/D,aACAr/D,KAAAm/D,WAAA,GAEAI,EAAAxqB,EAEA/0C,KAAAi6D,WAAAl2C,EACA,IAAA9W,EAAAqgD,EAAArgD,IACA85B,EAAA95B,EAAA6/C,UACA,GAAA/lB,EAAA6W,iBAAA98B,WAA+C8yB,GAA/C,CAMA,IAAAiY,EAAA5+C,EAAAogC,cAAAye,wBACA8N,EAAuB7B,GAAoB/3D,KAAA04D,gBAC3CkB,EAAA,IAAA/N,EAAAG,KACA4N,EAAA,IAAA/N,EAAAI,IACAjsD,KAAAk/D,QAAAjyD,EAAAmyB,uBAAAw6B,GAEA55D,KAAAm/D,YACAlyD,EAAAmhD,SACArnB,EAAAyZ,eAAA+e,EAAAv/D,KAAAk/D,YAMAF,EAAAlgE,UAAAw5D,cAAA,SAAAhL,GACA,QAAAttD,KAAA04D,eAAA34D,OAAA,KACAutD,EAAArgD,IACA6/C,UACA7L,eAAAjhD,KAAA60D,YACA,IASAmK,EAAAlgE,UAAAq5D,gBAAA,SAAA7K,GACA,GAAAttD,KAAA04D,eAAA34D,QAAA,GACA,IAAAkN,EAAAqgD,EAAArgD,IAQA,OAPAjN,KAAAk/D,QAAA,KACAl/D,KAAAi6D,gBAAArnD,EACA5S,KAAAm/D,WAAA,EACAn/D,KAAAo/D,eAAA,EACAp/D,KAAAw4D,wBACAvrD,EAAA6/C,UAAA9L,oBAEA,EAGA,UAGAge,EApHe,CAqHb/G,ICpJEyH,GAAyB,WAC7B,IAAArvD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgIdivD,GApGF,SAAA9uD,GAKb,SAAA+uD,EAAA5mD,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAimD,EAAuE,EAyBvE,OAxBAA,EAAA1G,WACA0G,EAAA1G,SAAsCrkD,IAEtClD,EAAAH,EAAAxT,KAAA2C,KAAAi/D,IAAAj/D,MAKAk/D,QAAA,KAKAluD,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IAKAttB,EAAA6uD,mBAAAjtD,EAKA5B,EAAA8uD,gBAAA,EACA9uD,EAiEA,OAjGI0uD,GAASE,EAAA/uD,GAqCb+uD,EAAA9gE,UAAAs5D,gBAAA,SAAA9K,GACA,IAAAyS,EAAA,EACAP,EAAAx/D,KAAA04D,eAAA,GACA+G,EAAAz/D,KAAA04D,eAAA,GACAj6C,EAAA+gD,EAAAl8B,QAAAm8B,EAAAn8B,QACA5kB,EAAA8gD,EAAAj8B,QAAAk8B,EAAAl8B,QAEAzd,EAAAzmB,KAAAK,KAAA+e,IAAAC,UACA9L,IAAA5S,KAAA6/D,gBACAE,EAAA//D,KAAA6/D,cAAA/5C,GAEA9lB,KAAA6/D,cAAA/5C,EACA,IAAA7Y,EAAAqgD,EAAArgD,IACA85B,EAAA95B,EAAA6/C,UACA,GAAAiT,IACA//D,KAAA8/D,gBAAAC,GAGA,IAAAlU,EAAA5+C,EAAAogC,cAAAye,wBACA8N,EAAuB7B,GAAoB/3D,KAAA04D,gBAC3CkB,EAAA,IAAA/N,EAAAG,KACA4N,EAAA,IAAA/N,EAAAI,IACAjsD,KAAAk/D,QAAAjyD,EAAAmyB,uBAAAw6B,GAEA3sD,EAAAmhD,SACArnB,EAAAqZ,iBAAA2f,EAAA//D,KAAAk/D,UAKAU,EAAA9gE,UAAAw5D,cAAA,SAAAhL,GACA,GAAAttD,KAAA04D,eAAA34D,OAAA,GACA,IACAgnC,EADAumB,EAAArgD,IACA6/C,UACAzwC,EAAArc,KAAA8/D,gBAAA,OAEA,OADA/4B,EAAAka,eAAAjhD,KAAA60D,UAAAx4C,IACA,EAGA,UAMAujD,EAAA9gE,UAAAq5D,gBAAA,SAAA7K,GACA,GAAAttD,KAAA04D,eAAA34D,QAAA,GACA,IAAAkN,EAAAqgD,EAAArgD,IAOA,OANAjN,KAAAk/D,QAAA,KACAl/D,KAAA6/D,mBAAAjtD,EACA5S,KAAA8/D,gBAAA,EACA9/D,KAAAw4D,wBACAvrD,EAAA6/C,UAAA9L,oBAEA,EAGA,UAGA4e,EAlGa,CAmGX3H,IC9CK,SAAS+H,GAAQhnD,GACxB,IAAAC,EAAAD,GAAA,GACAkuC,EAAA,IAA2BruC,EAC3BwgD,EAAA,IAAsB/7B,IAAO,cAuD7B,YAtDA1qB,IAAAqG,EAAAgnD,oBACAhnD,EAAAgnD,qBAEA/Y,EAAApmD,KAAA,IAA8Bi5D,UAE9BnnD,IAAAqG,EAAAinD,iBACAjnD,EAAAinD,kBAEAhZ,EAAApmD,KAAA,IAA8B+1D,GAAe,CAC7C9hB,MAAA97B,EAAAknD,UACA7hC,SAAArlB,EAAAmnD,sBAGAxtD,IAAAqG,EAAAonD,SAAApnD,EAAAonD,UAEAnZ,EAAApmD,KAAA,IAA8Bo4D,GAAO,CACrCQ,UAAAzgD,EAAAqnD,YAA6CrJ,QAAKrkD,EAClDymD,mBAGAzmD,IAAAqG,EAAAsnD,aAAAtnD,EAAAsnD,cAGArZ,EAAApmD,KAAA,IAA8Bi+D,UAE9BnsD,IAAAqG,EAAAunD,WAAAvnD,EAAAunD,YAEAtZ,EAAApmD,KAAA,IAA8B6+D,GAAS,CACvCrhC,SAAArlB,EAAAmnD,sBAGAxtD,IAAAqG,EAAAwnD,UAAAxnD,EAAAwnD,YAEAvZ,EAAApmD,KAAA,IAA8B27D,IAC9BvV,EAAApmD,KAAA,IAA8Bk8D,GAAY,CAC1CjoB,MAAA97B,EAAAknD,UACA7hC,SAAArlB,EAAAmnD,uBAGAxtD,IAAAqG,EAAAynD,gBACAznD,EAAAynD,iBAEAxZ,EAAApmD,KAAA,IAA8Bs8D,GAAc,CAC5C1D,UAAAzgD,EAAAqnD,YAA6CrJ,QAAKrkD,EAClD0rB,SAAArlB,EAAAmnD,sBAGAxtD,IAAAqG,EAAA0nD,eACA1nD,EAAA0nD,gBAEAzZ,EAAApmD,KAAA,IAA8Bg7D,GAAQ,CACtCx9B,SAAArlB,EAAAmnD,gBAGAlZ,ECxIA,IAAI0Z,GAAyB,WAC7B,IAAAvwD,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAyDdmwD,GA3Cf,SAAAhwD,GAUA,SAAAiwD,EAAA19D,EAAA29D,EAAApiC,EAAAqiC,EAAAC,GACA,IAAAjwD,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KA4BA,OArBAgR,EAAAkwD,sBAAAH,EAMA/vD,EAAA4tB,WAAAD,EAOA3tB,EAAArB,QAAAqxD,EAOAhwD,EAAAmwD,UAAAF,EACAjwD,EAEA,OAxCI4vD,GAASE,EAAAjwD,GAwCbiwD,EAzCA,CA0CEzsD,GCxCF+sD,GAAA,oDAOAC,GAAA,cAOO,SAAAC,GAAAC,GACP,uBAAAA,EACAA,EAGeC,GAAQD,GAyBhB,IAAAE,GAAA,WAQP,IAIA9a,EAAA,GAIA+a,EAAA,EACA,gBAKAziE,GACA,IAAAsiE,EACA,GAAA5a,EAAA5nD,eAAAE,GACAsiE,EAAA5a,EAAA1nD,OAEA,CACA,GAAAyiE,GApBA,KAoBA,CACA,IAAAxkE,EAAA,EACA,QAAAuB,KAAAkoD,EACA,MAAAzpD,cACAypD,EAAAloD,KACAijE,GAIAH,EA2BA,SAAAtiE,GACA,IAAAjB,EAAA2jE,EAAA/6D,EAAAzH,EAAAoiE,EACAF,GAAAO,KAAA3iE,KACAA,EApFA,SAAAsiE,GACA,IAAArkD,EAAAtN,SAAAC,cAAA,OAEA,GADAqN,EAAA3B,MAAAgmD,QACA,KAAArkD,EAAA3B,MAAAgmD,MAAA,CACA3xD,SAAAiyD,KAAApZ,YAAAvrC,GACA,IAAA4kD,EAAApkB,iBAAAxgC,GAAAqkD,MAEA,OADA3xD,SAAAiyD,KAAAlf,YAAAzlC,GACA4kD,EAGA,SA0EAC,CAAA9iE,IAEA,GAAAmiE,GAAAQ,KAAA3iE,GAAA,CACA,IAAAN,EAAAM,EAAAc,OAAA,EACAvC,OACA,EAEAA,EADAmB,GAAA,EACA,EAGA,EAEA,IAAAqjE,EAAA,IAAArjE,GAAA,IAAAA,EACAX,EAAA42C,SAAA31C,EAAAgjE,OAAA,IAAAzkE,KAAA,IACAmkE,EAAA/sB,SAAA31C,EAAAgjE,OAAA,IAAAzkE,KAAA,IACAoJ,EAAAguC,SAAA31C,EAAAgjE,OAAA,IAAAzkE,KAAA,IAEA2B,EADA6iE,EACAptB,SAAA31C,EAAAgjE,OAAA,IAAAzkE,KAAA,IAGA,IAEA,GAAAA,IACAQ,MAAA,GAAAA,EACA2jE,MAAA,GAAAA,EACA/6D,MAAA,GAAAA,EACAo7D,IACA7iE,MAAA,GAAAA,IAGAoiE,EAAA,CAAAvjE,EAAA2jE,EAAA/6D,EAAAzH,EAAA,UAEA,GAAAF,EAAAoB,QAAA,SAEA6hE,GADAX,EAAAtiE,EAAAuC,MAAA,MAAA0P,MAAA,KAAAjE,IAAAs9B,SAGA,GAAAtrC,EAAAoB,QAAA,UACAkhE,EAAAtiE,EAAAuC,MAAA,MAAA0P,MAAA,KAAAjE,IAAAs9B,SACAzpC,KAAA,GACAohE,GAAAX,IAGQrnD,GAAM,MAEd,OAAAqnD,EA1EAY,CAAAljE,GACA0nD,EAAA1nD,GAAAsiE,IACAG,EAEA,OAAAH,GAzCO,GAmDA,SAAAa,GAAAb,GACP,OAAAn1D,MAAA+K,QAAAoqD,GACAA,EAGAE,GAAAF,GA8DO,SAAAW,GAAAX,GAKP,OAJAA,EAAA,GAAel9C,GAAKk9C,EAAA,eACpBA,EAAA,GAAel9C,GAAKk9C,EAAA,eACpBA,EAAA,GAAel9C,GAAKk9C,EAAA,eACpBA,EAAA,GAAel9C,GAAKk9C,EAAA,QACpBA,EAMO,SAASC,GAAQD,GACxB,IAAAvjE,EAAAujE,EAAA,GACAvjE,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAA2jE,EAAAJ,EAAA,GACAI,IAAA,EAAAA,KACAA,IAAA,MAEA,IAAA/6D,EAAA26D,EAAA,GAKA,OAJA36D,IAAA,EAAAA,KACAA,IAAA,MAGA,QAAA5I,EAAA,IAAA2jE,EAAA,IAAA/6D,EAAA,UADAgM,IAAA2uD,EAAA,KAAAA,EAAA,IACA,ICtMA,IAAAc,GAAA,WACA,SAAAA,IAKAriE,KAAAsiE,OAAA,GAKAtiE,KAAAuiE,WAAA,EAKAviE,KAAAwiE,cAAA,GA8DA,OAzDAH,EAAAvjE,UAAAsB,MAAA,WACAJ,KAAAsiE,OAAA,GACAtiE,KAAAuiE,WAAA,GAKAF,EAAAvjE,UAAA2jE,eAAA,WACA,OAAAziE,KAAAuiE,WAAAviE,KAAAwiE,eAKAH,EAAAvjE,UAAA4jE,OAAA,WACA,GAAA1iE,KAAAyiE,iBAAA,CACA,IAAAvlE,EAAA,EACA,QAAAuB,KAAAuB,KAAAsiE,OAAA,CACA,IAAAK,EAAA3iE,KAAAsiE,OAAA7jE,GACA,MAAAvB,MAAAylE,EAAAztD,uBACAlV,KAAAsiE,OAAA7jE,KACAuB,KAAAuiE,eAWAF,EAAAvjE,UAAAf,IAAA,SAAA6kE,EAAAC,EAAAtB,GACA,IAAA9iE,EAAA4yC,GAAAuxB,EAAAC,EAAAtB,GACA,OAAA9iE,KAAAuB,KAAAsiE,OAAAtiE,KAAAsiE,OAAA7jE,GAAA,MAQA4jE,EAAAvjE,UAAA6J,IAAA,SAAAi6D,EAAAC,EAAAtB,EAAAoB,GACA,IAAAlkE,EAAA4yC,GAAAuxB,EAAAC,EAAAtB,GACAvhE,KAAAsiE,OAAA7jE,GAAAkkE,IACA3iE,KAAAuiE,YASAF,EAAAvjE,UAAA4wD,QAAA,SAAAoT,GACA9iE,KAAAwiE,cAAAM,EACA9iE,KAAA0iE,UAEAL,EA9EA,GAsFA,SAAAhxB,GAAAuxB,EAAAC,EAAAtB,GAEA,OAAAsB,EAAA,IAAAD,EAAA,KADArB,EAA8BD,GAAQC,GAAA,QAGvB,IAMRwB,GAAA,IAAAV,GCpFA,SAAAW,GAAAzB,GACP,OAAAn1D,MAAA+K,QAAAoqD,GACeC,GAAQD,GAGvBA,EChBA,IA0Fe0B,GA1Ff,WACA,SAAAC,KAuFA,OA9EAA,EAAApkE,UAAAqkE,WAAA,SAAAnoD,EAAAwwC,EAAA4X,KAMAF,EAAApkE,UAAAukE,aAAA,SAAAroD,KAMAkoD,EAAApkE,UAAA2c,SAAA,SAAAF,KAKA2nD,EAAApkE,UAAAwkE,WAAA,SAAAC,EAAA/X,KAKA0X,EAAApkE,UAAA0kE,YAAA,SAAAhY,EAAAjwC,KAKA2nD,EAAApkE,UAAA2kE,uBAAA,SAAAC,EAAAlY,KAKA0X,EAAApkE,UAAA6kE,eAAA,SAAAC,EAAApY,KAKA0X,EAAApkE,UAAA+kE,oBAAA,SAAAC,EAAAtY,KAKA0X,EAAApkE,UAAAilE,eAAA,SAAAC,EAAAxY,KAKA0X,EAAApkE,UAAAmlE,iBAAA,SAAAC,EAAA1Y,KAKA0X,EAAApkE,UAAAqlE,UAAA,SAAAC,EAAA5Y,KAKA0X,EAAApkE,UAAAulE,YAAA,SAAAC,EAAA9Y,KAKA0X,EAAApkE,UAAAylE,SAAA,SAAAvpD,EAAAwwC,KAKA0X,EAAApkE,UAAA0lE,mBAAA,SAAAC,EAAAC,KAKAxB,EAAApkE,UAAA6lE,cAAA,SAAAC,EAAAC,KAKA3B,EAAApkE,UAAAgmE,aAAA,SAAAC,EAAAF,KACA3B,EAxFA,GCNI8B,GAAyB,WAC7B,IAAA30D,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAmQdu0D,GAnOH,SAAAp0D,GAKZ,SAAAq0D,EAAAC,GACA,IAAAn0D,EAAAH,EAAAxT,KAAA2C,YAyBA,OArBAgR,EAAAo0D,mBAAAxyD,IAAAuyD,IAAA,KAKAn0D,EAAAq0D,OAAA,EAKAr0D,EAAAs0D,SAAA,GAKAt0D,EAAAu0D,QAAA,KAKAv0D,EAAAw0D,QAAA,KACAx0D,EAkMA,OAhOIg0D,GAASE,EAAAr0D,GAmCbq0D,EAAApmE,UAAA2jE,eAAA,WACA,OAAAziE,KAAAmwC,WAAAnwC,KAAAolE,eAKAF,EAAApmE,UAAAsB,MAAA,WACAJ,KAAAqlE,OAAA,EACArlE,KAAAslE,SAAA,GACAtlE,KAAAulE,QAAA,KACAvlE,KAAAwlE,QAAA,KACAxlE,KAAA+U,cAA2BK,EAASG,QAMpC2vD,EAAApmE,UAAA2mE,YAAA,SAAAhnE,GACA,OAAAuB,KAAAslE,SAAAvmE,eAAAN,IAQAymE,EAAApmE,UAAA2a,QAAA,SAAAla,GAEA,IADA,IAAAmmE,EAAA1lE,KAAAulE,QACAG,GACAnmE,EAAAmmE,EAAAC,OAAAD,EAAAE,KAAA5lE,MACA0lE,IAAAG,OAQAX,EAAApmE,UAAAf,IAAA,SAAAU,EAAAua,GACA,IAAA0sD,EAAA1lE,KAAAslE,SAAA7mE,GAEA,OADQyb,OAAMtH,IAAA8yD,EAAA,IACdA,IAAA1lE,KAAAwlE,QACAE,EAAAC,QAEAD,IAAA1lE,KAAAulE,SACAvlE,KAAAulE,QAA4CvlE,KAAAulE,QAAA,MAC5CvlE,KAAAulE,QAAAO,MAAA,OAGAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,OAEAH,EAAAG,MAAA,KACAH,EAAAI,MAAA9lE,KAAAwlE,QACAxlE,KAAAwlE,QAAAK,MAAAH,EACA1lE,KAAAwlE,QAAAE,EACAA,EAAAC,SAOAT,EAAApmE,UAAA6C,OAAA,SAAAlD,GACA,IAAAinE,EAAA1lE,KAAAslE,SAAA7mE,GAoBA,OAnBQyb,OAAMtH,IAAA8yD,EAAA,IACdA,IAAA1lE,KAAAwlE,SACAxlE,KAAAwlE,QAA4CE,EAAA,MAC5C1lE,KAAAwlE,UACAxlE,KAAAwlE,QAAAK,MAAA,OAGAH,IAAA1lE,KAAAulE,SACAvlE,KAAAulE,QAA4CG,EAAA,MAC5C1lE,KAAAulE,UACAvlE,KAAAulE,QAAAO,MAAA,QAIAJ,EAAAG,MAAAC,MAAAJ,EAAAI,MACAJ,EAAAI,MAAAD,MAAAH,EAAAG,cAEA7lE,KAAAslE,SAAA7mE,KACAuB,KAAAqlE,OACAK,EAAAC,QAKAT,EAAApmE,UAAAqxC,SAAA,WACA,OAAAnwC,KAAAqlE,QAKAH,EAAApmE,UAAAgZ,QAAA,WACA,IAEA4tD,EAFA34D,EAAA,IAAAX,MAAApM,KAAAqlE,QACAnoE,EAAA,EAEA,IAAAwoE,EAAA1lE,KAAAwlE,QAAkCE,EAAOA,IAAAI,MACzC/4D,EAAA7P,KAAAwoE,EAAAE,KAEA,OAAA74D,GAKAm4D,EAAApmE,UAAAgT,UAAA,WACA,IAEA4zD,EAFA3zD,EAAA,IAAA3F,MAAApM,KAAAqlE,QACAnoE,EAAA,EAEA,IAAAwoE,EAAA1lE,KAAAwlE,QAAkCE,EAAOA,IAAAI,MACzC/zD,EAAA7U,KAAAwoE,EAAAC,OAEA,OAAA5zD,GAKAmzD,EAAApmE,UAAAinE,SAAA,WACA,OAAA/lE,KAAAulE,QAAAI,QAKAT,EAAApmE,UAAAknE,YAAA,WACA,OAAAhmE,KAAAulE,QAAAK,MAMAV,EAAApmE,UAAAmnE,aAAA,WACA,OAAAjmE,KAAAwlE,QAAAI,MAKAV,EAAApmE,UAAA+B,IAAA,WACA,IAAA6kE,EAAA1lE,KAAAulE,QAUA,cATAvlE,KAAAslE,SAAAI,EAAAE,MACAF,EAAAG,QACAH,EAAAG,MAAAC,MAAA,MAEA9lE,KAAAulE,QAAwCG,EAAA,MACxC1lE,KAAAulE,UACAvlE,KAAAwlE,QAAA,QAEAxlE,KAAAqlE,OACAK,EAAAC,QAMAT,EAAApmE,UAAAi3C,QAAA,SAAAt3C,EAAAN,GACA6B,KAAAjC,IAAAU,GACAuB,KAAAslE,SAAA7mE,GAAAknE,OAAAxnE,GAMA+mE,EAAApmE,UAAA6J,IAAA,SAAAlK,EAAAN,GACQ+b,IAAMzb,KAAAuB,KAAAslE,UAAA,IACd,IAAAI,EAAA,CACAE,KAAAnnE,EACAonE,MAAA,KACAC,MAAA9lE,KAAAwlE,QACAG,OAAAxnE,GAEA6B,KAAAwlE,QAIAxlE,KAAAwlE,QAAAK,MAAAH,EAHA1lE,KAAAulE,QAAAG,EAKA1lE,KAAAwlE,QAAAE,EACA1lE,KAAAslE,SAAA7mE,GAAAinE,IACA1lE,KAAAqlE,QAOAH,EAAApmE,UAAA4wD,QAAA,SAAA3uC,GACA/gB,KAAAolE,cAAArkD,GAEAmkD,EAjOY,CAkOVxwD,GCrQEwxD,GAAyB,WAC7B,IAAA71D,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAuBzBy1D,GAAU,SAAAt1D,GAKd,SAAAu1D,EAAAjB,GACA,IAAAn0D,EAAAH,EAAAxT,KAAA2C,KAAAmlE,IAAAnlE,KAEA,OADAgR,EAAAq1D,UAAA,GACAr1D,EA0CA,OAjDIk1D,GAASE,EAAAv1D,GASbu1D,EAAAtnE,UAAAsB,MAAA,WACAyQ,EAAA/R,UAAAsB,MAAA/C,KAAA2C,MACAA,KAAAqmE,UAAA,IAQAD,EAAAtnE,UAAAf,IAAA,SAAAU,EAAA6nE,GACA,IAAA5kB,EAAA7wC,EAAA/R,UAAAf,IAAAV,KAAA2C,KAAAvB,GACA8nE,EAAyBp2D,EAAMm2D,GAK/B,OAJAC,KAAAvmE,KAAAqmE,YACArmE,KAAAqmE,UAAAE,GAAA,IAEAvmE,KAAAqmE,UAAAE,GAAA9nE,IAAA,EACAijD,GAEA0kB,EAAAtnE,UAAA0nE,MAAA,WACAC,EAAA,KAAAzmE,KAAAyiE,kBAAA,CACA,IAAAhkE,EAAAuB,KAAAgmE,cACA,QAAAO,KAAAvmE,KAAAqmE,UACA,GAAA5nE,KAAAuB,KAAAqmE,UAAAE,GACA,MAAAE,EAGA,IAAA/kB,EAAA1hD,KAAAa,MAEA,QAAA0lE,KADA7kB,EAAA/1C,MAAA+1C,EAAA9gD,OAAA,EACAZ,KAAAqmE,iBACArmE,KAAAqmE,UAAAE,GAAA9nE,KAOA2nE,EAAAtnE,UAAA4nE,QAAA,SAAAJ,UACAtmE,KAAAqmE,UAA8Bl2D,EAAMm2D,KAEpCF,EAlDc,CAmDZnB,ICWK0B,GAAA,GAmCAC,GAAA,UAYIC,GAAU,IDzDN,GC6DRC,GAAA,GAIPC,GAAA,KAIOC,GAAA,GAKAC,GAAA,WACP,IAMAC,EAAAC,EANAC,EAAA,GACAC,EAAAP,GACA/lD,EAAA,QACAumD,EAAA,sBACApjE,EAAAojE,EAAAvnE,OACAwnE,EAAA,2BAEA,SAAAC,EAAA3W,GAIA,IAHA,IAAAlhD,EAAA83D,KAGAC,EAAA,IAA8BA,GAAA,IAAeA,GAAA,KAG7C,IAFA,IAAAC,EAAAD,EAAA,IACAE,GAAA,EACA1qE,EAAA,EAA2BA,EAAAgH,IAAShH,EAAA,CACpC,IAAA2qE,EAAAP,EAAApqE,GAGA,GAFAyS,EAAAkhD,KAAA8W,EAAA5mD,EAAA8mD,EACAV,EAAAx3D,EAAAm4D,YAAAP,GAAA57D,MACAklD,GAAAgX,EAAA,CACAl4D,EAAAkhD,KAAA8W,EAAA5mD,EAAA8vC,EAAA,IAAAgX,EACA,IAAAl8D,EAAAgE,EAAAm4D,YAAAP,GAAA57D,MAGAi8D,KAAAj8D,GAAAw7D,GAGA,GAAAS,EAIA,SAGA,SAEA,SAAAG,IACA,IAAAC,GAAA,EACA,QAAAnX,KAAAwW,EACAA,EAAAxW,GAAAuW,IACAI,EAAA3W,IACAwW,EAAAxW,GAAAuW,EACoBhnE,EAAK4mE,IAEzBD,GAAA,KACoBF,GAAUzmE,YAG9BinE,EAAAxW,GACAmX,GAAA,IAIAA,IACAC,cAAAf,GACAA,OAAAt0D,GAGA,gBAAAs1D,GACA,IAAAC,EAA2BvX,GAAesX,GAC1C,GAAAC,EAGA,QAAAjrE,EAAA,EAAA0U,EAAAu2D,EAAApoE,OAAiD7C,EAAA0U,IAAQ1U,EAAA,CACzD,IAAA6zD,EAAAoX,EAAAjrE,GACA6zD,KAAAsW,IACAA,EAAAtW,GAAAqW,EACAI,EAAAzW,KACAsW,EAAAtW,GAAA,OACAn+C,IAAAs0D,IACAA,EAAAkB,YAAAL,EAAA,SAtEO,GAgFP,SAAAN,KAIA,OAHAV,KACAA,GAAyBxlB,GAAqB,MAE9CwlB,GAMO,IACPsB,GACAC,GAFOC,IAEPD,GAAAtB,GACA,SAAAnW,GACA,IAAAjwD,EAAA0nE,GAAAzX,GAcA,OAbAj+C,MAAAhS,IACAynE,MACAA,GAAAz4D,SAAAC,cAAA,QACAgkD,UAAA,IACAwU,GAAA9sD,MAAAitD,OAAAH,GAAA9sD,MAAA6jC,QAAA,eACAipB,GAAA9sD,MAAA8gB,SAAA,sBACAgsC,GAAA9sD,MAAAywC,KAAA,uBAEAqc,GAAA9sD,MAAAs1C,OACAjhD,SAAAiyD,KAAApZ,YAAA4f,IACAznE,EAAA0nE,GAAAzX,GAAAwX,GAAArmB,aACApyC,SAAAiyD,KAAAlf,YAAA0lB,KAEAznE,IAQO,SAAA6nE,GAAA5X,EAAA0W,GACP,IAAAR,EAAAU,KAIA,OAHA5W,GAAAkW,EAAAlW,OACAkW,EAAAlW,QAEAkW,EAAAe,YAAAP,GAAA57D,MASO,SAAS+8D,GAAwB7X,EAAA0W,EAAA5gB,GACxC,OAAA4gB,KAAA5gB,EACAA,EAAA4gB,GAEA5gB,EAAA4gB,GAAAkB,GAAA5X,EAAA0W,GA0BO,SAAAoB,GAAAh5D,EAAAmR,EAAA8nD,EAAAC,GACP,IAAA/nD,IACAnR,EAAA+gB,UAAAk4C,EAAAC,GACAl5D,EAAAmU,OAAAhD,GACAnR,EAAA+gB,WAAAk4C,GAAAC,IAGO,IAAAC,GvF9RP,cuF4SO,SAAAC,GAAAp5D,EAAAgU,EAAA6/B,EAAAwlB,EAAAC,EAAAC,EAAAvrB,EAAAv+C,EAAAU,EAAA0e,EAAA0R,GACP,IAAAi5C,EACA,GAAA3lB,IACA2lB,EAAAx5D,EAAAy5D,YACAz5D,EAAAy5D,YAAAD,EAAA3lB,GAEA7/B,GACAhU,EAAA05D,aAAAnnE,MAAAyN,EAAAgU,GAEAhU,EAAAo5D,UAAAC,EAAAC,EAAAC,EAAAvrB,EAAAv+C,EAAAU,EAAA0e,EAAAm/B,EAAAztB,EAAA9wB,EAAA8wB,GACAi5C,IACAx5D,EAAAy5D,YAAAD,GAEAxlD,GACAhU,EAAA05D,aAAAnnE,MAAAyN,EAAAm5D,IClVA,IAAIQ,GAAyB,WAC7B,IAAAj5D,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAw2Bd64D,GAz0BY,SAAA14D,GAS3B,SAAA24D,EAAA75D,EAAAovC,EAAA7gC,EAAAyF,EAAA8lD,GACA,IAAAz4D,EAAAH,EAAAxT,KAAA2C,YAiKA,OA5JAgR,EAAA04D,SAAA/5D,EAKAqB,EAAAw2C,YAAAzI,EAKA/tC,EAAAiW,QAAA/I,EAKAlN,EAAAmqB,WAAAxX,EAKA3S,EAAA24D,cAAAF,EAKAz4D,EAAA44D,kBAAA,KAKA54D,EAAA64D,oBAAA,KAKA74D,EAAA84D,kBAAA,KAKA94D,EAAA+4D,WAAA,KAKA/4D,EAAAg5D,aAAA,KAKAh5D,EAAAi5D,OAAA,KAKAj5D,EAAAk5D,cAAA,EAKAl5D,EAAAm5D,cAAA,EAKAn5D,EAAAo5D,aAAA,EAKAp5D,EAAAq5D,cAAA,EAKAr5D,EAAAs5D,cAAA,EAKAt5D,EAAAu5D,cAAA,EAKAv5D,EAAAw5D,sBAAA,EAKAx5D,EAAAy5D,eAAA,EAKAz5D,EAAA05D,YAAA,EAKA15D,EAAA25D,YAAA,EAKA35D,EAAA45D,MAAA,GAKA55D,EAAA65D,aAAA,EAKA75D,EAAA85D,aAAA,EAKA95D,EAAA+5D,qBAAA,EAKA/5D,EAAAg6D,cAAA,EAKAh6D,EAAAi6D,WAAA,EAKAj6D,EAAAk6D,eAAA,KAKAl6D,EAAAm6D,iBAAA,KAKAn6D,EAAAo6D,WAAA,KAKAp6D,EAAAq6D,kBAAA,GAKAr6D,EAAAs6D,mBxFjLA,cwFkLAt6D,EA4pBA,OAt0BIs4D,GAASE,EAAA34D,GAmLb24D,EAAA1qE,UAAAysE,YAAA,SAAAhsD,EAAAhV,EAAAtE,EAAAuZ,GACA,GAAAxf,KAAAiqE,OAAA,CAGA,IAAAuB,EAA+B9nD,GAAWnE,EAAAhV,EAAAtE,EAAA,EAAAjG,KAAAm7B,WAAAn7B,KAAAqrE,mBAC1C17D,EAAA3P,KAAA0pE,SACA+B,EAAAzrE,KAAAsrE,mBACAnC,EAAAx5D,EAAAy5D,YACA,GAAAppE,KAAAqqE,gBACA16D,EAAAy5D,YAAAD,EAAAnpE,KAAAqqE,eAEA,IAAAvpD,EAAA9gB,KAAAyqE,eACAzqE,KAAAwqE,uBACA1pD,GAAA9gB,KAAA2pE,eAEA,QAAAzsE,EAAA,EAAA0U,EAAA45D,EAAAzrE,OAAqD7C,EAAA0U,EAAQ1U,GAAA,GAC7D,IAAA4C,EAAA0rE,EAAAtuE,GAAA8C,KAAAkqE,cACA1rD,EAAAgtD,EAAAtuE,EAAA,GAAA8C,KAAAmqE,cACA,OAAArpD,GAAA,GAAA9gB,KAAA0qE,YAAA,CACA,IAAA1qB,EAAAlgD,EAAAE,KAAAkqE,cACAjqB,EAAAzhC,EAAAxe,KAAAmqE,cACgB97C,GAAgBo9C,EAAAzrB,EAAAC,EAAAjgD,KAAA0qE,YAAA1qE,KAAA0qE,YAAA5pD,GAAAk/B,GAAAC,GAChCtwC,EAAA05D,aAAAnnE,MAAAyN,EAAA87D,GAEA97D,EAAAo5D,UAAA/oE,KAAAiqE,OAAAjqE,KAAAsqE,cAAAtqE,KAAAuqE,cAAAvqE,KAAA2qE,YAAA3qE,KAAAoqE,aAAAtqE,EAAA0e,EAAAxe,KAAA2qE,YAAA3qE,KAAAoqE,cAEA,IAAAtpD,GAAA,GAAA9gB,KAAA0qE,aACA/6D,EAAA05D,aAAA,aAEA,GAAArpE,KAAAqqE,gBACA16D,EAAAy5D,YAAAD,KAUAK,EAAA1qE,UAAA4sE,UAAA,SAAAnsD,EAAAhV,EAAAtE,EAAAuZ,GACA,GAAAxf,KAAAorE,YAAA,KAAAprE,KAAA4qE,MAAA,CAGA5qE,KAAAkrE,gBACAlrE,KAAA2rE,qBAAA3rE,KAAAkrE,gBAEAlrE,KAAAmrE,kBACAnrE,KAAA4rE,uBAAA5rE,KAAAmrE,kBAEAnrE,KAAA6rE,qBAAA7rE,KAAAorE,YACA,IAAAI,EAA+B9nD,GAAWnE,EAAAhV,EAAAtE,EAAAuZ,EAAAxf,KAAAm7B,WAAAn7B,KAAAqrE,mBAC1C17D,EAAA3P,KAAA0pE,SACA5oD,EAAA9gB,KAAAgrE,cAIA,IAHAhrE,KAAA+qE,sBACAjqD,GAAA9gB,KAAA2pE,eAEcp/D,EAAAtE,EAAcsE,GAAAiV,EAAA,CAC5B,IAAA1f,EAAA0rE,EAAAjhE,GAAAvK,KAAA6qE,aACArsD,EAAAgtD,EAAAjhE,EAAA,GAAAvK,KAAA8qE,aACA,OAAAhqD,GAAA,GAAA9gB,KAAAirE,WAAA,CACA,IAAAQ,EAAqCp9C,GAAgBruB,KAAAsrE,mBAAAxrE,EAAA0e,EAAAxe,KAAAirE,WAAAjrE,KAAAirE,WAAAnqD,GAAAhhB,GAAA0e,GACrD7O,EAAA05D,aAAAnnE,MAAAyN,EAAA87D,GAEAzrE,KAAAmrE,kBACAx7D,EAAAm8D,WAAA9rE,KAAA4qE,MAAA9qE,EAAA0e,GAEAxe,KAAAkrE,gBACAv7D,EAAAo8D,SAAA/rE,KAAA4qE,MAAA9qE,EAAA0e,GAGA,IAAAsC,GAAA,GAAA9gB,KAAAirE,YACAt7D,EAAA05D,aAAA,eAYAG,EAAA1qE,UAAAktE,cAAA,SAAAzsD,EAAAhV,EAAAtE,EAAAuZ,EAAAysD,GACA,IAAAt8D,EAAA3P,KAAA0pE,SACA8B,EAA+B9nD,GAAWnE,EAAAhV,EAAAtE,EAAAuZ,EAAAxf,KAAAm7B,WAAAn7B,KAAAqrE,mBAC1C17D,EAAAu8D,OAAAV,EAAA,GAAAA,EAAA,IACA,IAAAzrE,EAAAyrE,EAAAzrE,OACAksE,IACAlsE,GAAA,GAEA,QAAA7C,EAAA,EAAuBA,EAAA6C,EAAY7C,GAAA,EACnCyS,EAAAw8D,OAAAX,EAAAtuE,GAAAsuE,EAAAtuE,EAAA,IAKA,OAHA+uE,GACAt8D,EAAAy8D,YAEAnmE,GAUAujE,EAAA1qE,UAAAutE,WAAA,SAAA9sD,EAAAhV,EAAA+nB,EAAA9S,GACA,QAAAtiB,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAyC7C,EAAA0U,IAAQ1U,EACjDqN,EAAAvK,KAAAgsE,cAAAzsD,EAAAhV,EAAA+nB,EAAAp1B,GAAAsiB,GAAA,GAEA,OAAAjV,GAUAi/D,EAAA1qE,UAAAwkE,WAAA,SAAAtoD,GACA,GAAakH,GAAUliB,KAAAinB,QAAAjM,EAAAgN,aAAvB,CAGA,GAAAhoB,KAAA+pE,YAAA/pE,KAAAgqE,aAAA,CACAhqE,KAAA+pE,YACA/pE,KAAA2rE,qBAAA3rE,KAAA+pE,YAEA/pE,KAAAgqE,cACAhqE,KAAA4rE,uBAAA5rE,KAAAgqE,cAEA,IAAAwB,EtF5DO,SAAAc,EAAA3oD,EAAAC,GACP,IAAArE,EAAA+sD,EAAAh7C,qBACA,GAAA/R,EAGA,CACA,IAAAC,EAAA8sD,EAAA36C,YACA,OAAejO,GAAWnE,EAAA,EAAAA,EAAAxf,OAAAyf,EAAAmE,EAAAC,GAJ1B,YsFyDmC2oD,CAAevxD,EAAAhb,KAAAm7B,WAAAn7B,KAAAqrE,mBAClD5sD,EAAA+sD,EAAA,GAAAA,EAAA,GACA9sD,EAAA8sD,EAAA,GAAAA,EAAA,GACAnmD,EAAAhmB,KAAAK,KAAA+e,IAAAC,KACA/O,EAAA3P,KAAA0pE,SACA/5D,EAAA68D,YACA78D,EAAA88D,IAAAjB,EAAA,GAAAA,EAAA,GAAAnmD,EAAA,IAAAhmB,KAAAslB,IACA3kB,KAAA+pE,YACAp6D,EAAA+8D,OAEA1sE,KAAAgqE,cACAr6D,EAAAg9D,SAGA,KAAA3sE,KAAA4qE,OACA5qE,KAAA0rE,UAAA1wD,EAAAwF,YAAA,SAWAgpD,EAAA1qE,UAAA2c,SAAA,SAAAF,GACAvb,KAAAwkE,mBAAAjpD,EAAAqxD,UAAArxD,EAAAsxD,aACA7sE,KAAA2kE,cAAAppD,EAAAuxD,YACA9sE,KAAA8kE,aAAAvpD,EAAAwxD,YAUAvD,EAAA1qE,UAAAukE,aAAA,SAAAroD,GAEA,OADAA,EAAAwV,WAEA,KAAiBxN,GAAYC,MAC7BjjB,KAAAmkE,UAAgF,GAChF,MACA,KAAiBnhD,GAAYE,YAC7BljB,KAAA2jE,eAA0F,GAC1F,MACA,KAAiB3gD,GAAYI,QAC7BpjB,KAAAqkE,YAAoF,GACpF,MACA,KAAiBrhD,GAAYK,YAC7BrjB,KAAA+jE,eAA0F,GAC1F,MACA,KAAiB/gD,GAAYM,kBAC7BtjB,KAAA6jE,oBAAoG,GACpG,MACA,KAAiB7gD,GAAYO,cAC7BvjB,KAAAikE,iBAA8F,GAC9F,MACA,KAAiBjhD,GAAYQ,oBAC7BxjB,KAAAyjE,uBAA0G,GAC1G,MACA,KAAiBzgD,GAAYS,OAC7BzjB,KAAAsjE,WAAkF,KAgBlFkG,EAAA1qE,UAAA0kE,YAAA,SAAAhY,EAAAjwC,GACA,IAAAP,EAAAO,EAAAyxD,qBAAAzxD,CAAAiwC,GACAxwC,GAA0BkH,GAAUliB,KAAAinB,QAAAjM,EAAAgN,eAGpChoB,KAAAyb,SAAAF,GACAvb,KAAAqjE,aAAAroD,KASAwuD,EAAA1qE,UAAA2kE,uBAAA,SAAAzoD,GAEA,IADA,IAAAiyD,EAAAjyD,EAAAkyD,qBACAhwE,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvD8C,KAAAqjE,aAAA4J,EAAA/vE,KAUAssE,EAAA1qE,UAAAqlE,UAAA,SAAAnpD,GACA,IAAAuE,EAAAvE,EAAAsW,qBACA9R,EAAAxE,EAAA2W,YACA3xB,KAAAiqE,QACAjqE,KAAAurE,YAAAhsD,EAAA,EAAAA,EAAAxf,OAAAyf,GAEA,KAAAxf,KAAA4qE,OACA5qE,KAAA0rE,UAAAnsD,EAAA,EAAAA,EAAAxf,OAAAyf,IAUAgqD,EAAA1qE,UAAAilE,eAAA,SAAA/oD,GACA,IAAAuE,EAAAvE,EAAAsW,qBACA9R,EAAAxE,EAAA2W,YACA3xB,KAAAiqE,QACAjqE,KAAAurE,YAAAhsD,EAAA,EAAAA,EAAAxf,OAAAyf,GAEA,KAAAxf,KAAA4qE,OACA5qE,KAAA0rE,UAAAnsD,EAAA,EAAAA,EAAAxf,OAAAyf,IAUAgqD,EAAA1qE,UAAA6kE,eAAA,SAAA3oD,GACA,GAAakH,GAAUliB,KAAAinB,QAAAjM,EAAAgN,aAAvB,CAGA,GAAAhoB,KAAAgqE,aAAA,CACAhqE,KAAA4rE,uBAAA5rE,KAAAgqE,cACA,IAAAr6D,EAAA3P,KAAA0pE,SACAnqD,EAAAvE,EAAAsW,qBACA3hB,EAAA68D,YACAxsE,KAAAgsE,cAAAzsD,EAAA,EAAAA,EAAAxf,OAAAib,EAAA2W,aAAA,GACAhiB,EAAAg9D,SAEA,QAAA3sE,KAAA4qE,MAAA,CACA,IAAAuC,EAAAnyD,EAAAoyD,kBACAptE,KAAA0rE,UAAAyB,EAAA,UAUA3D,EAAA1qE,UAAA+kE,oBAAA,SAAA7oD,GACA,IAAAqyD,EAAAryD,EAAAgN,YACA,GAAa9F,GAAUliB,KAAAinB,QAAAomD,GAAvB,CAGA,GAAArtE,KAAAgqE,aAAA,CACAhqE,KAAA4rE,uBAAA5rE,KAAAgqE,cACA,IAAAr6D,EAAA3P,KAAA0pE,SACAnqD,EAAAvE,EAAAsW,qBACA/mB,EAAA,EACA+nB,EAAgDtX,EAAA0d,UAChDlZ,EAAAxE,EAAA2W,YACAhiB,EAAA68D,YACA,QAAAtvE,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAA6C7C,EAAA0U,IAAQ1U,EACrDqN,EAAAvK,KAAAgsE,cAAAzsD,EAAAhV,EAAA+nB,EAAAp1B,GAAAsiB,GAAA,GAEA7P,EAAAg9D,SAEA,QAAA3sE,KAAA4qE,MAAA,CACA,IAAA0C,EAAAtyD,EAAAuyD,mBACAvtE,KAAA0rE,UAAA4B,EAAA,EAAAA,EAAAvtE,OAAA,MAUAypE,EAAA1qE,UAAAulE,YAAA,SAAArpD,GACA,GAAakH,GAAUliB,KAAAinB,QAAAjM,EAAAgN,aAAvB,CAGA,GAAAhoB,KAAAgqE,cAAAhqE,KAAA+pE,WAAA,CACA/pE,KAAA+pE,YACA/pE,KAAA2rE,qBAAA3rE,KAAA+pE,YAEA/pE,KAAAgqE,cACAhqE,KAAA4rE,uBAAA5rE,KAAAgqE,cAEA,IAAAr6D,EAAA3P,KAAA0pE,SACA/5D,EAAA68D,YACAxsE,KAAAqsE,WAAArxD,EAAAyd,6BAAA,EAA+Fzd,EAAA0d,UAAA1d,EAAA2W,aAC/F3xB,KAAA+pE,YACAp6D,EAAA+8D,OAEA1sE,KAAAgqE,cACAr6D,EAAAg9D,SAGA,QAAA3sE,KAAA4qE,MAAA,CACA,IAAA4C,EAAAxyD,EAAA2d,uBACA34B,KAAA0rE,UAAA8B,EAAA,UASAhE,EAAA1qE,UAAAmlE,iBAAA,SAAAjpD,GACA,GAAakH,GAAUliB,KAAAinB,QAAAjM,EAAAgN,aAAvB,CAGA,GAAAhoB,KAAAgqE,cAAAhqE,KAAA+pE,WAAA,CACA/pE,KAAA+pE,YACA/pE,KAAA2rE,qBAAA3rE,KAAA+pE,YAEA/pE,KAAAgqE,cACAhqE,KAAA4rE,uBAAA5rE,KAAAgqE,cAEA,IAAAr6D,EAAA3P,KAAA0pE,SACAnqD,EAAAvE,EAAAyd,6BACAluB,EAAA,EACAupB,EAAA9Y,EAAAyyD,WACAjuD,EAAAxE,EAAA2W,YACAhiB,EAAA68D,YACA,QAAAtvE,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAA8C7C,EAAA0U,IAAQ1U,EAAA,CACtD,IAAAo1B,EAAAwB,EAAA52B,GACAqN,EAAAvK,KAAAqsE,WAAA9sD,EAAAhV,EAAA+nB,EAAA9S,GAEAxf,KAAA+pE,YACAp6D,EAAA+8D,OAEA1sE,KAAAgqE,cACAr6D,EAAAg9D,SAGA,QAAA3sE,KAAA4qE,MAAA,CACA,IAAA8C,EAAA1yD,EAAA2yD,wBACA3tE,KAAA0rE,UAAAgC,EAAA,EAAAA,EAAA3tE,OAAA,MAOAypE,EAAA1qE,UAAA6sE,qBAAA,SAAAiC,GACA,IAAAj+D,EAAA3P,KAAA0pE,SACAmE,EAAA7tE,KAAA4pE,kBACAiE,EAOAA,EAAApJ,WAAAmJ,EAAAnJ,YACAoJ,EAAApJ,UAAA90D,EAAA80D,UAAAmJ,EAAAnJ,YAPA90D,EAAA80D,UAAAmJ,EAAAnJ,UACAzkE,KAAA4pE,kBAAA,CACAnF,UAAAmJ,EAAAnJ,aAaA+E,EAAA1qE,UAAA8sE,uBAAA,SAAAkC,GACA,IAAAn+D,EAAA3P,KAAA0pE,SACAqE,EAAA/tE,KAAA6pE,oBACAkE,GAqBAA,EAAAC,SAAAF,EAAAE,UACAD,EAAAC,QAAAr+D,EAAAq+D,QAAwFF,EAAA,SAExFn+D,EAAAs+D,cACqBrxD,GAAMmxD,EAAAG,SAAAJ,EAAAI,WAC3Bv+D,EAAAs+D,YAAAF,EAAAG,SAAAJ,EAAAI,UAEAH,EAAAI,gBAAAL,EAAAK,iBACAJ,EAAAI,eAAAx+D,EAAAw+D,eACAL,EAAAK,iBAGAJ,EAAAK,UAAAN,EAAAM,WACAL,EAAAK,SAAAz+D,EAAAy+D,SAA2FN,EAAA,UAE3FC,EAAAM,WAAAP,EAAAO,YACAN,EAAAM,UAAA1+D,EAAA0+D,UAAAP,EAAAO,WAEAN,EAAAO,YAAAR,EAAAQ,aACAP,EAAAO,WAAA3+D,EAAA2+D,WACAR,EAAAQ,YAEAP,EAAArJ,aAAAoJ,EAAApJ,cACAqJ,EAAArJ,YAAA/0D,EAAA+0D,YACAoJ,EAAApJ,eA5CA/0D,EAAAq+D,QAAuDF,EAAA,QACvDn+D,EAAAs+D,cACAt+D,EAAAs+D,YAAAH,EAAAI,UACAv+D,EAAAw+D,eAAAL,EAAAK,gBAEAx+D,EAAAy+D,SAAyDN,EAAA,SACzDn+D,EAAA0+D,UAAAP,EAAAO,UACA1+D,EAAA2+D,WAAAR,EAAAQ,WACA3+D,EAAA+0D,YAAAoJ,EAAApJ,YACA1kE,KAAA6pE,oBAAA,CACAmE,QAAAF,EAAAE,QACAE,SAAAJ,EAAAI,SACAC,eAAAL,EAAAK,eACAC,SAAAN,EAAAM,SACAC,UAAAP,EAAAO,UACAC,WAAAR,EAAAQ,WACA5J,YAAAoJ,EAAApJ,eAoCA8E,EAAA1qE,UAAA+sE,qBAAA,SAAA0C,GACA,IAAA5+D,EAAA3P,KAAA0pE,SACA8E,EAAAxuE,KAAA8pE,kBACA2E,EAAAF,EAAAE,UACAF,EAAAE,UDxkBO,SCykBPD,GAWAA,EAAA3d,MAAA0d,EAAA1d,OACA2d,EAAA3d,KAAAlhD,EAAAkhD,KAAA0d,EAAA1d,MAEA2d,EAAAC,eACAD,EAAAC,UAAA9+D,EAAA8+D,UAA4F,GAE5FD,EAAAE,cAAAH,EAAAG,eACAF,EAAAE,aAAA/+D,EAAA++D,aACkDH,EAAA,gBAlBlD5+D,EAAAkhD,KAAA0d,EAAA1d,KACAlhD,EAAA8+D,UAA2D,EAC3D9+D,EAAA++D,aAAiEH,EAAA,aACjEvuE,KAAA8pE,kBAAA,CACAjZ,KAAA0d,EAAA1d,KACA4d,YACAC,aAAAH,EAAAG,gBAwBAlF,EAAA1qE,UAAA0lE,mBAAA,SAAAC,EAAAC,GACA,GAAAD,EAGA,CACA,IAAAkK,EAAAlK,EAAAmK,WACA5uE,KAAA+pE,WAAA,CACAtF,UAA2BzB,GAAW2L,GDlpB/B,cC6oBP3uE,KAAA+pE,WAAA,KASA,GAAArF,EAGA,CACA,IAAAmK,EAAAnK,EAAAkK,WACAE,EAAApK,EAAAqK,aACAC,EAAAtK,EAAAuK,cACAC,EAAAxK,EAAAyK,oBACAC,EAAA1K,EAAA2K,cACAC,EAAA5K,EAAApkD,WACAivD,EAAA7K,EAAA8K,gBACAxvE,KAAAgqE,aAAA,CACAgE,aAAAp7D,IAAAk8D,EACAA,ED9pBO,QC+pBPZ,SAAAc,GAC0CrI,GAC1CwH,eAAAe,GDvpBO,ECypBPd,cAAAx7D,IAAAw8D,EACAA,EDrpBO,QCspBPf,UAAAruE,KAAAwnD,kBAAA50C,IAAA08D,EACAA,EDznBO,GC0nBPhB,gBAAA17D,IAAA28D,EACAA,EDppBO,GCqpBP7K,YAA6B1B,GAAW6L,GDhpBjC,cCynBP7uE,KAAAgqE,aAAA,MAmCAR,EAAA1qE,UAAA6lE,cAAA,SAAAC,GACA,GAAAA,EAGA,CACA,IAAA6K,EAAA7K,EAAA8K,YAEAC,EAAA/K,EAAAkI,SAAA,GACA8C,EAAAhL,EAAAiL,YACAC,EAAAlL,EAAA/X,UACA7sD,KAAAkqE,cAAAuF,EAAA,GACAzvE,KAAAmqE,cAAAsF,EAAA,GACAzvE,KAAAoqE,aAAA0F,EAAA,GACA9vE,KAAAiqE,OAAA0F,EACA3vE,KAAAqqE,cAAAzF,EAAAzgB,aACAnkD,KAAAsqE,cAAAsF,EAAA,GACA5vE,KAAAuqE,cAAAqF,EAAA,GACA5vE,KAAAwqE,qBAAA5F,EAAAmL,oBACA/vE,KAAAyqE,eAAA7F,EAAArpB,cACAv7C,KAAA0qE,YAAA9F,EAAAoL,WAAAhwE,KAAAwnD,YACAxnD,KAAA2qE,YAAAmF,EAAA,QAlBA9vE,KAAAiqE,OAAA,MA4BAT,EAAA1qE,UAAAgmE,aAAA,SAAAC,GACA,GAAAA,EAGA,CACA,IAAAkL,EAAAlL,EAAA6H,UACA,GAAAqD,EAGA,CACA,IAAAC,EAAAD,EAAArB,WACA5uE,KAAAkrE,eAAA,CACAzG,UAA+BzB,GAAWkN,GDpuBnC,cC+tBPlwE,KAAAkrE,eAAA,KASA,IAAAiF,EAAApL,EAAA8H,YACA,GAAAsD,EAGA,CACA,IAAAC,EAAAD,EAAAvB,WACAyB,EAAAF,EAAApB,aACAuB,EAAAH,EAAAlB,cACAsB,EAAAJ,EAAAhB,oBACAqB,EAAAL,EAAAd,cACAoB,EAAAN,EAAA7vD,WACAowD,EAAAP,EAAAX,gBACAxvE,KAAAmrE,iBAAA,CACA6C,aAAAp7D,IAAAy9D,EACAA,EDjvBO,QCkvBPnC,SAAAoC,GACkD3J,GAClDwH,eAAAoC,GD1uBO,EC4uBPnC,cAAAx7D,IAAA49D,EACAA,EDxuBO,QCyuBPnC,eAAAz7D,IAAA69D,EACAA,ED5sBO,EC6sBPnC,gBAAA17D,IAAA89D,EACAA,EDvuBO,GCwuBPhM,YAAiC1B,GAAWoN,GDnuBrC,cC4sBPpwE,KAAAmrE,iBAAA,KA2BA,IAAAwF,EAAA5L,EAAA6L,UACAC,EAAA9L,EAAA+L,aACAC,EAAAhM,EAAAiM,aACAC,EAAAlM,EAAAgL,oBACAmB,EAAAnM,EAAAxpB,cACA41B,EAAApM,EAAAiL,WACAoB,EAAArM,EAAAgI,UACAsE,EAAAtM,EAAAuM,eACAC,EAAAxM,EAAAyM,kBACAxxE,KAAAorE,WAAA,CACAva,UAAAj+C,IAAA+9D,EACAA,EDrxBO,kBCsxBPlC,eAAA77D,IAAAy+D,EACAA,ED/uBO,SCgvBP3C,kBAAA97D,IAAA2+D,EACAA,ED5uBO,UC8uBPvxE,KAAA4qE,WAAAh4D,IAAAw+D,IAAA,GACApxE,KAAA6qE,kBACAj4D,IAAAi+D,EAAA7wE,KAAAwnD,YAAAqpB,EAAA,EACA7wE,KAAA8qE,kBACAl4D,IAAAm+D,EAAA/wE,KAAAwnD,YAAAupB,EAAA,EACA/wE,KAAA+qE,yBAAAn4D,IAAAq+D,KACAjxE,KAAAgrE,mBAAAp4D,IAAAs+D,IAAA,EACAlxE,KAAAirE,WAAAjrE,KAAAwnD,kBAAA50C,IAAAu+D,EACAA,EAAA,QApEAnxE,KAAA4qE,MAAA,IAuEApB,EAv0B2B,CAw0BzBvG,ICzwBK,SAAAwO,GAAA7yC,EAAA8yC,GACPA,GACAA,EAAAtxE,QAGA,IADA,IAAAuxE,EAAA/yC,EAAAywB,eACApW,EAAA04B,EAAA5xE,OAAA,EAAkCk5C,GAAA,IAAQA,EAE1C,IADA,IAAA24B,EAAAD,EAAA14B,GACA/7C,EAAA,EAAA0U,EAAAggE,EAAA7xE,OAAgD7C,EAAA0U,EAAQ1U,GAAA,EACxDw0E,EAAAE,EAAA10E,GAAA20E,gBAAAD,EAAA10E,EAAA,GAAA00E,EAAA10E,EAAA,GAAAw0E,GAIA,OADAC,EAAA5xE,OAAA,EACA2xE,EChHA,IAAII,GAAyB,WAC7B,IAAAzhE,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgM7B,SAAAqhE,GAAA9kE,EAAA2xB,GACImkC,GAAcL,SAEH,IAAAsP,GAxKA,SAAAnhE,GAKf,SAAAohE,EAAAhlE,GACA,IAAA+D,EAAAH,EAAAxT,KAAA2C,YAUA,OALAgR,EAAA+7B,KAAA9/B,EAIA+D,EAAAkhE,eAAA,KACAlhE,EA+IA,OA9JI8gE,GAASG,EAAAphE,GAsBbohE,EAAAnzE,UAAAovD,oBAAA,SAAA9qD,EAAAw7B,GACQ3uB,KAMRgiE,EAAAnzE,UAAAqzE,oBAAA,SAAAvzC,GACA,IAAAswB,EAAAtwB,EAAAswB,UACAvC,EAAA/tB,EAAA+tB,2BACAP,EAAAxtB,EAAAwtB,2BACQ/9B,GAAgBs+B,EAAA/tB,EAAA7d,KAAA,KAAA6d,EAAA7d,KAAA,OAAAmuC,EAAAruC,YAAA,EAAAquC,EAAAruC,YAAAquC,EAAApuC,UAAAouC,EAAAtuC,OAAA,IAAAsuC,EAAAtuC,OAAA,IAChBgO,GAAWw9B,EAAAO,IAiBnBslB,EAAAnzE,UAAAusD,2BAAA,SAAAzsC,EAAAggB,EAAAusB,EAAAt8C,EAAAujE,EAAAhnB,EAAAinB,GACA,IAAArsE,EACAkpD,EAAAtwB,EAAAswB,UACAojB,EAAApjB,EAAAruC,WAOA,SAAAwqC,EAAAnH,EAAAsH,EAAAvH,GACA,KAAkB9zC,EAAMq7C,KAAA5sB,EAAA0wB,qBAAApL,EACxB,OAAAr1C,EAAAxR,KAAA+0E,EAAA5mB,EAAAtH,EAAAD,EAAA,MAGA,IAAA74B,EAAA8jC,EAAA9jC,WACAmnD,EAAA3zD,EACA,GAAAwM,EAAAtD,WAAA,CACA,IAAA0qD,EAAApnD,EAAApD,YACAyqD,EAA6BnyD,GAAQkyD,GACrC1yE,EAAA8e,EAAA,GACA,GAAA9e,EAAA0yE,EAAA,IAAA1yE,EAAA0yE,EAAA,GAEAD,EAAA,CAAAzyE,EAAA2yE,EADApzE,KAAAc,MAAAqyE,EAAA,GAAA1yE,GAAA2yE,GACA7zD,EAAA,IAGA,IAEA8zD,EAMAx1E,EARAyxD,EAAA/vB,EAAA2tB,iBACAomB,EAAAhkB,EAAA5uD,OAQA,IANAC,KAAAkyE,iBACAQ,EAAA1yE,KAAAkyE,eAAAnxE,MAAAkM,IAAA,SAAAy4D,GACA,OAAAA,EAAAvnE,SAIAjB,EAAAy1E,EAAA,EAA+Bz1E,GAAA,IAAQA,EAAA,CACvC,IAAAopD,EAAAqI,EAAAzxD,GACA+mD,EAAuEqC,EAAA,MACvE,GAAArC,EAAA2K,eAAuCqC,GAAmB3K,EAAAgsB,IAAAlnB,EAAA/tD,KAAAg1E,EAAApuB,GAAA,CAC1D,IAAAyN,EAAAzN,EAAA2I,cACAt/C,EAAA22C,EAAAuI,YACA,GAAAkF,GAAApkD,EAAA,CACA,IAAAslE,EAAAvnB,EAAA3sD,KAAA,KAAA4nD,EAAApC,SACAl+C,EAAA0rD,EAAArG,2BAAA/9C,EAAAulE,WAAAN,EAAA3zD,EAAAggB,EAAAusB,EAAAynB,EAAAF,GAEA,GAAA1sE,EACA,OAAAA,KAoBAisE,EAAAnzE,UAAA2sD,oBAAA,SAAA/+C,EAAAkyB,EAAAusB,EAAAt8C,EAAAu8C,GACA,OAAen7C,KAcfgiE,EAAAnzE,UAAA6sD,uBAAA,SAAA/sC,EAAAggB,EAAAusB,EAAAC,EAAAgnB,GAEA,YAAAx/D,IADA5S,KAAAqrD,2BAAAzsC,EAAAggB,EAAAusB,EAA+Fl3C,EAAIjU,KAAAorD,EAAAgnB,IAMnGH,EAAAnzE,UAAAuxD,OAAA,WACA,OAAArwD,KAAA+sC,MAMAklC,EAAAnzE,UAAA0wD,YAAA,SAAA5wB,GACA5+B,KAAAkyE,eAA8BT,GAAoB7yC,EAAA5+B,KAAAkyE,iBAMlDD,EAAAnzE,UAAAg0E,wBAAA,SAAAl0C,GACYmkC,GAAcN,kBAC1B7jC,EAAAuvB,oBAAArtD,KAAAixE,KAGAE,EA/Je,CAgKbr+D,GC3LEm/D,GAAyB,WAC7B,IAAA1iE,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4IdsiE,GA/GS,SAAAniE,GAKxB,SAAAoiE,EAAAhmE,GACA,IAAA+D,EAAAH,EAAAxT,KAAA2C,KAAAiN,IAAAjN,KACAiN,EAAA49C,iBAA6Bgc,IAK7B71D,EAAAo6B,SAAAx7B,SAAAC,cAAA,OACA,IAAA0L,EAAAvK,EAAAo6B,SAAA7vB,MACAA,EAAA8gB,SAAA,WACA9gB,EAAA5P,MAAA,OACA4P,EAAA3a,OAAA,OACA2a,EAAAmoC,OAAA,IACA1yC,EAAAo6B,SAAAwY,UAAmC4M,GAAkB,aACrD,IAAAlkB,EAAAr/B,EAAAogC,cAYA,OAXAf,EAAA4mC,aAAAliE,EAAAo6B,SAAAkB,EAAA6mC,YAAA,MAKAniE,EAAAoiE,UAAA,GAKApiE,EAAAmiD,kBAAA,EACAniD,EA8EA,OA5GI+hE,GAASE,EAAApiE,GAoCboiE,EAAAn0E,UAAAovD,oBAAA,SAAA9qD,EAAAw7B,GACA,IAAA3xB,EAAAjN,KAAAqwD,SACA,GAAApjD,EAAAiI,YAAA9R,GAAA,CACA,IAAA21D,EAAA,IAA8B8H,GAAWz9D,OAAAwP,EAAAgsB,GACzC3xB,EAAA8H,cAAAgkD,KAMAka,EAAAn0E,UAAA0wD,YAAA,SAAA5wB,GACA,GAAAA,EAAA,CAOA5+B,KAAAmyE,oBAAAvzC,GACA5+B,KAAAkuD,oBAAiCvf,GAAe/P,GAChD,IAAA2tB,EAAA3tB,EAAA2tB,iBACA+lB,EAAA1zC,EAAAswB,UAAAruC,WACA7gB,KAAAozE,UAAArzE,OAAA,EACA,QAAA7C,EAAA,EAAA0U,EAAA26C,EAAAxsD,OAAqD7C,EAAA0U,IAAQ1U,EAAA,CAC7D,IAAAopD,EAAAiG,EAAArvD,GACA,GAAiB+zD,GAAmB3K,EAAAgsB,KACpChsB,EAAAlC,aAA2CY,GAAWE,OAAAoB,EAAAlC,aAAoCY,GAAWC,WADrG,CAIA,IACArsC,EADA0tC,EAAArC,MACAmK,OAAAxvB,GACA,GAAAhmB,EAAA,CACA,IAAA8qC,EAAA4C,EAAA5C,OACAA,IAAA9qC,EAAA2C,MAAAmoC,SACA9qC,EAAA2C,MAAAmoC,WAAA14C,IAAAu/B,OAAA8oC,iBAAA3vB,GAEA1jD,KAAAozE,UAAAtyE,KAAA8X,KAGA/H,EAAA/R,UAAA0wD,YAAAnyD,KAAA2C,KAAA4+B,G1C3BO,SAAA8jB,EAAApiD,GAEP,IADA,IAAAgzE,EAAA5wB,EAAA6wB,WACAr2E,EAAA,KAAyBA,EAAA,CACzB,IAAAs2E,EAAAF,EAAAp2E,GACAu2E,EAAAnzE,EAAApD,GAEA,IAAAs2E,IAAAC,EACA,MAGAD,IAAAC,IAIAD,EAKAC,EAMA/wB,EAAAwwB,aAAAO,EAAAD,IALA9wB,EAAAC,YAAA6wB,KACAt2E,GANAwlD,EAAA+F,YAAAgrB,K0CaQC,CAAe1zE,KAAAorC,SAAAprC,KAAAozE,WACvBpzE,KAAAkuD,oBAAiCvf,GAAe/P,GAChD5+B,KAAAmzD,mBACAnzD,KAAAorC,SAAA7vB,MAAAq4C,QAAA,GACA5zD,KAAAmzD,kBAAA,GAEAnzD,KAAA8yE,wBAAAl0C,QAlCA5+B,KAAAmzD,mBACAnzD,KAAAorC,SAAA7vB,MAAAq4C,QAAA,OACA5zD,KAAAmzD,kBAAA,IAqCA8f,EAAAn0E,UAAA2sD,oBAAA,SAAA/+C,EAAAkyB,EAAAusB,EAAAt8C,EAAAu8C,GAKA,IAJA,IACAknB,EADA1zC,EAAAswB,UACAruC,WACA8tC,EAAA/vB,EAAA2tB,iBAEArvD,EADAyxD,EAAA5uD,OACA,EAAmC7C,GAAA,IAAQA,EAAA,CAC3C,IAAAopD,EAAAqI,EAAAzxD,GACA+mD,EAAAqC,EAAArC,MACA,GAAAA,EAAA2K,eAAuCqC,GAAmB3K,EAAAgsB,IAAAlnB,EAAAnH,GAAA,CAC1D,IACAhjD,EADAgjD,EAAA2I,cACA+mB,eAAAjnE,EAAAkyB,EAAAusB,GACA,GAAAlqD,EAAA,CACA,IAAA+E,EAAA6I,EAAAo1C,EAAAhjD,GACA,GAAA+E,EACA,OAAAA,MAOAitE,EA7GwB,CA8GtBjB,IC3IE4B,GAAyB,WAC7B,IAAAvjE,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0FdmjE,GAtBR,SAAAhjE,GAKP,SAAAijE,EAAA76D,GAUA,OARAA,EAAkB1H,EAAM,GAAG0H,IAC3BguC,WACAhuC,EAAAguC,SAA+B4O,MAE/B58C,EAAAiuC,eACAjuC,EAAAiuC,aAAmC8Y,MAEnCnvD,EAAAxT,KAAA2C,KAAAiZ,IAAAjZ,KAMA,OAnBI4zE,GAASE,EAAAjjE,GAgBbijE,EAAAh1E,UAAAsqD,eAAA,WACA,WAAmB4pB,GAAoBhzE,OAEvC8zE,EApBO,CAqBLltB,IChFamtB,GAAA,CACf12D,YAAA,cACA22D,cAAA,gBACA12D,aAAA,eACA22D,YAAA,cACAC,cAAA,gBACAC,aAAA,eACA52D,SAAA,WACA62D,WAAA,aACA52D,UAAA,aClBI62D,GAAyB,WAC7B,IAAAhkE,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0EzB4jE,GAAQ,CACZC,QAAA,UACAC,IAAA,MACAC,OAAA,SACAj6C,SAAA,WACAk6C,YAAA,eA+beC,GAzaJ,SAAA9jE,GAKX,SAAA+jE,EAAA37D,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,YAiFA,OA5EAgR,EAAAiI,UAKAjI,EAAAiL,GAAAhD,EAAAgD,GAKAjL,EAAA6jE,iBAAAjiE,IAAAqG,EAAA47D,aACA57D,EAAA47D,YAKA7jE,EAAA2lD,eAAA/jD,IAAAqG,EAAA09C,WAAA19C,EAAA09C,UAKA3lD,EAAA4H,QAAAhJ,SAAAC,cAAA,OACAmB,EAAA4H,QAAAgrC,eAAAhxC,IAAAqG,EAAA2qC,UACA3qC,EAAA2qC,UAAA,wBAA0D2M,GAC1Dv/C,EAAA4H,QAAA2C,MAAA8gB,SAAA,WAKArrB,EAAA8jE,aAAAliE,IAAAqG,EAAA67D,SAAA77D,EAAA67D,QAKA9jE,EAAA+jE,iBAAA97D,EAAA87D,kBAAmF,GAKnF/jE,EAAAgkE,mBAAApiE,IAAAqG,EAAA+7D,cACA/7D,EAAA+7D,cAAA,GASAhkE,EAAAikE,SAAA,CACAC,QAAA,GACAC,MAAA,GACAC,OAAA,GACAC,KAAA,GACA5xB,SAAA,GAMAzyC,EAAAskE,yBAAA,KACQniE,EAAMnC,EAAQkH,EAAmBo8D,GAAQC,SAAAvjE,EAAAukE,qBAAAvkE,GACzCmC,EAAMnC,EAAQkH,EAAmBo8D,GAAQE,KAAAxjE,EAAAwkE,iBAAAxkE,GACzCmC,EAAMnC,EAAQkH,EAAmBo8D,GAAQG,QAAAzjE,EAAAykE,oBAAAzkE,GACzCmC,EAAMnC,EAAQkH,EAAmBo8D,GAAQ95C,UAAAxpB,EAAA0kE,sBAAA1kE,GACzCmC,EAAMnC,EAAQkH,EAAmBo8D,GAAQI,aAAA1jE,EAAA2kE,yBAAA3kE,QACjD4B,IAAAqG,EAAAL,SACA5H,EAAA4kE,WAAA38D,EAAAL,SAEA5H,EAAA6kE,eAAAjjE,IAAAqG,EAAA1O,OAAA0O,EAAA1O,OAAA,OACAyG,EAAA8kE,oBAAAljE,IAAAqG,EAAA88D,YAC0C98D,EAAA,YAC9B86D,GAAkBx2D,eAC9B3K,IAAAqG,EAAAojB,UACArrB,EAAAglE,YAAA/8D,EAAAojB,UAEArrB,EAgVA,OAtaIqjE,GAASO,EAAA/jE,GA8Fb+jE,EAAA91E,UAAAm3E,WAAA,WACA,OAAgDj2E,KAAAjC,IAAcu2E,GAAQC,UAOtEK,EAAA91E,UAAA4c,MAAA,WACA,OAAA1b,KAAAic,IASA24D,EAAA91E,UAAAuxD,OAAA,WACA,OACiErwD,KAAAjC,IAAcu2E,GAAQE,MAQvFI,EAAA91E,UAAAo3E,UAAA,WACA,OAAwCl2E,KAAAjC,IAAcu2E,GAAQG,SAS9DG,EAAA91E,UAAAs+B,YAAA,WACA,OACkEp9B,KAAAjC,IAAcu2E,GAAQ95C,WASxFo6C,EAAA91E,UAAAq3E,eAAA,WACA,OACsCn2E,KAAAjC,IAAcu2E,GAAQI,cAK5DE,EAAA91E,UAAAy2E,qBAAA,WACQ3yB,GAAc5iD,KAAA4Y,SACtB,IAAAA,EAAA5Y,KAAAi2E,aACAr9D,GACA5Y,KAAA4Y,QAAA6vC,YAAA7vC,IAMAg8D,EAAA91E,UAAA02E,iBAAA,WACAx1E,KAAAs1E,2BACY7yB,GAAUziD,KAAA4Y,SACVrF,EAAavT,KAAAs1E,0BACzBt1E,KAAAs1E,yBAAA,MAEA,IAAAroE,EAAAjN,KAAAqwD,SACA,GAAApjD,EAAA,CACAjN,KAAAs1E,yBAA4CniE,EAAMlG,EAAMohC,GAAYruC,KAAAouD,OAAApuD,MACpEA,KAAAo2E,sBACA,IAAA9pC,EAAAtsC,KAAA22D,UACA1pD,EAAA+/C,+BAAA//C,EAAA8/C,sBACA/sD,KAAA60E,YACAvoC,EAAA4mC,aAAAlzE,KAAA4Y,QAAA0zB,EAAAinC,WAAA,UAGAjnC,EAAAmc,YAAAzoD,KAAA4Y,WAOAg8D,EAAA91E,UAAAsvD,OAAA,WACApuD,KAAAo2E,uBAKAxB,EAAA91E,UAAA22E,oBAAA,WACAz1E,KAAAo2E,uBAKAxB,EAAA91E,UAAA42E,sBAAA,WACA11E,KAAAo2E,sBACAp2E,KAAAjC,IAAqBu2E,GAAQ95C,WAAAx6B,KAAA80E,SAC7B90E,KAAAq2E,eAMAzB,EAAA91E,UAAA62E,yBAAA,WACA31E,KAAAo2E,uBAQAxB,EAAA91E,UAAA82E,WAAA,SAAAh9D,GACA5Y,KAAA2I,IAAiB2rE,GAAQC,QAAA37D,IASzBg8D,EAAA91E,UAAAmrD,OAAA,SAAAh9C,GACAjN,KAAA2I,IAAiB2rE,GAAQE,IAAAvnE,IAQzB2nE,EAAA91E,UAAA+2E,UAAA,SAAAtrE,GACAvK,KAAA2I,IAAiB2rE,GAAQG,OAAAlqE,IAUzBqqE,EAAA91E,UAAAk3E,YAAA,SAAA35C,GACAr8B,KAAA2I,IAAiB2rE,GAAQ95C,SAAA6B,IAOzBu4C,EAAA91E,UAAAu3E,YAAA,WACA,IAAAppE,EAAAjN,KAAAqwD,SACA,GAAApjD,KAAAk/C,mBAAA,CAGA,IAAAmqB,EAAAt2E,KAAAu2E,QAAAtpE,EAAAk/C,mBAAAl/C,EAAA4/C,WACAj0C,EAAA5Y,KAAAi2E,aACAO,EAAAx2E,KAAAu2E,QAAA39D,EAAA,CAAiD+oC,GAAU/oC,GAAWmpC,GAAWnpC,KACjF4vD,EAAAxoE,KAAAg1E,cACA,IAAal2D,GAAcw3D,EAAAE,GAAA,CAE3B,IAAAC,EAAAD,EAAA,GAAAF,EAAA,GACAI,EAAAJ,EAAA,GAAAE,EAAA,GACAG,EAAAH,EAAA,GAAAF,EAAA,GACAM,EAAAN,EAAA,GAAAE,EAAA,GACAzhC,EAAA,MAiBA,GAhBA0hC,EAAA,EAEA1hC,EAAA,GAAA0hC,EAAAjO,EAEAkO,EAAA,IAEA3hC,EAAA,GAAA11C,KAAA6L,IAAAwrE,GAAAlO,GAEAmO,EAAA,EAEA5hC,EAAA,GAAA4hC,EAAAnO,EAEAoO,EAAA,IAEA7hC,EAAA,GAAA11C,KAAA6L,IAAA0rE,GAAApO,GAEA,IAAAzzB,EAAA,QAAAA,EAAA,IACA,IAAAn0B,EAA6E3T,EAAA6/C,UAAAtsC,YAC7Eq2D,EAAA5pE,EAAAy/C,uBAAA9rC,GACAk2D,EAAA,CACAD,EAAA,GAAA9hC,EAAA,GACA8hC,EAAA,GAAA9hC,EAAA,IAEA9nC,EAAA6/C,UAAAtR,QAAA,CACA56B,OAAA3T,EAAAmyB,uBAAA03C,GACAx4C,SAAAt+B,KAAA+0E,iBAAAz2C,SACA0d,OAAAh8C,KAAA+0E,iBAAA/4B,aAYA44B,EAAA91E,UAAAy3E,QAAA,SAAA39D,EAAAmI,GACA,IAAAg2D,EAAAn+D,EAAAkzC,wBACA8c,EAAAmO,EAAA/qB,KAAAlvD,OAAAk6E,YACAnO,EAAAkO,EAAA9qB,IAAAnvD,OAAAm6E,YACA,OACArO,EACAC,EACAD,EAAA7nD,EAAA,GACA8nD,EAAA9nD,EAAA,KAUA6zD,EAAA91E,UAAAg3E,eAAA,SAAAC,GACA/1E,KAAA2I,IAAiB2rE,GAAQI,YAAAqB,IAOzBnB,EAAA91E,UAAA+lD,WAAA,SAAApB,GACAzjD,KAAAi1E,SAAAxxB,cACAzjD,KAAA4Y,QAAA2C,MAAAq4C,QAAAnQ,EAAA,UACAzjD,KAAAi1E,SAAAxxB,YAOAmxB,EAAA91E,UAAAs3E,oBAAA,WACA,IAAAnpE,EAAAjN,KAAAqwD,SACAh0B,EAAAr8B,KAAAo9B,cACA,GAAAnwB,KAAAwhD,cAAApyB,EAAA,CAIA,IAAA3vB,EAAAO,EAAAy/C,uBAAArwB,GACA66C,EAAAjqE,EAAA4/C,UACA7sD,KAAAm3E,uBAAAzqE,EAAAwqE,QALAl3E,KAAA6kD,YAAA,IAYA+vB,EAAA91E,UAAAq4E,uBAAA,SAAAzqE,EAAAwqE,GACA,IAAA37D,EAAAvb,KAAA4Y,QAAA2C,MACAhR,EAAAvK,KAAAk2E,YACAH,EAAA/1E,KAAAm2E,iBACAn2E,KAAA6kD,YAAA,GACA,IAAA+jB,EAAAr+D,EAAA,GACAs+D,EAAAt+D,EAAA,GACA,GAAAwrE,GAA2BhC,GAAkBz2D,cAC7Cy4D,GAA2BhC,GAAkBI,cAC7C4B,GAA2BhC,GAAkBv2D,UAAA,CAC7C,KAAAxd,KAAAi1E,SAAAE,QACAn1E,KAAAi1E,SAAAE,MAAA55D,EAAAywC,KAAA,IAEA,IAAAr0B,EAAAt4B,KAAAw1B,MAAAqiD,EAAA,GAAAxqE,EAAA,GAAAk8D,GAAA,KACA5oE,KAAAi1E,SAAAG,QAAAz9C,IACA33B,KAAAi1E,SAAAG,OAAA75D,EAAAoc,aAGA,CACA,KAAA33B,KAAAi1E,SAAAG,SACAp1E,KAAAi1E,SAAAG,OAAA75D,EAAAoc,MAAA,IAEAo+C,GAA+BhC,GAAkBC,eACjD+B,GAA+BhC,GAAkBG,eACjD6B,GAA+BhC,GAAkBK,aACjDxL,GAAA5oE,KAAA4Y,QAAAgpC,YAAA,GAEA,IAAAoK,EAAA3sD,KAAAw1B,MAAAnoB,EAAA,GAAAk8D,GAAA,KACA5oE,KAAAi1E,SAAAE,OAAAnpB,IACAhsD,KAAAi1E,SAAAE,MAAA55D,EAAAywC,QAGA,GAAA+pB,GAA2BhC,GAAkB12D,aAC7C04D,GAA2BhC,GAAkBC,eAC7C+B,GAA2BhC,GAAkBz2D,aAAA,CAC7C,KAAAtd,KAAAi1E,SAAAI,OACAr1E,KAAAi1E,SAAAI,KAAA95D,EAAA0wC,IAAA,IAEA,IAAAmrB,EAAA/3E,KAAAw1B,MAAAqiD,EAAA,GAAAxqE,EAAA,GAAAm8D,GAAA,KACA7oE,KAAAi1E,SAAAC,SAAAkC,IACAp3E,KAAAi1E,SAAAC,QAAA35D,EAAA67D,cAGA,CACA,KAAAp3E,KAAAi1E,SAAAC,UACAl1E,KAAAi1E,SAAAC,QAAA35D,EAAA67D,OAAA,IAEArB,GAA+BhC,GAAkBE,aACjD8B,GAA+BhC,GAAkBG,eACjD6B,GAA+BhC,GAAkBI,eACjDtL,GAAA7oE,KAAA4Y,QAAAopC,aAAA,GAEA,IAAAq1B,EAAAh4E,KAAAw1B,MAAAnoB,EAAA,GAAAm8D,GAAA,KACA7oE,KAAAi1E,SAAAI,MAAAgC,IACAr3E,KAAAi1E,SAAAI,KAAA95D,EAAA0wC,IAAAorB,KAQAzC,EAAA91E,UAAAw4E,WAAA,WACA,OAAAt3E,KAAAiZ,SAEA27D,EAvaW,CAwaTt8D,GCvgBai/D,GAAA,CACfC,aAAA,cACAC,KAAA,OACAC,KAAA,OACAC,IAAA,OCiCO,SAAAC,GAAAC,EAAAC,EAAAC,EAAAC,GACP,gBAOA95D,EAAA2C,EAAAuK,GACA,IAAA6sD,EAAA,IAAAC,eACAD,EAAAE,KAAA,yBAAAN,IAAA35D,EAAA2C,EAAAuK,GAAAysD,GAAA,GACAC,EAAAtnD,WAAgC+mD,GAAUC,eAC1CS,EAAAG,aAAA,eAMAH,EAAAI,OAAA,SAAA7oE,GAEA,IAAAyoE,EAAAK,QAAAL,EAAAK,QAAA,KAAAL,EAAAK,OAAA,KACA,IAAAl1E,EAAA00E,EAAAtnD,UAEAljB,OAAA,EACAlK,GAA4Bm0E,GAAUE,MAAAr0E,GAAiBm0E,GAAUG,KACjEpqE,EAAA2qE,EAAAM,aAEAn1E,GAAiCm0E,GAAUI,KAC3CrqE,EAAA2qE,EAAAO,eAEAlrE,GAAA,IAAAmrE,WAAAC,gBAAAT,EAAAM,aAAA,oBAGAn1E,GAAiCm0E,GAAUC,eAC3ClqE,EAAoD2qE,EAAA,UAEpD3qE,EACAyqE,EAAA16E,KAAA2C,KAAA83E,EAAAa,aAAArrE,EAAA,CACA4Q,SACA06D,kBAAAxtD,IACqB0sD,EAAAe,eAAAvrE,IAGrB0qE,EAAA36E,KAAA2C,WAIAg4E,EAAA36E,KAAA2C,OAEStB,KAAAsB,MAITi4E,EAAAa,QAAA,WACAd,EAAA36E,KAAA2C,OACStB,KAAAsB,MACTi4E,EAAAc,QAYO,SAASC,GAAGnB,EAAAC,GACnB,OAAAF,GAAAC,EAAAC,EAOA,SAAAvsB,EAAA0tB,GAEA,mBADwC,KACxCC,aADwC,KAEiBA,YAAA3tB,IAEzBp3C,GClHzB,SAASglE,GAAGj7D,EAAA2C,GACnB,SAAA7V,mBAUO,SAASouE,GAAIl7D,EAAA2C,GACpB,OAAA3C,GCfA,IAAAm7D,GAAA,WAOA,SAAAA,EAAA94E,EAAAE,EAAAD,EAAAE,GAIAV,KAAAO,OAIAP,KAAAS,OAIAT,KAAAQ,OAIAR,KAAAU,OA8EA,OAxEA24E,EAAAv6E,UAAA0tC,SAAA,SAAA8sC,GACA,OAAAt5E,KAAA6e,WAAAy6D,EAAA,GAAAA,EAAA,KAMAD,EAAAv6E,UAAAy6E,kBAAA,SAAAC,GACA,OAAAx5E,KAAAO,MAAAi5E,EAAAj5E,MAAAi5E,EAAA/4E,MAAAT,KAAAS,MACAT,KAAAQ,MAAAg5E,EAAAh5E,MAAAg5E,EAAA94E,MAAAV,KAAAU,MAOA24E,EAAAv6E,UAAA+f,WAAA,SAAA/e,EAAA0e,GACA,OAAAxe,KAAAO,MAAAT,MAAAE,KAAAS,MAAAT,KAAAQ,MAAAge,MAAAxe,KAAAU,MAMA24E,EAAAv6E,UAAA8d,OAAA,SAAA48D,GACA,OAAAx5E,KAAAO,MAAAi5E,EAAAj5E,MAAAP,KAAAQ,MAAAg5E,EAAAh5E,MACAR,KAAAS,MAAA+4E,EAAA/4E,MAAAT,KAAAU,MAAA84E,EAAA94E,MAKA24E,EAAAv6E,UAAA0a,OAAA,SAAAggE,GACAA,EAAAj5E,KAAAP,KAAAO,OACAP,KAAAO,KAAAi5E,EAAAj5E,MAEAi5E,EAAA/4E,KAAAT,KAAAS,OACAT,KAAAS,KAAA+4E,EAAA/4E,MAEA+4E,EAAAh5E,KAAAR,KAAAQ,OACAR,KAAAQ,KAAAg5E,EAAAh5E,MAEAg5E,EAAA94E,KAAAV,KAAAU,OACAV,KAAAU,KAAA84E,EAAA94E,OAMA24E,EAAAv6E,UAAAyhB,UAAA,WACA,OAAAvgB,KAAAU,KAAAV,KAAAQ,KAAA,GAKA64E,EAAAv6E,UAAA+tD,QAAA,WACA,OAAA7sD,KAAAsgB,WAAAtgB,KAAAugB,cAKA84D,EAAAv6E,UAAAwhB,SAAA,WACA,OAAAtgB,KAAAS,KAAAT,KAAAO,KAAA,GAMA84E,EAAAv6E,UAAA63B,WAAA,SAAA6iD,GACA,OAAAx5E,KAAAO,MAAAi5E,EAAA/4E,MACAT,KAAAS,MAAA+4E,EAAAj5E,MACAP,KAAAQ,MAAAg5E,EAAA94E,MACAV,KAAAU,MAAA84E,EAAAh5E,MAEA64E,EArGA,GA+GO,SAASI,GAAcl5E,EAAAE,EAAAD,EAAAE,EAAA84E,GAC9B,YAAA5mE,IAAA4mE,GACAA,EAAAj5E,OACAi5E,EAAA/4E,OACA+4E,EAAAh5E,OACAg5E,EAAA94E,OACA84E,GAGA,IAAAH,GAAA94E,EAAAE,EAAAD,EAAAE,GAGe,IAAAg5E,GAAA,GClHR,SAASC,GAAc1gC,EAAAn5C,EAAA0e,EAAAo7D,GAC9B,YAAAhnE,IAAAgnE,GACAA,EAAA,GAAA3gC,EACA2gC,EAAA,GAAA95E,EACA85E,EAAA,GAAAp7D,EACAo7D,GAGA,CAAA3gC,EAAAn5C,EAAA0e,GASO,SAAAq7D,GAAA5gC,EAAAn5C,EAAA0e,GACP,OAAAy6B,EAAA,IAAAn5C,EAAA,IAAA0e,EAOO,SAASs7D,GAAMR,GACtB,OAAAO,GAAAP,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAcO,SAAAS,GAAAT,GACP,OAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GC1CA,IAAAU,GAAA,QA8deC,GA/bH,WAIZ,SAAAC,EAAAjhE,GpHuKO,IAAA1U,EAAA41E,EACPC,EoHzJAzhC,EACA,GAXA34C,KAAAy4C,aAAA7lC,IAAAqG,EAAAw/B,QAAAx/B,EAAAw/B,QAAA,EAKAz4C,KAAAg6C,aAAA/gC,EAAA6/B,YACQ5+B,GpH4JD3V,EoH5JgBvE,KAAAg6C,apH4JhBmgC,GoH1JE,EpH2JTC,EoH7JuB,SAAAj7E,EAAAyH,GACvB,OAAAA,EAAAzH,IpH4JA+c,EACA3X,EAAA0Y,MAAA,SAAAo9D,EAAA9qE,GACA,OAAAA,EACA,SAEA,IAAA+qE,EAAAF,EAAA71E,EAAAgL,EAAA,GAAA8qE,GACA,QAAAC,EAAA,GAAAH,GAAA,IAAAG,MoHjKS,KAGTrhE,EAAAshE,QACA,QAAAr9E,EAAA,EAAA0U,EAAA5R,KAAAg6C,aAAAj6C,OAAA,EAA8D7C,EAAA0U,IAAQ1U,EACtE,GAAAy7C,GAIA,GAAA34C,KAAAg6C,aAAA98C,GAAA8C,KAAAg6C,aAAA98C,EAAA,KAAAy7C,EAAA,CACAA,OAAA/lC,EACA,YALA+lC,EAAA34C,KAAAg6C,aAAA98C,GAAA8C,KAAAg6C,aAAA98C,EAAA,GAcA8C,KAAA+5C,YAAApB,EAKA34C,KAAA04C,QAAA14C,KAAAg6C,aAAAj6C,OAAA,EAKAC,KAAAw6E,aAAA5nE,IAAAqG,EAAAwhE,OAAAxhE,EAAAwhE,OAAA,KAKAz6E,KAAA06E,SAAA,UACA9nE,IAAAqG,EAAAshE,UACAv6E,KAAA06E,SAAAzhE,EAAAshE,QACYrgE,EAAMla,KAAA06E,SAAA36E,QAAAC,KAAAg6C,aAAAj6C,OAAA,KAElB,IAAAme,EAAAjF,EAAAiF,YACAtL,IAAAsL,GACAle,KAAAw6E,SAAAx6E,KAAA06E,WACA16E,KAAAw6E,QAA2Bt6D,GAAUhC,IAE7BhE,GAAMla,KAAAw6E,SAAAx6E,KAAA06E,UAAA16E,KAAAw6E,UAAAx6E,KAAA06E,SAAA,IAKd16E,KAAA26E,WAAA,UACA/nE,IAAAqG,EAAA2hE,YACA56E,KAAA26E,WAAA1hE,EAAA2hE,UACY1gE,EAAMla,KAAA26E,WAAA56E,QAAAC,KAAAg6C,aAAAj6C,OAAA,KAMlBC,KAAA66E,eAAAjoE,IAAAqG,EAAA6hE,SACA7hE,EAAA6hE,SACA96E,KAAA26E,WAAgD,KAAjBpoC,GACvBr4B,GAAMla,KAAA66E,WAAA76E,KAAA26E,YACd36E,KAAA66E,YAAA76E,KAAA26E,WAAA,IAKA36E,KAAAinB,aAAArU,IAAAsL,IAAA,KAKAle,KAAA+6E,gBAAA,KAKA/6E,KAAAg7E,SAAA,WACApoE,IAAAqG,EAAAgiE,MACAj7E,KAAA+6E,gBAAA9hE,EAAAgiE,MAAAhuE,IAAA,SAAA8T,EAAAk4B,GAEA,OADA,IAAoCygC,GAASr6E,KAAAQ,IAAA,EAAAkhB,EAAA,IAAA1hB,KAAAM,IAAAohB,EAAA,SAAA1hB,KAAAQ,IAAA,EAAAkhB,EAAA,IAAA1hB,KAAAM,IAAAohB,EAAA,WAEhC/gB,MAEbke,GACAle,KAAAk7E,qBAAAh9D,GAsVA,OA3UAg8D,EAAAp7E,UAAAq8E,iBAAA,SAAAj9D,EAAA68B,EAAAlsC,GAEA,IADA,IAAA2qE,EAAAx5E,KAAAo7E,0BAAAl9D,EAAA68B,GACA79C,EAAAs8E,EAAAj5E,KAAAqR,EAAA4nE,EAAA/4E,KAAyDvD,GAAA0U,IAAS1U,EAClE,QAAAsP,EAAAgtE,EAAAh5E,KAAA8O,EAAAkqE,EAAA94E,KAA6D8L,GAAA8C,IAAS9C,EACtEqC,EAAA,CAAAksC,EAAA79C,EAAAsP,KAWA0tE,EAAAp7E,UAAAu8E,gCAAA,SAAA/B,EAAAzqE,EAAAysE,EAAAh9D,GACA,IAAAxe,EAAA0e,EACA+8D,EAAA,KACAtiC,EAAAqgC,EAAA,KAQA,IAPA,IAAAt5E,KAAA+5C,aACAj6C,EAAAw5E,EAAA,GACA96D,EAAA86D,EAAA,IAGAiC,EAAAv7E,KAAAw7E,mBAAAlC,EAAAh7D,GAEA26B,GAAAj5C,KAAAy4C,SAAA,CASA,GAAA5pC,EAAAoqC,EARA,IAAAj5C,KAAA+5C,YAG4B0/B,GAF5B35E,EAAAT,KAAAO,MAAAE,EAAA,GAEmDA,EADnD0e,EAAAnf,KAAAO,MAAA4e,EAAA,GACmDA,EAAA88D,GAGnDt7E,KAAAo7E,0BAAAG,EAAAtiC,EAAAqiC,IAGA,WAEAriC,EAEA,UAOAihC,EAAAp7E,UAAAkpB,UAAA,WACA,OAAAhoB,KAAAinB,SAOAizD,EAAAp7E,UAAAq/C,WAAA,WACA,OAAAn+C,KAAA04C,SAOAwhC,EAAAp7E,UAAAw/C,WAAA,WACA,OAAAt+C,KAAAy4C,SAQAyhC,EAAAp7E,UAAA+wE,UAAA,SAAA52B,GACA,OAAAj5C,KAAAw6E,QACAx6E,KAAAw6E,QAGAx6E,KAAA06E,SAAAzhC,IASAihC,EAAAp7E,UAAAu8C,cAAA,SAAApC,GACA,OAAAj5C,KAAAg6C,aAAAf,IAOAihC,EAAAp7E,UAAA4/C,eAAA,WACA,OAAA1+C,KAAAg6C,cAQAkgC,EAAAp7E,UAAA28E,2BAAA,SAAAnC,EAAAgC,EAAAh9D,GACA,GAAAg7D,EAAA,GAAAt5E,KAAA04C,QAAA,CACA,OAAA14C,KAAA+5C,YAAA,CACA,IAAAx5C,EAAA,EAAA+4E,EAAA,GACA94E,EAAA,EAAA84E,EAAA,GACA,OAAuBG,GAAuBl5E,IAAA,EAAAC,IAAA,EAAA86E,GAE9C,IAAAC,EAAAv7E,KAAAw7E,mBAAAlC,EAAAh7D,GACA,OAAAte,KAAAo7E,0BAAAG,EAAAjC,EAAA,KAAAgC,GAEA,aASApB,EAAAp7E,UAAA48E,mBAAA,SAAAziC,EAAAugC,EAAAl7D,GACA,IAAAm8D,EAAAz6E,KAAA6vE,UAAA52B,GACAp4B,EAAA7gB,KAAAq7C,cAAApC,GACA6hC,EAAuBr0B,GAAMzmD,KAAA27E,YAAA1iC,GAAAj5C,KAAAg7E,UAC7Bz6E,EAAAk6E,EAAA,GAAAjB,EAAAj5E,KAAAu6E,EAAA,GAAAj6D,EACApgB,EAAAg6E,EAAA,IAAAjB,EAAA/4E,KAAA,GAAAq6E,EAAA,GAAAj6D,EAGA,OAAe1B,GAAc5e,EAF7Bk6E,EAAA,GAAAjB,EAAAh5E,KAAAs6E,EAAA,GAAAj6D,EAE6BpgB,EAD7Bg6E,EAAA,IAAAjB,EAAA94E,KAAA,GAAAo6E,EAAA,GAAAj6D,EAC6BvC,IAS7B47D,EAAAp7E,UAAAs8E,0BAAA,SAAAl9D,EAAA+6B,EAAAqiC,GACA,IAAAhC,EAAAU,GACAh6E,KAAA47E,uBAAA19D,EAAA,GAAAA,EAAA,GAAA+6B,GAAA,EAAAqgC,GACA,IAAA/4E,EAAA+4E,EAAA,GACA94E,EAAA84E,EAAA,GAEA,OADAt5E,KAAA47E,uBAAA19D,EAAA,GAAAA,EAAA,GAAA+6B,GAAA,EAAAqgC,GACeG,GAAuBl5E,EAAA+4E,EAAA,GAAA94E,EAAA84E,EAAA,GAAAgC,IAMtCpB,EAAAp7E,UAAA+8E,mBAAA,SAAAvC,GACA,IAAAmB,EAAAz6E,KAAA6vE,UAAAyJ,EAAA,IACAz4D,EAAA7gB,KAAAq7C,cAAAi+B,EAAA,IACAwB,EAAuBr0B,GAAMzmD,KAAA27E,YAAArC,EAAA,IAAAt5E,KAAAg7E,UAC7B,OACAP,EAAA,IAAAnB,EAAA,OAAAwB,EAAA,GAAAj6D,EACA45D,EAAA,IAAAnB,EAAA,OAAAwB,EAAA,GAAAj6D,IAWAq5D,EAAAp7E,UAAA08E,mBAAA,SAAAlC,EAAAh7D,GACA,IAAAm8D,EAAAz6E,KAAA6vE,UAAAyJ,EAAA,IACAz4D,EAAA7gB,KAAAq7C,cAAAi+B,EAAA,IACAwB,EAAuBr0B,GAAMzmD,KAAA27E,YAAArC,EAAA,IAAAt5E,KAAAg7E,UAC7Bz6E,EAAAk6E,EAAA,GAAAnB,EAAA,GAAAwB,EAAA,GAAAj6D,EACArgB,EAAAi6E,EAAA,IAAAnB,EAAA,MAAAwB,EAAA,GAAAj6D,EAGA,OAAe1B,GAAc5e,EAAAC,EAF7BD,EAAAu6E,EAAA,GAAAj6D,EACArgB,EAAAs6E,EAAA,GAAAj6D,EAC6BvC,IAa7B47D,EAAAp7E,UAAAg9E,kCAAA,SAAAl9D,EAAAiC,EAAA+4D,GACA,OAAA55E,KAAA+7E,gCAAAn9D,EAAA,GAAAA,EAAA,GAAAiC,GAAA,EAAA+4D,IAeAM,EAAAp7E,UAAAi9E,gCAAA,SAAAj8E,EAAA0e,EAAAqC,EAAAm7D,EAAApC,GACA,IAAA3gC,EAAAj5C,KAAAi8E,kBAAAp7D,GACAqP,EAAArP,EAAA7gB,KAAAq7C,cAAApC,GACAwhC,EAAAz6E,KAAA6vE,UAAA52B,GACA6hC,EAAuBr0B,GAAMzmD,KAAA27E,YAAA1iC,GAAAj5C,KAAAg7E,UAC7BkB,EAAAF,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAA/8E,KAAAO,OAAAE,EAAA26E,EAAA,IAAA55D,EAAAq7D,GACAG,EAAAh9E,KAAAO,OAAA66E,EAAA,GAAAj8D,GAAAqC,EAAAs7D,GACAG,EAAApsD,EAAAksD,EAAAtB,EAAA,GACAyB,EAAArsD,EAAAmsD,EAAAvB,EAAA,GASA,OARAkB,GACAM,EAAAj9E,KAAAc,KAAAm8E,GAAA,EACAC,EAAAl9E,KAAAc,KAAAo8E,GAAA,IAGAD,EAAAj9E,KAAAO,MAAA08E,GACAC,EAAAl9E,KAAAO,MAAA28E,IAEe5C,GAAuB1gC,EAAAqjC,EAAAC,EAAA3C,IAiBtCM,EAAAp7E,UAAA88E,uBAAA,SAAA97E,EAAA0e,EAAAy6B,EAAA+iC,EAAApC,GACA,IAAAa,EAAAz6E,KAAA6vE,UAAA52B,GACAp4B,EAAA7gB,KAAAq7C,cAAApC,GACA6hC,EAAuBr0B,GAAMzmD,KAAA27E,YAAA1iC,GAAAj5C,KAAAg7E,UAC7BkB,EAAAF,EAAA,KACAG,EAAAH,EAAA,KACAI,EAAA/8E,KAAAO,OAAAE,EAAA26E,EAAA,IAAA55D,EAAAq7D,GACAG,EAAAh9E,KAAAO,OAAA66E,EAAA,GAAAj8D,GAAAqC,EAAAs7D,GACAG,EAAAF,EAAAtB,EAAA,GACAyB,EAAAF,EAAAvB,EAAA,GASA,OARAkB,GACAM,EAAAj9E,KAAAc,KAAAm8E,GAAA,EACAC,EAAAl9E,KAAAc,KAAAo8E,GAAA,IAGAD,EAAAj9E,KAAAO,MAAA08E,GACAC,EAAAl9E,KAAAO,MAAA28E,IAEe5C,GAAuB1gC,EAAAqjC,EAAAC,EAAA3C,IAUtCM,EAAAp7E,UAAA09E,yBAAA,SAAA59D,EAAAq6B,EAAA2gC,GACA,OAAA55E,KAAA47E,uBAAAh9D,EAAA,GAAAA,EAAA,GAAAq6B,GAAA,EAAA2gC,IAMAM,EAAAp7E,UAAA29E,uBAAA,SAAAnD,GACA,OAAAt5E,KAAAg6C,aAAAs/B,EAAA,KAUAY,EAAAp7E,UAAA68E,YAAA,SAAA1iC,GACA,OAAAj5C,KAAA66E,UACA76E,KAAA66E,UAGA76E,KAAA26E,WAAA1hC,IAOAihC,EAAAp7E,UAAA49E,iBAAA,SAAAzjC,GACA,OAAAj5C,KAAA+6E,gBAIA/6E,KAAA+6E,gBAAA9hC,GAHA,MAcAihC,EAAAp7E,UAAAm9E,kBAAA,SAAAp7D,EAAAwgC,GAEA,OAAeh9B,GADCjI,EAAiBpc,KAAAg6C,aAAAn5B,EAAAwgC,GAAA,GACbrhD,KAAAy4C,QAAAz4C,KAAA04C,UAMpBwhC,EAAAp7E,UAAAo8E,qBAAA,SAAAh9D,GAGA,IAFA,IAAAne,EAAAC,KAAAg6C,aAAAj6C,OACA48E,EAAA,IAAAvwE,MAAArM,GACAk5C,EAAAj5C,KAAAy4C,QAAkCQ,EAAAl5C,IAAYk5C,EAC9C0jC,EAAA1jC,GAAAj5C,KAAAo7E,0BAAAl9D,EAAA+6B,GAEAj5C,KAAA+6E,gBAAA4B,GAEAzC,EA7bY,GC/BL,SAAA0C,GAAAxxD,GACP,IAAA3C,EAAA2C,EAAA7C,qBAKA,OAJAE,IACAA,EAAAo0D,GAAAzxD,GACAA,EAAA5C,mBAAAC,IAEAA,EAyDO,SAAAq0D,GAAA9jE,GAEP,IAAA+jE,EAAA/jE,GAAA,GACAkF,EAAA6+D,EAAA7+D,QAAsCoN,GAAa,aAAAtD,YAEnDg1D,EAAA,CACA9+D,SACAu6B,QAAAskC,EAAAtkC,QACAqiC,SAAAiC,EAAAjC,SACAhiC,YAAAmkC,GAAA/+D,EAAA6+D,EAAArkC,QAAAqkC,EAAAjC,WAEA,WAAeb,GAAQ+C,GAWvB,SAAAC,GAAA/+D,EAAAg/D,EAAAC,GAUA,IATA,IAAAzkC,OAAA9lC,IAAAsqE,EACAA,EAAsB5qC,GACtB1xC,EAAiB2f,GAASrC,GAC1BvS,EAAgB2U,GAAQpC,GACxB48D,EAAmBr0B,QAAM7zC,IAAAuqE,EACzBA,EAAuB5qC,IACvBe,EAAAj0C,KAAAM,IAAAgM,EAAAmvE,EAAA,GAAAl6E,EAAAk6E,EAAA,IACA/6E,EAAA24C,EAAA,EACAI,EAAA,IAAA1sC,MAAArM,GACAk5C,EAAA,EAAmBA,EAAAl5C,IAAYk5C,EAC/BH,EAAAG,GAAA3F,EAAAj0C,KAAA8C,IAAA,EAAA82C,GAEA,OAAAH,EAWO,SAAA+jC,GAAAzxD,EAAA8xD,EAAAC,EAAAC,GAEP,OA1EO,SAAAl/D,EAAAg/D,EAAAC,EAAAC,GACP,IAAA18D,OAAA9N,IAAAwqE,IAAyDhgE,GAAMG,SAC/Du7B,EAAAmkC,GAAA/+D,EAAAg/D,EAAAC,GACA,WAAelD,GAAQ,CACvB/7D,SACAu8D,OAAgBh6D,GAASvC,EAAAwC,GACzBo4B,cACAgiC,SAAAqC,IAmEAE,CADAC,GAAAlyD,GACA8xD,EAAAC,EAAAC,GAQO,SAAAE,GAAAlyD,GAEP,IAAAlN,GADAkN,EAAiBE,GAAaF,IAC9BpD,YACA,IAAA9J,EAAA,CACA,IAAAq/D,EAAA,IAAyB52D,GAAgBC,GAAKP,SAAA+E,EAAAlD,mBAC9ChK,EAAiBiB,IAAco+D,UAE/B,OAAAr/D,ECnIO,IAqEAs/D,GAAA,MA0HPC,GAAA,CACA,qBACA,QACA,YACA,aAOO,SAAA3tE,GAAA4xC,EAAAg8B,GAEP,IADA,IAAA9rE,EAAA6rE,GAAA19E,OACA7C,EAAA,EAAmBA,EAAA0U,IAAQ1U,EAC3B,IACA,IAAAyS,EAAA+xC,EAAA5xC,WAAA2tE,GAAAvgF,GAAAwgF,GACA,GAAA/tE,EACA,OAAyD,EAGzD,MAAAzQ,IAIA,YAOO,IAWPy+E,GAQA,uBAAA7gF,QAAA,0BAAAA,OACA,IACA,IACY8gF,GAAE9tE,GADIF,SAAAC,cAAA,WAEN+tE,MACZ,EACsDA,GAAEC,aAAcD,GAAEE,kBACxEH,GAAyBC,GAAEG,0BAG3B,MAAA7+E,IC9OO,IAAA8+E,GAAApuE,SAAAquE,eAAAC,eAAA,YAIAC,GAAA,4CAMA,SAAAC,GAAAC,EAAAC,GACP,OAAAN,GAAAI,gBAAAC,EAAAC,GAUO,SAAAC,GAAA77B,EAAA87B,GACP,OAWO,SAAAC,EAAA/7B,EAAA87B,EAAAE,GACP,GAAAh8B,EAAAi8B,UAAAC,KAAAC,oBACAn8B,EAAAi8B,UAAAC,KAAAE,UACAN,EACAE,EAAA59E,KAAA6G,OAAA+6C,EAAAq8B,WAAAhpC,QAAA,qBAGA2oC,EAAA59E,KAAA4hD,EAAAq8B,eAGA,CACA,IAAApgF,OAAA,EACA,IAAAA,EAAA+jD,EAAAywB,WAAiCx0E,EAAGA,IAAAqgF,YACpCP,EAAA9/E,EAAA6/E,EAAAE,GAGA,OAAAA,EA3BAD,CAAA/7B,EAAA87B,EAAA,IAAAxvD,KAAA,IAiCO,SAAAiwD,GAAArgF,GACP,0BAAAA,EAiBO,SAAAsgF,GAAAC,GACP,WAAA1G,WAAAC,gBAAAyG,EAAA,mBAUO,SAAAC,GAAAC,EAAAjtE,GACP,gBAKAswC,EAAA48B,GACA,IAAAnhF,EAAAkhF,EAAAhiF,UAAAuV,IAAAR,IAAApS,KAAA0iD,EAAA48B,QACA1sE,IAAAzU,GAEYqb,EADgC8lE,IAAAv/E,OAAA,GAC1B5B,IAYX,SAAAohF,GAAAF,EAAAjtE,GACP,gBAKAswC,EAAA48B,GACA,IAAAnhF,EAAAkhF,EAAAhiF,UAAAuV,IAAAR,IAAApS,KAAA0iD,EAAA48B,QACA1sE,IAAAzU,GAC4CmhF,IAAAv/E,OAAA,GAC5Ce,KAAA3C,IAYO,SAAAqhF,GAAAH,EAAAjtE,GACP,gBAKAswC,EAAA48B,GACA,IAAAnhF,EAAAkhF,EAAAhiF,UAAAuV,IAAAR,IAAApS,KAAA0iD,EAAA48B,QACA1sE,IAAAzU,IACAmhF,IAAAv/E,OAAA,GAAA5B,IAaO,SAAAshF,GAAAJ,EAAAK,EAAAttE,GACP,gBAKAswC,EAAA48B,GACA,IAAAnhF,EAAAkhF,EAAAhiF,UAAAuV,IAAAR,IAAApS,KAAA0iD,EAAA48B,GACA,QAAA1sE,IAAAzU,EAAA,CACA,IAAAS,EAA4C0gF,IAAAv/E,OAAA,GAC5ClB,OAAA+T,IAAA8sE,IAAAh9B,EAAAi9B,WAEA9gF,KAAAD,EACAA,EAAAC,GAGAD,EAAAC,GAAA,IAEAiC,KAAA3C,KAYO,SAAAyhF,GAAAP,EAAAK,EAAAttE,GACP,gBAKAswC,EAAA48B,GACA,IAAAnhF,EAAAkhF,EAAAhiF,UAAAuV,IAAAR,IAAApS,KAAA0iD,EAAA48B,QACA1sE,IAAAzU,IAC4CmhF,IAAAv/E,OAAA,QAC5C6S,IAAA8sE,IAAAh9B,EAAAi9B,WACAxhF,IAaO,SAAA0hF,GAAAC,EAAA1tE,GACP,gBAAAswC,EAAAvkD,EAAAmhF,GACAQ,EAAAziF,UAAAuV,IAAAR,IAAApS,KAAA0iD,EAAAvkD,EAAAmhF,GAC8CA,IAAAv/E,OAAA,GAC9C2iD,KACA+F,YAAA/F,IAeO,SAAAq9B,GAAAD,EAAA1tE,GACP,IAAA4tE,EAAAC,EACA,gBAAAv9B,EAAAvkD,EAAAmhF,GACA,QAAA1sE,IAAAotE,EAAA,CACAA,EAAA,GACA,IAAAE,EAAA,GACAA,EAAAx9B,EAAAi9B,WAAAG,EACAE,EAAAt9B,EAAA27B,cAAA6B,EACAD,EAAAE,GAAAz9B,EAAAi9B,WAEAS,GAAAJ,EAAAC,EAAA9hF,EAAAmhF,IAgBO,SAAAa,GAAAE,EAAAC,GACP,IAAAC,EAAAF,EACA,gBAOAliF,EAAAmhF,EAAAe,GACA,IACA39B,EAD+C48B,IAAAv/E,OAAA,GAC/C2iD,KACA89B,EAAAD,EAKA,YAJA3tE,IAAA4tE,IACAA,EAAAH,GAGAjC,QADAxrE,IAAA0tE,IAAA59B,EAAA27B,aAC+D,IAUxD,IAAAoC,GAAAN,KAaA,SAAAO,GAAA9hF,EAAA+hF,GAGP,IAFA,IAAA5gF,EAAA4gF,EAAA5gF,OACA6gF,EAAA,IAAAx0E,MAAArM,GACA7C,EAAA,EAAmBA,EAAA6C,IAAY7C,EAC/B0jF,EAAA1jF,GAAA0B,EAAA+hF,EAAAzjF,IAEA,OAAA0jF,EAYO,SAAAC,GAAAC,EAAAC,EAAAC,GAIP,IACA9jF,EAAA0U,EADAqvE,OAAAruE,IAAAouE,IAAA,GAEA,IAAA9jF,EAAA,EAAA0U,EAAAkvE,EAAA/gF,OAA0C7C,EAAA0U,IAAQ1U,EAClD+jF,EAAAH,EAAA5jF,IAAA6jF,EAEA,OAAAE,EAUO,SAAAC,GAAAC,EAAAz+B,EAAA48B,EAAAltE,GACP,IAAAzT,EACA,IAAAA,EAAA+jD,EAAA0+B,kBAAoCziF,EAAGA,IAAA0iF,mBAAA,CACvC,IAAAC,EAAAH,EAAAxiF,EAAA0/E,cACA,QAAAzrE,IAAA0uE,EAAA,CACA,IAAAC,EAAAD,EAAA3iF,EAAAghF,gBACA/sE,IAAA2uE,GACAA,EAAAlkF,KAAA+U,EAAAzT,EAAA2gF,KAgBO,SAAAkC,GAAA5iF,EAAAuiF,EAAAz+B,EAAA48B,EAAAltE,GAGP,OAFAktE,EAAAx+E,KAAAlC,GACAsiF,GAAAC,EAAAz+B,EAAA48B,EAAAltE,GACwBktE,EAAAz+E,MAwBjB,SAAAu/E,GAAAJ,EAAAC,EAAAluE,EAAAutE,EAAAmC,EAAArvE,GAGP,IAFA,IACAjU,EAAAukD,EADA3iD,QAAA6S,IAAA6uE,IAAA1vE,GAAAhS,OAEA7C,EAAA,EAAmBA,EAAA6C,IAAY7C,OAE/B0V,KADAzU,EAAA4T,EAAA7U,UAGA0V,KADA8vC,EAAAu9B,EAAA5iF,UAAAuV,IAAAR,IAAApS,KAAA7B,EAAAmhF,OAAA1sE,IAAA6uE,IAAAvkF,QAAA0V,KAEAotE,EAAAt9B,EAAA27B,cAAA37B,EAAAi9B,WACAtiF,KAAA+U,EAAAswC,EAAAvkD,EAAAmhF,GA4BO,SAAAoC,GAAA9iF,EAAAohF,EAAAC,EAAAluE,EAAAutE,EAAAmC,EAAArvE,GAGP,OAFAktE,EAAAx+E,KAAAlC,GACAwhF,GAAAJ,EAAAC,EAAAluE,EAAAutE,EAAAmC,EAAArvE,GACkCktE,EAAAz+E,MC/a3B,IAAA8gF,GAAA,CACPC,YF8DO,ME7DPC,YFsDO,MErDPrE,aAAkBA,IAuCHsE,GA/Bf,WAKA,SAAAC,EAAAC,EAAAC,GAKAjiF,KAAAkiF,UAAAtvE,IAAAovE,IAAA,GAKAhiF,KAAAmiF,YAAAvvE,IAAAqvE,IAAAN,GAAAC,YAcA,OATAG,EAAAjjF,UAAA4a,SAAA,WACA,OAAA1Z,KAAAkiF,MAKAH,EAAAjjF,UAAAsjF,SAAA,WACA,OAAApiF,KAAAmiF,QAEAJ,EA7BA,GCdeM,GAAA,CACfC,KAAA,mBACAC,SAAA,wBCMO,SAAAC,GAAAC,EAAA9+D,GAOP,OANA8+D,EAAA,GAAA9+D,EAAA,GACA8+D,EAAA,GAAA9+D,EAAA,GACA8+D,EAAA,GAAA9+D,EAAA,GACA8+D,EAAA,GAAA9+D,EAAA,GACA8+D,EAAA,IAAA9+D,EAAA,GACA8+D,EAAA,IAAA9+D,EAAA,GACA8+D,EClBA,IAAAC,GAAA,oUACAC,GAAA,mNAqPeC,GAnLf,WAIA,SAAAC,EAAA5pE,GACAjZ,KAAA8iF,IAAA7pE,EAAA8pE,aACA,IAAAC,EAAAhjF,KAAA8iF,IACA9iF,KAAAijF,YAAAhqE,EAAAiqE,YAAA,EACAljF,KAAAmjF,qBAAAH,EAAAI,gBACApjF,KAAAqjF,yBAAA,KACArjF,KAAAsjF,aAAAN,EAAAO,oBAGA,IAAAC,EAAAR,EAAAS,aAAAT,EAAAU,eACAV,EAAAW,aAAAH,EAAAvqE,EAAAuqE,cAAAd,IACAM,EAAAY,cAAAJ,GACA,IAAAK,EAAAb,EAAAS,aAAAT,EAAAc,iBACAd,EAAAW,aAAAE,EAAA5qE,EAAA4qE,gBAAAlB,IACAK,EAAAY,cAAAC,GACA7jF,KAAA+jF,qBAAAf,EAAAgB,gBACAhB,EAAAiB,aAAAjkF,KAAA+jF,qBAAAP,GACAR,EAAAiB,aAAAjkF,KAAA+jF,qBAAAF,GACAb,EAAAkB,YAAAlkF,KAAA+jF,sBAEA/jF,KAAAmkF,4BAAAnB,EAAAoB,eASApB,EAAAqB,WAAArB,EAAAxL,aAAAx3E,KAAAmkF,6BACAnB,EAAAsB,WAAAtB,EAAAxL,aAAA,IAAA+M,aATA,EACA,KACA,MACA,IACA,KACA,KACA,MAGAvB,EAAApB,aACA5hF,KAAAwkF,4BAAAxB,EAAAyB,kBAAAzkF,KAAA+jF,qBAAA,cACA/jF,KAAA0kF,6BAAA1B,EAAA2B,mBAAA3kF,KAAA+jF,qBAAA,gBACA/jF,KAAA4kF,6BAAA5B,EAAA2B,mBAAA3kF,KAAA+jF,qBAAA,WAMA/jF,KAAA6kF,UAAA,GACA5rE,EAAA6rE,UAAAlnF,OAAAmP,KAAAkM,EAAA6rE,UAAArrE,QAAA,SAAAhc,GACAuC,KAAA6kF,UAAA/jF,KAAA,CACA3C,MAAA8a,EAAA6rE,SAAArnF,GACAsnF,SAAA/B,EAAA2B,mBAAA3kF,KAAA+jF,qBAAAtmF,MAESiB,KAAAsB,OAgIT,OAzHA6iF,EAAA/jF,UAAAkmF,MAAA,WACA,OAAAhlF,KAAA8iF,KASAD,EAAA/jF,UAAAmmF,KAAA,SAAArmD,GACA,IAAAokD,EAAAhjF,KAAAglF,QACAtjC,EAAAshC,EAAAthC,OACA3gC,EAAA6d,EAAA7d,KAKA,GAHAiiE,EAAAkC,gBAAAlC,EAAAmC,YAAAnlF,KAAAolF,kBACApC,EAAAqC,SAAA,IAAA3jC,EAAA/1C,MAAA3L,KAAAijF,YAAAvhC,EAAA9gD,OAAAZ,KAAAijF,cAEAjjF,KAAAqjF,0BACArjF,KAAAqjF,yBAAA,KAAAtiE,EAAA,IAAA/gB,KAAAqjF,yBAAA,KAAAtiE,EAAA,IACA/gB,KAAAqjF,yBAAAtiE,EAEA,IACAukE,EAAAtC,EAAAuC,KAEAzN,EAAAkL,EAAAuC,KACAniF,EAAA4/E,EAAAwC,cAEAxC,EAAAyC,YAAAzC,EAAA0C,WAAA1lF,KAAAmjF,sBACAH,EAAA2C,WAAA3C,EAAA0C,WAPA,EAOAJ,EAAA5jC,EAAA/1C,MAAA3L,KAAAijF,YAAAvhC,EAAA9gD,OAAAZ,KAAAijF,YALA,EAKAnL,EAAA10E,EAFA,MAGA4/E,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAA6C,mBAAA7C,EAAA8C,QACA9C,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAA+C,eAAA/C,EAAAgD,eACAhD,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAAiD,eAAAjD,EAAAgD,eAEAhD,EAAAkD,qBAAAlD,EAAAmC,YAAAnC,EAAAmD,kBAAAnD,EAAA0C,WAAA1lF,KAAAmjF,qBAAA,KASAN,EAAA/jF,UAAAoD,MAAA,SAAA08B,EAAAwnD,GACA,IAAApD,EAAAhjF,KAAAglF,QACAtjC,EAAAshC,EAAAthC,OACAshC,EAAAkC,gBAAAlC,EAAAmC,YAAAiB,IAAAhB,iBAAA,MACApC,EAAAqD,cAAArD,EAAAsD,UACAtD,EAAAyC,YAAAzC,EAAA0C,WAAA1lF,KAAAmjF,sBAEAH,EAAAuD,WAAA,SACAvD,EAAA5iF,MAAA4iF,EAAAwD,kBACAxD,EAAAyD,OAAAzD,EAAA0D,OACA1D,EAAA2D,UAAA3D,EAAA4D,IAAA5D,EAAA6D,qBACA7D,EAAAqC,SAAA,IAAA3jC,EAAA/1C,MAAA+1C,EAAA9gD,QACAoiF,EAAAqB,WAAArB,EAAAxL,aAAAx3E,KAAAmkF,6BACAnB,EAAA8D,WAAA9mF,KAAA+jF,sBACAf,EAAA+D,wBAAA/mF,KAAAwkF,6BACAxB,EAAAgE,oBAAAhnF,KAAAwkF,4BAAA,EAAAxB,EAAAiE,OAAA,OACAjE,EAAAkE,UAAAlnF,KAAA0kF,6BAAAhjC,EAAA/1C,MAAA+1C,EAAA9gD,QACAoiF,EAAAmE,UAAAnnF,KAAA4kF,6BAAA,GACA5kF,KAAAonF,cAAAxoD,GACAokD,EAAAqE,WAAArE,EAAAsE,UAAA,MAMAzE,EAAA/jF,UAAAsmF,eAAA,WACA,OAAAplF,KAAAsjF,cAOAT,EAAA/jF,UAAAsoF,cAAA,SAAAxoD,GACA,IACAzgC,EADA6kF,EAAAhjF,KAAAglF,QAEAuC,EAAA,EACAvnF,KAAA6kF,UAAAprE,QAAA,SAAA+tE,GAGA,IAFArpF,EAAA,mBAAAqpF,EAAArpF,MAAAqpF,EAAArpF,MAAAygC,GAAA4oD,EAAArpF,iBAEAspF,mBAAAtpF,aAAAqN,UAEAg8E,EAAAE,UACAF,EAAAE,QAAA1E,EAAAI,iBAEAJ,EAAAqD,cAAArD,EAAA,UAAAuE,IACAvE,EAAAyC,YAAAzC,EAAA0C,WAAA8B,EAAAE,SACA1E,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAA6C,mBAAA7C,EAAA8C,QACA9C,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAA+C,eAAA/C,EAAAgD,eACAhD,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAAiD,eAAAjD,EAAAgD,eACA7nF,aAAAqN,UACAw3E,EAAA2C,WAAA3C,EAAA0C,WAAA,EAAA1C,EAAAuC,KAAAvC,EAAAuC,KAAApnF,EAAAwN,MAAAxN,EAAAyC,OAAA,EAAAoiF,EAAAwC,cAAA,IAAAtiF,WAAA/E,EAAA8C,OAGA+hF,EAAA2C,WAAA3C,EAAA0C,WAAA,EAAA1C,EAAAuC,KAAAvC,EAAAuC,KAAAvC,EAAAwC,cAAArnF,GAGA6kF,EAAAmE,UAAAK,EAAAzC,SAAAwC,UAEA,GAAAn7E,MAAA+K,QAAAhZ,GACA,OAAAA,EAAA4B,QACA,OAEA,YADAijF,EAAAkE,UAAAM,EAAAzC,SAAA5mF,EAAA,GAAAA,EAAA,IAEA,OAEA,YADA6kF,EAAA2E,UAAAH,EAAAzC,SAAA5mF,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,OAEA,YADA6kF,EAAA4E,UAAAJ,EAAAzC,SAAA5mF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,mBAGA,iBAAAA,GACA6kF,EAAA6E,UAAAL,EAAAzC,SAAA5mF,MAIA0kF,EAjLA,GCtEIiF,GAAyB,WAC7B,IAAAz3E,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8CtBq3E,GAAA,CACPC,kBAAA,qBACAC,oBAAA,sBACAC,uBAAA,wBAOOC,GACP,aADOA,GAEP,aAFOA,GAGP,YAHOA,GAIP,mBAJOA,GAKP,YALOA,GAMP,UA6qBeC,GA1hBA,SAAAv3E,GAKf,SAAAw3E,EAAArvE,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAKAhI,EAAAs3E,QAAA14E,SAAAC,cAAA,UACAmB,EAAAs3E,QAAA/sE,MAAA8gB,SAAA,WAKArrB,EAAA8xE,IAAoBhzE,GAAUkB,EAAAs3E,SAC9B,IAAAtF,EAAAhyE,EAAAg0E,QA+DA,GA1DAh0E,EAAAu3E,aAAA,GAKAv3E,EAAAw3E,aAAA,GAKAx3E,EAAAy3E,cAAA,GAKAz3E,EAAA03E,gBAAA,KAIA13E,EAAA23E,uBAAuCxsE,EAASwhE,GAAgB,0BAEhE3sE,EAAA23E,wBACA3F,EAAA4F,aAAA,0BAEQz1E,EAAMnC,EAAAs3E,QAAgBjG,GAAgBC,KAAAtxE,EAAA63E,uBAAA73E,GACtCmC,EAAMnC,EAAAs3E,QAAgBjG,GAAgBE,SAAAvxE,EAAA83E,2BAAA93E,GAK9CA,EAAA+3E,oB5GzOA,c4G8OA/3E,EAAAg4E,mB5G9OA,c4GmPAh4E,EAAAi4E,SF1QA,kCE+QAj4E,EAAAk4E,kBAAA,GAKAl4E,EAAAm4E,iBAAA,GAOAn4E,EAAA6zE,UAAA,GACA5rE,EAAA6rE,SACA,QAAAsE,KAAAnwE,EAAA6rE,SACA9zE,EAAA6zE,UAAA/jF,KAAA,CACArD,KAAA2rF,EACAjrF,MAAA8a,EAAA6rE,SAAAsE,KAyBA,OAdAp4E,EAAAq4E,mBAAApwE,EAAAqwE,cAAArwE,EAAAqwE,cAAAr8E,IAAA,SAAAgM,GACA,WAAuB2pE,GAAuB,CAC9CG,aAAAC,EACAE,WAAAjqE,EAAAiqE,WACAM,aAAAvqE,EAAAuqE,aACAK,eAAA5qE,EAAA4qE,eACAiB,SAAA7rE,EAAA6rE,aAES,KAASlC,GAAuB,CAAEG,aAAAC,KAK3ChyE,EAAAu4E,qBAAA,KACAv4E,EAyaA,OAvhBI82E,GAASO,EAAAx3E,GAwHbw3E,EAAAvpF,UAAAulF,WAAA,SAAA5yE,EAAA1J,GACA,IAAAi7E,EAAAhjF,KAAAglF,QACAwE,EAAwBr5E,EAAMpI,GAC9B0hF,EAAAzpF,KAAAuoF,aAAAiB,GACA,IAAAC,EAAA,CACA,IAAAC,EAAA1G,EAAAoB,eACAqF,EAAAzpF,KAAAuoF,aAAAiB,GAAA,CACAzhF,SACA2hF,eAGA1G,EAAAqB,WAAA5yE,EAAAg4E,EAAAC,cASArB,EAAAvpF,UAAA6qF,gBAAA,SAAAl4E,EAAA1J,GACA,IAGuC6hF,EAHvC5G,EAAAhjF,KAAAglF,QACAzgF,EAAAwD,EAAA2R,WACA1Z,KAAAqkF,WAAA5yE,EAAA1J,GNhTO,OMkTP0J,EACAm4E,EAAA,IAAArF,aAAAhgF,GN1SO,OM4SPkN,IACAm4E,EAAA5pF,KAAA2oF,uBACA,IAAAkB,YAAAtlF,GAAA,IAAAulF,YAAAvlF,IAEAy+E,EAAAsB,WAAA7yE,EAAAm4E,EAAA7hF,EAAAq6E,aAKAiG,EAAAvpF,UAAAirF,aAAA,SAAAhnF,GACA,IAAAigF,EAAAhjF,KAAAglF,QACAwE,EAAwBr5E,EAAMpN,GAC9BinF,EAAAhqF,KAAAuoF,aAAAiB,GACAxG,EAAAiH,iBACAjH,EAAA+G,aAAAC,EAAAjiF,eAEA/H,KAAAuoF,aAAAiB,IAKAnB,EAAAvpF,UAAAkV,gBAAA,WACQL,EAAW3T,KAAAsoF,SACnB,IAAAtF,EAAAhjF,KAAAglF,QACA,IAAAhC,EAAAiH,gBAAA,CACA,QAAAxrF,KAAAuB,KAAAuoF,aACAvF,EAAA+G,aAAA/pF,KAAAuoF,aAAA9pF,GAAAsJ,QAEA,QAAAtJ,KAAAuB,KAAAyoF,cACAzF,EAAAkH,cAAAlqF,KAAAyoF,cAAAhqF,IAEA,QAAAA,KAAAuB,KAAAwoF,aACAxF,EAAAmH,aAAAnqF,KAAAwoF,aAAA/pF,MAWA4pF,EAAAvpF,UAAAsrF,YAAA,SAAAxrD,GACA,IAAAokD,EAAAhjF,KAAAglF,QACAtjC,EAAA1hD,KAAAqqF,YACAtpE,EAAA6d,EAAA7d,KACAg+B,EAAAngB,EAAAmgB,WACA2C,EAAA/1C,MAAAoV,EAAA,GAAAg+B,EACA2C,EAAA9gD,OAAAmgB,EAAA,GAAAg+B,EACA2C,EAAAnmC,MAAA5P,MAAAoV,EAAA,QACA2gC,EAAAnmC,MAAA3a,OAAAmgB,EAAA,QACAiiE,EAAA8D,WAAA9mF,KAAA0oF,iBAEA,QAAAxrF,EAAA8C,KAAAqpF,mBAAAtpF,OAAA,EAAwD7C,GAAA,EAAQA,IAChE8C,KAAAqpF,mBAAAnsF,GAAA+nF,KAAArmD,GAEAokD,EAAAyC,YAAAzC,EAAA0C,WAAA,MACA1C,EAAAuD,WAAA,SACAvD,EAAA5iF,MAAA4iF,EAAAwD,kBACAxD,EAAAyD,OAAAzD,EAAA0D,OACA1D,EAAA2D,UAAA3D,EAAA4D,IAAA5D,EAAA6D,qBACA7mF,KAAAsqF,gBAAA1rD,GACA5+B,KAAAonF,cAAAxoD,IAQAypD,EAAAvpF,UAAAyrF,aAAA,SAAA7zD,EAAAzwB,GACA,IAAA+8E,EAAAhjF,KAAAglF,QACAwF,EAAAxqF,KAAA2oF,uBACA3F,EAAAyH,aAAAzH,EAAA0H,eAEAC,EAAA1kF,EAAAywB,EACAk0D,EAAAl0D,GAFA12B,KAAA2oF,uBAAA,KAGA3F,EAAAuH,aAAAvH,EAAAsE,UAAAqD,EAAAH,EAAAI,IAOAvC,EAAAvpF,UAAA+rF,aAAA,SAAAjsD,GAEA,QAAA1hC,EAAA,EAAuBA,EAAA8C,KAAAqpF,mBAAAtpF,OAAoC7C,IAC3D8C,KAAAqpF,mBAAAnsF,GAAAgF,MAAA08B,EAAA5+B,KAAAqpF,mBAAAnsF,EAAA,WAOAmrF,EAAAvpF,UAAAurF,UAAA,WACA,OAAArqF,KAAAsoF,SAOAD,EAAAvpF,UAAAkmF,MAAA,WACA,OAAAhlF,KAAA8iF,KAOAuF,EAAAvpF,UAAAwrF,gBAAA,SAAA1rD,GACA,IAAA7d,EAAA6d,EAAA7d,KACAD,EAAA8d,EAAAswB,UAAApuC,SACAgqE,EAAgC19D,GAAcptB,KAAAgpF,oBACtC96D,GAAc48D,EAAA,EAAA/pE,EAAA,KAAAA,EAAA,IACtB,IAAAgqE,EAAiC39D,GAAcptB,KAAA+oF,qBAC/C,IAAAjoE,GACYmN,GAAe88D,GAAAjqE,GAE3B9gB,KAAAgrF,sBAAAjD,GAAAE,oBAAuEzF,GAAaxiF,KAAAipF,SAAA6B,IACpF9qF,KAAAgrF,sBAAAjD,GAAAG,uBAA0E1F,GAAaxiF,KAAAipF,SAAA8B,KAOvF1C,EAAAvpF,UAAAsoF,cAAA,SAAAxoD,GACA,IACAzgC,EADA6kF,EAAAhjF,KAAAglF,QAEAuC,EAAA,EACAvnF,KAAA6kF,UAAAprE,QAAA,SAAA+tE,GAGA,IAFArpF,EAAA,mBAAAqpF,EAAArpF,MAAAqpF,EAAArpF,MAAAygC,GAAA4oD,EAAArpF,iBAEAspF,mBAAAtpF,aAAA8sF,kBAAA9sF,aAAAqN,UAEAg8E,EAAAE,UACAF,EAAAE,QAAA1E,EAAAI,iBAEAJ,EAAAqD,cAAArD,EAAA,UAAAuE,IACAvE,EAAAyC,YAAAzC,EAAA0C,WAAA8B,EAAAE,SACA1E,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAA6C,mBAAA7C,EAAA8C,QACA9C,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAA+C,eAAA/C,EAAAgD,eACAhD,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAAiD,eAAAjD,EAAAgD,eACAhD,EAAA2C,WAAA3C,EAAA0C,WAAA,EAAA1C,EAAAuC,KAAAvC,EAAAuC,KAAAvC,EAAAwC,cAAArnF,GAEA6kF,EAAAmE,UAAAnnF,KAAA2kF,mBAAA6C,EAAA/pF,MAAA8pF,UAEA,GAAAn7E,MAAA+K,QAAAhZ,IAAA,IAAAA,EAAA4B,OACAC,KAAAgrF,sBAAAxD,EAAA/pF,KAAyD+kF,GAAaxiF,KAAAipF,SAAA9qF,SAEtE,GAAAiO,MAAA+K,QAAAhZ,MAAA4B,QAAA,EACA,OAAA5B,EAAA4B,QACA,OAEA,YADAijF,EAAAkE,UAAAlnF,KAAA2kF,mBAAA6C,EAAA/pF,MAAAU,EAAA,GAAAA,EAAA,IAEA,OAEA,YADA6kF,EAAA2E,UAAA3nF,KAAA2kF,mBAAA6C,EAAA/pF,MAAAU,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,OAEA,YADA6kF,EAAA4E,UAAA5nF,KAAA2kF,mBAAA6C,EAAA/pF,MAAAU,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,QACA,WAGA,iBAAAA,GACA6kF,EAAA6E,UAAA7nF,KAAA2kF,mBAAA6C,EAAA/pF,MAAAU,IAESO,KAAAsB,QAQTqoF,EAAAvpF,UAAAgoF,WAAA,SAAAoE,GACA,OAAAA,GAAAlrF,KAAA0oF,kBAIA1oF,KAAAglF,QACA8B,WAAAoE,GACAlrF,KAAA0oF,gBAAAwC,EACAlrF,KAAAkpF,kBAAA,GACAlpF,KAAAmpF,iBAAA,IACA,IAYAd,EAAAvpF,UAAA8kF,cAAA,SAAAt2E,EAAAlK,GACA,IAAA4/E,EAAAhjF,KAAAglF,QACAmG,EAAAnI,EAAAS,aAAArgF,GAIA,OAHA4/E,EAAAW,aAAAwH,EAAA79E,GACA01E,EAAAY,cAAAuH,GACAnrF,KAAAwoF,aAAA1nF,KAAAqqF,GACAA,GAUA9C,EAAAvpF,UAAAssF,WAAA,SAAAC,EAAAC,GACA,IAAAtI,EAAAhjF,KAAAglF,QACAnB,EAAA7jF,KAAA4jF,cAAAyH,EAAArI,EAAAc,iBACAN,EAAAxjF,KAAA4jF,cAAA0H,EAAAtI,EAAAU,eACA1jF,KAAAupF,qBAAA,KACAvG,EAAAuI,iBAAA1H,KACA7jF,KAAAupF,qBACA,wCAAAvG,EAAAuI,iBAAA1H,IAEAb,EAAAuI,iBAAA/H,KACAxjF,KAAAupF,sBAAAvpF,KAAAupF,sBAAA,IACA,sCAAAvG,EAAAuI,iBAAA/H,IAEA,IAAA0H,EAAAlI,EAAAgB,gBAKA,OAJAhB,EAAAiB,aAAAiH,EAAArH,GACAb,EAAAiB,aAAAiH,EAAA1H,GACAR,EAAAkB,YAAAgH,GACAlrF,KAAAyoF,cAAA3nF,KAAAoqF,GACAA,GAOA7C,EAAAvpF,UAAA0sF,uBAAA,WACA,OAAAxrF,KAAAupF,sBAQAlB,EAAAvpF,UAAA6lF,mBAAA,SAAAlnF,GAIA,YAHAmV,IAAA5S,KAAAkpF,kBAAAzrF,KACAuC,KAAAkpF,kBAAAzrF,GAAAuC,KAAAglF,QAAAL,mBAAA3kF,KAAA0oF,gBAAAjrF,IAEAuC,KAAAkpF,kBAAAzrF,IAQA4qF,EAAAvpF,UAAA2sF,qBAAA,SAAAhuF,GAIA,YAHAmV,IAAA5S,KAAAmpF,iBAAA1rF,KACAuC,KAAAmpF,iBAAA1rF,GAAAuC,KAAAglF,QAAAP,kBAAAzkF,KAAA0oF,gBAAAjrF,IAEAuC,KAAAmpF,iBAAA1rF,IAUA4qF,EAAAvpF,UAAA4sF,wBAAA,SAAA9sD,EAAAjb,GACA,IAAA5C,EAAA6d,EAAA7d,KACAD,EAAA8d,EAAAswB,UAAApuC,SACAD,EAAA+d,EAAAswB,UAAAruC,WACAD,EAAAge,EAAAswB,UAAAtuC,OAKA,OAJQwM,GAAczJ,GACduK,GAAcvK,EAAA,GAAA9C,EAAAE,EAAA,OAAAF,EAAAE,EAAA,KACdkN,GAAetK,GAAA7C,GACfsN,GAAkBzK,GAAA/C,EAAA,IAAAA,EAAA,IAC1B+C,GAQA0kE,EAAAvpF,UAAA6sF,qBAAA,SAAAnE,EAAArpF,GACA6B,KAAAglF,QAAA6C,UAAA7nF,KAAA2kF,mBAAA6C,GAAArpF,IAQAkqF,EAAAvpF,UAAAksF,sBAAA,SAAAxD,EAAArpF,GACA6B,KAAAglF,QAAA4G,iBAAA5rF,KAAA2kF,mBAAA6C,IAAA,EAAArpF,IAWAkqF,EAAAvpF,UAAA+sF,qBAAA,SAAAC,EAAA/qE,EAAA3d,EAAAoc,EAAAjV,GACA,IAAAw6E,EAAA/kF,KAAAyrF,qBAAAK,GAEA/G,EAAA,IAGA/kF,KAAAglF,QAAA+B,wBAAAhC,GACA/kF,KAAAglF,QAAAgC,oBAAAjC,EAAAhkE,EAAA3d,GAAA,EAAAoc,EAAAjV,KAMA89E,EAAAvpF,UAAA+pF,uBAAA,WACQzoF,EAAKJ,KAAAuoF,cACLnoF,EAAKJ,KAAAwoF,cACLpoF,EAAKJ,KAAAyoF,eACbzoF,KAAA0oF,gBAAA,MAMAL,EAAAvpF,UAAAgqF,2BAAA,aASAT,EAAAvpF,UAAAitF,sBAAA,SAAAC,EAAAC,GACA,IAAAjJ,EAAAhjF,KAAAglF,QACA0C,EAAA1E,EAAAI,gBAUA,OATAJ,EAAAyC,YAAAzC,EAAA0C,WAAAgC,GACA1E,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAAkJ,mBAAAlJ,EAAA8C,QACA9C,EAAA4C,cAAA5C,EAAA0C,WAAA1C,EAAA6C,mBAAA7C,EAAA8C,aACAlzE,IAAAo5E,GACAhJ,EAAA4C,cNzhBO,KAVA,MMmiBgDoG,QAEvDp5E,IAAAq5E,GACAjJ,EAAA4C,cN5hBO,KALA,MMiiBgDqG,GAEvDvE,GAUAW,EAAAvpF,UAAAqtF,mBAAA,SAAAxgF,EAAA/K,EAAAorF,EAAAC,GACA,IAAAjJ,EAAAhjF,KAAAglF,QACA0C,EAAA1nF,KAAA+rF,sBAAAC,EAAAC,GAEA,OADAjJ,EAAA2C,WAAA3C,EAAA0C,WAAA,EAAA1C,EAAAuC,KAAA55E,EAAA/K,EAAA,EAAAoiF,EAAAuC,KAAAvC,EAAAwC,cAAA,MACAkC,GASAW,EAAAvpF,UAAAskF,cAAA,SAAApa,EAAAgjB,EAAAC,GACA,IAAAjJ,EAAAhjF,KAAAglF,QACA0C,EAAA1nF,KAAA+rF,sBAAAC,EAAAC,GAEA,OADAjJ,EAAA2C,WAAA3C,EAAA0C,WAAA,EAAA1C,EAAAuC,KAAAvC,EAAAuC,KAAAvC,EAAAwC,cAAAxc,GACA0e,GAEAW,EAxhBe,CAyhBbz0E,GCvuBEw4E,GAAyB,WAC7B,IAAA/7E,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAyD7B27E,GAAA,SAAAx7E,GAKA,SAAAw7E,EAAApzE,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAke,OAAAjF,EAAAiF,OACAu8D,OAAAxhE,EAAAwhE,OACAF,QAAAthE,EAAAshE,QACAzhC,YAAA7/B,EAAA6/B,YACAgiC,SAAA7hE,EAAA6hE,SACAF,UAAA3hE,EAAA2hE,UACAK,MAAAhiE,EAAAgiE,SACSj7E,KAMT,OADAgR,EAAAs7E,WAAArzE,EAAAszE,UACAv7E,EAiBA,OApCIo7E,GAASC,EAAAx7E,GAyBbw7E,EAAAvtF,UAAA0tF,YAAA,SAAAvzC,GACA,OAAAj5C,KAAAssF,WAAArzC,IAOAozC,EAAAvtF,UAAA2tF,aAAA,WACA,OAAAzsF,KAAAssF,YAEAD,EArCA,CAsCEpS,IACayS,GAAA,GAaR,SAAAC,GAAAC,EAAAtuE,EAAAuuE,GAEP,IAAA/zC,EAAA,GAEAyzC,EAAA,GAEAhS,EAAA,GAEAK,EAAA,GAEAK,EAAA,GACA6R,OAAAl6E,IAAAi6E,IAAA,GAQA97E,EAAA67E,EAAA,aACAxhE,EAAqBE,GAAava,EAAAglC,QAAA,gDAC1BzqB,GAAava,GACrB8W,EAAAuD,EAAAlD,mBAEA6kE,EAAA,MAAA3hE,EAAAhD,qBAAA65C,OAAA,KA0CA,OAzCA2qB,EAAA,WAAAhqF,KAAA,SAAAzD,EAAAyH,GACA,OAAAA,EAAA,iBAAAzH,EAAA,mBAEAytF,EAAA,WAAAnzE,QAAA,SAAAuzE,GAoBA,KAhBAF,EAAA/sF,OAAA,IAC8B2c,GAAIowE,EAAA,SAAAG,GAClC,OAAAD,EAAA,YAAAC,EAAA,aAKA,IAAAD,EAAA,WAAA3sF,QAAA,MACAusF,EAAA,eAAAI,EAAA,aAAAC,EAAA,aAQA,CACAV,EAAAzrF,KAAAksF,EAAA,YACA,IAAAnsE,EAAA,MAAAmsE,EAAA,iBAAAnlE,EACAqlE,EAAAF,EAAA,UACAG,EAAAH,EAAA,WACAD,EACAxS,EAAAz5E,KAAA,CAAAksF,EAAA,iBACAA,EAAA,mBAGAzS,EAAAz5E,KAAAksF,EAAA,eAEAl0C,EAAAh4C,KAAA+f,GACA+5D,EAAA95E,KAAAosF,GAAAC,EACAD,EAAA,CAAAA,EAAAC,IACAlS,EAAAn6E,KAAA,CAAAksF,EAAA,YAAAA,EAAA,kBAGA,IAAAX,GAAA,CACAnuE,OAAAI,EACAi8D,UACAzhC,cACAyzC,YACA3R,YACAK,UClLe,IAAAmS,GAAA,CACfv+C,KAAA,EACAC,QAAA,EACAC,OAAA,EACAz5B,MAAA,GC+Me+3E,GAtMD,WAId,SAAAC,EAAAr0E,GAKAjZ,KAAAutF,SAAAt0E,EAAAuqC,QAKAxjD,KAAAwtF,gBAAAv0E,EAAAw0E,eAKAztF,KAAAs0D,UAAAr7C,EAAA6H,SAKA9gB,KAAA0tF,OAAAz0E,EAAAiX,MA4KA,OArKAo9D,EAAAxuF,UAAAqc,MAAA,WACA,WAAAmyE,EAAA,CACA9pC,QAAAxjD,KAAAmkD,aACAj0B,MAAAlwB,KAAAgwE,WACAlvD,SAAA9gB,KAAAu7C,cACAkyC,eAAAztF,KAAA+vE,uBAQAud,EAAAxuF,UAAAqlD,WAAA,WACA,OAAAnkD,KAAAutF,UAOAD,EAAAxuF,UAAAixE,kBAAA,WACA,OAAA/vE,KAAAwtF,iBAOAF,EAAAxuF,UAAAy8C,YAAA,WACA,OAAAv7C,KAAAs0D,WAOAg5B,EAAAxuF,UAAAkxE,SAAA,WACA,OAAAhwE,KAAA0tF,QAQAJ,EAAAxuF,UAAA4wE,UAAA,WACA,OAAez/D,KAQfq9E,EAAAxuF,UAAAguE,SAAA,SAAA/tB,GACA,OAAe9uC,KAOfq9E,EAAAxuF,UAAA6uF,qBAAA,SAAA5uC,GACA,OAAe9uC,KAMfq9E,EAAAxuF,UAAA8uF,cAAA,WACA,OAAe39E,KAMfq9E,EAAAxuF,UAAA+uF,aAAA,WACA,OAAe59E,KAMfq9E,EAAAxuF,UAAAgvF,yBAAA,WACA,OAAe79E,KAOfq9E,EAAAxuF,UAAA+wE,UAAA,WACA,OAAe5/D,KAOfq9E,EAAAxuF,UAAA+tD,QAAA,WACA,OAAe58C,KAQfq9E,EAAAxuF,UAAA8lD,WAAA,SAAApB,GACAxjD,KAAAutF,SAAA/pC,GAQA8pC,EAAAxuF,UAAAivF,kBAAA,SAAAN,GACAztF,KAAAwtF,gBAAAC,GAQAH,EAAAxuF,UAAA87C,YAAA,SAAA95B,GACA9gB,KAAAs0D,UAAAxzC,GAQAwsE,EAAAxuF,UAAAkvF,SAAA,SAAA99D,GACAlwB,KAAA0tF,OAAAx9D,GASAo9D,EAAAxuF,UAAAmvF,kBAAA,SAAA97E,EAAAigE,GACA,OAAeniE,KAMfq9E,EAAAxuF,UAAAuC,KAAA,WACQ4O,KAQRq9E,EAAAxuF,UAAAovF,oBAAA,SAAA/7E,EAAAigE,GACQniE,KAERq9E,EApMc,GChBVa,GAAyB,WAC7B,IAAA99E,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2bd09E,GAzYC,SAAAv9E,GAKhB,SAAAw9E,EAAAp1E,GACA,IAAAjI,EAAAhR,KAIAytF,OAAA76E,IAAAqG,EAAAw0E,gBACAx0E,EAAAw0E,eA0EA,OAzEAz8E,EAAAH,EAAAxT,KAAA2C,KAAA,CACAwjD,QAAA,EACAiqC,iBACA3sE,cAAAlO,IAAAqG,EAAA6H,SAAA7H,EAAA6H,SAAA,EACAoP,MAAA,KACSlwB,MAKTsoF,QAAA,KAKAt3E,EAAAs9E,oBAAA,KAKAt9E,EAAAu9E,WAAA37E,IAAAqG,EAAAyzD,KAAAzzD,EAAAyzD,KAAA,KAKA17D,EAAAwpE,QAAA,MAKAxpE,EAAA8sB,QAAA7kB,EAAAu1E,OAKAx9E,EAAAy9E,aAA0C77E,IAAAqG,EAAAoM,OAC1CpM,EAAAoM,OAAApM,EAAAy1E,QAKA19E,EAAA29E,SAAA11E,EAAA21E,QAKA59E,EAAA+sB,YAAAnrB,IAAAqG,EAAA8K,MAAA9K,EAAA8K,MAAA,EAKA/S,EAAA69E,aAAAj8E,IAAAqG,EAAA0zD,OAAA1zD,EAAA0zD,OAAA,KAKA37D,EAAAkuD,QAAA,KAKAluD,EAAA89E,MAAA,KAKA99E,EAAA+9E,WAAA,KAKA/9E,EAAAg+E,uBAAA,KACAh+E,EAAAwpD,UACAxpD,EAkTA,OAtYIm9E,GAASE,EAAAx9E,GA2Fbw9E,EAAAvvF,UAAAqc,MAAA,WACA,IAAAI,EAAA,IAAA8yE,EAAA,CACA3hB,KAAA1sE,KAAA4sE,UAAA5sE,KAAA4sE,UAAAzxD,aAAAvI,EACA47E,OAAAxuF,KAAAivF,YACA5pE,OAAArlB,KAAA+5B,YACA60D,QAAA5uF,KAAAkvF,aACAnrE,MAAA/jB,KAAAu+B,WACAouC,OAAA3sE,KAAA6sE,YAAA7sE,KAAA6sE,YAAA1xD,aAAAvI,EACAkO,SAAA9gB,KAAAu7C,cACAkyC,eAAAztF,KAAA+vE,sBAIA,OAFAx0D,EAAAqpC,WAAA5kD,KAAAmkD,cACA5oC,EAAAyyE,SAAAhuF,KAAAgwE,YACAz0D,GAMA8yE,EAAAvvF,UAAA4wE,UAAA,WACA,OAAA1vE,KAAAk/D,SAOAmvB,EAAAvvF,UAAAy/B,SAAA,WACA,OAAAv+B,KAAA+9B,QAOAswD,EAAAvvF,UAAA8tE,QAAA,WACA,OAAA5sE,KAAAuuF,OAKAF,EAAAvvF,UAAA6uF,qBAAA,SAAA5uC,GACA,OAAA/+C,KAAAsuF,qBAMAD,EAAAvvF,UAAAguE,SAAA,SAAA/tB,GACA,OAAA/+C,KAAAsoF,SAKA+F,EAAAvvF,UAAA+uF,aAAA,WACA,OAAA7tF,KAAA+uF,YAKAV,EAAAvvF,UAAAgvF,yBAAA,WACA,OAAA9tF,KAAAgvF,wBAKAX,EAAAvvF,UAAA8uF,cAAA,WACA,OAAeR,GAAUr+C,QAMzBs/C,EAAAvvF,UAAA+wE,UAAA,WACA,OAAA7vE,KAAAw6E,SAOA6T,EAAAvvF,UAAAmwF,UAAA,WACA,OAAAjvF,KAAA89B,SAOAuwD,EAAAvvF,UAAAi7B,UAAA,WACA,OAAA/5B,KAAAyuF,SAOAJ,EAAAvvF,UAAAowF,WAAA,WACA,OAAAlvF,KAAA2uF,UAMAN,EAAAvvF,UAAA+tD,QAAA,WACA,OAAA7sD,KAAA8uF,OAOAT,EAAAvvF,UAAA+tE,UAAA,WACA,OAAA7sE,KAAA6uF,SAKAR,EAAAvvF,UAAAmvF,kBAAA,SAAA97E,EAAAigE,KAMAic,EAAAvvF,UAAAuC,KAAA,aAIAgtF,EAAAvvF,UAAAovF,oBAAA,SAAA/7E,EAAAigE,KAIAic,EAAAvvF,UAAA07D,QAAA,WACA,IAKAkK,EALAsJ,EAAA,GACAI,EAAA,GACAE,EAAA,EACAJ,EAAA,KACAC,EAAA,EAEAghB,EAAA,EACAnvF,KAAA6uF,UAEA,QADAnqB,EAAA1kE,KAAA6uF,QAAAjgB,cAEAlK,EzBvLO,QyByLPA,EAA0B1B,GAAW0B,QAErC9xD,KADAu8E,EAAAnvF,KAAA6uF,QAAAvuE,cAEA6uE,EzBxKO,GyB0KPjhB,EAAAluE,KAAA6uF,QAAA5f,cACAd,EAAAnuE,KAAA6uF,QAAA1f,yBAEAv8D,KADAw7D,EAAApuE,KAAA6uF,QAAAxf,iBAEAjB,EzB5MO,cyB+MPx7D,KADAo7D,EAAAhuE,KAAA6uF,QAAA9f,gBAEAf,EzB/NO,cyBkOPp7D,KADA07D,EAAAtuE,KAAA6uF,QAAArf,mBAEAlB,EzB/MO,KyBkNP,IAAAvtD,EAAA,GAAA/gB,KAAAyuF,QAAAU,GAAA,EAEAC,EAAA,CACA1qB,cACAyqB,cACApuE,OACAitD,UACAE,WACAC,iBACAC,WACAE,cAEA3+D,EAAsB4xC,GAAqBxgC,KAC3C/gB,KAAAsoF,QAAA34E,EAAA+xC,OAGA,IAAAouB,EADA/uD,EAAA/gB,KAAAsoF,QAAA38E,MAEA3L,KAAAqvF,MAAAD,EAAAz/E,EAAA,KACA3P,KAAAsvF,0BAAAF,GACApvF,KAAAk/D,QAAA,CAAAn+C,EAAA,EAAAA,EAAA,GACA/gB,KAAA8uF,MAAA,CAAA/tE,KACA/gB,KAAA+uF,WAAA,CAAAjf,MASAue,EAAAvvF,UAAAuwF,MAAA,SAAAD,EAAAz/E,EAAA7P,EAAA0e,GACA,IAAAthB,EAAAqyF,EAAAC,EAEA7/E,EAAA05D,aAAA,aAEA15D,EAAA+gB,UAAA5wB,EAAA0e,GACA7O,EAAA68D,YACA,IAAAgiB,EAAAxuF,KAAA89B,QACA,GAAA0wD,IAAAxjF,IACA2E,EAAA88D,IAAA2iB,EAAAruE,KAAA,EAAAquE,EAAAruE,KAAA,EAAA/gB,KAAAyuF,QAAA,IAAApvF,KAAAslB,IAAA,OAEA,CACA,IAAAiqE,OAAAh8E,IAAA5S,KAAA2uF,SAAA3uF,KAAA2uF,SACA3uF,KAAAyuF,QAIA,IAHAG,IAAA5uF,KAAAyuF,UACAD,GAAA,GAEAtxF,EAAA,EAAuBA,GAAAsxF,EAAatxF,IACpCqyF,EAAA,EAAAryF,EAAAmC,KAAAslB,GAAA6pE,EAAAnvF,KAAAslB,GAAA,EAAA3kB,KAAA+9B,OACAyxD,EAAAtyF,EAAA,KAAA8C,KAAAyuF,QAAAG,EACAj/E,EAAAw8D,OAAAijB,EAAAruE,KAAA,EAAAyuE,EAAAnwF,KAAA4hB,IAAAsuE,GAAAH,EAAAruE,KAAA,EAAAyuE,EAAAnwF,KAAA8hB,IAAAouE,IAGA,GAAAvvF,KAAAuuF,MAAA,CACA,IAAAhtB,EAAAvhE,KAAAuuF,MAAA3f,WACA,OAAArN,IACAA,EzBnSO,QyBqSP5xD,EAAA80D,UAAgCzB,GAAWzB,GAC3C5xD,EAAA+8D,OAEA1sE,KAAA6uF,UACAl/E,EAAA+0D,YAAA0qB,EAAA1qB,YACA/0D,EAAA0+D,UAAA+gB,EAAAD,YACAx/E,EAAAs+D,aAAAmhB,EAAAlhB,WACAv+D,EAAAs+D,YAAAmhB,EAAAlhB,UACAv+D,EAAAw+D,eAAAihB,EAAAjhB,gBAEAx+D,EAAAq+D,QAAuDohB,EAAA,QACvDz/E,EAAAy+D,SAAyDghB,EAAA,SACzDz/E,EAAA2+D,WAAA8gB,EAAA9gB,WACA3+D,EAAAg9D,UAEAh9D,EAAAy8D,aAMAiiB,EAAAvvF,UAAAwwF,0BAAA,SAAAF,GAEA,GADApvF,KAAAgvF,uBAAA,CAAAI,EAAAruE,KAAAquE,EAAAruE,MACA/gB,KAAAuuF,MACAvuF,KAAAsuF,oBAAAtuF,KAAAsoF,YADA,CAMA,IAAA34E,EAAsB4xC,GAAqB6tC,EAAAruE,KAAAquE,EAAAruE,MAC3C/gB,KAAAsuF,oBAAA3+E,EAAA+xC,OACA1hD,KAAAyvF,wBAAAL,EAAAz/E,EAAA,OASA0+E,EAAAvvF,UAAA2wF,wBAAA,SAAAL,EAAAz/E,EAAA7P,EAAA0e,GAEA7O,EAAA05D,aAAA,aAEA15D,EAAA+gB,UAAA5wB,EAAA0e,GACA7O,EAAA68D,YACA,IAAAgiB,EAAAxuF,KAAA89B,QACA,GAAA0wD,IAAAxjF,IACA2E,EAAA88D,IAAA2iB,EAAAruE,KAAA,EAAAquE,EAAAruE,KAAA,EAAA/gB,KAAAyuF,QAAA,IAAApvF,KAAAslB,IAAA,OAEA,CACA,IAAAiqE,OAAAh8E,IAAA5S,KAAA2uF,SAAA3uF,KAAA2uF,SACA3uF,KAAAyuF,QACAG,IAAA5uF,KAAAyuF,UACAD,GAAA,GAEA,IAAAtxF,OAAA,EAAAsyF,OAAA,EAAAD,OAAA,EACA,IAAAryF,EAAA,EAAuBA,GAAAsxF,EAAatxF,IACpCqyF,EAAA,EAAAryF,EAAAmC,KAAAslB,GAAA6pE,EAAAnvF,KAAAslB,GAAA,EAAA3kB,KAAA+9B,OACAyxD,EAAAtyF,EAAA,KAAA8C,KAAAyuF,QAAAG,EACAj/E,EAAAw8D,OAAAijB,EAAAruE,KAAA,EAAAyuE,EAAAnwF,KAAA4hB,IAAAsuE,GAAAH,EAAAruE,KAAA,EAAAyuE,EAAAnwF,KAAA8hB,IAAAouE,IAGA5/E,EAAA80D,UzBpWO,OyBqWP90D,EAAA+8D,OACA1sE,KAAA6uF,UACAl/E,EAAA+0D,YAAA0qB,EAAA1qB,YACA/0D,EAAA0+D,UAAA+gB,EAAAD,YACAC,EAAAlhB,WACAv+D,EAAAs+D,YAAAmhB,EAAAlhB,UACAv+D,EAAAw+D,eAAAihB,EAAAjhB,gBAEAx+D,EAAAg9D,UAEAh9D,EAAAy8D,aAEAiiB,EAvYgB,CAwYdhB,IC1bEqC,GAAyB,WAC7B,IAAAr/E,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoEdi/E,GA3Cf,SAAA9+E,GAKA,SAAA++E,EAAA52E,GACA,IACAC,EAAAD,GAAwD,GAOxD,OANAnI,EAAAxT,KAAA2C,KAAA,CACAwuF,OAAAxjF,IACA0hE,KAAAzzD,EAAAyzD,KACArnD,OAAApM,EAAAoM,OACAsnD,OAAA1zD,EAAA0zD,UACS3sE,KA4BT,OAxCI0vF,GAASE,EAAA/+E,GAqBb++E,EAAA9wF,UAAAqc,MAAA,WACA,IAAAI,EAAA,IAAAq0E,EAAA,CACAljB,KAAA1sE,KAAA4sE,UAAA5sE,KAAA4sE,UAAAzxD,aAAAvI,EACA+5D,OAAA3sE,KAAA6sE,YAAA7sE,KAAA6sE,YAAA1xD,aAAAvI,EACAyS,OAAArlB,KAAA+5B,cAIA,OAFAxe,EAAAqpC,WAAA5kD,KAAAmkD,cACA5oC,EAAAyyE,SAAAhuF,KAAAgwE,YACAz0D,GAQAq0E,EAAA9wF,UAAA+wF,UAAA,SAAAxqE,GACArlB,KAAAyuF,QAAAppE,GAEAuqE,EAzCA,CA0CExB,ICda0B,GA1Cf,WAIA,SAAAC,EAAA/2E,GACA,IAAAC,EAAAD,GAAA,GAKAhZ,KAAAgwF,YAAAp9E,IAAAqG,EAAAsoD,MAAAtoD,EAAAsoD,MAAA,KA8BA,OAvBAwuB,EAAAjxF,UAAAqc,MAAA,WACA,IAAAomD,EAAAvhE,KAAA4uE,WACA,WAAAmhB,EAAA,CACAxuB,MAAAn1D,MAAA+K,QAAAoqD,KAAA//D,QAAA+/D,QAAA3uD,KAQAm9E,EAAAjxF,UAAA8vE,SAAA,WACA,OAAA5uE,KAAAgwF,QAQAD,EAAAjxF,UAAAmxF,SAAA,SAAA1uB,GACAvhE,KAAAgwF,OAAAzuB,GAEAwuB,EAxCA,GCPeG,GAAA,CACfC,SAAA,WACA3pE,OAAA,UCTI4pE,GAAyB,WAC7B,IAAA//E,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoGd2/E,GA9EF,SAAAx/E,GAQb,SAAAy/E,EAAApyE,EAAA2C,EAAAk+B,EAAAlN,GACA,IAAA7gC,EAAAH,EAAAxT,KAAA2C,YAqBA,OAhBAgR,EAAAkN,SAKAlN,EAAAw2C,YAAAzI,EAKA/tC,EAAA6P,aAKA7P,EAAA6gC,QACA7gC,EA8CA,OA3EIo/E,GAASE,EAAAz/E,GAkCby/E,EAAAxxF,UAAAkY,QAAA,WACAhX,KAAA+U,cAA2BK,EAASC,SAKpCi7E,EAAAxxF,UAAAkpB,UAAA,WACA,OAAAhoB,KAAAke,QAMAoyE,EAAAxxF,UAAAguE,SAAA,WACA,OAAe78D,KAKfqgF,EAAAxxF,UAAAyxF,cAAA,WACA,OAAAvwF,KAAAwnD,aAKA8oC,EAAAxxF,UAAAu8C,cAAA,WACA,OAAiCr7C,KAAA,YAKjCswF,EAAAxxF,UAAAgzC,SAAA,WACA,OAAA9xC,KAAA6xC,OAMAy+C,EAAAxxF,UAAAuC,KAAA,WACQ4O,KAERqgF,EA5Ea,CA6EX57E,GCnGE87E,GAAyB,WAC7B,IAAAngF,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAsJtB,SAAA+/E,GAAAznB,EAAA0nB,EAAAC,GACP,IAAAC,EAA0C,EAC1C,GAAAA,EAAAC,OAAA,CACA,IAAAC,EAAAF,EAAAC,SACAE,GAAA,EAaA,OATAD,EAAAE,KAAA,WACAD,GACAL,MAESO,MAAA,SAAAl2D,GACTg2D,GACAJ,MATA,WACAI,GAAA,GAaA,IAAA3gC,EAAA,CACQ38C,EAAUm9E,EAAMx7E,EAASY,KAAA06E,GACzBj9E,EAAUm9E,EAAMx7E,EAASE,MAAAq7E,IAEjC,kBACAvgC,EAAA32C,QAA6BlG,IAGd,IAAA29E,GA3IC,SAAArgF,GAUhB,SAAAsgF,EAAAjzE,EAAA2C,EAAAk+B,EAAA6jB,EAAAC,EAAAuuB,GACA,IAAApgF,EAAAH,EAAAxT,KAAA2C,KAAAke,EAAA2C,EAAAk+B,EAAsEquC,GAAUv+C,OAAA7uC,KA6BhF,OAxBAgR,EAAAqgF,KAAAzuB,EAKA5xD,EAAAi5D,OAAA,IAAAqnB,MACA,OAAAzuB,IACA7xD,EAAAi5D,OAAApH,eAMA7xD,EAAAugF,UAAA,KAKAvgF,EAAA6gC,MAAsBu7C,GAAUv+C,KAKhC79B,EAAAwgF,mBAAAJ,EACApgF,EAgEA,OAvGIw/E,GAASW,EAAAtgF,GA6CbsgF,EAAAryF,UAAAguE,SAAA,WACA,OAAA9sE,KAAAiqE,QAOAknB,EAAAryF,UAAA2yF,kBAAA,WACAzxF,KAAA6xC,MAAqBu7C,GAAU93E,MAC/BtV,KAAA0xF,iBACA1xF,KAAAgX,WAOAm6E,EAAAryF,UAAA6yF,iBAAA,gBACA/+E,IAAA5S,KAAA6gB,aACA7gB,KAAA6gB,WAA8BN,GAASvgB,KAAAke,QAAAle,KAAAiqE,OAAArpE,QAEvCZ,KAAA6xC,MAAqBu7C,GAAUr+C,OAC/B/uC,KAAA0xF,iBACA1xF,KAAAgX,WASAm6E,EAAAryF,UAAAuC,KAAA,WACArB,KAAA6xC,OAA0Bu7C,GAAUv+C,MAAA7uC,KAAA6xC,OAAuBu7C,GAAU93E,QACrEtV,KAAA6xC,MAAyBu7C,GAAUt+C,QACnC9uC,KAAAgX,UACAhX,KAAAwxF,mBAAAxxF,UAAAqxF,MACArxF,KAAAuxF,UAAAd,GAAAzwF,KAAAiqE,OAAAjqE,KAAA2xF,iBAAAjzF,KAAAsB,WAAAyxF,kBAAA/yF,KAAAsB,SAMAmxF,EAAAryF,UAAA8yF,SAAA,SAAA5oB,GACAhpE,KAAAiqE,OAAAjB,GAOAmoB,EAAAryF,UAAA4yF,eAAA,WACA1xF,KAAAuxF,YACAvxF,KAAAuxF,YACAvxF,KAAAuxF,UAAA,OAGAJ,EAxGgB,CAyGdd,IC5IEwB,GAAyB,WAC7B,IAAAxhF,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAmBzBohF,GAAS,SAAAjhF,GAUb,SAAAkhF,EAAA/oB,EAAApG,EAAA7hD,EAAA8hD,EAAAmvB,EAAAzwB,GACA,IAAAvwD,EAAAH,EAAAxT,KAAA2C,YAiDA,OA5CAgR,EAAAihF,mBAAA,KAKAjhF,EAAAi5D,OAAAjB,GAAA,IAAAsoB,MACA,OAAAzuB,IACwC7xD,EAAA,OAAA6xD,eAMxC7xD,EAAAs3E,QAAA/mB,EAAA3xD,SAAAC,cAAA,eAKAmB,EAAAg/E,OAAAzuB,EAKAvwD,EAAAugF,UAAA,KAKAvgF,EAAAkhF,YAAAF,EAKAhhF,EAAA89E,MAAA/tE,EAKA/P,EAAAqgF,KAAAzuB,EAKA5xD,EAAAmhF,SACAnhF,EA6IA,OAxMI6gF,GAASE,EAAAlhF,GAiEbkhF,EAAAjzF,UAAAszF,WAAA,WACA,QAAAx/E,IAAA5S,KAAAmyF,UAAAnyF,KAAAkyF,cAAgE9E,GAAUr+C,OAAA,CAC1E/uC,KAAAmyF,UAAA,EACA,IAAAxiF,EAA0B4xC,GAAqB,KAC/C,IACA5xC,EAAAo5D,UAAA/oE,KAAAiqE,OAAA,KACAt6D,EAAA0iF,aAAA,SAEA,MAAAnzF,GACAc,KAAAmyF,UAAA,GAGA,WAAAnyF,KAAAmyF,UAKAJ,EAAAjzF,UAAAwzF,qBAAA,WACAtyF,KAAA+U,cAA2BK,EAASC,SAKpC08E,EAAAjzF,UAAA2yF,kBAAA,WACAzxF,KAAAkyF,YAA2B9E,GAAU93E,MACrCtV,KAAA0xF,iBACA1xF,KAAAsyF,wBAKAP,EAAAjzF,UAAA6yF,iBAAA,WACA3xF,KAAAkyF,YAA2B9E,GAAUr+C,OACrC/uC,KAAA8uF,QACA9uF,KAAAiqE,OAAAt+D,MAAA3L,KAAA8uF,MAAA,GACA9uF,KAAAiqE,OAAArpE,OAAAZ,KAAA8uF,MAAA,IAEA9uF,KAAA8uF,MAAA,CAAA9uF,KAAAiqE,OAAAt+D,MAAA3L,KAAAiqE,OAAArpE,QACAZ,KAAA0xF,iBACA1xF,KAAAuyF,gBACAvyF,KAAAsyF,wBAMAP,EAAAjzF,UAAAguE,SAAA,SAAA/tB,GACA,OAAA/+C,KAAAsoF,QAAAtoF,KAAAsoF,QAAAtoF,KAAAiqE,QAKA8nB,EAAAjzF,UAAA8uF,cAAA,WACA,OAAA5tF,KAAAkyF,aAMAH,EAAAjzF,UAAA6uF,qBAAA,SAAA5uC,GACA,IAAA/+C,KAAAiyF,mBACA,GAAAjyF,KAAAoyF,aAAA,CACA,IAAAzmF,EAAA3L,KAAA8uF,MAAA,GACAluF,EAAAZ,KAAA8uF,MAAA,GACAn/E,EAA8B4xC,GAAqB51C,EAAA/K,GACnD+O,EAAA6iF,SAAA,IAAA7mF,EAAA/K,GACAZ,KAAAiyF,mBAAAtiF,EAAA+xC,YAGA1hD,KAAAiyF,mBAAAjyF,KAAAiqE,OAGA,OAAAjqE,KAAAiyF,oBAKAF,EAAAjzF,UAAA+tD,QAAA,WACA,OAAA7sD,KAAA8uF,OAKAiD,EAAAjzF,UAAA2zF,OAAA,WACA,OAAAzyF,KAAAqxF,MAKAU,EAAAjzF,UAAAuC,KAAA,WACA,GAAArB,KAAAkyF,aAAgC9E,GAAUv+C,KAAA,CAC1C7uC,KAAAkyF,YAA+B9E,GAAUt+C,QACzC,IAC4C9uC,KAAA,OAAA4iE,IAAA5iE,KAAAqxF,KAE5C,MAAAnyF,GACAc,KAAAyxF,oBAEAzxF,KAAAuxF,UAA6Bd,GAAWzwF,KAAAiqE,OAAAjqE,KAAA2xF,iBAAAjzF,KAAAsB,WAAAyxF,kBAAA/yF,KAAAsB,SAMxC+xF,EAAAjzF,UAAAyzF,cAAA,WACA,GAAAvyF,KAAAgwF,SAAAhwF,KAAAoyF,aAAA,CAGApyF,KAAAsoF,QAAA38E,MAAA3L,KAAAiqE,OAAAt+D,MACA3L,KAAAsoF,QAAA1nF,OAAAZ,KAAAiqE,OAAArpE,OACA,IAAA8xF,EAAA1yF,KAAAsoF,QAAAx4E,WAAA,MACA4iF,EAAA3pB,UAAA/oE,KAAAiqE,OAAA,KAMA,IALA,IAAA0oB,EAAAD,EAAAL,aAAA,IAAAryF,KAAAiqE,OAAAt+D,MAAA3L,KAAAiqE,OAAArpE,QACAK,EAAA0xF,EAAA1xF,KACAjD,EAAAgC,KAAAgwF,OAAA,OACAruB,EAAA3hE,KAAAgwF,OAAA,OACAppF,EAAA5G,KAAAgwF,OAAA,OACA9yF,EAAA,EAAA0U,EAAA3Q,EAAAlB,OAAyC7C,EAAA0U,EAAQ1U,GAAA,EACjD+D,EAAA/D,IAAAc,EACAiD,EAAA/D,EAAA,IAAAykE,EACA1gE,EAAA/D,EAAA,IAAA0J,EAEA8rF,EAAAE,aAAAD,EAAA,OAOAZ,EAAAjzF,UAAA4yF,eAAA,WACA1xF,KAAAuxF,YACAvxF,KAAAuxF,YACAvxF,KAAAuxF,UAAA,OAGAQ,EAzMa,CA0MXr9E,GAkBa,IC3OAm+E,GAAA,CACfx1E,YAAA,cACAC,aAAA,eACAC,SAAA,WACAC,UAAA,aCXIs1E,GAAyB,WAC7B,IAAAziF,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAmXdqiF,GAnTP,SAAAliF,GAKR,SAAAmiF,EAAAh6E,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GAIAwqC,OAAA5wC,IAAAqG,EAAAuqC,QAAAvqC,EAAAuqC,QAAA,EAIA1iC,OAAAlO,IAAAqG,EAAA6H,SAAA7H,EAAA6H,SAAA,EAIAoP,OAAAtd,IAAAqG,EAAAiX,MAAAjX,EAAAiX,MAAA,EAIAu9D,OAAA76E,IAAAqG,EAAAw0E,gBACAx0E,EAAAw0E,gBACAz8E,EAAAH,EAAAxT,KAAA2C,KAAA,CACAwjD,UACA1iC,WACAoP,QACAu9D,oBACSztF,MAKTk/D,aAAAtsD,IAAAqG,EAAA+K,OAAA/K,EAAA+K,OAAA,QAKAhT,EAAAiiF,kBAAA,KAKAjiF,EAAAkiF,mBAAAtgF,IAAAqG,EAAAk6E,aACAl6E,EAAAk6E,aAAmCN,GAAUt1E,SAK7CvM,EAAAoiF,mBAAAxgF,IAAAqG,EAAAo6E,aACAp6E,EAAAo6E,aAAmCnD,GAAeC,SAKlDn/E,EAAAsiF,mBAAA1gF,IAAAqG,EAAAs6E,aACAt6E,EAAAs6E,aAAmCrD,GAAeC,SAKlDn/E,EAAAwiF,kBACA5gF,IAAAqG,EAAA4pD,YAAA5pD,EAAA4pD,YAAA,KAIA,IAAAmG,OAAAp2D,IAAAqG,EAAA23E,IAAA33E,EAAA23E,IAAA,KAIA6C,OAAA7gF,IAAAqG,EAAAw6E,QAAAx6E,EAAAw6E,QAAA,KAIA7wB,EAAA3pD,EAAA2pD,IACQ1oD,SAAMtH,IAAAgwD,GAAAoG,GAAA,GACN9uD,GAAM8uD,MAAAyqB,EAAA,QACd7gF,IAAAgwD,GAAA,IAAAA,EAAA7iE,SAAAipE,IACApG,EAA8C,EAAAA,KAAmBzyD,EAAM64D,IAE/D9uD,OAAMtH,IAAAgwD,KAAA7iE,OAAA,KAId,IAAAiyF,OAAAp/E,IAAAqG,EAAA2pD,IACYwqB,GAAUv+C,KAAQu+C,GAAUr+C,OAgCxC,OA3BA/9B,EAAAg/E,YAAAp9E,IAAAqG,EAAAsoD,MAAqDa,GAAOnpD,EAAAsoD,OAAA,KAK5DvwD,EAAA0iF,WFyEO,SAAY1qB,EAAApG,EAAA7hD,EAAA8hD,EAAAmvB,EAAAzwB,GACnB,IAAAoB,EAAoBI,GAAchlE,IAAA6kE,EAAAC,EAAAtB,GAKlC,OAJAoB,IACAA,EAAA,IAAwBmvB,GAAS9oB,EAAApG,EAAA7hD,EAAA8hD,EAAAmvB,EAAAzwB,GACzBwB,GAAcp6D,IAAAi6D,EAAAC,EAAAtB,EAAAoB,IAEtBA,EE/E2BgxB,CAAY3qB,EAA0B,EAAAyqB,EAAAziF,EAAAwiF,aAAAxB,EAAAhhF,EAAAg/E,QAKjEh/E,EAAA4iF,aAAAhhF,IAAAqG,EAAA1O,OAAA0O,EAAA1O,OAAA,MAKAyG,EAAA6iF,mBAAAjhF,IAAAqG,EAAA66E,aACA76E,EAAA66E,aAAmCjB,GAAUt1E,SAK7CvM,EAAAwpE,QAAA,KAKAxpE,EAAA89E,WAAAl8E,IAAAqG,EAAA8H,KAAA9H,EAAA8H,KAAA,KACA/P,EA0LA,OAhTI8hF,GAASE,EAAAniF,GA6HbmiF,EAAAl0F,UAAAqc,MAAA,WACA,WAAA63E,EAAA,CACAhvE,OAAAhkB,KAAAk/D,QAAA19D,QACA2xF,aAAAnzF,KAAAkzF,cACAG,aAAArzF,KAAAozF,cACAG,aAAAvzF,KAAAszF,cACAzwB,YAAA7iE,KAAAwzF,aACAjyB,MAAAvhE,KAAAgwF,QAAAhwF,KAAAgwF,OAAAxuF,MAAAxB,KAAAgwF,OAAAxuF,QAAAxB,KAAAgwF,aAAAp9E,EACAgwD,IAAA5iE,KAAAyyF,SACAloF,OAAAvK,KAAA4zF,QAAApyF,QACAsyF,aAAA9zF,KAAA6zF,cACA9yE,KAAA,OAAA/gB,KAAA8uF,MAAA9uF,KAAA8uF,MAAAttF,aAAAoR,EACA4wC,QAAAxjD,KAAAmkD,aACAj0B,MAAAlwB,KAAAgwE,WACAlvD,SAAA9gB,KAAAu7C,cACAkyC,eAAAztF,KAAA+vE,uBAOAijB,EAAAl0F,UAAA4wE,UAAA,WACA,GAAA1vE,KAAAizF,kBACA,OAAAjzF,KAAAizF,kBAEA,IAAAjvE,EAAAhkB,KAAAk/D,QACAn+C,EAAA/gB,KAAA6sD,UACA,GAAA7sD,KAAAozF,eAAkClD,GAAeC,UACjDnwF,KAAAszF,eAAkCpD,GAAeC,SAAA,CACjD,IAAApvE,EACA,YAEAiD,EAAAhkB,KAAAk/D,QAAA19D,QACAxB,KAAAozF,eAAsClD,GAAeC,WACrDnsE,EAAA,IAAAjD,EAAA,IAEA/gB,KAAAszF,eAAsCpD,GAAeC,WACrDnsE,EAAA,IAAAjD,EAAA,IAGA,GAAA/gB,KAAAkzF,eAAkCL,GAAUt1E,SAAA,CAC5C,IAAAwD,EACA,YAEAiD,IAAAhkB,KAAAk/D,UACAl7C,EAAAhkB,KAAAk/D,QAAA19D,SAEAxB,KAAAkzF,eAAsCL,GAAUr1E,WAChDxd,KAAAkzF,eAAsCL,GAAUv1E,eAChD0G,EAAA,IAAAA,EAAA,GAAAjD,EAAA,IAEA/gB,KAAAkzF,eAAsCL,GAAUx1E,aAChDrd,KAAAkzF,eAAsCL,GAAUv1E,eAChD0G,EAAA,IAAAA,EAAA,GAAAjD,EAAA,IAIA,OADA/gB,KAAAizF,kBAAAjvE,EACAhkB,KAAAizF,mBASAD,EAAAl0F,UAAAi1F,UAAA,SAAA/vE,GACAhkB,KAAAk/D,QAAAl7C,EACAhkB,KAAAizF,kBAAA,MAOAD,EAAAl0F,UAAA8vE,SAAA,WACA,OAAA5uE,KAAAgwF,QASAgD,EAAAl0F,UAAAguE,SAAA,SAAA/tB,GACA,OAAA/+C,KAAA0zF,WAAA5mB,SAAA/tB,IAKAi0C,EAAAl0F,UAAA+uF,aAAA,WACA,OAAA7tF,KAAA0zF,WAAA7mC,WAKAmmC,EAAAl0F,UAAAgvF,yBAAA,WACA,OAAA9tF,KAAA6tF,gBAKAmF,EAAAl0F,UAAA8uF,cAAA,WACA,OAAA5tF,KAAA0zF,WAAA9F,iBAKAoF,EAAAl0F,UAAA6uF,qBAAA,SAAA5uC,GACA,OAAA/+C,KAAA0zF,WAAA/F,qBAAA5uC,IAMAi0C,EAAAl0F,UAAA+wE,UAAA,WACA,GAAA7vE,KAAAw6E,QACA,OAAAx6E,KAAAw6E,QAEA,IAAAjwE,EAAAvK,KAAA4zF,QACA,GAAA5zF,KAAA6zF,eAAkChB,GAAUt1E,SAAA,CAC5C,IAAAwD,EAAA/gB,KAAA6sD,UACAmnC,EAAAh0F,KAAA0zF,WAAA7mC,UACA,IAAA9rC,IAAAizE,EACA,YAEAzpF,IAAA/I,QACAxB,KAAA6zF,eAAsChB,GAAUr1E,WAChDxd,KAAA6zF,eAAsChB,GAAUv1E,eAChD/S,EAAA,GAAAypF,EAAA,GAAAjzE,EAAA,GAAAxW,EAAA,IAEAvK,KAAA6zF,eAAsChB,GAAUx1E,aAChDrd,KAAA6zF,eAAsChB,GAAUv1E,eAChD/S,EAAA,GAAAypF,EAAA,GAAAjzE,EAAA,GAAAxW,EAAA,IAIA,OADAvK,KAAAw6E,QAAAjwE,EACAvK,KAAAw6E,SAOAwY,EAAAl0F,UAAA2zF,OAAA,WACA,OAAAzyF,KAAA0zF,WAAAjB,UAMAO,EAAAl0F,UAAA+tD,QAAA,WACA,OAAA7sD,KAAA8uF,MAAA9uF,KAAA8uF,MAAA9uF,KAAA0zF,WAAA7mC,WAKAmmC,EAAAl0F,UAAAmvF,kBAAA,SAAA97E,EAAAigE,GACA,OAAej/D,EAAMnT,KAAA0zF,WAAkBt+E,EAASC,OAAAlD,EAAAigE,IAUhD4gB,EAAAl0F,UAAAuC,KAAA,WACArB,KAAA0zF,WAAAryF,QAKA2xF,EAAAl0F,UAAAovF,oBAAA,SAAA/7E,EAAAigE,GACQ1+D,EAAQ1T,KAAA0zF,WAAkBt+E,EAASC,OAAAlD,EAAAigE,IAE3C4gB,EAjTQ,CAkTN3F,IC/Ja4G,GA1Lf,WAIA,SAAAC,EAAAl7E,GACA,IAAAC,EAAAD,GAAA,GAKAhZ,KAAAgwF,YAAAp9E,IAAAqG,EAAAsoD,MAAAtoD,EAAAsoD,MAAA,KAKAvhE,KAAAm0F,SAAAl7E,EAAA+0D,QAKAhuE,KAAAo0F,eAAAxhF,IAAAqG,EAAAi1D,SAAAj1D,EAAAi1D,SAAA,KAKAluE,KAAAq0F,gBAAAp7E,EAAAk1D,eAKAnuE,KAAAs0F,UAAAr7E,EAAAm1D,SAKApuE,KAAAu0F,YAAAt7E,EAAAq1D,WAKAtuE,KAAAw0F,OAAAv7E,EAAAtN,MAgJA,OAzIAuoF,EAAAp1F,UAAAqc,MAAA,WACA,IAAAomD,EAAAvhE,KAAA4uE,WACA,WAAAslB,EAAA,CACA3yB,MAAAn1D,MAAA+K,QAAAoqD,KAAA//D,QAAA+/D,QAAA3uD,EACAo7D,QAAAhuE,KAAA+uE,aACAb,SAAAluE,KAAAivE,cAAAjvE,KAAAivE,cAAAztE,aAAAoR,EACAu7D,eAAAnuE,KAAAmvE,oBACAf,SAAApuE,KAAAqvE,cACAf,WAAAtuE,KAAAwvE,gBACA7jE,MAAA3L,KAAAsgB,cAQA4zE,EAAAp1F,UAAA8vE,SAAA,WACA,OAAA5uE,KAAAgwF,QAOAkE,EAAAp1F,UAAAiwE,WAAA,WACA,OAAA/uE,KAAAm0F,UAOAD,EAAAp1F,UAAAmwE,YAAA,WACA,OAAAjvE,KAAAo0F,WAOAF,EAAAp1F,UAAAqwE,kBAAA,WACA,OAAAnvE,KAAAq0F,iBAOAH,EAAAp1F,UAAAuwE,YAAA,WACA,OAAArvE,KAAAs0F,WAOAJ,EAAAp1F,UAAA0wE,cAAA,WACA,OAAAxvE,KAAAu0F,aAOAL,EAAAp1F,UAAAwhB,SAAA,WACA,OAAAtgB,KAAAw0F,QAQAN,EAAAp1F,UAAAmxF,SAAA,SAAA1uB,GACAvhE,KAAAgwF,OAAAzuB,GAQA2yB,EAAAp1F,UAAA21F,WAAA,SAAAzmB,GACAhuE,KAAAm0F,SAAAnmB,GAcAkmB,EAAAp1F,UAAAmvE,YAAA,SAAAC,GACAluE,KAAAo0F,UAAAlmB,GAQAgmB,EAAAp1F,UAAA41F,kBAAA,SAAAvmB,GACAnuE,KAAAq0F,gBAAAlmB,GAQA+lB,EAAAp1F,UAAA61F,YAAA,SAAAvmB,GACApuE,KAAAs0F,UAAAlmB,GAQA8lB,EAAAp1F,UAAA81F,cAAA,SAAAtmB,GACAtuE,KAAAu0F,YAAAjmB,GAQA4lB,EAAAp1F,UAAA+1F,SAAA,SAAAlpF,GACA3L,KAAAw0F,OAAA7oF,GAEAuoF,EAxLA,GCkHAY,GAAA,WAIA,SAAAA,EAAA97E,GACA,IAAAC,EAAAD,GAAA,GAKAhZ,KAAAq6D,UAAA,KAKAr6D,KAAA+0F,kBAAAC,QACApiF,IAAAqG,EAAA+B,UACAhb,KAAAib,YAAAhC,EAAA+B,UAMAhb,KAAAuuF,WAAA37E,IAAAqG,EAAAyzD,KAAAzzD,EAAAyzD,KAAA,KAKA1sE,KAAAiqE,YAAAr3D,IAAAqG,EAAA+vD,MAAA/vD,EAAA+vD,MAAA,KAKAhpE,KAAAmpD,eAAAv2C,IAAAqG,EAAAmqD,SAAAnqD,EAAAmqD,SAAA,KAKApjE,KAAA6uF,aAAAj8E,IAAAqG,EAAA0zD,OAAA1zD,EAAA0zD,OAAA,KAKA3sE,KAAA4qE,WAAAh4D,IAAAqG,EAAAsuD,KAAAtuD,EAAAsuD,KAAA,KAKAvnE,KAAAi1F,QAAAh8E,EAAAyqC,OAwKA,OAjKAoxC,EAAAh2F,UAAAqc,MAAA,WACA,IAAAH,EAAAhb,KAAAsb,cAIA,OAHAN,GAAA,iBAAAA,IACAA,EAAwE,EAAAG,SAExE,IAAA25E,EAAA,CACA95E,WACA0xD,KAAA1sE,KAAA4sE,UAAA5sE,KAAA4sE,UAAAzxD,aAAAvI,EACAo2D,MAAAhpE,KAAA8sE,WAAA9sE,KAAA8sE,WAAA3xD,aAAAvI,EACA+5D,OAAA3sE,KAAA6sE,YAAA7sE,KAAA6sE,YAAA1xD,aAAAvI,EACA20D,KAAAvnE,KAAA+sE,UAAA/sE,KAAA+sE,UAAA5xD,aAAAvI,EACA8wC,OAAA1jD,KAAA8b,eASAg5E,EAAAh2F,UAAA8tD,YAAA,WACA,OAAA5sD,KAAAmpD,WAQA2rC,EAAAh2F,UAAAo2F,YAAA,SAAA9xB,GACApjE,KAAAmpD,UAAAia,GASA0xB,EAAAh2F,UAAAwc,YAAA,WACA,OAAAtb,KAAAq6D,WAQAy6B,EAAAh2F,UAAAkuE,oBAAA,WACA,OAAAhtE,KAAA+0F,mBAOAD,EAAAh2F,UAAA8tE,QAAA,WACA,OAAA5sE,KAAAuuF,OAOAuG,EAAAh2F,UAAAq2F,QAAA,SAAAzoB,GACA1sE,KAAAuuF,MAAA7hB,GAOAooB,EAAAh2F,UAAAguE,SAAA,WACA,OAAA9sE,KAAAiqE,QAOA6qB,EAAAh2F,UAAA8yF,SAAA,SAAA5oB,GACAhpE,KAAAiqE,OAAAjB,GAOA8rB,EAAAh2F,UAAA+tE,UAAA,WACA,OAAA7sE,KAAA6uF,SAOAiG,EAAAh2F,UAAAs2F,UAAA,SAAAzoB,GACA3sE,KAAA6uF,QAAAliB,GAOAmoB,EAAAh2F,UAAAiuE,QAAA,WACA,OAAA/sE,KAAA4qE,OAOAkqB,EAAAh2F,UAAAu2F,QAAA,SAAA9tB,GACAvnE,KAAA4qE,MAAArD,GAOAutB,EAAAh2F,UAAAgd,UAAA,WACA,OAAA9b,KAAAi1F,SAUAH,EAAAh2F,UAAAmc,YAAA,SAAAD,GACA,mBAAAA,EACAhb,KAAA+0F,kBAAA/5E,EAEA,iBAAAA,EACAhb,KAAA+0F,kBAAA,SAAAvpC,GACA,OACiEA,EAAAztD,IAAAid,IAGjEA,OAGApI,IAAAoI,IACAhb,KAAA+0F,kBAAA,WACA,WAJA/0F,KAAA+0F,kBAAAC,GAQAh1F,KAAAq6D,UAAAr/C,GAQA85E,EAAAh2F,UAAAgmD,UAAA,SAAApB,GACA1jD,KAAAi1F,QAAAvxC,GAEAoxC,EAxNA,GA6PA,IAAAQ,GAAA,KAMO,SAAAC,GAAA/pC,EAAA3qC,GAMP,IAAAy0E,GAAA,CACA,IAAA5oB,EAAA,IAAuBojB,GAAI,CAC3BvuB,MAAA,0BAEAoL,EAAA,IAAyBsnB,GAAM,CAC/B1yB,MAAA,UACA51D,MAAA,OAEA2pF,GAAA,CACA,IAAAR,GAAA,CACA9rB,MAAA,IAA2B2mB,GAAW,CACtCjjB,OACAC,SACAtnD,OAAA,IAEAqnD,OACAC,YAIA,OAAA2oB,GAMO,SAAAE,KAEP,IAAAC,EAAA,GACAC,EAAA,gBACAC,EAAA,cAgDA,OA9CAF,EAAWzyE,GAAYI,SAAA,CACvB,IAAA0xE,GAAA,CACApoB,KAAA,IAAsBojB,GAAI,CAC1BvuB,MAAA,sBAIAk0B,EAAWzyE,GAAYO,eACvBkyE,EAAezyE,GAAYI,SAC3BqyE,EAAWzyE,GAAYE,aAAA,CACvB,IAAA4xE,GAAA,CACAnoB,OAAA,IAAwBsnB,GAAM,CAC9B1yB,MAAAm0B,EACA/pF,YAGA,IAAAmpF,GAAA,CACAnoB,OAAA,IAAwBsnB,GAAM,CAC9B1yB,MAAAo0B,EACAhqF,MApBA,OAwBA8pF,EAAWzyE,GAAYM,mBACvBmyE,EAAezyE,GAAYE,aAC3BuyE,EAAWzyE,GAAYS,QACvBgyE,EAAezyE,GAAYI,SAAAjW,OAAAsoF,EAAwBzyE,GAAYE,cAC/DuyE,EAAWzyE,GAAYC,OAAA,CACvB,IAAA6xE,GAAA,CACA9rB,MAAA,IAAuB2mB,GAAW,CAClCtqE,OAAA1Z,EACA+gE,KAAA,IAA0BojB,GAAI,CAC9BvuB,MAAAo0B,IAEAhpB,OAAA,IAA4BsnB,GAAM,CAClC1yB,MAAAm0B,EACA/pF,cAGA+3C,OAAA14C,OAGAyqF,EAAWzyE,GAAYK,aACvBoyE,EAAezyE,GAAYC,OAC3BwyE,EAAWzyE,GAAYQ,qBACvBiyE,EAAezyE,GAAYI,SAAAjW,OAAAsoF,EAAwBzyE,GAAYE,aAAAuyE,EAAsBzyE,GAAYC,QACjGwyE,EAOA,SAAAT,GAAAxpC,GACA,OAAAA,EAAAlwC,cAEe,IAAAs6E,GAAA,GCleAC,GAAA,CACf5yE,MAAA,QACA6yE,KAAA,QCDAC,GAAA,OA4beC,GAzZP,WAIR,SAAAC,EAAAj9E,GACA,IAAAC,EAAAD,GAAA,GAKAhZ,KAAAk2F,MAAAj9E,EAAA43C,KAKA7wD,KAAAs0D,UAAAr7C,EAAA6H,SAKA9gB,KAAAwtF,gBAAAv0E,EAAAw0E,eAKAztF,KAAA0tF,OAAAz0E,EAAAiX,MAKAlwB,KAAA4qE,MAAA3xD,EAAAsuD,KAKAvnE,KAAAm2F,WAAAl9E,EAAAw1D,UAKAzuE,KAAAo2F,cAAAn9E,EAAAy1D,aAKA1uE,KAAAuuF,WAAA37E,IAAAqG,EAAAyzD,KAAAzzD,EAAAyzD,KACA,IAAgBojB,GAAI,CAAEvuB,MAAAw0B,KAKtB/1F,KAAAq2F,eAAAzjF,IAAAqG,EAAAq9E,SAAAr9E,EAAAq9E,SAAAj3F,KAAAslB,GAAA,EAKA3kB,KAAAu2F,gBAAA3jF,IAAAqG,EAAAu9E,UAAAv9E,EAAAu9E,UAAgFX,GAAa5yE,MAK7FjjB,KAAAy2F,YAAAx9E,EAAAovC,SAKAroD,KAAA6uF,aAAAj8E,IAAAqG,EAAA0zD,OAAA1zD,EAAA0zD,OAAA,KAKA3sE,KAAA02F,cAAA9jF,IAAAqG,EAAA2vD,QAAA3vD,EAAA2vD,QAAA,EAKA5oE,KAAA22F,cAAA/jF,IAAAqG,EAAA4vD,QAAA5vD,EAAA4vD,QAAA,EAKA7oE,KAAA42F,gBAAA39E,EAAA49E,eAAA59E,EAAA49E,eAAA,KAKA72F,KAAA82F,kBAAA79E,EAAA89E,iBAAA99E,EAAA89E,iBAAA,KAKA/2F,KAAAg3F,cAAApkF,IAAAqG,EAAAmmC,QAAA,KAAAnmC,EAAAmmC,QA4TA,OArTA62C,EAAAn3F,UAAAqc,MAAA,WACA,WAAA86E,EAAA,CACAplC,KAAA7wD,KAAA4wE,UACA4lB,UAAAx2F,KAAAi3F,eACAX,SAAAt2F,KAAAk3F,cACA7uC,SAAAroD,KAAAm3F,cACAr2E,SAAA9gB,KAAAu7C,cACAkyC,eAAAztF,KAAA+vE,oBACA7/C,MAAAlwB,KAAAgwE,WACAzI,KAAAvnE,KAAA+sE,UACA0B,UAAAzuE,KAAAsxE,eACA5C,aAAA1uE,KAAAwxE,kBACA9E,KAAA1sE,KAAA4sE,UAAA5sE,KAAA4sE,UAAAzxD,aAAAvI,EACA+5D,OAAA3sE,KAAA6sE,YAAA7sE,KAAA6sE,YAAA1xD,aAAAvI,EACAg2D,QAAA5oE,KAAA8wE,aACAjI,QAAA7oE,KAAAgxE,aACA6lB,eAAA72F,KAAAo3F,oBAAAp3F,KAAAo3F,oBAAAj8E,aAAAvI,EACAmkF,iBAAA/2F,KAAAq3F,sBAAAr3F,KAAAq3F,sBAAAl8E,aAAAvI,KAQAqjF,EAAAn3F,UAAAq4F,YAAA,WACA,OAAAn3F,KAAAy2F,WAOAR,EAAAn3F,UAAA8xE,QAAA,WACA,OAAA5wE,KAAAk2F,OAOAD,EAAAn3F,UAAAo4F,YAAA,WACA,OAAAl3F,KAAAq2F,WAOAJ,EAAAn3F,UAAAm4F,aAAA,WACA,OAAAj3F,KAAAu2F,YAOAN,EAAAn3F,UAAAgyE,WAAA,WACA,OAAA9wE,KAAA02F,UAOAT,EAAAn3F,UAAAkyE,WAAA,WACA,OAAAhxE,KAAA22F,UAOAV,EAAAn3F,UAAA8tE,QAAA,WACA,OAAA5sE,KAAAuuF,OAOA0H,EAAAn3F,UAAAixE,kBAAA,WACA,OAAA/vE,KAAAwtF,iBAOAyI,EAAAn3F,UAAAy8C,YAAA,WACA,OAAAv7C,KAAAs0D,WAOA2hC,EAAAn3F,UAAAkxE,SAAA,WACA,OAAAhwE,KAAA0tF,QAOAuI,EAAAn3F,UAAA+tE,UAAA,WACA,OAAA7sE,KAAA6uF,SAOAoH,EAAAn3F,UAAAiuE,QAAA,WACA,OAAA/sE,KAAA4qE,OAOAqrB,EAAAn3F,UAAAwyE,aAAA,WACA,OAAAtxE,KAAAm2F,YAOAF,EAAAn3F,UAAA0yE,gBAAA,WACA,OAAAxxE,KAAAo2F,eAOAH,EAAAn3F,UAAAs4F,kBAAA,WACA,OAAAp3F,KAAA42F,iBAOAX,EAAAn3F,UAAAu4F,oBAAA,WACA,OAAAr3F,KAAA82F,mBAOAb,EAAAn3F,UAAAw4F,WAAA,WACA,OAAAt3F,KAAAg3F,UAQAf,EAAAn3F,UAAAy4F,YAAA,SAAAlvC,GACAroD,KAAAy2F,UAAApuC,GAQA4tC,EAAAn3F,UAAA04F,QAAA,SAAA3mC,GACA7wD,KAAAk2F,MAAArlC,GAQAolC,EAAAn3F,UAAA24F,YAAA,SAAAnB,GACAt2F,KAAAq2F,UAAAC,GAQAL,EAAAn3F,UAAA44F,WAAA,SAAA9uB,GACA5oE,KAAA02F,SAAA9tB,GAQAqtB,EAAAn3F,UAAA64F,WAAA,SAAA9uB,GACA7oE,KAAA22F,SAAA9tB,GAQAotB,EAAAn3F,UAAA84F,aAAA,SAAApB,GACAx2F,KAAAu2F,WAAAC,GAQAP,EAAAn3F,UAAAivF,kBAAA,SAAAN,GACAztF,KAAAwtF,gBAAAC,GAQAwI,EAAAn3F,UAAAq2F,QAAA,SAAAzoB,GACA1sE,KAAAuuF,MAAA7hB,GAQAupB,EAAAn3F,UAAA87C,YAAA,SAAA95B,GACA9gB,KAAAs0D,UAAAxzC,GAQAm1E,EAAAn3F,UAAAkvF,SAAA,SAAA99D,GACAlwB,KAAA0tF,OAAAx9D,GAQA+lE,EAAAn3F,UAAAs2F,UAAA,SAAAzoB,GACA3sE,KAAA6uF,QAAAliB,GAQAspB,EAAAn3F,UAAAu2F,QAAA,SAAA9tB,GACAvnE,KAAA4qE,MAAArD,GAQA0uB,EAAAn3F,UAAA+4F,aAAA,SAAAppB,GACAzuE,KAAAm2F,WAAA1nB,GAQAwnB,EAAAn3F,UAAAg5F,gBAAA,SAAAppB,GACA1uE,KAAAo2F,cAAA1nB,GAQAunB,EAAAn3F,UAAAi5F,kBAAA,SAAArrB,GACA1sE,KAAA42F,gBAAAlqB,GAQAupB,EAAAn3F,UAAAk5F,oBAAA,SAAArrB,GACA3sE,KAAA82F,kBAAAnqB,GAQAspB,EAAAn3F,UAAAm5F,WAAA,SAAA74C,GACAp/C,KAAAg3F,SAAA53C,GAEA62C,EAvZQ,GCnCD,SAASiC,GAAkBpiD,EAAArtB,GAClC,IAAA0vE,EAAA,SACAC,EAAA,SACAC,EAAA,SACAC,EAAA,UACA,gBAOAhf,EAAAv6B,EAAA3zB,GACA,OAAAkuD,EAIAxjC,EAAAC,QAAAoiD,EAAA7e,EAAA,GAAApsE,YACA6oC,QAAAqiD,EAAA9e,EAAA,GAAApsE,YACA6oC,QAAAsiD,EAAA/e,EAAA,GAAApsE,YACA6oC,QAAAuiD,EAAA,WACA,IAAAr/C,EAAAqgC,EAAA,GACAif,EAAA9vE,EAAAi0D,iBAAAzjC,GAGA,OAFgB/+B,EAAMq+E,EAAA,KACtBA,EAAAh4E,YAAA+4D,EAAA,MACApsE,kBAXA,GAqBO,SAAAsrF,GAAAC,EAAAhwE,GAGP,IAFA,IAAAvkB,EAAAu0F,EAAA14F,OACA24F,EAAA,IAAAtsF,MAAAlI,GACAhH,EAAA,EAAmBA,EAAAgH,IAAShH,EAC5Bw7F,EAAAx7F,GAA8Bg7F,GAAkBO,EAAAv7F,GAAAurB,GAEhD,OAAAkwE,GAAAD,GAMO,SAAAC,GAAAD,GACP,WAAAA,EAAA34F,OACA24F,EAAA,GAEA,SAOApf,EAAAv6B,EAAA3zB,GACA,GAAAkuD,EAGA,CACA,IACA/pE,EAAwBuV,GADJi1D,GAAaT,GACHof,EAAA34F,QAC9B,OAAA24F,EAAAnpF,GAAA+pE,EAAAv6B,EAAA3zB,KAUO,SAAAwtE,GAAAtf,EAAAv6B,EAAA3zB,IAOA,SAAAytE,GAAAhhB,GACP,IAAAihB,EAAA,GACAC,EAAA,sBAAoCn3B,KAAAiW,GACpC,GAAAkhB,EAAA,CAEA,IAAAC,EAAAD,EAAA,GAAA5vF,WAAA,GACA8vF,EAAAF,EAAA,GAAA5vF,WAAA,GACA4zD,OAAA,EACA,IAAAA,EAAAi8B,EAAsCj8B,GAAAk8B,IAA0Bl8B,EAChE+7B,EAAAh4F,KAAA+2E,EAAA9hC,QAAAgjD,EAAA,GAAApxF,OAAAC,aAAAm1D,KAEA,OAAA+7B,EAGA,GADAC,IAAA,kBAAoCn3B,KAAAiW,GACpC,CAGA,IADA,IAAAqhB,EAAAtkD,SAAAmkD,EAAA,OACA77F,EAAA03C,SAAAmkD,EAAA,OAA4C77F,GAAAg8F,EAAah8F,IACzD47F,EAAAh4F,KAAA+2E,EAAA9hC,QAAAgjD,EAAA,GAAA77F,EAAAgQ,aAEA,OAAA4rF,EAGA,OADAA,EAAAh4F,KAAA+2E,GACAihB,ECrGO,SAAAK,GAAAthB,EAAAhpE,EAAAuqF,EAAAC,GACP,IAAAC,EAAA1pF,SAAAC,cAAA,UACApR,EAAA,OAAuB0R,EAAMtB,GAC7B,SAAAi1B,WACAhnC,OAAA2B,GACA66F,EAAA/2C,WAAAI,YAAA22C,GAEAA,EAAAC,OAAA,EACAD,EAAA12B,IAAAiV,IAAA,GAAAA,EAAAx3E,QAAA,eACAg5F,GAAA,gBAAA56F,EACA,IAAA+6F,EAAAtrF,WAAA,WACA41B,IACAs1D,GACAA,KAEK,KACLt8F,OAAA2B,GAAA,SAAAwC,GACA2oC,aAAA4vD,GACA11D,IACAj1B,EAAA5N,IAEA2O,SAAA6pF,qBAAA,WAAAhxC,YAAA6wC,GC5BO,IAAAI,GAAA,GCRHC,GAAyB,WAC7B,IAAAtpF,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAsSdkpF,GAnNP,SAAA/oF,GAOR,SAAAgpF,EAAAvgB,EAAAznC,EAAA74B,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GA0CA,OAtCAhI,EAAAsoE,YAKAtoE,EAAA6gC,QAOA7gC,EAAA8oF,YAAA,KAOA9oF,EAAA+gC,MAAA,EAOA/gC,EAAAvS,IAAA,GAKAuS,EAAA+oF,iBAAAnnF,IAAAqG,EAAA+gF,WAAA,IAAA/gF,EAAA+gF,WAMAhpF,EAAAipF,kBAAA,GACAjpF,EA8JA,OAhNI2oF,GAASE,EAAAhpF,GAuDbgpF,EAAA/6F,UAAAkY,QAAA,WACAhX,KAAA+U,cAA2BK,EAASC,SAKpCwkF,EAAA/6F,UAAAuyC,OAAA,WACA,OAAArxC,KAAAvB,IAAA,IAAAuB,KAAAs5E,WAQAugB,EAAA/6F,UAAAo7F,eAAA,WACA,IAAAl6F,KAAA85F,YAEA,OAAA95F,KAEA,IAAA4xC,EAAA5xC,KAAA85F,YAKA,GACA,GAAAloD,EAAAE,YAAmClD,GAASG,OAI5C,OADA/uC,KAAA+5F,YAAA,EACAnoD,EAEAA,IAAAkoD,kBACSloD,GAET,OAAA5xC,MAMA65F,EAAA/6F,UAAAq7F,oBAAA,WACA,GAAAn6F,KAAA85F,YAAA,CAGA,IAAAloD,EAAA5xC,KAAA85F,YACA//E,EAAmC,KACnC,GACA,GAAA63B,EAAAE,YAAmClD,GAASG,OAAA,CAI5C6C,EAAAkoD,YAAA,KACA,MAEAloD,EAAAE,YAAwClD,GAASE,QAGjD/0B,EAAA63B,EAEAA,EAAAE,YAAwClD,GAASC,KAGjD90B,EAAA+/E,YAAAloD,EAAAkoD,YAGA//E,EAAA63B,EAEAA,EAAA73B,EAAA+/E,kBACSloD,KAOTioD,EAAA/6F,UAAAs7F,aAAA,WACA,OAAAp6F,KAAAs5E,WAKAugB,EAAA/6F,UAAAgzC,SAAA,WACA,OAAA9xC,KAAA6xC,OAUAgoD,EAAA/6F,UAAAu7F,SAAA,SAAAxoD,GACA7xC,KAAA6xC,QACA7xC,KAAAgX,WASA6iF,EAAA/6F,UAAAuC,KAAA,WACQ4O,KAQR4pF,EAAA/6F,UAAAw7F,SAAA,SAAAr+E,EAAAgyC,GACA,IAAAjuD,KAAA+5F,YACA,SAEA,IAAArjE,EAAA12B,KAAAi6F,kBAAAh+E,GACA,GAAAya,GAIA,QAAAA,EACA,cAJAA,EAAAu3B,EACAjuD,KAAAi6F,kBAAAh+E,GAAAya,EAKA,IAAAqe,EAAAkZ,EAAAv3B,EAAA,OACA,OAAAqe,GAAA/0C,KAAA+5F,YACA,EAEeljD,GAAM9B,EAAA/0C,KAAA+5F,cASrBF,EAAA/6F,UAAAy7F,aAAA,SAAAt+E,GACA,QAAAjc,KAAA+5F,cAGA,IAAA/5F,KAAAi6F,kBAAAh+E,IAMA49E,EAAA/6F,UAAA07F,cAAA,SAAAv+E,GACAjc,KAAA+5F,cACA/5F,KAAAi6F,kBAAAh+E,IAAA,IAGA49E,EAjNQ,CAkNNnlF,GCrSE+lF,GAAyB,WAC7B,IAAApqF,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4J7B,SAAAgqF,KACA,IAAAhI,EAAcnxC,GAAqB,KAGnC,OAFAmxC,EAAAjuB,UAAA,gBACAiuB,EAAAF,SAAA,SACAE,EAAAhxC,OAEe,IAAAi5C,GA9IF,SAAA9pF,GAUb,SAAA+pF,EAAAthB,EAAAznC,EAAA+wB,EAAAC,EAAAg4B,EAAA7hF,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,KAAAs5E,EAAAznC,EAAA74B,IAAAhZ,KA+BA,OA1BAgR,EAAAwiF,aAAA3wB,EAOA7xD,EAAAqgF,KAAAzuB,EAKA5xD,EAAAi5D,OAAA,IAAAqnB,MACA,OAAAzuB,IACA7xD,EAAAi5D,OAAApH,eAMA7xD,EAAAugF,UAAA,KAKAvgF,EAAA8pF,kBAAAD,EACA7pF,EAwFA,OAjIIypF,GAASG,EAAA/pF,GA8Cb+pF,EAAA97F,UAAAkV,gBAAA,WACAhU,KAAA6xC,OAA0BjD,GAASE,UACnC9uC,KAAA0xF,iBACA1xF,KAAAiqE,OAAAywB,MAEA16F,KAAA85F,aACA95F,KAAA85F,YAAA/lF,UAEA/T,KAAA6xC,MAAqBjD,GAASK,MAC9BjvC,KAAAgX,UACAnG,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAOA46F,EAAA97F,UAAAguE,SAAA,WACA,OAAA9sE,KAAAiqE,QAKA2wB,EAAA97F,UAAAuyC,OAAA,WACA,OAAArxC,KAAAqxF,MAOAuJ,EAAA97F,UAAA2yF,kBAAA,WACAzxF,KAAA6xC,MAAqBjD,GAASt5B,MAC9BtV,KAAA0xF,iBACA1xF,KAAAiqE,OAAAywB,KACA16F,KAAAgX,WAOA4jF,EAAA97F,UAAA6yF,iBAAA,WACA,IAAA3oB,EAAgDhpE,KAAA,OAChDgpE,EAAA+xB,cAAA/xB,EAAAgyB,cACAh7F,KAAA6xC,MAAyBjD,GAASG,OAGlC/uC,KAAA6xC,MAAyBjD,GAASI,MAElChvC,KAAA0xF,iBACA1xF,KAAAgX,WAMA4jF,EAAA97F,UAAAuC,KAAA,WACArB,KAAA6xC,OAA0BjD,GAASt5B,QACnCtV,KAAA6xC,MAAyBjD,GAASC,KAClC7uC,KAAAiqE,OAAA,IAAAqnB,MACA,OAAAtxF,KAAAwzF,eACAxzF,KAAAiqE,OAAApH,YAAA7iE,KAAAwzF,eAGAxzF,KAAA6xC,OAA0BjD,GAASC,OACnC7uC,KAAA6xC,MAAyBjD,GAASE,QAClC9uC,KAAAgX,UACAhX,KAAA86F,kBAAA96F,UAAAqxF,MACArxF,KAAAuxF,UAA6Bd,GAAWzwF,KAAAiqE,OAAAjqE,KAAA2xF,iBAAAjzF,KAAAsB,WAAAyxF,kBAAA/yF,KAAAsB,SAQxC46F,EAAA97F,UAAA4yF,eAAA,WACA1xF,KAAAuxF,YACAvxF,KAAAuxF,YACAvxF,KAAAuxF,UAAA,OAGAqJ,EAlIa,CAmIXhB,ICvJEqB,GAAyB,WAC7B,IAAA5qF,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2DdwqF,GAzCF,SAAArqF,GAKb,SAAAsqF,EAAAh2B,GACA,OAAAt0D,EAAAxT,KAAA2C,KAAAmlE,IAAAnlE,KAiCA,OAtCIi7F,GAASE,EAAAtqF,GAUbsqF,EAAAr8F,UAAAs8F,YAAA,SAAA7rC,GACA,KAAAvvD,KAAAyiE,kBAAA,CAEA,GADAziE,KAAA+lE,WACA10B,WAAAke,EACA,MAGAvvD,KAAAa,MAAAkT,YAOAonF,EAAAr8F,UAAAu8F,mBAAA,WACA,OAAAr7F,KAAAmwC,WAAA,CAGA,IAEA8I,E/BAO,SAAAx6C,GACP,OAAAA,EAAAyS,MAAA,KAAAjE,IAAAs9B,Q+BFwB+wD,CADxBt7F,KAAAimE,gBAEA,GACAjmE,KAAAyZ,QAAA,SAAAm4B,GACAA,EAAA0nC,UAAA,KAAArgC,IACAj5C,KAAA2B,OAA4Bm4E,GAAMloC,EAAA0nC,YAClC1nC,EAAA79B,YAESrV,KAAAsB,SAETm7F,EAvCa,CAwCXl2B,ICvCK,SAAAs2B,GAAAhvE,EAAAivE,EAAAhkD,EAAAE,GACP,IAAAH,EAAuBtqB,GAASuqB,EAAAgkD,EAAAjvE,GAEhCkrB,EAA2B/vB,GAAkB8zE,EAAA9jD,EAAAF,GAC7CikD,EAAAD,EAAAtzE,wBACAtV,IAAA6oF,IACAhkD,GAAAgkD,GAEA,IAAAC,EAAAnvE,EAAArE,wBACAtV,IAAA8oF,IACAjkD,GAAAikD,GAKA,IAAAC,EAAApvE,EAAAvE,YACA,IAAA2zE,GAAyBh9E,GAAkBg9E,EAAApkD,GAAA,CAC3C,IAAAqkD,EAAiCl0E,GAAkB6E,EAAAkrB,EAAAF,GACnDE,EACAokD,SAAAD,MAAA,IACAnkD,GAAAmkD,GAGA,OAAAnkD,EAYA,SAAAqkD,GAAAC,EAAAC,EAAAl8F,EAAA0e,GACA,IAAAy9E,EAAAn8F,EAAAi8F,EACAG,EAAA19E,EAAAw9E,EACAl2E,EAAAzmB,KAAAK,KAAAu8F,IAAAC,KACA,OAAA78F,KAAAw1B,MAAA/0B,EAAAm8F,EAAAn2E,GAAAzmB,KAAAw1B,MAAArW,EAAA09E,EAAAp2E,IAqBO,SAASq2E,GAAMxwF,EAAA/K,EAAAm+C,EAAAtH,EAAAkkD,EAAAjkD,EAAA0kD,EAAAC,EAAAC,EAAAC,EAAAC,GACtB,IAAA7sF,EAAkB4xC,GAAqBliD,KAAAw1B,MAAAkqB,EAAApzC,GAAAtM,KAAAw1B,MAAAkqB,EAAAn+C,IACvC,OAAA07F,EAAAv8F,OACA,OAAA4P,EAAA+xC,OAEA/xC,EAAAugB,MAAA6uB,KACA,IAAA09C,EhJuGA,CAAAzxF,SAAA,UgJtGAsxF,EAAA7iF,QAAA,SAAAmpD,EAAA1lE,EAAAqH,GACQob,GAAM88E,EAAA75B,EAAA1kD,UAEd,IAAAw+E,EAA6Bp8E,GAAQm8E,GACrCE,EAA8Bp8E,GAASk8E,GACvCG,EAAwBr7C,GAAqBliD,KAAAw1B,MAAAkqB,EAAA29C,EAAAjlD,GAAAp4C,KAAAw1B,MAAAkqB,EAAA49C,EAAAllD,IAC7ColD,EAAA99C,EAAAtH,EACA6kD,EAAA7iF,QAAA,SAAAmpD,EAAA1lE,EAAAqH,GACA,IAAAu4F,EAAAl6B,EAAA1kD,OAAA,GAAAu+E,EAAA,GACAM,IAAAn6B,EAAA1kD,OAAA,GAAAu+E,EAAA,IACAO,EAAuB18E,GAAQsiD,EAAA1kD,QAC/B++E,EAAwB18E,GAASqiD,EAAA1kD,QACjC0+E,EAAA7zB,UAAAnG,EAAAoG,MAAAuzB,IAAA35B,EAAAoG,MAAAr9D,MAAA,EAAA4wF,EAAA35B,EAAAoG,MAAApoE,OAAA,EAAA27F,EAAAO,EAAAD,EAAAE,EAAAF,EAAAG,EAAAH,EAAAI,EAAAJ,KAEA,IAAAK,EAAwBh9E,GAAUk8E,GA4FlC,OA3FAC,EAAAc,eAAA1jF,QAAA,SAAA2jF,EAAAlgG,EAAAqH,GAqBA,IAAA+I,EAAA8vF,EAAA9vF,OACAmE,EAAA2rF,EAAA3rF,OACA+P,EAAAlU,EAAA,MAAAsU,EAAAtU,EAAA,MACAmU,EAAAnU,EAAA,MAAAuU,EAAAvU,EAAA,MACAoU,EAAApU,EAAA,MAAAwU,EAAAxU,EAAA,MACA+vF,GAAA5rF,EAAA,MAAAyrF,EAAA,IAAAxlD,EACA4lD,IAAA7rF,EAAA,MAAAyrF,EAAA,IAAAxlD,EACA6lD,GAAA9rF,EAAA,MAAAyrF,EAAA,IAAAxlD,EACAnD,IAAA9iC,EAAA,MAAAyrF,EAAA,IAAAxlD,EACA8lD,GAAA/rF,EAAA,MAAAyrF,EAAA,IAAAxlD,EACAlD,IAAA/iC,EAAA,MAAAyrF,EAAA,IAAAxlD,EAIA+lD,EAAAj8E,EACAk8E,EAAA97E,EACAJ,EAAA,EACAI,EAAA,EAKA,IAMA+7E,E5I/DO,SAAA9uE,GAEP,IADA,IAAAlwB,EAAAkwB,EAAA9uB,OACA7C,EAAA,EAAmBA,EAAAyB,EAAOzB,IAAA,CAI1B,IAFA,IAAA0gG,EAAA1gG,EACA2gG,EAAAx+F,KAAA6L,IAAA2jB,EAAA3xB,OACAc,EAAAd,EAAA,EAA2Bc,EAAAW,EAAOX,IAAA,CAClC,IAAA8/F,EAAAz+F,KAAA6L,IAAA2jB,EAAA7wB,GAAAd,IACA4gG,EAAAD,IACAA,EAAAC,EACAF,EAAA5/F,GAGA,OAAA6/F,EACA,YAGA,IAAArhF,EAAAqS,EAAA+uE,GACA/uE,EAAA+uE,GAAA/uE,EAAA3xB,GACA2xB,EAAA3xB,GAAAsf,EAEA,QAAAhQ,EAAAtP,EAAA,EAA2BsP,EAAA7N,EAAO6N,IAElC,IADA,IAAAuxF,GAAAlvE,EAAAriB,GAAAtP,GAAA2xB,EAAA3xB,MACAinB,EAAAjnB,EAA2BinB,EAAAxlB,EAAA,EAAWwlB,IACtCjnB,GAAAinB,EACA0K,EAAAriB,GAAA2X,GAAA,EAGA0K,EAAAriB,GAAA2X,IAAA45E,EAAAlvE,EAAA3xB,GAAAinB,GAOA,IADA,IAAArkB,EAAA,IAAAsM,MAAAzN,GACAxB,EAAAwB,EAAA,EAAuBxB,GAAA,EAAQA,IAAA,CAC/B2C,EAAA3C,GAAA0xB,EAAA1xB,GAAAwB,GAAAkwB,EAAA1xB,MACA,QAAAG,EAAAH,EAAA,EAA2BG,GAAA,EAAQA,IACnCuxB,EAAAvxB,GAAAqB,IAAAkwB,EAAAvxB,GAAAH,GAAA2C,EAAA3C,GAGA,OAAA2C,E4IsB0Bk+F,CAN1B,CACA,CALAv8E,GAAAg8E,EACA57E,GAAA67E,EAIA,IAAAH,EAAAF,GACA,CAJA37E,GAAA+7E,EACA37E,GAAA47E,EAGA,IAAAF,EAAAH,GACA,KAAA57E,EAAAI,EAAA0yB,EAAA+oD,GACA,KAAA57E,EAAAI,EAAA0yB,EAAA8oD,KAGA,GAAAK,EAAA,CAGAhuF,EAAAsuF,OACAtuF,EAAA68D,YACA,IAAAuvB,GAAAsB,EAAAE,EAAAC,GAAA,EACAxB,GAAAsB,EAAA/oD,EAAAC,GAAA,EACA0pD,EAAApC,GAAAC,EAAAC,EAAAqB,EAAAC,GACAa,EAAArC,GAAAC,EAAAC,EAAAuB,EAAAhpD,GACA6pD,EAAAtC,GAAAC,EAAAC,EAAAwB,EAAAhpD,GACA7kC,EAAAu8D,OAAAiyB,EAAA,GAAAA,EAAA,IACAxuF,EAAAw8D,OAAA+xB,EAAA,GAAAA,EAAA,IACAvuF,EAAAw8D,OAAAiyB,EAAA,GAAAA,EAAA,IACAzuF,EAAA0uF,OACA1uF,EAAAgU,UAAAg6E,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAN,EAAAC,GACA3tF,EAAA+gB,UAAA+rE,EAAA,GAAAgB,EAAAhB,EAAA,GAAAiB,GACA/tF,EAAAugB,MAAAunB,EAAAsH,GAAAtH,EAAAsH,GACApvC,EAAAo5D,UAAA6zB,EAAAl7C,OAAA,KACA/xC,EAAA2uF,aAEA9B,IACA7sF,EAAAsuF,OACAtuF,EAAA+0D,YAAA,QACA/0D,EAAA0+D,UAAA,EACAguB,EAAAc,eAAA1jF,QAAA,SAAA2jF,EAAAlgG,EAAAqH,GACA,IAAAkN,EAAA2rF,EAAA3rF,OACA4rF,GAAA5rF,EAAA,MAAAyrF,EAAA,IAAAxlD,EACA4lD,IAAA7rF,EAAA,MAAAyrF,EAAA,IAAAxlD,EACA6lD,GAAA9rF,EAAA,MAAAyrF,EAAA,IAAAxlD,EACAnD,IAAA9iC,EAAA,MAAAyrF,EAAA,IAAAxlD,EACA8lD,GAAA/rF,EAAA,MAAAyrF,EAAA,IAAAxlD,EACAlD,IAAA/iC,EAAA,MAAAyrF,EAAA,IAAAxlD,EACA/nC,EAAA68D,YACA78D,EAAAu8D,OAAAqxB,EAAAhpD,GACA5kC,EAAAw8D,OAAAkxB,EAAAC,GACA3tF,EAAAw8D,OAAAqxB,EAAAhpD,GACA7kC,EAAAy8D,YACAz8D,EAAAg9D,WAEAh9D,EAAA2uF,WAEA3uF,EAAA+xC,OC7KA,IAAA68C,GAAA,GAsReC,GAvQE,WAQjB,SAAAC,EAAAlyE,EAAAivE,EAAAY,EAAAsC,EAAAC,GAKA3+F,KAAA4+F,YAAAryE,EAKAvsB,KAAA6+F,YAAArD,EAEA,IAAAsD,EAAA,GACAC,EAA2B/xE,GAAYhtB,KAAA6+F,YAAA7+F,KAAA4+F,aAMvC5+F,KAAAg/F,cAAA,SAAAzhG,GACA,IAAAkB,EAAAlB,EAAA,OAAAA,EAAA,GAIA,OAHAuhG,EAAArgG,KACAqgG,EAAArgG,GAAAsgG,EAAAxhG,IAEAuhG,EAAArgG,IAMAuB,KAAAi/F,iBAAAP,EAKA1+F,KAAAk/F,uBAAAP,IAKA3+F,KAAAm/F,WAAA,GAMAn/F,KAAAo/F,iBAAA,EAKAp/F,KAAAq/F,kBAAAr/F,KAAA4+F,YAAA92E,cACA42E,KACA1+F,KAAA4+F,YAAA52E,aACa1H,GAAQo+E,IAAqBp+E,GAAQtgB,KAAA4+F,YAAA52E,aAKlDhoB,KAAAs/F,kBAAAt/F,KAAA4+F,YAAA52E,YACY1H,GAAQtgB,KAAA4+F,YAAA52E,aAAA,KAKpBhoB,KAAAu/F,kBAAAv/F,KAAA6+F,YAAA72E,YACY1H,GAAQtgB,KAAA6+F,YAAA72E,aAAA,KACpB,IAAAw3E,EAAiCt/E,GAAUk8E,GAC3CqD,EAAkCx/E,GAAWm8E,GAC7CsD,EAAqC1/E,GAAco8E,GACnDuD,EAAoC5/E,GAAaq8E,GACjDwD,EAAA5/F,KAAAg/F,cAAAQ,GACAK,EAAA7/F,KAAAg/F,cAAAS,GACAK,EAAA9/F,KAAAg/F,cAAAU,GACAK,EAAA//F,KAAAg/F,cAAAW,GAEA,GADA3/F,KAAAggG,SAAAR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxB,IACAv+F,KAAAo/F,gBAAA,CACA,IAAAa,EAAAj1F,IACAhL,KAAAm/F,WAAA1lF,QAAA,SAAA2jF,EAAAlgG,EAAAqH,GACA07F,EAAA5gG,KAAAQ,IAAAogG,EAAA7C,EAAA9vF,OAAA,MAAA8vF,EAAA9vF,OAAA,MAAA8vF,EAAA9vF,OAAA,SAIAtN,KAAAm/F,WAAA1lF,QAAA,SAAA2jF,GACA,GAAA/9F,KAAAM,IAAAy9F,EAAA9vF,OAAA,MAAA8vF,EAAA9vF,OAAA,MAAA8vF,EAAA9vF,OAAA,OAAA2yF,EAAAjgG,KAAAs/F,kBAAA,GACA,IAAAY,EAAA,EAAA9C,EAAA9vF,OAAA,MAAA8vF,EAAA9vF,OAAA,OACA,CAAA8vF,EAAA9vF,OAAA,MAAA8vF,EAAA9vF,OAAA,OACA,CAAA8vF,EAAA9vF,OAAA,MAAA8vF,EAAA9vF,OAAA,QACA4yF,EAAA,MAAAD,EAAAjgG,KAAAs/F,kBAAA,IACAY,EAAA,OAAAlgG,KAAAs/F,mBAEAY,EAAA,MAAAD,EAAAjgG,KAAAs/F,kBAAA,IACAY,EAAA,OAAAlgG,KAAAs/F,mBAEAY,EAAA,MAAAD,EAAAjgG,KAAAs/F,kBAAA,IACAY,EAAA,OAAAlgG,KAAAs/F,mBAKA,IAAA/+F,EAAAlB,KAAAQ,IAAAqgG,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA7gG,KAAAM,IAAAugG,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACA3/F,EAAAP,KAAAs/F,kBAAA,IACAlC,EAAA9vF,OAAA4yF,KAGaxhG,KAAAsB,OAEb8+F,EAAA,GAiJA,OArIAL,EAAA3/F,UAAAqhG,aAAA,SAAAhhG,EAAAyH,EAAArJ,EAAA6iG,EAAAC,EAAAC,GACAtgG,KAAAm/F,WAAAr+F,KAAA,CACAwM,OAAA,CAAA8yF,EAAAC,EAAAC,GACA7uF,OAAA,CAAAtS,EAAAyH,EAAArJ,MAmBAkhG,EAAA3/F,UAAAkhG,SAAA,SAAA7gG,EAAAyH,EAAArJ,EAAAC,EAAA4iG,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAA+BziF,GAAc,CAAAoiF,EAAAC,EAAAC,EAAAC,IAC7CG,EAAA1gG,KAAAs/F,kBACYh/E,GAAQmgF,GAAAzgG,KAAAs/F,kBAAA,KACpBqB,EAAiD3gG,KAAA,kBAGjD4gG,EAAA5gG,KAAA4+F,YAAA92E,YACA44E,EAAA,IAAAA,EAAA,EACAG,GAAA,EACA,GAAAL,EAAA,GACA,GAAAxgG,KAAA6+F,YAAAx2E,YAAAroB,KAAAu/F,kBAGAsB,EADsCvgF,GADCtC,GAAc,CAAA7e,EAAAyH,EAAArJ,EAAAC,KACPwC,KAAAu/F,kBAzK9C,KA2KAsB,GAEAD,GAAA5gG,KAAA4+F,YAAAv2E,YAAAq4E,IACAG,EAAAH,EA9KA,KA+KAG,GAGA,GAAAA,IAAA7gG,KAAAi/F,kBACiB/8E,GAAUu+E,EAAAzgG,KAAAi/F,kBAD3B,CAMA,KAAA4B,GACAhF,SAAAuE,EAAA,KAAAvE,SAAAuE,EAAA,KACAvE,SAAAwE,EAAA,KAAAxE,SAAAwE,EAAA,KACAxE,SAAAyE,EAAA,KAAAzE,SAAAyE,EAAA,KACAzE,SAAA0E,EAAA,KAAA1E,SAAA0E,EAAA,MACA,KAAAC,EAAA,GAIA,OAHAK,GAAA,EAOA,GAAAL,EAAA,GACA,IAAAK,EAAA,CACA,IAAAjgF,EAAA,EAAAzhB,EAAA,GAAA5B,EAAA,OAAA4B,EAAA,GAAA5B,EAAA,OACAujG,EAAA9gG,KAAAg/F,cAAAp+E,GACAnC,OAAA,EACA,GAAAmiF,EAGAniF,GAF2CqG,GAAMs7E,EAAA,GAAAO,GACzB77E,GAAMw7E,EAAA,GAAAK,IAAA,EAEN77E,GAAMg8E,EAAA,GAAAH,QAG9BliF,GAAA2hF,EAAA,GAAAE,EAAA,MAAAQ,EAAA,GAEA,IAAApiF,GAAA0hF,EAAA,GAAAE,EAAA,MAAAQ,EAAA,GAEAD,EADApiF,IAAAC,IACA1e,KAAAk/F,uBAEA,GAAA2B,EAAA,CACA,GAAAxhG,KAAA6L,IAAA/L,EAAA,GAAA5B,EAAA,KAAA8B,KAAA6L,IAAA/L,EAAA,GAAA5B,EAAA,KAEA,IAAAwjG,EAAA,EAAAn6F,EAAA,GAAArJ,EAAA,OAAAqJ,EAAA,GAAArJ,EAAA,OACAyjG,EAAAhhG,KAAAg/F,cAAA+B,GACAE,EAAA,EAAAzjG,EAAA,GAAA2B,EAAA,OAAA3B,EAAA,GAAA2B,EAAA,OACA+hG,EAAAlhG,KAAAg/F,cAAAiC,GACAjhG,KAAAggG,SAAA7gG,EAAAyH,EAAAm6F,EAAAE,EAAAb,EAAAC,EAAAW,EAAAE,EAAAV,EAAA,GACAxgG,KAAAggG,SAAAiB,EAAAF,EAAAxjG,EAAAC,EAAA0jG,EAAAF,EAAAV,EAAAC,EAAAC,EAAA,OAEA,CAEA,IAAAW,EAAA,EAAAhiG,EAAA,GAAAyH,EAAA,OAAAzH,EAAA,GAAAyH,EAAA,OACAw6F,EAAAphG,KAAAg/F,cAAAmC,GACAE,EAAA,EAAA9jG,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACA8jG,EAAAthG,KAAAg/F,cAAAqC,GACArhG,KAAAggG,SAAA7gG,EAAAgiG,EAAAE,EAAA7jG,EAAA4iG,EAAAgB,EAAAE,EAAAf,EAAAC,EAAA,GACAxgG,KAAAggG,SAAAmB,EAAAv6F,EAAArJ,EAAA8jG,EAAAD,EAAAf,EAAAC,EAAAgB,EAAAd,EAAA,GAEA,QAGA,GAAAI,EAAA,CACA,IAAA5gG,KAAAq/F,kBACA,OAEAr/F,KAAAo/F,iBAAA,EAEAp/F,KAAAmgG,aAAAhhG,EAAA5B,EAAAC,EAAA4iG,EAAAE,EAAAC,GACAvgG,KAAAmgG,aAAAhhG,EAAAyH,EAAArJ,EAAA6iG,EAAAC,EAAAC,KAOA7B,EAAA3/F,UAAAyiG,sBAAA,WACA,IAAArjF,EjJ5FA,CAAAlT,SAAA,UiJmGA,OANAhL,KAAAm/F,WAAA1lF,QAAA,SAAA2jF,EAAAlgG,EAAAqH,GACA,IAAAq+D,EAAAw6B,EAAA9vF,OACY8Q,GAAgBF,EAAA0kD,EAAA,IAChBxkD,GAAgBF,EAAA0kD,EAAA,IAChBxkD,GAAgBF,EAAA0kD,EAAA,MAE5B1kD,GAKAugF,EAAA3/F,UAAAq+F,aAAA,WACA,OAAAn9F,KAAAm/F,YAEAV,EArQiB,GClCb+C,GAAyB,WAC7B,IAAAnxF,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4Qd+wF,GA1OD,SAAA5wF,GAgBd,SAAA6wF,EAAAn1E,EAAAo1E,EAAAnG,EAAAoG,EAAAtoB,EAAAuoB,EAAA9iD,EAAAw9C,EAAAuF,EAAAC,EAAAvF,GACA,IAAAxrF,EAAAH,EAAAxT,KAAA2C,KAAAs5E,EAAiD1qC,GAASC,OAAA7uC,KAK1DgR,EAAAgxF,kBAAApvF,IAAA4pF,KAKAxrF,EAAAw2C,YAAAzI,EAKA/tC,EAAAixF,QAAA1F,EAKAvrF,EAAAs3E,QAAA,KAKAt3E,EAAAkxF,gBAAAP,EAKA3wF,EAAAmxF,gBAAAP,EAKA5wF,EAAAoxF,kBAAAP,GAAAvoB,EAKAtoE,EAAAqxF,aAAA,GAKArxF,EAAAsxF,qBAAA,KAKAtxF,EAAAuxF,SAAA,EACA,IAAAnG,EAAAwF,EAAApmB,mBAAAxqE,EAAAoxF,mBACAI,EAAAxxF,EAAAmxF,gBAAAn6E,YACA02E,EAAA1tF,EAAAkxF,gBAAAl6E,YACAy6E,EAAAD,EACYxgF,GAAeo6E,EAAAoG,GAAApG,EAC3B,GAAmB,IAAPj8E,GAAOsiF,GAInB,OADAzxF,EAAA6gC,MAA0BjD,GAASI,MACnCh+B,EAEA,IAAA0xF,EAAAn2E,EAAAvE,YACA06E,IAKAhE,EAJAA,EAIkC18E,GAAe08E,EAAAgE,GAHjDA,GAMA,IAAAhrD,EAAAkqD,EAAAvmD,cAAArqC,EAAAoxF,kBAAA,IAEA3qD,EAA+B8jD,GAAyBhvE,EAAAivE,EAD7Bh7E,GAASiiF,GACoB/qD,GACxD,IAAAmkD,SAAApkD,OAAA,EAIA,OADAzmC,EAAA6gC,MAA0BjD,GAASI,MACnCh+B,EAEA,IAAA2xF,OAAA/vF,IAAAmvF,EACAA,EAAiCrI,GAMjC,GADA1oF,EAAA4xF,eAAA,IAAmCpE,GAAajyE,EAAAivE,EAAAiH,EAAA/D,EAAAjnD,EAAAkrD,GAChD,IAAA3xF,EAAA4xF,eAAAzF,eAAAp9F,OAGA,OADAiR,EAAA6gC,MAA0BjD,GAASI,MACnCh+B,EAEAA,EAAAuxF,SAAAZ,EAAA1lB,kBAAAxkC,GACA,IAAAkkD,EAAA3qF,EAAA4xF,eAAArB,wBAUA,GATA7C,IACAnyE,EAAAzE,YACA6zE,EAAA,GAAkCt3E,GAAKs3E,EAAA,GAAA+C,EAAA,GAAAA,EAAA,IACvC/C,EAAA,GAAkCt3E,GAAKs3E,EAAA,GAAA+C,EAAA,GAAAA,EAAA,KAGvC/C,EAA+B35E,GAAe25E,EAAA+C,IAGjCv+E,GAAOw7E,GAGpB,CAEA,IADA,IAAAkH,EAAAlB,EAAAvmB,0BAAAugB,EAAA3qF,EAAAuxF,UACAO,EAAAD,EAAAtiG,KAA6CuiG,GAAAD,EAAApiG,KAA0BqiG,IACvE,QAAAC,EAAAF,EAAAriG,KAAiDuiG,GAAAF,EAAAniG,KAA0BqiG,IAAA,CAC3E,IAAAnxD,EAAAkwD,EAAA9wF,EAAAuxF,SAAAO,EAAAC,EAAAhkD,GACAnN,GACA5gC,EAAAqxF,aAAAvhG,KAAA8wC,GAIA,IAAA5gC,EAAAqxF,aAAAtiG,SACAiR,EAAA6gC,MAA8BjD,GAASI,YAbvCh+B,EAAA6gC,MAA0BjD,GAASI,MAgBnC,OAAAh+B,EA+FA,OAvOIwwF,GAASE,EAAA7wF,GA6Ib6wF,EAAA5iG,UAAAkV,gBAAA,WACAhU,KAAA6xC,OAA0BjD,GAASE,SACnC9uC,KAAAgjG,mBAEAnyF,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAMA0hG,EAAA5iG,UAAAguE,SAAA,WACA,OAAA9sE,KAAAsoF,SAKAoZ,EAAA5iG,UAAAmkG,WAAA,WACA,IAAA3G,EAAA,GAUA,GATAt8F,KAAAqiG,aAAA5oF,QAAA,SAAAm4B,EAAA10C,EAAAqH,GACAqtC,KAAAE,YAA2ClD,GAASG,QACpDutD,EAAAx7F,KAAA,CACAod,OAAAle,KAAAkiG,gBAAA1mB,mBAAA5pC,EAAA0nC,WACAtQ,MAAAp3B,EAAAk7B,cAGSpuE,KAAAsB,OACTA,KAAAqiG,aAAAtiG,OAAA,EACA,IAAAu8F,EAAAv8F,OACAC,KAAA6xC,MAAyBjD,GAASt5B,UAElC,CACA,IAAA2jC,EAAAj5C,KAAAoiG,kBAAA,GACArhF,EAAA/gB,KAAAmiG,gBAAAxmB,YAAA1iC,GACAttC,EAAA,iBAAAoV,MAAA,GACAngB,EAAA,iBAAAmgB,MAAA,GACA22B,EAAA13C,KAAAmiG,gBAAA9mD,cAAApC,GACAxB,EAAAz3C,KAAAkiG,gBAAA7mD,cAAAr7C,KAAAuiG,UACAnG,EAAAp8F,KAAAmiG,gBAAA3mB,mBAAAx7E,KAAAoiG,mBACApiG,KAAAsoF,QAA2B6T,GAAiBxwF,EAAA/K,EAAAZ,KAAAwnD,YAAA/P,EAAAz3C,KAAAkiG,gBAAAl6E,YAAA0vB,EAAA0kD,EAAAp8F,KAAA4iG,eAAAtG,EAAAt8F,KAAAiiG,QAAAjiG,KAAAgiG,cAC5ChiG,KAAA6xC,MAAyBjD,GAASG,OAElC/uC,KAAAgX,WAKA0qF,EAAA5iG,UAAAuC,KAAA,WACA,GAAArB,KAAA6xC,OAA0BjD,GAASC,KAAA,CACnC7uC,KAAA6xC,MAAyBjD,GAASE,QAClC9uC,KAAAgX,UACA,IAAAksF,EAAA,EACAljG,KAAAsiG,qBAAA,GACAtiG,KAAAqiG,aAAA5oF,QAAA,SAAAm4B,EAAA10C,EAAAqH,GACA,IAAAstC,EAAAD,EAAAE,WACA,GAAAD,GAA6BjD,GAASC,MAAAgD,GAAkBjD,GAASE,QAAA,CACjEo0D,IACA,IAAAC,EAA4ChwF,EAAMy+B,EAAOx8B,EAASC,OAAA,SAAAnW,GAClE,IAAA2yC,EAAAD,EAAAE,WACAD,GAAqCjD,GAASG,QAC9C8C,GAAqCjD,GAASt5B,OAC9Cu8B,GAAqCjD,GAASI,QAClBz7B,EAAa4vF,GAEzC,MADAD,IAEAljG,KAAAgjG,mBACAhjG,KAAAijG,gBAGqBjjG,MACrBA,KAAAsiG,qBAAAxhG,KAAAqiG,KAEazkG,KAAAsB,OACbA,KAAAqiG,aAAA5oF,QAAA,SAAAm4B,EAAA10C,EAAAqH,GACAqtC,EAAAE,YAC6BlD,GAASC,MACtC+C,EAAAvwC,SAGA,IAAA6hG,GACAh1F,WAAAlO,KAAAijG,WAAAvkG,KAAAsB,MAAA,KAOA0hG,EAAA5iG,UAAAkkG,iBAAA,WACAhjG,KAAAsiG,qBAAA7oF,QAA0ClG,GAC1CvT,KAAAsiG,qBAAA,MAEAZ,EAxOc,CAyOZ9H,IC3QEwJ,GAAyB,WAC7B,IAAA/yF,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4K7B,SAAA2yF,GAAAC,GACA,OAAAA,EAGAl3F,MAAA+K,QAAAmsF,GACA,SAAA1kE,GACA,OAAA0kE,GAGA,mBAAAA,EACAA,EAEA,SAAA1kE,GACA,OAAA0kE,IAXA,KAce,IAAAC,GAtIL,SAAA1yF,GAKV,SAAA2yF,EAAAvqF,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,YAkCA,OA7BAgR,EAAAknC,YAA4B5sB,GAAarS,EAAAmS,YAKzCpa,EAAAyyF,cAAAJ,GAAApqF,EAAAw6C,cAKAziD,EAAA0yF,8BAAA9wF,IAAAqG,EAAA0qF,yBACA1qF,EAAA0qF,wBAMA3yF,EAAAy7C,SAAA,EAKAz7C,EAAA6yC,YAAAjxC,IAAAqG,EAAA44B,MACA54B,EAAA44B,MAA4BmT,GAAWE,MAKvCl0C,EAAA4yF,YAAAhxF,IAAAqG,EAAA4qF,OAAA5qF,EAAA4qF,MACA7yF,EAuEA,OA9GIoyF,GAASI,EAAA3yF,GA6Cb2yF,EAAA1kG,UAAA00D,gBAAA,WACA,OAAAxzD,KAAAyjG,eAKAD,EAAA1kG,UAAA40D,2BAAA,WACA,OAAA1zD,KAAA0jG,0BAOAF,EAAA1kG,UAAA88B,cAAA,WACA,OAAA57B,KAAAk4C,aAMAsrD,EAAA1kG,UAAA4/C,eAAA,WACA,OAAezuC,KAOfuzF,EAAA1kG,UAAAgzC,SAAA,WACA,OAAA9xC,KAAA6jD,QAKA2/C,EAAA1kG,UAAA+zE,SAAA,WACA,OAAA7yE,KAAA4jG,QAMAJ,EAAA1kG,UAAAglG,QAAA,WACA9jG,KAAAgX,WASAwsF,EAAA1kG,UAAAilG,gBAAA,SAAAtwC,GACAzzD,KAAAyjG,cAAAJ,GAAA5vC,GACAzzD,KAAAgX,WAOAwsF,EAAA1kG,UAAAu7F,SAAA,SAAAxoD,GACA7xC,KAAA6jD,OAAAhS,EACA7xC,KAAAgX,WAEAwsF,EA/GU,CAgHRlrF,GCtKE0rF,GAAyB,WAC7B,IAAA3zF,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+CzBuzF,GAAU,SAAApzF,GAKd,SAAAqzF,EAAAjrF,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAkwC,wBAAA1qF,EAAA0qF,wBACAv4E,WAAAnS,EAAAmS,WACAymB,MAAA54B,EAAA44B,MACAgyD,MAAA5qF,EAAA4qF,SACS7jG,KAKTgR,EAAAmzF,aAAAvxF,IAAAqG,EAAAmrF,QAAAnrF,EAAAmrF,OAKApzF,EAAAqzF,qBAAAzxF,IAAAqG,EAAAqrF,eACArrF,EAAAqrF,eAAA,EAKAtzF,EAAAyX,cAAA7V,IAAAqG,EAAAwP,SAAAxP,EAAAwP,SAAA,KACA,IAAAi5C,EAAAzoD,EAAAyoD,UACA,QAAA9uD,IAAA8uD,EAAA,CACA,IAAAoZ,EAAA,UACAryD,EAAAxP,EAAAwP,SACAA,GACgBg+B,GAAMh+B,EAAAkzD,YAAAlzD,EAAA61B,cAAAw8B,GAEtB,IAAAypB,EAAA,WAAAC,KACA74F,EAAA44F,EAAAE,OAAAC,YAAAD,OAAA94F,MAAA,KACA/K,EAAA2jG,EAAAE,OAAAE,aAAAF,OAAA7jG,OAAA,KACA8gE,EAAA,EAAAriE,KAAAc,KAAAwL,EAAAmvE,EAAA,IAAAz7E,KAAAc,KAAAS,EAAAk6E,EAAA,IA8BA,OAxBA9pE,EAAA4zF,UAAA,IAA8B1J,GAASx5B,GAKvC1wD,EAAA6zF,QAAA,MAKA7zF,EAAA40D,KAAA3sD,EAAAxa,KAAA,GAKAuS,EAAA8zF,YAAA,CAA6B9K,WAAA/gF,EAAA+gF,YAQ7BhpF,EAAA+zF,WACA/zF,EA6MA,OAjRIgzF,GAASE,EAAArzF,GAyEbqzF,EAAAplG,UAAA2jE,eAAA,WACA,OAAAziE,KAAA4kG,UAAAniC,kBAMAyhC,EAAAplG,UAAAs8F,YAAA,SAAAhwE,EAAAmkC,GACA,IAAAq1C,EAAA5kG,KAAAglG,0BAAA55E,GACAw5E,GACAA,EAAAxJ,YAAA7rC,IAYA20C,EAAAplG,UAAAmmG,kBAAA,SAAA75E,EAAA6tB,EAAAugC,EAAA3qE,GACA,IAAA+1F,EAAA5kG,KAAAglG,0BAAA55E,GACA,IAAAw5E,EACA,SAIA,IAFA,IACAhzD,EAAAszD,EAAAC,EADAC,GAAA,EAEAtlG,EAAA05E,EAAAj5E,KAAoCT,GAAA05E,EAAA/4E,OAAqBX,EACzD,QAAA0e,EAAAg7D,EAAAh5E,KAAwCge,GAAAg7D,EAAA94E,OAAqB8d,EAC7D0mF,EAA+BrrB,GAAS5gC,EAAAn5C,EAAA0e,GACxC2mF,GAAA,EACAP,EAAAn/B,YAAAy/B,KAEAC,GADAvzD,EAAoEgzD,EAAA7mG,IAAAmnG,IACpEpzD,aAAiDlD,GAASG,UAE1Do2D,GAAA,IAAAt2F,EAAA+iC,IAGAuzD,IACAC,GAAA,GAIA,OAAAA,GAMAlB,EAAAplG,UAAAumG,uBAAA,SAAAj6E,GACA,UAOA84E,EAAAplG,UAAAuyC,OAAA,WACA,OAAArxC,KAAA4lE,MAOAs+B,EAAAplG,UAAAwmG,OAAA,SAAA7mG,GACAuB,KAAA4lE,OAAAnnE,IACAuB,KAAA4lE,KAAAnnE,EACAuB,KAAAgX,YAOAktF,EAAAplG,UAAAymG,UAAA,SAAAn6E,GACA,OAAAprB,KAAAmkG,SAKAD,EAAAplG,UAAA4/C,eAAA,WACA,OAAA1+C,KAAAyoB,SAAAi2B,kBAWAwlD,EAAAplG,UAAA0mG,QAAA,SAAAvsD,EAAAn5C,EAAA0e,EAAAugC,EAAA3zB,GACA,OAAenb,KAOfi0F,EAAAplG,UAAA2mG,YAAA,WACA,OAAAzlG,KAAAyoB,UAMAy7E,EAAAplG,UAAA4mG,yBAAA,SAAAt6E,GACA,OAAAprB,KAAAyoB,SAIAzoB,KAAAyoB,SAHmBm0D,GAAwBxxD,IAW3C84E,EAAAplG,UAAAkmG,0BAAA,SAAA55E,GACA,IAAAu6E,EAAA3lG,KAAA47B,gBACA,OAAA+pE,IAAyBl5E,GAAUk5E,EAAAv6E,GACnC,KAGAprB,KAAA4kG,WAUAV,EAAAplG,UAAA8mG,kBAAA,SAAA7mD,GACA,OAAA/+C,KAAAqkG,iBAQAH,EAAAplG,UAAA+mG,iBAAA,SAAA5sD,EAAA8F,EAAA3zB,GACA,IAAA3C,EAAAzoB,KAAA0lG,yBAAAt6E,GACAk5E,EAAAtkG,KAAA4lG,kBAAA7mD,GACA+7B,EAAuBr0B,GAAMh+B,EAAAkzD,YAAA1iC,GAAAj5C,KAAA6kG,SAC7B,UAAAP,EACAxpB,EAGmBt0B,GAASs0B,EAAAwpB,EAAAtkG,KAAA6kG,UAY5BX,EAAAplG,UAAAgnG,+BAAA,SAAAxsB,EAAAysB,GACA,IAAA36E,OAAAxY,IAAAmzF,EACAA,EAAA/lG,KAAA47B,gBACAnT,EAAAzoB,KAAA0lG,yBAAAt6E,GAIA,OAHAprB,KAAA6yE,YAAAznD,EAAA/C,aACAixD,ElCzQO,SAAc7wD,EAAA6wD,EAAAluD,GACrB,IAAA6tB,EAAAqgC,EAAA,GACA14D,EAAA6H,EAAAozD,mBAAAvC,GACA9G,EAAA8K,GAAAlyD,GACA,GAASzM,GAAkB6zD,EAAA5xD,GAO3B,OAAA04D,EANA,IAAA7G,EAAyBnyD,GAAQkyD,GACjCwzB,EAAA3mG,KAAAc,MAAAqyE,EAAA,GAAA5xD,EAAA,IAAA6xD,GAEA,OADA7xD,EAAA,IAAA6xD,EAAAuzB,EACAv9E,EAAA+zD,yBAAA57D,EAAAq4B,GkCiQwBgtD,CAAKx9E,EAAA6wD,EAAAluD,IpCtOtB,SAAAkuD,EAAA7wD,GACP,IAAAwwB,EAAAqgC,EAAA,GACAx5E,EAAAw5E,EAAA,GACA96D,EAAA86D,EAAA,GACA,GAAA7wD,EAAA61B,aAAArF,KAAAxwB,EAAA01B,aACA,SAEA,IACAq7B,EADAt7D,EAAAuK,EAAAT,YAQA,QAFAwxD,EAJAt7D,EAIAuK,EAAA2yD,0BAAAl9D,EAAA+6B,GAHAxwB,EAAAi0D,iBAAAzjC,KASAugC,EAAA36D,WAAA/e,EAAA0e,GoCqNe0nF,CAAgB5sB,EAAA7wD,GAAA6wD,EAAA,MAM/B4qB,EAAAplG,UAAAsB,MAAA,WACAJ,KAAA4kG,UAAAxkG,SAKA8jG,EAAAplG,UAAAglG,QAAA,WACA9jG,KAAAI,QACAyQ,EAAA/R,UAAAglG,QAAAzmG,KAAA2C,OAUAkkG,EAAAplG,UAAAqnG,QAAA,SAAAltD,EAAAn5C,EAAA0e,EAAA4M,KACA84E,EAlRc,CAmRZX,IAMF6C,GAAA,SAAAv1F,GAMA,SAAAu1F,EAAAhjG,EAAAwuC,GACA,IAAA5gC,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAOA,OADAgR,EAAA4gC,OACA5gC,EAEA,OAfIgzF,GAASoC,EAAAv1F,GAebu1F,EAhBA,CAiBE/xF,GAEagyF,GAAA,GCrVAC,GAMf,gBANeA,GAaf,cAbeA,GAmBf,gBCzBIC,GAAyB,WAC7B,IAAAl2F,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiNd81F,GAnKJ,SAAA31F,GAKX,SAAA41F,EAAAxtF,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAiO,UAAAzoD,EAAAyoD,UACA0iC,OAAAnrF,EAAAmrF,OACAh5E,WAAAnS,EAAAmS,WACAymB,MAAA54B,EAAA44B,MACAppB,SAAAxP,EAAAwP,SACA67E,eAAArrF,EAAAqrF,eACAT,MAAA5qF,EAAA4qF,MACA7J,WAAA/gF,EAAA+gF,WACAv7F,IAAAwa,EAAAxa,IACAklG,wBAAA1qF,EAAA0qF,2BACS3jG,KAgCT,OA3BAgR,EAAA01F,0BAAAztF,EAAA0tF,gBAKA31F,EAAA6pF,iBAAA5hF,EAAA4hF,iBAKA7pF,EAAA21F,gBAAA1tF,EAAA0tF,gBAAA1tF,EAAA0tF,gBAAAjoG,KAAAsS,GAAgG4nF,GAKhG5nF,EAAA8nF,KAAA,KACA7/E,EAAA6/E,KACA9nF,EAAA41F,QAAA3tF,EAAA6/E,MAEA7/E,EAAA4+D,KACA7mE,EAAA61F,OAAA5tF,EAAA4+D,KAMA7mE,EAAA81F,iBAAA,GACA91F,EA+GA,OAhKIu1F,GAASE,EAAA51F,GAwDb41F,EAAA3nG,UAAAioG,oBAAA,WACA,OAAA/mG,KAAA66F,kBAOA4L,EAAA3nG,UAAAkoG,mBAAA,WACA,OAAAhnG,KAAA2mG,iBASAF,EAAA3nG,UAAAmoG,QAAA,WACA,OAAAjnG,KAAA84F,MAOA2N,EAAA3nG,UAAA4yC,iBAAA,SAAAliC,GACA,IAGApM,EAHAwuC,EAA2DpiC,EAAA,OAC3D03F,EAAkB/2F,EAAMyhC,GACxBu1D,EAAAv1D,EAAAE,WAEAq1D,GAAyBv4D,GAASE,SAClC9uC,KAAA8mG,iBAAAI,IAAA,EACA9jG,EAAmBkjG,IAEnBY,KAAAlnG,KAAA8mG,0BACA9mG,KAAA8mG,iBAAAI,GACA9jG,EAAA+jG,GAAgCv4D,GAASt5B,MAASgxF,GAClDa,GAA8Bv4D,GAASG,QAAAo4D,GAAwBv4D,GAASK,MACpDq3D,QAAa1zF,GAEjCA,MAAAxP,GACApD,KAAA+U,cAAA,IAAmCqxF,GAAehjG,EAAAwuC,KAQlD60D,EAAA3nG,UAAAsoG,oBAAA,SAAAvM,GACA76F,KAAA4kG,UAAAxkG,QACAJ,KAAA66F,mBACA76F,KAAAgX,WAQAyvF,EAAA3nG,UAAAuoG,mBAAA,SAAAV,EAAAloG,GACAuB,KAAA2mG,kBACA3mG,KAAA4kG,UAAAvJ,0BACA,IAAA58F,EACAuB,KAAAslG,OAAA7mG,GAGAuB,KAAAgX,WAQAyvF,EAAA3nG,UAAA+nG,OAAA,SAAAhvB,GACA,IAAAihB,EAAA94F,KAAA84F,KAA+BD,GAAShhB,GACxC73E,KAAA4mG,QAAA9N,IAOA2N,EAAA3nG,UAAA8nG,QAAA,SAAA9N,GACA94F,KAAA84F,OACA,IAAAr6F,EAAAq6F,EAAA9pE,KAAA,MACAhvB,KAAA0mG,yBACA1mG,KAAAqnG,mBAAoC7O,GAAmBM,EAAA94F,KAAAyoB,UAAAhqB,GAGvDuB,KAAAslG,OAAA7mG,IAMAgoG,EAAA3nG,UAAAqnG,QAAA,SAAAltD,EAAAn5C,EAAA0e,GACA,IAAA0mF,EAA2BrrB,GAAS5gC,EAAAn5C,EAAA0e,GACpCxe,KAAA4kG,UAAAn/B,YAAAy/B,IACAllG,KAAA4kG,UAAA7mG,IAAAmnG,IAGAuB,EAjKW,CAkKTJ,IChNEiB,GAAyB,WAC7B,IAAAj3F,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4X7B,SAAA62F,GAAAC,EAAA5kC,GACiD4kC,EAAA16B,WAAAlK,MAElC,IAAA6kC,GArTF,SAAA52F,GAKb,SAAA62F,EAAAzuF,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAiO,UAAAzoD,EAAAyoD,UACA0iC,OAAAnrF,EAAAmrF,OACAh5E,WAAAnS,EAAAmS,WACAymB,MAAA54B,EAAA44B,MACAppB,SAAAxP,EAAAwP,SACAoyE,iBAAA5hF,EAAA4hF,iBACA5hF,EAAA4hF,iBAAA0M,GACAjD,eAAArrF,EAAAqrF,eACAqC,gBAAA1tF,EAAA0tF,gBACA9uB,IAAA5+D,EAAA4+D,IACAihB,KAAA7/E,EAAA6/E,KACA+K,MAAA5qF,EAAA4qF,MACA7J,WAAA/gF,EAAA+gF,WACAv7F,IAAAwa,EAAAxa,IACAklG,wBAAA1qF,EAAA0qF,2BACS3jG,KAiCT,OA5BAgR,EAAA6xD,iBACAjwD,IAAAqG,EAAA4pD,YAAA5pD,EAAA4pD,YAAA,KAKA7xD,EAAA22F,eAAA/0F,IAAAqG,EAAA0uF,UACA1uF,EAAA0uF,UAAgChN,GAKhC3pF,EAAA42F,uBAAA,GAKA52F,EAAA62F,sBAAA,GAKA72F,EAAA82F,4BAAA7uF,EAAA8uF,2BAKA/2F,EAAAg3F,0BAAA,EACAh3F,EAoPA,OA3SIs2F,GAASI,EAAA72F,GA4Db62F,EAAA5oG,UAAA2jE,eAAA,WAIA,GAAAziE,KAAA4kG,UAAAniC,iBACA,SAGA,QAAAhkE,KAAAuB,KAAA4nG,uBACA,GAAA5nG,KAAA4nG,uBAAAnpG,GAAAgkE,iBACA,SAIA,UAKAilC,EAAA5oG,UAAAs8F,YAAA,SAAAhwE,EAAAmkC,GAKA,IAAA04C,EAAAjoG,KAAAglG,0BAAA55E,GAEA,QAAAnP,KADAjc,KAAA4kG,UAAAxJ,YAAAp7F,KAAA4kG,WAAAqD,EAAA14C,EAAA,IACAvvD,KAAA4nG,uBAAA,CACA,IAAAhD,EAAA5kG,KAAA4nG,uBAAA3rF,GACA2oF,EAAAxJ,YAAAwJ,GAAAqD,EAAA14C,EAAA,MAMAm4C,EAAA5oG,UAAAumG,uBAAA,SAAAj6E,GACA,OACAprB,KAAA47B,iBAAAxQ,IAAmDqB,GAAUzsB,KAAA47B,gBAAAxQ,GAC7D,EAGAprB,KAAAkoG,aAMAR,EAAA5oG,UAAAopG,UAAA,WACA,UAKAR,EAAA5oG,UAAAymG,UAAA,SAAAn6E,GACA,QACAprB,KAAA47B,iBAAAxQ,IAAmDqB,GAAUzsB,KAAA47B,gBAAAxQ,KAI7Dva,EAAA/R,UAAAymG,UAAAloG,KAAA2C,KAAAorB,IAMAs8E,EAAA5oG,UAAA4mG,yBAAA,SAAAt6E,GAIA,IAAAu6E,EAAA3lG,KAAA47B,gBACA,IAAA57B,KAAAyoB,UAAAk9E,IAA2Cl5E,GAAUk5E,EAAAv6E,GAGrD,CACA,IAAA+8E,EAA0Bh4F,EAAMib,GAIhC,OAHA+8E,KAAAnoG,KAAA6nG,wBACA7nG,KAAA6nG,sBAAAM,GAAsDvrB,GAAwBxxD,IAGZprB,KAAA6nG,sBAAAM,GARlE,OAAAnoG,KAAAyoB,UAcAi/E,EAAA5oG,UAAAkmG,0BAAA,SAAA55E,GAIA,IAAAu6E,EAAA3lG,KAAA47B,gBACA,IAAA+pE,GAAyBl5E,GAAUk5E,EAAAv6E,GACnC,OAAAprB,KAAA4kG,UAGA,IAAAuD,EAA0Bh4F,EAAMib,GAIhC,OAHA+8E,KAAAnoG,KAAA4nG,yBACA5nG,KAAA4nG,uBAAAO,GAAA,IAA2DjN,GAASl7F,KAAA4kG,UAAAx/B,gBAEpEplE,KAAA4nG,uBAAAO,IAaAT,EAAA5oG,UAAAspG,YAAA,SAAAnvD,EAAAn5C,EAAA0e,EAAAugC,EAAA3zB,EAAA3sB,GACA,IAAA66E,EAAA,CAAArgC,EAAAn5C,EAAA0e,GACA6pF,EAAAroG,KAAA8lG,+BAAAxsB,EAAAluD,GACAk9E,EAAAD,EACAroG,KAAA2mG,gBAAA0B,EAAAtpD,EAAA3zB,QAAAxY,EACAg/B,EAAA,IAAA5xC,KAAA2nG,UAAAruB,OAAA1mE,IAAA01F,EAAyE15D,GAASC,KAAQD,GAASI,WAAAp8B,IAAA01F,IAAA,GAAAtoG,KAAA6iE,YAAA7iE,KAAA66F,iBAAA76F,KAAA8kG,aAGnG,OAFAlzD,EAAAnzC,MACQ0U,EAAMy+B,EAAOx8B,EAASC,OAAArV,KAAA0xC,iBAAA1xC,MAC9B4xC,GAKA81D,EAAA5oG,UAAA0mG,QAAA,SAAAvsD,EAAAn5C,EAAA0e,EAAAugC,EAAA3zB,GACA,IAAAyB,EAAmF7sB,KAAA47B,gBACnF,GACA/O,GAAAzB,IAAgDqB,GAAUI,EAAAzB,GAG1D,CACA,IAAAu7B,EAAA3mD,KAAAglG,0BAAA55E,GACAkuD,EAAA,CAAArgC,EAAAn5C,EAAA0e,GACAozB,OAAA,EACAszD,EAA+BprB,GAAMR,GACrC3yB,EAAA8e,YAAAy/B,KACAtzD,EAAgE+U,EAAA5oD,IAAAmnG,IAEhE,IAAAzmG,EAAAuB,KAAAqxC,SACA,GAAAO,KAAAnzC,OACA,OAAAmzC,EAGA,IAAA+vD,EAAA3hG,KAAA0lG,yBAAA74E,GACA+0E,EAAA5hG,KAAA0lG,yBAAAt6E,GACAy2E,EAAA7hG,KAAA8lG,+BAAAxsB,EAAAluD,GACAm9E,EAAA,IAAkC9G,GAAU50E,EAAA80E,EAAAv2E,EAAAw2E,EAAAtoB,EAAAuoB,EAAA7hG,KAAA4lG,kBAAA7mD,GAAA/+C,KAAAkoG,YAAA,SAAAjvD,EAAAn5C,EAAA0e,EAAAugC,GAC5C,OAAA/+C,KAAAwoG,gBAAAvvD,EAAAn5C,EAAA0e,EAAAugC,EAAAlyB,IACiBnuB,KAAAsB,WAAA8nG,4BAAA9nG,KAAAgoG,0BAUjB,OATAO,EAAA9pG,MACAmzC,GACA22D,EAAAzO,YAAAloD,EACA22D,EAAApO,sBACAxzC,EAAA5Q,QAAAmvD,EAAAqD,IAGA5hD,EAAAh+C,IAAAu8F,EAAAqD,GAEAA,EA9BA,OAAAvoG,KAAAwoG,gBAAAvvD,EAAAn5C,EAAA0e,EAAAugC,EAAAlyB,GAAAzB,IA2CAs8E,EAAA5oG,UAAA0pG,gBAAA,SAAAvvD,EAAAn5C,EAAA0e,EAAAugC,EAAA3zB,GACA,IAAAwmB,EAAA,KACAszD,EAA2BrrB,GAAS5gC,EAAAn5C,EAAA0e,GACpC/f,EAAAuB,KAAAqxC,SACA,GAAArxC,KAAA4kG,UAAAn/B,YAAAy/B,IAMA,IADAtzD,EAAA5xC,KAAA4kG,UAAA7mG,IAAAmnG,IACAzmG,OAAA,CAIA,IAAAq7F,EAAAloD,EACAA,EAAA5xC,KAAAooG,YAAAnvD,EAAAn5C,EAAA0e,EAAAugC,EAAA3zB,EAAA3sB,GAEAq7F,EAAAhoD,YAA8ClD,GAASC,KAEvD+C,EAAAkoD,0BAGAloD,EAAAkoD,cAEAloD,EAAAuoD,sBACAn6F,KAAA4kG,UAAA7uD,QAAAmvD,EAAAtzD,SApBAA,EAAA5xC,KAAAooG,YAAAnvD,EAAAn5C,EAAA0e,EAAAugC,EAAA3zB,EAAA3sB,GACAuB,KAAA4kG,UAAAj8F,IAAAu8F,EAAAtzD,GAsBA,OAAAA,GAOA81D,EAAA5oG,UAAA2pG,2BAAA,SAAAr6C,GACA,GACApuD,KAAAgoG,0BAAA55C,EADA,CAKA,QAAAnyC,KADAjc,KAAAgoG,yBAAA55C,EACApuD,KAAA4nG,uBACA5nG,KAAA4nG,uBAAA3rF,GAAA7b,QAEAJ,KAAAgX,YAcA0wF,EAAA5oG,UAAA4pG,yBAAA,SAAAt9E,EAAAu9E,GAEA,IAAAC,EAAuBt9E,GAAaF,GACpC,GAAAw9E,EAAA,CACA,IAAAT,EAA8Bh4F,EAAMy4F,GACpCT,KAAAnoG,KAAA6nG,wBACA7nG,KAAA6nG,sBAAAM,GAAAQ,KAKAjB,EA5Sa,CA6SXlB,ICpXEqC,GAAyB,WAC7B,IAAAx4F,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAkD7B,IA6Neo4F,GAjKH,SAAAj4F,GAKZ,SAAAk4F,EAAA9vF,GACA,IAAAjI,EAAAhR,KACAgpG,OAAAp2F,IAAAqG,EAAA+vF,OAAA/vF,EAAA+vF,MA2CA,OA1CAh4F,EAAAH,EAAAxT,KAAA2C,KAAA,CACA0hE,UAAAzoD,EAAAyoD,UACAmB,YAAA,YACAuhC,QAAA,EACAh5E,WAAwBE,GAAa,aACrCy8E,2BAAA9uF,EAAA8uF,2BACAl2D,MAAmBmT,GAAWlW,QAC9B+rD,iBAAA5hF,EAAA4hF,iBACAyJ,eAAA0E,EAAA,IACAnF,WAAAjxF,IAAAqG,EAAA4qF,OAAA5qF,EAAA4qF,MACA7J,WAAA/gF,EAAA+gF,cACSh6F,MAKTipG,OAAAD,EAKAh4F,EAAAk4F,cAAAt2F,IAAAqG,EAAAkwF,QAAAlwF,EAAAkwF,QAAA,QAKAn4F,EAAAo4F,cAAAx2F,IAAAqG,EAAAy/B,QAAAz/B,EAAAy/B,SAAA,EAKA1nC,EAAAq4F,QAAApwF,EAAAxa,IAKAuS,EAAAs4F,YAAArwF,EAAAswF,WAKQpQ,GAJR,yDACAnoF,EAAAs4F,YACA,iDAAAt4F,EAAAq4F,QACA,MAAAr4F,EAAAk4F,SACoBl4F,EAAAw4F,8BAAA9qG,KAAAsS,QAAA4B,EAAA,SACpB5B,EA6GA,OA9JI63F,GAASE,EAAAl4F,GAyDbk4F,EAAAjqG,UAAA2qG,UAAA,WACA,OAAAzpG,KAAAqpG,SAQAN,EAAAjqG,UAAA4qG,cAAA,WACA,OAAA1pG,KAAAspG,aAKAP,EAAAjqG,UAAA0qG,8BAAA,SAAAG,GACA,QAAAA,EAAAC,YACA,MAAAD,EAAAE,mBACA,oBAAAF,EAAAG,0BACA,GAAAH,EAAAI,aAAAhqG,QACA,GAAA4pG,EAAAI,aAAA,GAAAC,UAAAjqG,OAJA,CAQA,IAAAkqG,EAAAN,EAAAI,aAAA,GAAAC,UAAA,GACAtxD,GAAA,GAAA14C,KAAAopG,SAAAa,EAAAC,QAAAlqG,KAAAopG,SAEAlrF,EAAqBo/D,GADrBt9E,KAAA47B,iBAEA1L,EAAAlwB,KAAAipG,OAAA,IACAnuB,EAAAmvB,EAAAE,YAAAF,EAAAG,YACAH,EAAAE,WAAAj6E,EACA,CAAA+5E,EAAAE,WAAAj6E,EAAA+5E,EAAAG,YAAAl6E,GACAzH,EAAuBq0D,GAAS,CAChC5+D,SACAu6B,QAAAwxD,EAAAI,QACA3xD,UACAoiC,aAEA96E,KAAAyoB,WACA,IAAA0gF,EAAAnpG,KAAAkpG,SACAF,EAAAhpG,KAAAipG,OA4BA,GA3BAjpG,KAAA2mG,gBAA+BhO,GAA0BsR,EAAAK,mBAAAr9F,IAAA,SAAAs9F,GAEzD,IAAAC,EAAA,QACAC,EAAAR,EAAAQ,SACA10D,QAAA,cAAqCw0D,GACrCx0D,QAAA,YAAmCozD,GACnC,gBAOA7vB,EAAAv6B,EAAA3zB,GACA,GAAAkuD,EAGA,CACoBK,GAAcL,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAkxB,GAClC,IAAA3yB,EAAA4yB,EAIA,OAHAzB,IACAnxB,GAAA,yBAEAA,EAAA9hC,QAAA,YA/MO,SAAAujC,GACP,IAGAp8E,EAAA6/D,EAHA9jB,EAAAqgC,EAAA,GACAoxB,EAAA,IAAAt+F,MAAA6sC,GACA0xD,EAAA,GAAA1xD,EAAA,EAEA,IAAA/7C,EAAA,EAAeA,EAAA+7C,IAAO/7C,EAEtB6/D,EAAA,GACAuc,EAAA,GAAAqxB,IACA5tC,GAAA,GAEAuc,EAAA,GAAAqxB,IACA5tC,GAAA,GAEA2tC,EAAAxtG,GAAAyK,OAAAC,aAAAm1D,GACA4tC,IAAA,EAEA,OAAAD,EAAA17E,KAAA,IA8LiD47E,CAAAJ,SAIjDP,EAAAY,iBAAA,CACA,IAAAC,EAA8Bn/E,GAA4BL,GAAa,aAAAtrB,KAAA47B,iBACvE57B,KAAA+jG,gBAAA,SAAAnlE,GACA,IAAA60B,EAAA,GACAvE,EAAAtwB,EAAAswB,UAGAnU,EAFA/6C,KAAAylG,cACA3pB,kCAAA5sB,EAAAtuC,OAAAsuC,EAAAruC,YACA,GAqBA,OApBAopF,EAAAY,iBAAA59F,IAAA,SAAA89F,GAGA,IAFA,IAAAC,GAAA,EACAC,EAAAF,EAAAE,cACA/tG,EAAA,EAAA0U,EAAAq5F,EAAAlrG,OAA8D7C,EAAA0U,IAAQ1U,EAAA,CACtE,IAAAguG,EAAAD,EAAA/tG,GACA,GAAA69C,GAAAmwD,EAAAb,SAAAtvD,GAAAmwD,EAAAhB,QAAA,CACA,IAAAiB,EAAAD,EAAAC,KAGA,GAAgCjpF,GADWI,GAD3C,CAAA6oF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACyDL,GACflsE,EAAA1gB,QAAA,CAC1C8sF,GAAA,EACA,QAIAA,GACAv3C,EAAA3yD,KAAAiqG,EAAA/0C,eAGAvC,EAAA3yD,KArNA,gHAsNA2yD,GACa/0D,KAAAsB,OAEbA,KAAAq6F,SAAsBr1C,GAAWE,YA9EjCllD,KAAAq6F,SAA0Br1C,GAAW1vC,QAgFrCyzF,EA/JY,CAgKVtB,IC9QE2D,GAAyB,WAC7B,IAAA/6F,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4Gd26F,GAtCR,SAAAx6F,GAKP,SAAAgS,EAAA7J,GACA,IACAC,EAAAD,GAAA,GACAoS,OAAAxY,IAAAqG,EAAAmS,WACAnS,EAAAmS,WAAA,YACA3C,OAAA7V,IAAAqG,EAAAwP,SAAAxP,EAAAwP,SACYq0D,GAAS,CACrB5+D,OAAwBo/D,GAAoBlyD,GAC5CstB,QAAAz/B,EAAAy/B,QACAD,QAAAx/B,EAAAw/B,QACAqiC,SAAA7hE,EAAA6hE,WAmBA,OAjBAjqE,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAiO,UAAAzoD,EAAAyoD,UACAmB,YAAA5pD,EAAA4pD,YACAuhC,OAAAnrF,EAAAmrF,OACAh5E,aACA28E,2BAAA9uF,EAAA8uF,2BACAt/E,WACAoyE,iBAAA5hF,EAAA4hF,iBACAyJ,eAAArrF,EAAAqrF,eACAqC,gBAAA1tF,EAAA0tF,gBACA9uB,IAAA5+D,EAAA4+D,IACAihB,KAAA7/E,EAAA6/E,KACA+K,WAAAjxF,IAAAqG,EAAA4qF,OAAA5qF,EAAA4qF,MACA7J,WAAA/gF,EAAA+gF,WACA2J,wBAAA1qF,EAAA0qF,2BACS3jG,KAGT,OAnCIorG,GAASvoF,EAAAhS,GAmCbgS,EApCO,CAqCL4kF,IC3GE6D,GAAyB,WAC7B,IAAAj7F,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAsLd66F,GAtIJ,SAAA16F,GAKX,SAAA26F,EAAAvyF,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAiO,UAAAzoD,EAAAyoD,UACAmB,YAAA5pD,EAAA4pD,YACAnqB,aAAA9lC,IAAAqG,EAAAy/B,QAAAz/B,EAAAy/B,QAAA,GACAD,QAAAx/B,EAAAw/B,QACArtB,WAAAnS,EAAAmS,WACAy4E,MAAA5qF,EAAA4qF,SACS7jG,KAsBT,OAjBAgR,EAAAy6F,SAAAxyF,EAAAyyF,QAKA16F,EAAA26F,OAAA1yF,EAAAhM,KAAA,GAKA+D,EAAA46F,QAAA3yF,EAAArM,QAAA,GAKAoE,EAAA66F,eAAA,GACA76F,EAAA86F,iBACA96F,EAgGA,OAnIIs6F,GAASE,EAAA36F,GA0Cb26F,EAAA1sG,UAAAitG,UAAA,WACA,OAAA/rG,KAAA4rG,SAQAJ,EAAA1sG,UAAAktG,aAAA,SAAAp/F,GACQ2E,EAAMvR,KAAA4rG,QAAAh/F,GACd5M,KAAA8rG,kBASAN,EAAA1sG,UAAAmtG,UAAA,SAAAr/F,GACA5M,KAAA4rG,QAAAh/F,GAAA,GACA5M,KAAA8rG,kBAMAN,EAAA1sG,UAAAgtG,eAAA,WACA,IAAAI,EAAAz0B,KAAA00B,UAAAnsG,KAAA4rG,SACA,GAAA5rG,KAAA6rG,eAAAK,GACAlsG,KAAAosG,eAAApsG,KAAA6rG,eAAAK,QADA,CAIA,IAAAG,EAAA,WAAArsG,KAAAyrG,SAAA,wBACAzrG,KAAA2rG,SACAU,GAAA,UAAArsG,KAAA2rG,QAEA,IAAAW,EAAA,IAAAp0B,eACAo0B,EAAA3+F,iBAAA,OAAA3N,KAAAusG,oBAAA7tG,KAAAsB,KAAAksG,IACAI,EAAA3+F,iBAAA,QAAA3N,KAAAwsG,iBAAA9tG,KAAAsB,OACAssG,EAAAn0B,KAAA,OAAAk0B,GACAC,EAAAG,iBAAA,mCACAH,EAAAvzB,KAAAtB,KAAA00B,UAAAnsG,KAAA4rG,YASAJ,EAAA1sG,UAAAytG,oBAAA,SAAAL,EAAA18F,GACA,IAAA88F,EAA+C98F,EAAA,OAE/C,IAAA88F,EAAAh0B,QAAAg0B,EAAAh0B,QAAA,KAAAg0B,EAAAh0B,OAAA,KACA,IAAAqxB,OAAA,EACA,IACAA,EAAuDlyB,KAAAyH,MAAAotB,EAAA/zB,cAEvD,MAAAm0B,GAEA,YADA1sG,KAAAq6F,SAA8Br1C,GAAW1vC,OAGzCtV,KAAAosG,eAAAzC,GACA3pG,KAAA6rG,eAAAK,GAAAvC,EACA3pG,KAAAq6F,SAA0Br1C,GAAWE,YAGrCllD,KAAAq6F,SAA0Br1C,GAAW1vC,QAOrCk2F,EAAA1sG,UAAA0tG,iBAAA,SAAAh9F,GACAxP,KAAAq6F,SAAsBr1C,GAAW1vC,QAOjCk2F,EAAA1sG,UAAAstG,eAAA,SAAAnrG,GACA,IAAA0rG,EAAA,WAAA1rG,EAAA2rG,QAAAC,MAAA,IAAA7sG,KAAAyrG,SACA,eAAAxqG,EAAA6rG,aAAA,mBACA9sG,KAAA6mG,OAAA8F,IAEAnB,EApIW,CAqITH,IClLa0B,GAAA,CAMfC,WAAA,aAMAC,cAAA,gBAMA13F,MAAA,QAOA23F,cAAA,oCCyKeC,GAlLN,WAIT,SAAAC,EAAAC,GAIArtG,KAAAstG,OAAA,IAA0BC,GAAApuG,EAAMkuG,GAOhCrtG,KAAAwtG,OAAA,GAiKA,OA1JAJ,EAAAtuG,UAAAwC,OAAA,SAAA4c,EAAA/f,GAEA,IAAAwb,EAAA,CACApZ,KAAA2d,EAAA,GACA1d,KAAA0d,EAAA,GACAzd,KAAAyd,EAAA,GACAxd,KAAAwd,EAAA,GACA/f,SAEA6B,KAAAstG,OAAAhsG,OAAAqY,GACA3Z,KAAAwtG,OAAoBr9F,EAAMhS,IAAAwb,GAO1ByzF,EAAAtuG,UAAAuC,KAAA,SAAAosG,EAAA17F,GAEA,IADA,IAAA4/D,EAAA,IAAAvlE,MAAA2F,EAAAhS,QACA7C,EAAA,EAAAC,EAAA4U,EAAAhS,OAA0C7C,EAAAC,EAAOD,IAAA,CACjD,IAAAghB,EAAAuvF,EAAAvwG,GACAiB,EAAA4T,EAAA7U,GAEAyc,EAAA,CACApZ,KAAA2d,EAAA,GACA1d,KAAA0d,EAAA,GACAzd,KAAAyd,EAAA,GACAxd,KAAAwd,EAAA,GACA/f,SAEAwzE,EAAAz0E,GAAAyc,EACA3Z,KAAAwtG,OAAwBr9F,EAAMhS,IAAAwb,EAE9B3Z,KAAAstG,OAAAjsG,KAAAswE,IAOAy7B,EAAAtuG,UAAA6C,OAAA,SAAAxD,GACA,IAAA+oG,EAAkB/2F,EAAMhS,GAGxBwb,EAAA3Z,KAAAwtG,OAAAtG,GAEA,cADAlnG,KAAAwtG,OAAAtG,GACA,OAAAlnG,KAAAstG,OAAA3rG,OAAAgY,IAOAyzF,EAAAtuG,UAAAm/B,OAAA,SAAA/f,EAAA/f,GACA,IAAAwb,EAAA3Z,KAAAwtG,OAA+Br9F,EAAMhS,IAExBuhB,GADb,CAAA/F,EAAApZ,KAAAoZ,EAAAnZ,KAAAmZ,EAAAlZ,KAAAkZ,EAAAjZ,MACmBwd,KACnBle,KAAA2B,OAAAxD,GACA6B,KAAAsB,OAAA4c,EAAA/f,KAOAivG,EAAAtuG,UAAA4uG,OAAA,WAEA,OADA1tG,KAAAstG,OAAAvsG,MACAkM,IAAA,SAAA0M,GACA,OAAAA,EAAAxb,SAQAivG,EAAAtuG,UAAA6uG,YAAA,SAAAzvF,GAEA,IAAAitF,EAAA,CACA5qG,KAAA2d,EAAA,GACA1d,KAAA0d,EAAA,GACAzd,KAAAyd,EAAA,GACAxd,KAAAwd,EAAA,IAGA,OADAle,KAAAstG,OAAApsG,OAAAiqG,GACAl+F,IAAA,SAAA0M,GACA,OAAAA,EAAAxb,SAUAivG,EAAAtuG,UAAA2a,QAAA,SAAA5K,GACA,OAAA7O,KAAA4tG,SAAA5tG,KAAA0tG,SAAA7+F,IAQAu+F,EAAAtuG,UAAA+uG,gBAAA,SAAA3vF,EAAArP,GACA,OAAA7O,KAAA4tG,SAAA5tG,KAAA2tG,YAAAzvF,GAAArP,IAQAu+F,EAAAtuG,UAAA8uG,SAAA,SAAA77F,EAAAlD,GAEA,IADA,IAAA7I,EACA9I,EAAA,EAAAC,EAAA4U,EAAAhS,OAA0C7C,EAAAC,EAAOD,IAEjD,GADA8I,EAAA6I,EAAAkD,EAAA7U,IAEA,OAAA8I,EAGA,OAAAA,GAKAonG,EAAAtuG,UAAAkT,QAAA,WACA,OAAeA,EAAOhS,KAAAwtG,SAKtBJ,EAAAtuG,UAAAsB,MAAA,WACAJ,KAAAstG,OAAAltG,QACAJ,KAAAwtG,OAAA,IAMAJ,EAAAtuG,UAAAkpB,UAAA,SAAA1J,GACA,IAAArd,EAAAjB,KAAAstG,OAAAtrG,SACA,OAAemd,GAAcle,EAAAV,KAAAU,EAAAT,KAAAS,EAAAR,KAAAQ,EAAAP,KAAA4d,IAK7B8uF,EAAAtuG,UAAAqO,OAAA,SAAA2gG,GAEA,QAAA5wG,KADA8C,KAAAstG,OAAAjsG,KAAAysG,EAAAR,OAAAvsG,OACA+sG,EAAAN,OACAxtG,KAAAwtG,OAAAtwG,GAAA4wG,EAAAN,OAAAtwG,IAGAkwG,EAhLS,GCnBLW,GAAyB,WAC7B,IAAA19F,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4C7Bs9F,GAAA,SAAAn9F,GAMA,SAAAm9F,EAAA5qG,EAAA6qG,GACA,IAAAj9F,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAOA,OADAgR,EAAAw6C,QAAAyiD,EACAj9F,EAEA,OAfI+8F,GAASC,EAAAn9F,GAebm9F,EAhBA,CAiBE35F,GA02Ba65F,GAvwBC,SAAAr9F,GAKhB,SAAAs9F,EAAAn1F,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,IACAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAroC,gBAAAxY,EACAi/B,MAAmBmT,GAAWE,MAC9B2+C,WAAAjxF,IAAAqG,EAAA4qF,OAAA5qF,EAAA4qF,SACS7jG,MAKTouG,QAAwBj6F,EAKxBnD,EAAAq9F,QAAAp1F,EAAA6+D,OAKA9mE,EAAAs9F,UAAA17F,MAAAqG,EAAAs1F,UAAAt1F,EAAAs1F,SAKAv9F,EAAAw9F,KAAAv1F,EAAA4+D,SACAjlE,IAAAqG,EAAAw1F,OACAz9F,EAAAo9F,QAAAn1F,EAAAw1F,YAEA77F,IAAA5B,EAAAw9F,OACYt0F,EAAMlJ,EAAAq9F,QAAA,GAElBr9F,EAAAo9F,QAA4Bp1B,GAAGhoE,EAAAw9F,KAA+Dx9F,EAAA,UAM9FA,EAAA09F,eAAA97F,IAAAqG,EAAA01F,SAAA11F,EAAA01F,SAA8Ex1B,GAC9E,IAsCAy1B,EAAArjD,EAtCAsjD,OAAAj8F,IAAAqG,EAAA41F,iBAAA51F,EAAA41F,gBAuDA,OAlDA79F,EAAA89F,eAAAD,EAAA,IAAqD1B,GAAK,KAK1Dn8F,EAAA+9F,oBAAA,IAAwC5B,GAKxCn8F,EAAAg+F,sBAAA,GAMAh+F,EAAAi+F,SAAA,GAMAj+F,EAAAk+F,cAAA,GAKAl+F,EAAAm+F,mBAAA,GAKAn+F,EAAAo+F,oBAAA,KAEAhjG,MAAA+K,QAAA8B,EAAAsyC,UACAA,EAAAtyC,EAAAsyC,SAEAtyC,EAAAsyC,WAEAA,GADAqjD,EAAA31F,EAAAsyC,UACA7xC,YAEAm1F,QAAAj8F,IAAAg8F,IACAA,EAAA,IAA6B/1F,EAAU0yC,SAEvC34C,IAAA24C,GACAv6C,EAAAq+F,oBAAA9jD,QAEA34C,IAAAg8F,GACA59F,EAAAs+F,wBAAAV,GAEA59F,EA+pBA,OApwBI+8F,GAASI,EAAAt9F,GAgHbs9F,EAAArvG,UAAAywG,WAAA,SAAA/jD,GACAxrD,KAAAwvG,mBAAAhkD,GACAxrD,KAAAgX,WAOAm3F,EAAArvG,UAAA0wG,mBAAA,SAAAhkD,GACA,IAAAikD,EAAyBt/F,EAAMq7C,GAC/B,GAAAxrD,KAAA0vG,YAAAD,EAAAjkD,GAAA,CAGAxrD,KAAA2vG,mBAAAF,EAAAjkD,GACA,IAAAxwC,EAAAwwC,EAAAlwC,cACA,GAAAN,EAAA,CACA,IAAAkD,EAAAlD,EAAAgN,YACAhoB,KAAA8uG,gBACA9uG,KAAA8uG,eAAAxtG,OAAA4c,EAAAstC,QAIAxrD,KAAAgvG,sBAAAS,GAAAjkD,EAEAxrD,KAAA+U,cAAA,IAAAi5F,GAAiDjB,GAAeC,WAAAxhD,MAOhE2iD,EAAArvG,UAAA6wG,mBAAA,SAAAF,EAAAjkD,GACAxrD,KAAAmvG,mBAAAM,GAAA,CACYt8F,EAAMq4C,EAAUp2C,EAASC,OAAArV,KAAA4vG,qBAAA5vG,MACzBmT,EAAMq4C,EAAUl6C,EAAetR,KAAA4vG,qBAAA5vG,QAU3CmuG,EAAArvG,UAAA4wG,YAAA,SAAAD,EAAAjkD,GACA,IAAAqkD,GAAA,EACA5zF,EAAAuvC,EAAA9vC,QAaA,YAZA9I,IAAAqJ,EACAA,EAAA/O,aAAAlN,KAAAivG,SAIAY,GAAA,EAHA7vG,KAAAivG,SAAAhzF,EAAA/O,YAAAs+C,GAOYtxC,IAAMu1F,KAAAzvG,KAAAkvG,eAAA,IAClBlvG,KAAAkvG,cAAAO,GAAAjkD,GAEAqkD,GAOA1B,EAAArvG,UAAAo6E,YAAA,SAAA3tB,GACAvrD,KAAAqvG,oBAAA9jD,GACAvrD,KAAAgX,WAOAm3F,EAAArvG,UAAAuwG,oBAAA,SAAA9jD,GAIA,IAHA,IAAAkiD,EAAA,GACAqC,EAAA,GACAC,EAAA,GACA7yG,EAAA,EAAA8yG,EAAAzkD,EAAAxrD,OAAmD7C,EAAA8yG,EAAc9yG,IAAA,CACjE,IACAuyG,EAA6Bt/F,EAD7Bq7C,EAAAD,EAAAruD,IAEA8C,KAAA0vG,YAAAD,EAAAjkD,IACAskD,EAAAhvG,KAAA0qD,GAGAtuD,EAAA,UAAA+yG,EAAAH,EAAA/vG,OAAsD7C,EAAA+yG,EAAc/yG,IAAA,CACpE,IAAAsuD,EACAikD,EAA6Bt/F,EAD7Bq7C,EAAAskD,EAAA5yG,IAEA8C,KAAA2vG,mBAAAF,EAAAjkD,GACA,IAAAxwC,EAAAwwC,EAAAlwC,cACA,GAAAN,EAAA,CACA,IAAAkD,EAAAlD,EAAAgN,YACAylF,EAAA3sG,KAAAod,GACA6xF,EAAAjvG,KAAA0qD,QAGAxrD,KAAAgvG,sBAAAS,GAAAjkD,EAGAxrD,KAAA8uG,gBACA9uG,KAAA8uG,eAAAztG,KAAAosG,EAAAsC,GAEA7yG,EAAA,UAAAgzG,EAAAJ,EAAA/vG,OAAsD7C,EAAAgzG,EAAchzG,IACpE8C,KAAA+U,cAAA,IAAAi5F,GAAqDjB,GAAeC,WAAA8C,EAAA5yG,MAOpEixG,EAAArvG,UAAAwwG,wBAAA,SAAAV,GACA,IAAAuB,GAAA,EACQh9F,EAAMnT,KAAO+sG,GAAeC,WAIpC,SAAA15F,GACA68F,IACAA,GAAA,EACAvB,EAAA9tG,KAAAwS,EAAAk4C,SACA2kD,GAAA,KAGQh9F,EAAMnT,KAAO+sG,GAAeG,cAIpC,SAAA55F,GACA68F,IACAA,GAAA,EACAvB,EAAAjtG,OAAA2R,EAAAk4C,SACA2kD,GAAA,KAGQh9F,EAAMy7F,EAAaz9F,EAAmBC,IAI9C,SAAAkC,GACA68F,IACAA,GAAA,EACAnwG,KAAAuvG,WAA2Ej8F,EAAA,SAC3E68F,GAAA,IAESnwG,MACDmT,EAAMy7F,EAAaz9F,EAAmBE,OAI9C,SAAAiC,GACA68F,IACAA,GAAA,EACAnwG,KAAAowG,cAA8E98F,EAAA,SAC9E68F,GAAA,IAESnwG,MACTA,KAAAovG,oBAAAR,GAOAT,EAAArvG,UAAAsB,MAAA,SAAAiwG,GACA,GAAAA,EAAA,CACA,QAAAC,KAAAtwG,KAAAmvG,mBAAA,CACAnvG,KAAAmvG,mBAAAmB,GACA72F,QAA6BlG,GAE7BvT,KAAAovG,sBACApvG,KAAAmvG,mBAAA,GACAnvG,KAAAivG,SAAA,GACAjvG,KAAAkvG,cAAA,SAIA,GAAAlvG,KAAA8uG,eAEA,QAAA7yF,KADAjc,KAAA8uG,eAAAr1F,QAAAzZ,KAAAuwG,sBAAA7xG,KAAAsB,OACAA,KAAAgvG,sBACAhvG,KAAAuwG,sBAAAvwG,KAAAgvG,sBAAA/yF,IAIAjc,KAAAovG,qBACApvG,KAAAovG,oBAAAhvG,QAEAJ,KAAA8uG,gBACA9uG,KAAA8uG,eAAA1uG,QAEAJ,KAAAgvG,sBAAA,GACA,IAAAwB,EAAA,IAAAxC,GAA+CjB,GAAex3F,OAC9DvV,KAAA+U,cAAAy7F,GACAxwG,KAAAgX,WAcAm3F,EAAArvG,UAAA2xG,eAAA,SAAA5hG,GACA,GAAA7O,KAAA8uG,eACA,OAAA9uG,KAAA8uG,eAAAr1F,QAAA5K,GAEA7O,KAAAovG,qBACApvG,KAAAovG,oBAAA31F,QAAA5K,IAeAs/F,EAAArvG,UAAA4xG,iCAAA,SAAA9xF,EAAA/P,GACA,IAAAqP,EAAA,CAAAU,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,OAAA5e,KAAA2wG,uBAAAzyF,EAAA,SAAAstC,GAEA,OADAA,EAAAlwC,cACAyU,qBAAAnR,GACA/P,EAAA28C,QAGA,KAuBA2iD,EAAArvG,UAAA6xG,uBAAA,SAAAzyF,EAAArP,GACA,GAAA7O,KAAA8uG,eACA,OAAA9uG,KAAA8uG,eAAAjB,gBAAA3vF,EAAArP,GAEA7O,KAAAovG,qBACApvG,KAAAovG,oBAAA31F,QAAA5K,IAkBAs/F,EAAArvG,UAAA8xG,iCAAA,SAAA1yF,EAAArP,GACA,OAAA7O,KAAA2wG,uBAAAzyF,EAKA,SAAAstC,GAEA,GADAA,EAAAlwC,cACAmV,iBAAAvS,GAAA,CACA,IAAAlY,EAAA6I,EAAA28C,GACA,GAAAxlD,EACA,OAAAA,MAYAmoG,EAAArvG,UAAA+xG,sBAAA,WACA,OAAA7wG,KAAAovG,qBAOAjB,EAAArvG,UAAAgyG,YAAA,WACA,IAAAvlD,EAUA,OATAvrD,KAAAovG,oBACA7jD,EAAAvrD,KAAAovG,oBAAA11F,WAEA1Z,KAAA8uG,iBACAvjD,EAAAvrD,KAAA8uG,eAAApB,SACiB17F,EAAOhS,KAAAgvG,wBACRx1F,EAAM+xC,EAAWz5C,EAAS9R,KAAAgvG,yBAG1C,GASAb,EAAArvG,UAAAiyG,wBAAA,SAAAnyF,GACA,IAAA2sC,EAAA,GAIA,OAHAvrD,KAAA0wG,iCAAA9xF,EAAA,SAAA4sC,GACAD,EAAAzqD,KAAA0qD,KAEAD,GAaA4iD,EAAArvG,UAAAkyG,oBAAA,SAAA9yF,GACA,OAAAle,KAAA8uG,eAAAnB,YAAAzvF,IAcAiwF,EAAArvG,UAAAmyG,8BAAA,SAAAryF,EAAAsyF,GAQA,IAAApxG,EAAA8e,EAAA,GACAJ,EAAAI,EAAA,GACAuyF,EAAA,KACAzhF,EAAA,CAAA3kB,SACA4kB,EAAA3kB,IACAkT,EAAA,EAAAlT,kBACAkyC,EAAAg0D,GAA+Cj9F,EAwB/C,OAvBAjU,KAAA8uG,eAAAjB,gBAAA3vF,EAIA,SAAAstC,GACA,GAAAtO,EAAAsO,GAAA,CACA,IAAAxwC,EAAAwwC,EAAAlwC,cACA81F,EAAAzhF,EAEA,IADAA,EAAA3U,EAAAyU,eAAA3vB,EAAA0e,EAAAkR,EAAAC,IACAyhF,EAAA,CACAD,EAAA3lD,EAKA,IAAA6lD,EAAAhyG,KAAAK,KAAAiwB,GACAzR,EAAA,GAAApe,EAAAuxG,EACAnzF,EAAA,GAAAM,EAAA6yF,EACAnzF,EAAA,GAAApe,EAAAuxG,EACAnzF,EAAA,GAAAM,EAAA6yF,MAIAF,GAYAhD,EAAArvG,UAAAkpB,UAAA,SAAA1J,GACA,OAAAte,KAAA8uG,eAAA9mF,UAAA1J,IAWA6vF,EAAArvG,UAAAwyG,eAAA,SAAAr1F,GACA,IAAAuvC,EAAAxrD,KAAAivG,SAAAhzF,EAAA/O,YACA,YAAA0F,IAAA44C,IAAA,MAQA2iD,EAAArvG,UAAAyyG,UAAA,WACA,OAAAvxG,KAAAquG,SAKAF,EAAArvG,UAAA0yG,YAAA,WACA,OAAAxxG,KAAAsuG,WAQAH,EAAArvG,UAAA2yG,OAAA,WACA,OAAAzxG,KAAAwuG,MAMAL,EAAArvG,UAAA8wG,qBAAA,SAAApgG,GACA,IAAAg8C,EAAiEh8C,EAAA,OACjEigG,EAAyBt/F,EAAMq7C,GAC/BxwC,EAAAwwC,EAAAlwC,cACA,GAAAN,EAQA,CACA,IAAAkD,EAAAlD,EAAAgN,YACAynF,KAAAzvG,KAAAgvG,8BACAhvG,KAAAgvG,sBAAAS,GACAzvG,KAAA8uG,gBACA9uG,KAAA8uG,eAAAxtG,OAAA4c,EAAAstC,IAIAxrD,KAAA8uG,gBACA9uG,KAAA8uG,eAAA7wE,OAAA/f,EAAAstC,QAjBAikD,KAAAzvG,KAAAgvG,wBACAhvG,KAAA8uG,gBACA9uG,KAAA8uG,eAAAntG,OAAA6pD,GAEAxrD,KAAAgvG,sBAAAS,GAAAjkD,GAiBA,IAAAvvC,EAAAuvC,EAAA9vC,QACA,QAAA9I,IAAAqJ,EAAA,CACA,IAAAy1F,EAAAz1F,EAAA/O,WACAuiG,KAAAzvG,KAAAkvG,sBACAlvG,KAAAkvG,cAAAO,GACAzvG,KAAAivG,SAAAyC,GAAAlmD,GAGAxrD,KAAAivG,SAAAyC,KAAAlmD,IACAxrD,KAAA2xG,mBAAAnmD,GACAxrD,KAAAivG,SAAAyC,GAAAlmD,QAKAikD,KAAAzvG,KAAAkvG,gBACAlvG,KAAA2xG,mBAAAnmD,GACAxrD,KAAAkvG,cAAAO,GAAAjkD,GAGAxrD,KAAAgX,UACAhX,KAAA+U,cAAA,IAAAi5F,GAAiDjB,GAAeE,cAAAzhD,KAQhE2iD,EAAArvG,UAAA8yG,WAAA,SAAApmD,GACA,IAAAvvC,EAAAuvC,EAAA9vC,QACA,YAAA9I,IAAAqJ,EACAA,KAAAjc,KAAAivG,SAGmB9+F,EAAMq7C,KAAAxrD,KAAAkvG,eAMzBf,EAAArvG,UAAAkT,QAAA,WACA,OAAAhS,KAAA8uG,eAAA98F,WAAgDA,EAAOhS,KAAAgvG,wBAOvDb,EAAArvG,UAAA+yG,aAAA,SAAA3zF,EAAA2C,EAAAuK,GACA,IAAA0mF,EAAA9xG,KAAA+uG,oBACAgD,EAAA/xG,KAAA0uG,UAAAxwF,EAAA2C,GACA7gB,KAAAysD,SAAA,EAkBA,IAjBA,IAAAulD,EAAA,SAAA90G,EAAA0U,GACA,IAAAqgG,EAAAF,EAAA70G,GACA40G,EAAAjE,gBAAAoE,EAKA,SAAArzG,GACA,OAAuBkgB,GAAclgB,EAAAsf,OAAA+zF,OAGrCC,EAAA9D,QAAA/wG,KAAA60G,EAAAD,EAAApxF,EAAAuK,GACA0mF,EAAAxwG,OAAA2wG,EAAA,CAAyD/zF,OAAA+zF,EAAAzwG,UACzD0wG,EAAAzlD,QAAAylD,EAAA9D,UAAoDj6F,IAGpD+9F,EAAAlyG,KACA9C,EAAA,EAAA0U,EAAAmgG,EAAAhyG,OAAkD7C,EAAA0U,IAAQ1U,EAC1D80G,EAAA90G,IAMAixG,EAAArvG,UAAAglG,QAAA,WACA9jG,KAAAI,OAAA,GACAJ,KAAA+uG,oBAAA3uG,QACAyQ,EAAA/R,UAAAglG,QAAAzmG,KAAA2C,OAOAmuG,EAAArvG,UAAAqzG,mBAAA,SAAAj0F,GACA,IACAzU,EADAqoG,EAAA9xG,KAAA+uG,oBAEA+C,EAAAjE,gBAAA3vF,EAAA,SAAAtf,GACA,GAAgB8gB,GAAM9gB,EAAAsf,UAEtB,OADAzU,EAAA7K,GACA,IAGA6K,GACAqoG,EAAAnwG,OAAA8H,IAUA0kG,EAAArvG,UAAAsxG,cAAA,SAAA5kD,GACA,IAAAikD,EAAyBt/F,EAAMq7C,GAC/BikD,KAAAzvG,KAAAgvG,6BACAhvG,KAAAgvG,sBAAAS,GAGAzvG,KAAA8uG,gBACA9uG,KAAA8uG,eAAAntG,OAAA6pD,GAGAxrD,KAAAuwG,sBAAA/kD,GACAxrD,KAAAgX,WAOAm3F,EAAArvG,UAAAyxG,sBAAA,SAAA/kD,GACA,IAAAikD,EAAyBt/F,EAAMq7C,GAC/BxrD,KAAAmvG,mBAAAM,GAAAh2F,QAAoDlG,UACpDvT,KAAAmvG,mBAAAM,GACA,IAAAxzF,EAAAuvC,EAAA9vC,aACA9I,IAAAqJ,SACAjc,KAAAivG,SAAAhzF,EAAA/O,mBAGAlN,KAAAkvG,cAAAO,GAEAzvG,KAAA+U,cAAA,IAAAi5F,GAAiDjB,GAAeG,cAAA1hD,KAShE2iD,EAAArvG,UAAA6yG,mBAAA,SAAAnmD,GACA,IAAA4mD,GAAA,EACA,QAAAn2F,KAAAjc,KAAAivG,SACA,GAAAjvG,KAAAivG,SAAAhzF,KAAAuvC,EAAA,QACAxrD,KAAAivG,SAAAhzF,GACAm2F,GAAA,EACA,MAGA,OAAAA,GAQAjE,EAAArvG,UAAAuzG,UAAA,SAAA5D,GACAzuG,KAAAouG,QAAAK,GAOAN,EAAArvG,UAAA+nG,OAAA,SAAAhvB,GACQ39D,EAAMla,KAAAquG,QAAA,GACdruG,KAAAqyG,UAAuBr5B,GAAGnB,EAAA73E,KAAAquG,WAE1BF,EArwBgB,CAswBd5K,ICt6BE+O,GAAyB,WAC7B,IAAAjiG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAyMd6hG,GAvJJ,SAAA1hG,GAKX,SAAA2hG,EAAAv5F,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAowC,MAAA5qF,EAAA4qF,SACS7jG,KAgCT,OA3BAgR,EAAA6P,gBAAAjO,EAKA5B,EAAA8U,cAAAlT,IAAAqG,EAAA6M,SAAA7M,EAAA6M,SAAA,GAKA9U,EAAAu6C,SAAA,GAMAv6C,EAAAyhG,iBAAAx5F,EAAAw5F,kBAAA,SAAAjnD,GACA,IAAAxwC,EAA4CwwC,EAAAlwC,cAE5C,OADYpB,EAAMc,EAAAwV,WAAuBxN,GAAYC,MAAA,IACrDjI,GAMAhK,EAAA1D,OAAA2L,EAAA3L,OACQ6F,EAAMnC,EAAA1D,OAAe8H,EAASC,OAAArE,EAAA8yF,QAAA9yF,GACtCA,EA4GA,OApJIshG,GAASE,EAAA3hG,GA+Cb2hG,EAAA1zG,UAAAmmB,YAAA,WACA,OAAAjlB,KAAA8lB,UAOA0sF,EAAA1zG,UAAA0tD,UAAA,WACA,OAAAxsD,KAAAsN,QAKAklG,EAAA1zG,UAAA+yG,aAAA,SAAA3zF,EAAA2C,EAAAuK,GACAprB,KAAAsN,OAAAukG,aAAA3zF,EAAA2C,EAAAuK,GACAvK,IAAA7gB,KAAA6gB,aACA7gB,KAAAI,QACAJ,KAAA6gB,aACA7gB,KAAA0yG,UACA1yG,KAAAk5E,YAAAl5E,KAAAurD,YAQAinD,EAAA1zG,UAAA6zG,YAAA,SAAA7sF,GACA9lB,KAAA8lB,WACA9lB,KAAA8jG,WAMA0O,EAAA1zG,UAAAglG,QAAA,WACA9jG,KAAAI,QACAJ,KAAA0yG,UACA1yG,KAAAk5E,YAAAl5E,KAAAurD,WAKAinD,EAAA1zG,UAAA4zG,QAAA,WACA,QAAA9/F,IAAA5S,KAAA6gB,WAAA,CAGA7gB,KAAAurD,SAAAxrD,OAAA,EAQA,IAPA,IAAAme,E9JsCA,CAAAlT,SAAA,U8JrCA4nG,EAAA5yG,KAAA8lB,SAAA9lB,KAAA6gB,WACA0qC,EAAAvrD,KAAAsN,OAAAwjG,cAIA+B,EAAA,GACA31G,EAAA,EAAA0U,EAAA25C,EAAAxrD,OAA6C7C,EAAA0U,EAAQ1U,IAAA,CACrD,IAAAsuD,EAAAD,EAAAruD,GACA,KAAkBiT,EAAMq7C,KAAAqnD,GAAA,CACxB,IAAA73F,EAAAhb,KAAAyyG,iBAAAjnD,GACA,GAAAxwC,EAAA,CAEoBqE,GADpBrE,EAAAoW,iBACgDlT,GAC5BG,GAAMH,EAAA00F,EAAA10F,GAC1B,IAAA40F,EAAA9yG,KAAAsN,OAAA0jG,oBAAA9yF,GACA40F,IAAA51D,OAAA,SAAA61D,GACA,IAAA7L,EAAkC/2F,EAAM4iG,GACxC,QAAA7L,KAAA2L,KACAA,EAAA3L,IAAA,GACA,KAMAlnG,KAAAurD,SAAAzqD,KAAAd,KAAAgzG,cAAAF,SAUAN,EAAA1zG,UAAAk0G,cAAA,SAAAznD,GAEA,IADA,IAAAqO,EAAA,MACA18D,EAAAquD,EAAAxrD,OAAA,EAAyC7C,GAAA,IAAQA,EAAA,CACjD,IAAA8d,EAAAhb,KAAAyyG,iBAAAlnD,EAAAruD,IACA8d,EACgB85B,GAAa8kB,EAAA5+C,EAAAoW,kBAG7Bm6B,EAAA3pD,OAAA1E,EAAA,GAGQo5C,GAAesjB,EAAA,EAAArO,EAAAxrD,QACvB,IAAA2yG,EAAA,IAA0Bp4F,EAAO,IAAKgb,GAAKskC,IAE3C,OADA84C,EAAA/pG,IAAA,WAAA4iD,GACAmnD,GAEAF,EArJW,CAsJTtE,IC3ME+E,GAAyB,WAC7B,IAAA5iG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6B7BwiG,GAAA,CACAC,QAAA,UACAC,UAAA,aAEIC,GAAU,SAAAxiG,GAYd,SAAAyiG,EAAAhP,EAAA77E,EAAA6wD,EAAAznC,EAAA+wB,EAAAC,EAAAg4B,EAAA7hF,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,KAAAs5E,EAAAznC,EAAA+wB,EAAAC,EAAAg4B,EAAA7hF,IAAAhZ,KAaA,OARAgR,EAAAuiG,cAAA,KAKAviG,EAAA6pE,UAA0Bp0B,GAAMh+B,EAAAkzD,YAAArC,EAAA,KAAArsE,IAAA,SAAAnN,GAChC,OAAAA,EAAAwkG,IAEAtzF,EA2BA,OApDIiiG,GAASK,EAAAziG,GA8BbyiG,EAAAx0G,UAAAguE,SAAA,WACA,GAAA9sE,KAAAuzG,cACA,OAAAvzG,KAAAuzG,cAEA,IAAAvqC,EAAAn4D,EAAA/R,UAAAguE,SAAAzvE,KAAA2C,MACA,GAAAA,KAAA6xC,OAA0BjD,GAASG,OAAA,CACnC,IAAA+rC,EAAA96E,KAAA66E,UACA,GAAA7R,EAAAr9D,OAAAmvE,EAAA,IAAA9R,EAAApoE,QAAAk6E,EAAA,GAEA,OADA96E,KAAAuzG,cAAAvqC,EACAA,EAGA,IAAAr5D,EAA8B4xC,GAAqBu5B,EAAA,GAAAA,EAAA,IAGnD,OAFAnrE,EAAAo5D,UAAAC,EAAA,KACAhpE,KAAAuzG,cAAA5jG,EAAA+xC,OACA/xC,EAAA+xC,OAIA,OAAAsnB,GAGAsqC,EArDc,CAsDZ3Y,IA2Ka6Y,GA9HJ,SAAA3iG,GAKX,SAAA4iG,EAAAz6F,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACA+H,EAAA9H,EAAA8H,KACA2yF,OAAA9gG,IAAAqG,EAAAy6F,oBACAz6F,EAAAy6F,oBACAR,GAAAC,QACAhJ,EAAAppF,EAAA,GACAqpF,EAAArpF,EAAA,GACA7C,EAAAjF,EAAAiF,QAAA,IAAA6C,EAAA,GAAAA,EAAA,MACA4yF,EAAA,GACA74B,EAAA7hE,EAAA6hE,UAA2CvoC,GAC3C+xD,EAAArrF,EAAAqrF,gBAAA,EACAsP,EAAA94B,EACA,OAAA44B,GACA,KAAAR,GAAAC,QACA,KAAAhJ,EAAAyJ,GAAAxJ,EAAAwJ,GACAD,EAAA7yG,KAAA,CACAzB,KAAAc,KAAAgqG,EAAAyJ,GACAv0G,KAAAc,KAAAiqG,EAAAwJ,KAEAA,KAEA,MACA,KAAAV,GAAAE,UAGA,IAFA,IAAAznG,EAAAw+F,EACAvpG,EAAAwpG,EACAz+F,EAAAioG,GAAAhzG,EAAAgzG,GACAD,EAAA7yG,KAAA,CACAzB,KAAAc,KAAAwL,EAAAioG,GACAv0G,KAAAc,KAAAS,EAAAgzG,KAEAjoG,IAAA,EACA/K,IAAA,EAEA,MACA,QACgBsZ,GAAM,MAGtBy5F,EAAA7yG,KAAA,OACA6yG,EAAAE,UAGA,IAFA,IAAA/6D,EAAA,IACAg7D,EAAA,IACA52G,EAAA,EAAA0U,EAAA+hG,EAAA5zG,OAAoD7C,EAAA0U,EAAQ1U,IAC5D47C,EAAAh4C,KAAA,GAAA5D,GACA42G,EAAAhzG,KAAA6yG,EAAAz2G,EAAA,MAAAy2G,EAAAz2G,EAAA,MACA42G,EAAA52G,EAAA,IAEA47C,EAAA+6D,UACA,IAAAprF,EAAA,IAA2BwxD,GAAQ,CACnCa,WACA58D,SACAu8D,OAAoBv6D,GAAUhC,GAC9B46B,gBAEA++B,EAAA5+D,EAAA4+D,IACAA,IAA2C,GAA3CA,EAAAx3E,QAAA,iBAA+E,GAApCw3E,EAAAx3E,QAAA,iBAC3Cw3E,GAAA,+BAyCA,IAAA8uB,EAA8BhO,GAvCXE,GAAShhB,GAuC4B5qE,IAlCxD,SAAA6oC,GACA,gBAOAwjC,EAAAv6B,EAAA3zB,GACA,GAAAkuD,EAGA,CACA,IAAAy6B,EAAAz6B,EAAA,GACAgD,EAAAhD,EAAA,GACAiD,EAAAjD,EAAA,GACA06B,EAAA13B,EACAC,EAAAo3B,EAAAI,GAAA,GACAE,EAAAxrF,EAAAkzD,YAAAo4B,GACA7mB,EAAA9gF,MAAA+K,QAAA88F,KAAA,GAAAA,EAEAC,EAAA,CACAj7D,EAAA86D,EACAj0G,EAAAw8E,EACA99D,EAAA+9D,EACAy3B,YACAG,UAAA,cANAH,EAAAF,EAAAC,IAAA7mB,EAAA,IAQA,OAAAp3C,EAAAC,QAAA,cAAuD,SAAAz4C,EAAA0B,GACvD,OAAAk1G,EAAAl1G,UAMAo1G,EAA+Bf,GAAU30G,KAAA,KAAA4lG,EAAA77E,GAiBzC,OAhBAzX,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAiO,UAAAzoD,EAAAyoD,UACAmB,YAAA5pD,EAAA4pD,YACAz3C,WAAAnS,EAAAmS,WACAk5E,iBACAyD,2BAAA9uF,EAAA8uF,2BACAJ,UAAAyM,EACA3rF,WACAk+E,kBACA3M,WAAA/gF,EAAA+gF,cACSh6F,MAIT+kG,WAAA9rF,EAAA8rF,WACA/zF,EAEA,OA3HIiiG,GAASQ,EAAA5iG,GA2Hb4iG,EA5HW,CA6HThM,ICtKF4M,GAAA,CACAC,SAAA,WACAC,SAAA,WACAC,SAAA,YAQAC,GAAA,GACAA,GAAAJ,GAAAC,UAAA,CACAI,OAAA,CACAC,SAAA,GACAC,QAAA,GACAC,UAAA,YAEAC,OAAA,CACAH,SAAA,+CACAC,QAAA,QACAC,UAAA,YAEAE,OAAA,CACAJ,SAAA,4DACA,+BACAC,QAAA,cACAC,UAAA,sCAGAJ,GAAAJ,GAAAE,UAAA,CACAG,OAAA,CACAC,SAAA,GACAC,QAAA,QACAC,UAAA,aAEAC,OAAA,CACAH,SAAA,+CACAC,QAAA,QACAC,UAAA,aAEAE,OAAA,CACAJ,SAAA,4DACA,mDACAC,QAAA,cACAC,UAAA,wBAGAJ,GAAAJ,GAAAG,UAAA,CACAE,OAAA,CACAC,SAAA,GACAC,QAAA,QACAC,UAAA,aAEAC,OAAA,CACAH,SAAA,kDACAC,QAAA,QACAC,UAAA,aAEAE,OAAA,CACAJ,SAAA,2CACA,+DACAC,QAAA,QACAC,UAAA,wBAGAJ,GAAA,MACA1hE,KAAA,CACA4hE,SAAA,GACAC,QAAA,GACAC,UAAA,KAGA,IAAAG,GAAA,IAAAC,OAAA,oFACAC,GAAA,IAAAD,OAAA,qDACAE,GAAA,IAAAF,OAAA,sEAuEA,IAAAG,GAAA,GACAA,GAAAf,GAAAC,UAvEA,SAAAe,GACA,IAAAC,EAAAD,EAAAE,sCAKA,YAHA3iG,IAAA0iG,IACAA,EAAAb,GAAAJ,GAAAC,UAAA,QAEA,CACAz8B,SAAAjlE,IAAAyiG,EAAAG,UAAA,YAAA5iG,EAAAyiG,EAAAG,UAAA,OAAAz/D,QAAA,wBACA4+D,SAAAW,EAAAX,SACAC,QAAAU,EAAAV,QAAAznG,OAAA,MAAAyF,IAAAyiG,EAAAG,UAAAZ,QACA,GAAAS,EAAAG,UAAAZ,UACAC,UAAAS,EAAAT,UAAA1nG,OAAA,MAAAyF,IAAAyiG,EAAAG,UAAAX,UACA,GAAAQ,EAAAG,UAAAX,YACA/7D,YAAAu8D,EAAAG,UAAAC,cACA36B,cAAAloE,IAAAyiG,EAAAG,UAAAE,gBAAA9iG,IAAAyiG,EAAAG,UAAAG,YACA,CAAAN,EAAAG,UAAAE,WAAAL,EAAAG,UAAAG,aAAA,CAAAN,EAAAG,UAAAE,WAAAL,EAAAG,UAAAE,YACA9iG,MAAAyiG,EAAAG,UAAAG,YAAA,CAAAN,EAAAG,UAAAG,YAAAN,EAAAG,UAAAG,kBAAA/iG,IAwDAwiG,GAAAf,GAAAE,UArDA,SAAAc,GACA,IAAAC,EAAAD,EAAAE,sCAAAK,EAAAxpG,MAAA+K,QAAAk+F,EAAAG,UAAAK,UAAAR,EAAAG,UAAAK,QAAA91G,OAAA,EAAA+1G,EAAAF,GAAAP,EAAAG,UAAAK,QAAA,GAAAlB,SAAAU,EAAAG,UAAAK,QAAA,GAAAlB,SAAA,GAAAoB,EAAAH,GAAAP,EAAAG,UAAAK,QAAA,GAAAjB,QAAAS,EAAAG,UAAAK,QAAA,GAAAjB,QAAA,GAAAoB,EAAAJ,GAAAP,EAAAG,UAAAK,QAAA,GAAAhB,UAAAQ,EAAAG,UAAAK,QAAA,GAAAhB,UAAA,GACA,OACAh9B,IAAAw9B,EAAAG,UAAA,OAAAz/D,QAAA,wBACAklC,WAAAroE,IAAAyiG,EAAAG,UAAAv6B,WAAAroE,EAAAyiG,EAAAG,UAAAv6B,MAAAhuE,IAAA,SAAA8T,GACA,OAAAA,EAAApV,MAAAoV,EAAAngB,UAEAk6E,cAAAloE,IAAAyiG,EAAAG,UAAAS,WAAArjG,EAAA,CACAyiG,EAAAG,UAAAS,MAAAhpG,IAAA,SAAA2kC,GACA,OAAAA,EAAAjmC,QACa,GACb0pG,EAAAG,UAAAS,MAAAhpG,IAAA,SAAA2kC,GACA,YAAAh/B,IAAAg/B,EAAAhxC,OAAAgxC,EAAAjmC,MAAAimC,EAAAhxC,SACa,IAEbk4C,iBAAAlmC,IAAAyiG,EAAAG,UAAAS,WAAArjG,EACAyiG,EAAAG,UAAAS,MAAAhpG,IAAA,SAAA2kC,GACA,OAAAA,EAAAskE,eACa,GACbvB,SAAAW,EAAAX,SAAAxnG,OAAA2oG,GACAlB,QAAAU,EAAAV,QAAAznG,OAAA4oG,GACAlB,UAAAS,EAAAT,UAAA1nG,OAAA6oG,KAiCAZ,GAAAf,GAAAG,UA9BA,SAAAa,GACA,IAAAC,EAAAD,EAAAE,sCACA,OACA19B,IAAAw9B,EAAAG,UAAA,GACAv6B,WAAAroE,IAAAyiG,EAAAG,UAAAv6B,WAAAroE,EAAAyiG,EAAAG,UAAAv6B,MAAAhuE,IAAA,SAAA8T,GACA,OAAAA,EAAApV,MAAAoV,EAAAngB,UAEAk6E,cAAAloE,IAAAyiG,EAAAG,UAAAS,WAAArjG,EAAA,CACAyiG,EAAAG,UAAAS,MAAAhpG,IAAA,SAAA2kC,GACA,OAAAA,EAAAjmC,QACa,GACb0pG,EAAAG,UAAAS,MAAAhpG,IAAA,SAAA2kC,GACA,OAAAA,EAAAhxC,SACa,IAEbk4C,iBAAAlmC,IAAAyiG,EAAAG,UAAAS,WAAArjG,EACAyiG,EAAAG,UAAAS,MAAAhpG,IAAA,SAAA2kC,GACA,OAAAA,EAAAskE,eACa,GACbvB,cAAA/hG,IAAAyiG,EAAAG,UAAAW,cAAAb,EAAAX,SAAAW,EAAAX,SAAAxnG,OAAAkoG,EAAAG,UAAAW,eACAvB,aAAAhiG,IAAAyiG,EAAAG,UAAAY,aAAAd,EAAAV,QAAAU,EAAAV,QAAAznG,OAAAkoG,EAAAG,UAAAY,cACAvB,eAAAjiG,IAAAyiG,EAAAG,UAAAa,eAAAf,EAAAT,UAAAS,EAAAX,SAAAxnG,OAAAkoG,EAAAG,UAAAa,gBACAC,cAAA1jG,EACA2jG,eAAA3jG,EACA4jG,aAAA5jG,IAcA,IAkJe6jG,GAlJH,WAKZ,SAAAC,EAAAlB,GACAx1G,KAAA22G,aAAAnB,GA0IA,OAnIAkB,EAAA53G,UAAA63G,aAAA,SAAAnB,GAEAx1G,KAAAw1G,UADA,iBAAAA,EACA/9B,KAAAyH,MAAAs2B,GAGAA,GAOAkB,EAAA53G,UAAA83G,mBAAA,WACA,QAAAhkG,IAAA5S,KAAAw1G,UAAA,CAGA,IAAA7lG,EAAA3P,KAAAw1G,UAAA,6BACA,iBAAA7lG,IACAA,EAAA,CAAAA,IAEA,QAAAzS,EAAA,EAAuBA,EAAAyS,EAAA5P,OAAoB7C,IAC3C,OAAAyS,EAAAzS,IACA,kEACA,8CACA,OAAAm3G,GAAAC,SACA,8CACA,OAAAD,GAAAE,SACA,8CACA,OAAAF,GAAAG,SACA,oBAEA,GAAAx0G,KAAA62G,mCAAAxC,GAAAC,WAAAt0G,KAAAw1G,UAAAnsE,WACA,OAAAgrE,GAAAC,SAMQp6F,GAAM,QAOdw8F,EAAA53G,UAAA+3G,mCAAA,SAAAC,GACA,QAAAlkG,IAAA5S,KAAAw1G,gBAAA5iG,IAAA5S,KAAAw1G,UAAAK,QAMA,YAHAjjG,IAAAkkG,IACAA,EAAA92G,KAAA42G,sBAEAE,GACA,KAAAzC,GAAAC,SACA,GAAAU,GAAA+B,KAAA/2G,KAAAw1G,UAAAK,SACA,OAAA71G,KAAAw1G,UAAAK,QAEA,MACA,KAAAxB,GAAAG,SACA,GAAAW,GAAA4B,KAAA/2G,KAAAw1G,UAAAK,SACA,OAAA71G,KAAAw1G,UAAAK,QAEA,MACA,KAAAxB,GAAAE,SACA,oBAAAv0G,KAAAw1G,UAAAK,SAAAX,GAAA6B,KAAA/2G,KAAAw1G,UAAAK,SACA,OAAA71G,KAAAw1G,UAAAK,QAEA,GAAAzpG,MAAA+K,QAAAnX,KAAAw1G,UAAAK,UAAA71G,KAAAw1G,UAAAK,QAAA91G,OAAA,GACA,iBAAAC,KAAAw1G,UAAAK,QAAA,IAAAX,GAAA6B,KAAA/2G,KAAAw1G,UAAAK,QAAA,IACA,OAAA71G,KAAAw1G,UAAAK,QAAA,KAUAa,EAAA53G,UAAAk4G,8BAAA,SAAAF,GACA,IAAAG,EAAAj3G,KAAA62G,mCAAAC,GACA,QAAAlkG,IAAAqkG,EAAA,CAGA,IAAAC,EAAAD,EAAAle,MAAA,yBACA,OAAA3sF,MAAA+K,QAAA+/F,KAAA,GAAAnhE,QAAA,iBAAAnjC,IAMA8jG,EAAA53G,UAAAy2G,oCAAA,WACA,QAAA3iG,IAAA5S,KAAAw1G,UAAA,CAGA,IAAAsB,EAAA92G,KAAA42G,qBACAM,EAAAl3G,KAAAg3G,8BAAAF,GACA,YAAAlkG,IAAAskG,EACAzC,GAAA,UAEAA,GAAAqC,GAAAI,KAOAR,EAAA53G,UAAAq4G,qBAAA,SAAAC,GACA,IAAAn+F,EAAAm+F,GAAA,GAAgDN,EAAA92G,KAAA42G,qBAChD,QAAAhkG,IAAAkkG,EAAA,CAGA,IAAAO,OAAAzkG,IAAAkkG,OAAAlkG,EAAAwiG,GAAA0B,GAAA92G,MACA,QAAA4S,IAAAykG,EAGA,OACAx/B,IAAAw/B,EAAAx/B,IACAi/B,UACA/1F,KAAA,CAAA/gB,KAAAw1G,UAAA7pG,MAAA3L,KAAAw1G,UAAA50G,QACAq6E,MAAAo8B,EAAAp8B,MACAnD,OAAAu/B,EAAAzC,QAAAz4F,SAAAlD,EAAA6+D,QAAA7+D,EAAA6+D,OAAA,MACA68B,SAAA0C,EAAA1C,SACA2C,QAAAr+F,EAAAq+F,SAAAD,EAAAxC,UAAA14F,SAAAlD,EAAAq+F,SACAr+F,EAAAq+F,QAAAD,EAAAxC,UAAA14F,SAAA,6BACA28B,YAAA1sC,MAAA+K,QAAAkgG,EAAAv+D,aAAAu+D,EAAAv+D,YAAAl2C,KAAA,SAAAzD,EAAAyH,GACA,OAAAA,EAAAzH,SACayT,EACbkoE,SAAAu8B,EAAAv8B,YAGA47B,EAhJY,GCrPRa,GAAyB,WAC7B,IAAAlnG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAsD7B,SAAA8mG,GAAAC,GACA,OAAAA,EAAAC,eAAA,MAA4CC,sBAAA,KAO5C,IA8NeC,GA9NP,SAAA/mG,GAOR,SAAAgnG,EAAA7+F,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACA8+F,EAAA7+F,EAAA4+D,KAAA,GACAigC,KAAAC,YAAA,OAAAD,EAAA/3G,OAAA,QAAA+3G,EAAA,OACA,IAAAhB,EAAA79F,EAAA69F,SAAyCzC,GAAQE,SACjDt5B,EAAAhiE,EAAAgiE,OAAA,GACAl6D,EAAA9H,EAAA8H,KACQ7G,EAAMtH,MAAAmO,GAAA3U,MAAA+K,QAAA4J,IAAA,GAAAA,EAAAhhB,SACdoL,MAAA4V,EAAA,KAAAA,EAAA,OAAA5V,MAAA4V,EAAA,KAAAA,EAAA,SACA,IAeAmsE,EAAAC,EAAAz0C,EAfA/sC,EAAAoV,EAAA,GACAngB,EAAAmgB,EAAA,GACA+5D,EAAA7hE,EAAA6hE,SACAwpB,EAAArrF,EAAAqrF,gBAAA,EACAxsB,EAAA7+D,EAAA6+D,QAAA,MACAw/B,EAAAr+F,EAAAq+F,UAAAr+F,EAAA69F,SAA6DzC,GAAQC,SAAA,oBACrEx7D,EAAA7/B,EAAA6/B,aAAA,GACA67D,EAAA17F,EAAA07F,UAAA,GACAz2F,EAAAjF,EAAAiF,QAAA,IAAAtd,EAAA+K,EAAA,GACAqsG,EAAAplG,MAAAqoE,GAAA7uE,MAAA+K,QAAA8jE,MAAAl7E,OAAA,EACAk4G,EAAArlG,MAAAkoE,IAAAvwC,OAAA2tE,UAAAp9B,MAAA,GAAA1uE,MAAA+K,QAAA2jE,MAAA/6E,OAAA,GACAo4G,EAAAvlG,MAAA+hG,GAAAvoG,MAAA+K,QAAAw9F,KACAA,EAAAx4F,SAAA,eAAAw4F,EAAAx4F,SAAA,kBACAw4F,EAAAx4F,SAAA,aAAAw4F,EAAAx4F,SAAA,YACAw4F,EAAAx4F,SAAA,YAAAw4F,EAAAx4F,SAAA,cAKA,GAHA28B,EAAAl2C,KAAA,SAAAzD,EAAAyH,GACA,OAAAA,EAAAzH,IAEA84G,GAAAE,EA2BA,GA1BAvlG,MAAAkoE,IACAvwC,OAAA2tE,UAAAp9B,MAAA,GACAoS,EAAApS,EACAqS,EAAArS,GAEA1uE,MAAA+K,QAAA2jE,MAAA/6E,OAAA,KACA,GAAA+6E,EAAA/6E,QAAA6S,MAAAkoE,EAAA,IAAAvwC,OAAA2tE,UAAAp9B,EAAA,OACAoS,EAAApS,EAAA,GACAqS,EAAArS,EAAA,IAEA,GAAAA,EAAA/6E,SACAwqC,OAAA2tE,UAAAp9B,EAAA,KAAAvwC,OAAA2tE,UAAAp9B,EAAA,KACAoS,EAAApS,EAAA,GACAqS,EAAArS,EAAA,IAEAloE,MAAAkoE,EAAA,IAAAvwC,OAAA2tE,UAAAp9B,EAAA,MACAoS,EAAApS,EAAA,GACAqS,EAAArS,EAAA,YAKAloE,IAAAs6E,QAAAt6E,IAAAu6E,IACAD,EAA4B36C,GAC5B46C,EAA6B56C,IAE7B,GAAAuG,EAAA/4C,OAEA,QAAA7C,EADAw7C,EAAAr5C,KAAAM,IAAAN,KAAAc,KAAAd,KAAAC,IAAAqM,EAAAuhF,GAAA7tF,KAAA+E,KAAA/E,KAAAc,KAAAd,KAAAC,IAAAsB,EAAAusF,GAAA9tF,KAAA+E,MACqClH,GAAA,EAAQA,IAC7C47C,EAAAh4C,KAAAzB,KAAA8C,IAAA,EAAAjF,QAGA,CACA,IAAAk7G,EAAA/4G,KAAAM,IAAAm5C,EAAAt3C,SAEAk3C,EAAAr5C,KAAAw1B,MAAAx1B,KAAAC,IAAA84G,GAAA/4G,KAAA+E,UAQA,GAHA8oF,EAAAvhF,EACAwhF,EAAAvsF,EACAk4C,EAAA,GACAk/D,EAAA,CAKA/8B,EAAAr4E,KAAA,SAAAzD,EAAAyH,GACA,OAAAzH,EAAA,GAAAyH,EAAA,KAEA8xC,GAAA,EACA,IAAA2/D,EAAA,GACA,IAAAn7G,EAAA,EAA+BA,EAAA+9E,EAAAl7E,OAAkB7C,IAAA,CACjD,IAAA2jB,EAAAlV,EAAAsvE,EAAA/9E,GAAA,GACA47C,EAAA/4C,OAAA,GAAA+4C,IAAA/4C,OAAA,IAAA8gB,EACAw3F,EAAAv3G,KAAA5D,IAGA47C,EAAAh4C,KAAA+f,GACA63B,KAEA,GAAA2/D,EAAAt4G,OAAA,EACA,IAAA7C,EAAA,EAAmCA,EAAAm7G,EAAAt4G,OAA8B7C,IACjE+9E,EAAAr5E,OAAAy2G,EAAAn7G,KAAA,QAMA47C,EAAAh4C,KAAA,GACAm6E,EAAAn6E,KAAA,CAAA6K,EAAA/K,IACA83C,EAAA,EAGA,IAAAjwB,EAAA,IAA2BwxD,GAAQ,CACnCa,SAAA,CAAAoS,EAAAC,GACAjvE,SACAu8D,OAAoBv6D,GAAUhC,GAC9B46B,gBAmFAw/D,EAA4BjF,GAAU30G,KAAA,KAAA4lG,EAAA77E,GAmBtC,OAlBAzX,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAkwC,wBAAA1qF,EAAA0qF,wBACAjiC,UAAAzoD,EAAAyoD,UACAmB,YAAA5pD,EAAA4pD,YACAz3C,WAAAnS,EAAAmS,WACA28E,2BAAA9uF,EAAA8uF,2BACAl2D,MAAA54B,EAAA44B,MACA81D,UAAA2Q,EACA7vF,WACA67E,eAAArrF,EAAAqrF,eACAqC,gBA7FA,SAAArtB,EAAAv6B,EAAA3zB,GACA,IAAAmtF,EAAAC,EACAz9D,EAAAu+B,EAAA,GACA,KAAAv+B,EAAArC,GAAA,CAGA,IAAA+/D,EAAAn/B,EAAA,GAAAo/B,EAAAp/B,EAAA,GAAAppD,EAAA4oB,EAAAiC,GACA,UAAAnoC,IAAA6lG,QAAA7lG,IAAA8lG,QAAA9lG,IAAAsd,GACAuoF,EAAA,GAAAp5G,KAAAc,KAAAwL,EAAAukB,EAAAg9D,IAAAurB,GACAC,EAAA,GAAAr5G,KAAAc,KAAAS,EAAAsvB,EAAAi9D,IAAAurB,GAFA,CAKA,GAAAP,GAAAF,EAAA,CACA,IAAAU,EAAAF,EAAAvrB,EAAAh9D,EAAA0oF,EAAAF,EAAAvrB,EAAAj9D,EACA2oF,EAAA3rB,EAAAh9D,EAAA4oF,EAAA3rB,EAAAj9D,EAAA6oF,EAAA7rB,EAAA8rB,EAAA7rB,EACAwrB,EAAAE,EAAAltG,IACAktG,EAAAltG,EAAAgtG,GAEAC,EAAAE,EAAAl4G,IACAk4G,EAAAl4G,EAAAg4G,GAEAD,EAAAzrB,EAAAh9D,EAAAvkB,IACAotG,EAAA15G,KAAAO,OAAA+L,EAAAgtG,EAAAzoF,EAAA,GAAAA,IAEA0oF,EAAAzrB,EAAAj9D,EAAAtvB,IACAo4G,EAAA35G,KAAAO,OAAAgB,EAAAg4G,EAAA1oF,EAAA,GAAAA,IAEA,GAAAyoF,GAAAE,GAAAltG,GAAA,GAAAitG,GAAAE,GAAAl4G,EAEA23G,EAAA,QAEAJ,GAAAxD,EAAAx4F,SAAA,cACAo8F,EAAAI,EAAA,IAAAC,EAAA,IAAAC,EAAA,IAAAC,EAEAnE,EAAAx4F,SAAA,iBAEAo8F,EAAA,OADAf,GAAAmB,EAAAhtG,EAAA,KACA,IADA6rG,GAAAoB,EAAAh4G,EAAA,KACA,IADA42G,GAAAqB,EAAAltG,EAAA,KACA,IADA6rG,GAAAsB,EAAAl4G,EAAA,MAGAk2G,GAA+BzC,GAAQG,UAAA2D,IAAAxD,EAAAx4F,SAAA,aAGvCg8F,GAAAxD,EAAAx4F,SAAA,WACAq8F,EAAAO,EAAA,IAEApE,EAAAx4F,SAAA,WACAq8F,EAAA,IAAAQ,EAEArE,EAAAx4F,SAAA,YACAq8F,EAAAO,EAAA,IAAAC,EAEArE,EAAAx4F,SAAA,eACAq8F,EAAA,OAAAhB,GAAA,IAAAtnF,IAZAsoF,EAAAO,EAAA,IAAAC,OAiBA,GADAT,EAAA,OACAP,EAAA,CACA,IAAAiB,EAAAh+B,EAAAlgC,GAAA,GAAAm+D,EAAAj+B,EAAAlgC,GAAA,GAGAy9D,EAFA1B,GAAmCzC,GAAQG,SAC3CyE,GAAAttG,GAAAutG,GAAAt4G,EACA,MAGAq4G,EAAA,IAAAC,EAIAD,GAAAttG,EACA,OAGAstG,EAAA,SAKAT,EAAA1B,GAA2CzC,GAAQG,SAAA,aAGnD,OAAAsD,EAAAS,EAAA,IAAAC,EAAA,MAAAlB,EAAA,IAAAx/B,KAeAkiB,WAAA/gF,EAAA+gF,cACSh6F,MAIT+kG,WAAA9rF,EAAA8rF,WACA/zF,EAEA,OA3NIumG,GAASM,EAAAhnG,GA2NbgnG,EA5NQ,CA6NNpQ,IC9RE0R,GAAyB,WAC7B,IAAA9oG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiLd0oG,GAjJA,SAAAvoG,GAWf,SAAAwoG,EAAA9sF,EAAAivE,EAAAY,EAAA1kD,EAAAqH,EAAAu6D,GACA,IAAAtoG,EAAAhR,KACA0+F,EAAAnyE,EAAAvE,YACAw6E,EAAAhH,EAAAxzE,YACAy6E,EAAAD,EACYxgF,GAAeo6E,EAAAoG,GAAApG,EAE3B3kD,EAA+B8jD,GAAyBhvE,EAAAivE,EAD7Bh7E,GAASiiF,GACoB/qD,GAExD2kD,EAAA,IAAgCmC,GAAajyE,EAAAivE,EAAAiH,EAAA/D,EAAAjnD,EADRiiD,IAGrC6f,EAAAD,EADAjd,EAAAkF,wBACA9pD,EAAAsH,GACAlN,EAAoBu7C,GAAUr+C,OAC9BwqE,IACA1nE,EAAoBu7C,GAAUv+C,MAE9B,IAAA2qE,EAAAD,IAAAhpB,gBAAA,EA+CA,OA9CAv/E,EAAAH,EAAAxT,KAAA2C,KAAAo8F,EAAA1kD,EAAA8hE,EAAA3nE,IAAA7xC,MAKA6+F,YAAArD,EAKAxqF,EAAAiuF,iBAAAP,EAKA1tF,EAAA4xF,eAAAvG,EAKArrF,EAAAonC,kBAAAV,EAKA1mC,EAAAyoG,cAAArd,EAKAprF,EAAA0oG,aAAAH,EAKAvoG,EAAA2oG,kBAAAH,EAKAxoG,EAAAs3E,QAAA,KAKAt3E,EAAA4oG,mBAAA,KACA5oG,EAqEA,OA9IImoG,GAASE,EAAAxoG,GA8EbwoG,EAAAv6G,UAAAkV,gBAAA,WACAhU,KAAA6xC,OAA0Bu7C,GAAUt+C,SACpC9uC,KAAA65G,kBAEAhpG,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAKAq5G,EAAAv6G,UAAAguE,SAAA,WACA,OAAA9sE,KAAAsoF,SAKA+wB,EAAAv6G,UAAA88B,cAAA,WACA,OAAA57B,KAAA6+F,aAKAwa,EAAAv6G,UAAAmkG,WAAA,WACA,IAAA7+C,EAAApkD,KAAA05G,aAAA5nE,WACA,GAAAsS,GAA2BgpC,GAAUr+C,OAAA,CACrC,IAAApjC,EAAwB2U,GAAQtgB,KAAAy5G,eAAAz5G,KAAAo4C,kBAChCx3C,EAAyB2f,GAASvgB,KAAAy5G,eAAAz5G,KAAAo4C,kBAClCp4C,KAAAsoF,QAA2B6T,GAAiBxwF,EAAA/K,EAAAZ,KAAA25G,kBAAA35G,KAAA05G,aAAAr+D,gBAAAr7C,KAAAi/F,iBAAAj/F,KAAAo4C,kBAAAp4C,KAAAy5G,cAAAz5G,KAAA4iG,eAAA,EAC5C1kF,OAAAle,KAAA05G,aAAA1xF,YACAghD,MAAAhpE,KAAA05G,aAAA5sC,aACiB,GAEjB9sE,KAAA6xC,MAAAuS,EACApkD,KAAAgX,WAKAqiG,EAAAv6G,UAAAuC,KAAA,WACA,GAAArB,KAAA6xC,OAA0Bu7C,GAAUv+C,KAAA,CACpC7uC,KAAA6xC,MAAyBu7C,GAAUt+C,QACnC9uC,KAAAgX,UACA,IAAAotC,EAAApkD,KAAA05G,aAAA5nE,WACAsS,GAA+BgpC,GAAUr+C,QAAAqV,GAA0BgpC,GAAU93E,MAC7EtV,KAAAijG,cAGAjjG,KAAA45G,mBAA0CzmG,EAAMnT,KAAA05G,aAAoBtkG,EAASC,OAAA,SAAAnW,GAC7E,IAAAklD,EAAApkD,KAAA05G,aAAA5nE,WACAsS,GAAuCgpC,GAAUr+C,QAAAqV,GAA0BgpC,GAAU93E,QACrFtV,KAAA65G,kBACA75G,KAAAijG,eAEiBjjG,MACjBA,KAAA05G,aAAAr4G,UAOAg4G,EAAAv6G,UAAA+6G,gBAAA,WACQtmG,EAA2DvT,KAAA,oBACnEA,KAAA45G,mBAAA,MAEAP,EA/Ie,CAgJbhpB,IChLEypB,GAAyB,WAC7B,IAAAzpG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4B7BqpG,GAMA,iBANAA,GAYA,eAZAA,GAkBA,iBAOAC,GAAA,SAAAnpG,GAMA,SAAAmpG,EAAA52G,EAAA4lE,GACA,IAAAh4D,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAOA,OADAgR,EAAAg4D,QACAh4D,EAEA,OAfI8oG,GAASE,EAAAnpG,GAebmpG,EAhBA,CAiBE3lG,GAkJK,SAAA4lG,GAAAjxC,EAAApG,GAC0CoG,EAAA8D,WAAAlK,MAElC,IAAAs3C,GAnIA,SAAArpG,GAKf,SAAAspG,EAAAlhG,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAroC,WAAAnS,EAAAmS,WACAymB,MAAA54B,EAAA44B,SACS7xC,KAiBT,OAZAgR,EAAAgpC,kBAAApnC,IAAAqG,EAAA6/B,YACA7/B,EAAA6/B,YAAA,KAKA9nC,EAAAopG,kBAAA,KAKAppG,EAAAqpG,qBAAA,EACArpG,EA6FA,OAvHI8oG,GAASK,EAAAtpG,GAgCbspG,EAAAr7G,UAAA4/C,eAAA,WACA,OAAA1+C,KAAAg6C,cAOAmgE,EAAAr7G,UAAAw7G,sBAAA,SAAAz5F,GACA,GAAA7gB,KAAAg6C,aAAA,CACA,IAAA78B,EAAsBf,EAAiBpc,KAAAg6C,aAAAn5B,EAAA,GACvCA,EAAA7gB,KAAAg6C,aAAA78B,GAEA,OAAA0D,GASAs5F,EAAAr7G,UAAAguE,SAAA,SAAA5uD,EAAA2C,EAAAk+B,EAAA3zB,GACA,IAAAyB,EAAA7sB,KAAA47B,gBACA,GACA/O,GACAzB,IACYqB,GAAUI,EAAAzB,GAMtB,CACA,GAAAprB,KAAAo6G,kBAAA,CACA,GAAAp6G,KAAAq6G,sBAAAr6G,KAAAiX,eACoBwV,GAAUzsB,KAAAo6G,kBAAAx+E,gBAAAxQ,IAC9BprB,KAAAo6G,kBAAA/+D,iBAAAx6B,GACoBnB,GAAM1f,KAAAo6G,kBAAApyF,YAAA9J,GAC1B,OAAAle,KAAAo6G,kBAEAp6G,KAAAo6G,kBAAArmG,UACA/T,KAAAo6G,kBAAA,KAMA,OAJAp6G,KAAAo6G,kBAAA,IAAyChB,GAAWvsF,EAAAzB,EAAAlN,EAAA2C,EAAAk+B,EAAA,SAAA7gC,EAAA2C,EAAAk+B,GACpD,OAAA/+C,KAAAu6G,iBAAAr8F,EAAA2C,EAAAk+B,EAAAlyB,IACanuB,KAAAsB,OACbA,KAAAq6G,qBAAAr6G,KAAAiX,cACAjX,KAAAo6G,kBAjBA,OAHAvtF,IACAzB,EAAAyB,GAEA7sB,KAAAu6G,iBAAAr8F,EAAA2C,EAAAk+B,EAAA3zB,IA6BA+uF,EAAAr7G,UAAAy7G,iBAAA,SAAAr8F,EAAA2C,EAAAk+B,EAAA3zB,GACA,OAAenb,KAOfkqG,EAAAr7G,UAAA07G,kBAAA,SAAAhrG,GACA,IAAAw5D,EAA6Dx5D,EAAA,OAC7D,OAAAw5D,EAAAl3B,YACA,KAAiBs7C,GAAUt+C,QAC3B9uC,KAAAysD,SAAA,EACAzsD,KAAA+U,cAAA,IAAAilG,GAAAD,GAAA/wC,IACA,MACA,KAAiBokB,GAAUr+C,OAC3B/uC,KAAAysD,SAAA,EACAzsD,KAAA+U,cAAA,IAAAilG,GAAAD,GAAA/wC,IACA,MACA,KAAiBokB,GAAU93E,MAC3BtV,KAAAysD,SAAA,EACAzsD,KAAA+U,cAAA,IAAAilG,GAAAD,GAAA/wC,MAMAmxC,EAxHe,CAyHb5W,ICtMK,SAAAkX,GAAAC,EAAAC,GACP,IAAAC,EAAA,GAEAh9G,OAAAmP,KAAA4tG,GAAAlhG,QAAA,SAAA0K,GACA,OAAAw2F,EAAAx2F,SAAAvR,IAAA+nG,EAAAx2F,IACAy2F,EAAA95G,KAAAqjB,EAAA,IAAA02F,mBAAAF,EAAAx2F,OAGA,IAAA22F,EAAAF,EAAA5rF,KAAA,KAKA,OADA0rF,GAAA,KAFAA,IAAA3kE,QAAA,aAEA11C,QAAA,KAAAq6G,EAAA,IAAAA,EAAA,KACAI,ECrBA,IAAIC,GAAyB,WAC7B,IAAA1qG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+PdsqG,GAtMI,SAAAnqG,GAKnB,SAAAoqG,EAAAjiG,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAwD,GAqDxD,OApDAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAroC,WAAAnS,EAAAmS,WACA0tB,YAAA7/B,EAAA6/B,eACS94C,MAKTwzF,kBACA5gF,IAAAqG,EAAA4pD,YAAA5pD,EAAA4pD,YAAA,KAKA7xD,EAAAi4F,YAAAr2F,IAAAqG,EAAA+vF,OAAA/vF,EAAA+vF,MAKAh4F,EAAAw9F,KAAAv1F,EAAA4+D,IAKA7mE,EAAAwgF,wBAAA5+E,IAAAqG,EAAAm4E,kBACAn4E,EAAAm4E,kBAAwC6oB,GAKxCjpG,EAAAkqG,QAAAjiG,EAAA0hG,QAAA,GAKA3pG,EAAAi5D,OAAA,KAKAj5D,EAAA+9E,WAAA,MAKA/9E,EAAAmqG,kBAAA,EAKAnqG,EAAAoqG,YAAAxoG,IAAAqG,EAAA65B,MAAA75B,EAAA65B,MAAA,IACA9hC,EAwIA,OAnMI+pG,GAASE,EAAApqG,GAmEboqG,EAAAn8G,UAAAu8G,UAAA,WACA,OAAAr7G,KAAAk7G,SAKAD,EAAAn8G,UAAAy7G,iBAAA,SAAAr8F,EAAA2C,EAAAk+B,EAAA3zB,GACA,QAAAxY,IAAA5S,KAAAwuG,KACA,YAEA3tF,EAAA7gB,KAAAs6G,sBAAAz5F,GACAk+B,EAAA/+C,KAAAipG,OAAAlqD,EAAA,EACA,IAAAiqB,EAAAhpE,KAAAiqE,OACA,GAAAjB,GACAhpE,KAAAm7G,mBAAAn7G,KAAAiX,eACA+xD,EAAA3tB,iBAAAx6B,GACAmoD,EAAAunB,iBAAAxxC,GACYjgC,GAAckqD,EAAAhhD,YAAA9J,GAC1B,OAAA8qD,EAEA,IAAA2xC,EAAA,CACAW,EAAA,QACAC,OAAA,QACAC,aAAA,GAEQjqG,EAAMopG,EAAA36G,KAAAk7G,SAEd,IAAAl7D,IADA9hC,IAAA1c,SACA,GAAA0c,EAAA,MACA+hC,GAAA/hC,EAAA,GAAAA,EAAA,MACA,MAAAle,KAAAo7G,OAAA,CACA,IAAAK,EAAAz7G,KAAAo7G,OAA0C96F,GAAQpC,GAAA,EAClDw9F,EAAA17G,KAAAo7G,OAA2C76F,GAASrC,GAAA,EACpDA,EAAA,GAAA8hC,EAAAy7D,EACAv9F,EAAA,GAAA+hC,EAAAy7D,EACAx9F,EAAA,GAAA8hC,EAAAy7D,EACAv9F,EAAA,GAAA+hC,EAAAy7D,EAEA,IAAAC,EAAA96F,EAAAk+B,EAEApzC,EAAAtM,KAAAc,KAA8BmgB,GAAQpC,GAAAy9F,GACtC/6G,EAAAvB,KAAAc,KAA+BogB,GAASrC,GAAAy9F,GAExCz9F,EAAA,GAAA8hC,EAAA27D,EAAAhwG,EAAA,EACAuS,EAAA,GAAA8hC,EAAA27D,EAAAhwG,EAAA,EACAuS,EAAA,GAAA+hC,EAAA07D,EAAA/6G,EAAA,EACAsd,EAAA,GAAA+hC,EAAA07D,EAAA/6G,EAAA,EACAZ,KAAA+uF,WAAA,GAAApjF,EACA3L,KAAA+uF,WAAA,GAAAnuF,EACA,IAAAi3E,EAAA73E,KAAA47G,eAAA19F,EAAAle,KAAA+uF,WAAAhwC,EAAA3zB,EAAAuvF,GAIA,OAHA36G,KAAAiqE,OAAA,IAA0BinB,GAAYhzE,EAAA2C,EAAAk+B,EAAA84B,EAAA73E,KAAAwzF,aAAAxzF,KAAAwxF,oBACtCxxF,KAAAm7G,kBAAAn7G,KAAAiX,cACQ9D,EAAMnT,KAAAiqE,OAAc70D,EAASC,OAAArV,KAAAw6G,kBAAAx6G,MACrCA,KAAAiqE,QAOAgxC,EAAAn8G,UAAA+8G,qBAAA,WACA,OAAA77G,KAAAwxF,oBAWAypB,EAAAn8G,UAAA88G,eAAA,SAAA19F,EAAA6C,EAAAg+B,EAAA3zB,EAAAuvF,GAEA,IAAAmB,EAAA1wF,EAAArD,UAAA7W,MAAA,KAAArQ,MACA85G,EAAA,KAAA55F,EAAA,OAAAA,EAAA,GACA45F,EAAA,KAAAz8F,EAAA8Q,KAAA,KACA2rF,EAAA,OAAAmB,EACAnB,EAAA,QAAAmB,EACAnB,EAAA,IAAAt7G,KAAAw1B,MAAA,GAAAkqB,GACA,IAAA84B,EAAA73E,KAAAwuG,KACAuN,EAAAlkC,EACA9hC,QAAA,oCACAA,QAAA,6CAIA,OAHAgmE,GAAAlkC,GACY39D,GAAM,MAEHugG,GAAYsB,EAAApB,IAO3BM,EAAAn8G,UAAA2yG,OAAA,WACA,OAAAzxG,KAAAwuG,MAOAyM,EAAAn8G,UAAAk9G,qBAAA,SAAA5qB,GACApxF,KAAAiqE,OAAA,KACAjqE,KAAAwxF,mBAAAJ,EACApxF,KAAAgX,WAOAikG,EAAAn8G,UAAA+nG,OAAA,SAAAhvB,GACAA,GAAA73E,KAAAwuG,OACAxuG,KAAAwuG,KAAA32B,EACA73E,KAAAiqE,OAAA,KACAjqE,KAAAgX,YAQAikG,EAAAn8G,UAAAm9G,aAAA,SAAAtB,GACQppG,EAAMvR,KAAAk7G,QAAAP,GACd36G,KAAAiqE,OAAA,KACAjqE,KAAAgX,WAEAikG,EApMmB,CAqMjBf,ICjQEgC,GAAyB,WAC7B,IAAA7rG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAkGdyrG,GAxEA,SAAAtrG,GAUf,SAAAurG,EAAAl+F,EAAA2C,EAAAk+B,EAAA2C,EAAA26D,GACA,IAAArrG,EAAAhR,KACA6xC,OAAAj/B,IAAAypG,EAA+CjvB,GAAUv+C,KAAQu+C,GAAUr+C,OAkB3E,OAjBA/9B,EAAAH,EAAAxT,KAAA2C,KAAAke,EAAA2C,EAAAk+B,EAAAlN,IAAA7xC,MAMAouG,aAAAx7F,IAAAypG,IAAA,KAKArrG,EAAAs3E,QAAA5mC,EAKA1wC,EAAAsrG,OAAA,KACAtrG,EAwCA,OArEIkrG,GAASE,EAAAvrG,GAmCburG,EAAAt9G,UAAAy9G,SAAA,WACA,OAAAv8G,KAAAs8G,QAOAF,EAAAt9G,UAAA09G,YAAA,SAAA9P,GACAA,GACA1sG,KAAAs8G,OAAA5P,EACA1sG,KAAA6xC,MAAyBu7C,GAAU93E,OAGnCtV,KAAA6xC,MAAyBu7C,GAAUr+C,OAEnC/uC,KAAAgX,WAKAolG,EAAAt9G,UAAAuC,KAAA,WACArB,KAAA6xC,OAA0Bu7C,GAAUv+C,OACpC7uC,KAAA6xC,MAAyBu7C,GAAUt+C,QACnC9uC,KAAAgX,UACAhX,KAAAouG,QAAApuG,KAAAw8G,YAAA99G,KAAAsB,SAMAo8G,EAAAt9G,UAAAguE,SAAA,WACA,OAAA9sE,KAAAsoF,SAEA8zB,EAtEe,CAuEb/rB,IC9FEosB,GAAyB,WAC7B,IAAApsG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqHdgsG,GAjEM,SAAA7rG,GAKrB,SAAA8rG,EAAA3jG,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAwD,GA4BxD,OA3BAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAroC,WAAAnS,EAAAmS,WACA0tB,YAAA7/B,EAAA6/B,YACAjH,MAAA54B,EAAA44B,SACS7xC,MAKT48G,gBAAA3jG,EAAA4jG,eAKA7rG,EAAAs3E,QAAA,KAKAt3E,EAAAmqG,kBAAA,EAKAnqG,EAAAoqG,YAAAxoG,IAAAqG,EAAA65B,MACA75B,EAAA65B,MAAA,IACA9hC,EA4BA,OA9DIyrG,GAASE,EAAA9rG,GAuCb8rG,EAAA79G,UAAAy7G,iBAAA,SAAAr8F,EAAA2C,EAAAk+B,EAAA3zB,GACAvK,EAAA7gB,KAAAs6G,sBAAAz5F,GACA,IAAA6gC,EAAA1hD,KAAAsoF,QACA,GAAA5mC,GACA1hD,KAAAm7G,mBAAAn7G,KAAAiX,eACAyqC,EAAArG,iBAAAx6B,GACA6gC,EAAA6uC,iBAAAxxC,GACYjgC,GAAc4iC,EAAA15B,YAAA9J,GAC1B,OAAAwjC,EAGQv/B,GADRjE,IAAA1c,QACuBxB,KAAAo7G,QACvB,IAEAr6F,EAAA,CAFoBT,GAAQpC,GAAA2C,EAE5Bk+B,EADqBx+B,GAASrC,GAAA2C,EAC9Bk+B,GACA+9D,EAAA98G,KAAA48G,gBAAAv/G,KAAA2C,KAAAke,EAAA2C,EAAAk+B,EAAAh+B,EAAAqK,GAMA,OALA0xF,IACAp7D,EAAA,IAAyBy6D,GAAWj+F,EAAA2C,EAAAk+B,EAAA+9D,IAEpC98G,KAAAsoF,QAAA5mC,EACA1hD,KAAAm7G,kBAAAn7G,KAAAiX,cACAyqC,GAEAi7D,EA/DqB,CAgEnBzC,ICpHE6C,GAAyB,WAC7B,IAAA1sG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4Od,IAAAssG,GA9LE,SAAAnsG,GAKjB,SAAAosG,EAAAhkG,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAorB,WAAAnS,EAAAmS,WACA0tB,YAAA7/B,EAAA6/B,eACS94C,KA6DT,OAxDAgR,EAAAwiF,kBACA5gF,IAAAqG,EAAA4pD,YAAA5pD,EAAA4pD,YAAA,KAKA7xD,EAAAksG,iBAAAtqG,IAAAqG,EAAAkkG,WACAlkG,EAAAkkG,WAAA,GAKAnsG,EAAAkqG,QAAAjiG,EAAA0hG,QAAA,GAKA3pG,EAAAw9F,KAAAv1F,EAAA4+D,IAKA7mE,EAAAwgF,wBAAA5+E,IAAAqG,EAAAm4E,kBACAn4E,EAAAm4E,kBAAwC6oB,GAKxCjpG,EAAAi4F,YAAAr2F,IAAAqG,EAAA+vF,OAAA/vF,EAAA+vF,MAKAh4F,EAAA4W,oBAAAhV,IAAAqG,EAAA4O,cACA5O,EAAA4O,cAAA,EAKA7W,EAAAoqG,YAAAxoG,IAAAqG,EAAA65B,MAAA75B,EAAA65B,MAAA,EAKA9hC,EAAAosG,iBAAAxqG,IAAAqG,EAAAokG,YACApkG,EAAAokG,WAKArsG,EAAAi5D,OAAA,KAKAj5D,EAAAmqG,kBAAA,EACAnqG,EAkGA,OAvKI+rG,GAASE,EAAApsG,GA6EbosG,EAAAn+G,UAAAu8G,UAAA,WACA,OAAAr7G,KAAAk7G,SAKA+B,EAAAn+G,UAAAy7G,iBAAA,SAAAr8F,EAAA2C,EAAAk+B,EAAA3zB,GACAvK,EAAA7gB,KAAAs6G,sBAAAz5F,GACAk+B,EAAA/+C,KAAAipG,OAAAlqD,EAAA,EACA,IAAAiqB,EAAAhpE,KAAAiqE,OACA,GAAAjB,GACAhpE,KAAAm7G,mBAAAn7G,KAAAiX,eACA+xD,EAAA3tB,iBAAAx6B,GACAmoD,EAAAunB,iBAAAxxC,GACYjgC,GAAckqD,EAAAhhD,YAAA9J,GAC1B,OAAA8qD,EAEA,GAAAhpE,KAAAo7G,QAEYj5F,GADZjE,IAAA1c,QAC2BxB,KAAAo7G,QAE3B,IAEAr6F,EAAA,CAFoBT,GAAQpC,GAAA2C,EAE5Bk+B,EADqBx+B,GAASrC,GAAA2C,EAC9Bk+B,GACA,QAAAnsC,IAAA5S,KAAAwuG,KAAA,CACA,IAAA/D,EAAAzqG,KAAAyxG,OAAAzxG,KAAAwuG,KAAAxuG,KAAAk7G,QAAAh9F,EAAA6C,EAAAqK,GAEYjY,EADZ61D,EAAA,IAAwBkoB,GAAYhzE,EAAA2C,EAAAk+B,EAAA0rD,EAAAzqG,KAAAwzF,aAAAxzF,KAAAwxF,oBACVp8E,EAASC,OAAArV,KAAAw6G,kBAAAx6G,WAGnCgpE,EAAA,KAIA,OAFAhpE,KAAAiqE,OAAAjB,EACAhpE,KAAAm7G,kBAAAn7G,KAAAiX,cACA+xD,GAOAi0C,EAAAn+G,UAAA+8G,qBAAA,WACA,OAAA77G,KAAAwxF,oBAOAyrB,EAAAn+G,UAAAm9G,aAAA,SAAAtB,GACQppG,EAAMvR,KAAAk7G,QAAAP,GACd36G,KAAAgX,WAUAimG,EAAAn+G,UAAA2yG,OAAA,SAAAqG,EAAA6C,EAAAz8F,EAAA6C,EAAAqK,GACA,IAAA8E,EAqCA,SAAAhS,EAAA6C,EAAA8G,EAAAy1F,GACA,IAAAC,EAAej9F,GAAQpC,GACvBs/F,EAAej9F,GAASrC,GACxBu/F,EAAA18F,EAAA,GACA28F,EAAA38F,EAAA,GACA48F,EAAA,MAAAL,EACA,OAAAI,EAAAH,EAAAE,EAAAD,EACAD,EAAA11F,GAAA41F,EAAAE,GAGAH,EAAA31F,GAAA61F,EAAAC,GA/CA3tC,CAAA9xD,EAAA6C,EAAA/gB,KAAA4nB,eAAA5nB,KAAAk9G,aACAt8F,EAAqBJ,GAAStC,GAC9B0/F,EAAA,CACAC,UAAA79G,KAAAo9G,YAAA,0CACA9sG,QAAA,QACAwtG,OAAA,KACAC,YAAA,iCACAC,KAAA,IACAC,cAAAj+G,KAAAk9G,YACAgB,gBAAA7+G,KAAAw1B,MAAA9T,EAAA,IACAo9F,iBAAA9+G,KAAAw1B,MAAA9T,EAAA,IACAq9F,aAAAluF,EACAmuF,eAAAz9F,EAAA,GACA09F,eAAA19F,EAAA,IAGA,OADQrP,EAAMqsG,EAAAjD,GACCF,GAAY3C,EAAA8F,IAO3BX,EAAAn+G,UAAAk9G,qBAAA,SAAA5qB,GACApxF,KAAAiqE,OAAA,KACAjqE,KAAAwxF,mBAAAJ,EACApxF,KAAAgX,WAEAimG,EAxKiB,CAyKf/C,ICvNEqE,GAAyB,WAC7B,IAAAluG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoId8tG,GA5FL,SAAA3tG,GAKV,SAAA4tG,EAAAxlG,GACA,IAAAjI,EAAAhR,KACA6iE,OAAAjwD,IAAAqG,EAAA4pD,YACA5pD,EAAA4pD,YAAA,KAC0DuuB,OAAAx+E,IAAAqG,EAAAm4E,kBAC1Dn4E,EAAAm4E,kBAAwC6oB,GA0BxC,OAzBAjpG,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAroC,WAAwBE,GAAarS,EAAAmS,eAC5BprB,MAKTwuG,KAAAv1F,EAAA4+D,IAKA7mE,EAAA0tG,aAAAzlG,EAAA0lG,YAKA3tG,EAAAi5D,OAAA,IAA2BinB,GAAYlgF,EAAA0tG,kBAAA9rG,EAAA,EAAA5B,EAAAw9F,KAAA3rC,EAAAuuB,GAKvCpgF,EAAA+9E,WAAA91E,EAAA62D,UAAA72D,EAAA62D,UAAA,KACQ38D,EAAMnC,EAAAi5D,OAAe70D,EAASC,OAAArE,EAAAwpG,kBAAAxpG,GACtCA,EAsDA,OAzFIutG,GAASE,EAAA5tG,GA0Cb4tG,EAAA3/G,UAAA8/G,eAAA,WACA,OAAA5+G,KAAA0+G,cAKAD,EAAA3/G,UAAAy7G,iBAAA,SAAAr8F,EAAA2C,EAAAk+B,EAAA3zB,GACA,OAAYlJ,GAAUhE,EAAAle,KAAAiqE,OAAAjiD,aACtBhoB,KAAAiqE,OAEA,MAOAw0C,EAAA3/G,UAAA2yG,OAAA,WACA,OAAAzxG,KAAAwuG,MAKAiQ,EAAA3/G,UAAA07G,kBAAA,SAAAlnG,GACA,GAAAtT,KAAAiqE,OAAAn4B,YAAsCs7C,GAAUr+C,OAAA,CAChD,IAAA4vE,EAAA3+G,KAAAiqE,OAAAjiD,YACAghD,EAAAhpE,KAAAiqE,OAAA6C,WACAq9B,OAAA,EAAAC,OAAA,EACApqG,KAAA+uF,YACAob,EAAAnqG,KAAA+uF,WAAA,GACAqb,EAAApqG,KAAA+uF,WAAA,KAGAob,EAAAnhC,EAAAr9D,MACAy+F,EAAAphC,EAAApoE,QAEA,IAAAigB,EAA6BN,GAASo+F,GAAAvU,EACtCyU,EAAAx/G,KAAAc,KAAwCmgB,GAAQq+F,GAAA99F,GAChD,GAAAg+F,GAAA1U,EAAA,CACA,IAAAx6F,EAA8B4xC,GAAqBs9D,EAAAzU,GACnD1oD,EAAA/xC,EAAA+xC,OACA/xC,EAAAo5D,UAAAC,EAAA,IAAAmhC,EAAAC,EAAA,IAAA1oD,EAAA/1C,MAAA+1C,EAAA9gD,QACAZ,KAAAiqE,OAAA2nB,SAAAlwC,IAGA7wC,EAAA/R,UAAA07G,kBAAAn9G,KAAA2C,KAAAsT,IAEAmrG,EA1FU,CA2FRvE,IC/HK4E,GAAA,QCEQC,GACf,iBADeA,GAEf,YAFeA,GAGf,YAHeA,GAIf,OCVIC,GAAyB,WAC7B,IAAA3uG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8B7BuuG,GAAA,UAiTeC,GAlRH,SAAAruG,GAKZ,SAAAsuG,EAAAnmG,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAwD,GAgExD,OA/DAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAroC,WAAAnS,EAAAmS,WACA0tB,YAAA7/B,EAAA6/B,eACS94C,MAKTwzF,kBACA5gF,IAAAqG,EAAA4pD,YAAA5pD,EAAA4pD,YAAA,KAKA7xD,EAAAw9F,KAAAv1F,EAAA4+D,IAKA7mE,EAAAwgF,wBAAA5+E,IAAAqG,EAAAm4E,kBACAn4E,EAAAm4E,kBAAwC6oB,GAKxCjpG,EAAAkqG,QAAAjiG,EAAA0hG,QAAA,GAKA3pG,EAAAouG,MAAA,EACApuG,EAAAquG,aAKAruG,EAAAsuG,YAAsFrmG,EAAA,WAKtFjI,EAAAi4F,YAAAr2F,IAAAqG,EAAA+vF,OAAA/vF,EAAA+vF,MAKAh4F,EAAAi5D,OAAA,KAKAj5D,EAAA+9E,WAAA,MAKA/9E,EAAAmqG,kBAAA,EAKAnqG,EAAAoqG,YAAAxoG,IAAAqG,EAAA65B,MAAA75B,EAAA65B,MAAA,IACA9hC,EAyMA,OA/QIguG,GAASG,EAAAtuG,GAsFbsuG,EAAArgH,UAAAygH,qBAAA,SAAA3gG,EAAAiC,EAAAuK,EAAAuvF,GACA,QAAA/nG,IAAA5S,KAAAwuG,KAAA,CAGA,IAAAgR,EAA4Bl0F,GAAaF,GACzCq0F,EAAAz/G,KAAA47B,gBACA6jF,OAAAD,IACA3+F,EAAyB06E,GAAyBkkB,EAAAD,EAAA5gG,EAAAiC,GAClDjC,EAAyBqO,GAASrO,EAAA4gG,EAAAC,IAElC,IAAAvhG,EAAqByC,GAAiB/B,EAAAiC,EAAA,EAAAo+F,IACtCrB,EAAA,CACA8B,QAAA,MACApvG,QAAuBwuG,GACvBa,QAAA,iBACApE,OAAA,YACAC,aAAA,EACAoE,aAAA5/G,KAAAk7G,QAAA,QAEQ3pG,EAAMqsG,EAAA59G,KAAAk7G,QAAAP,GACd,IAAA76G,EAAAT,KAAAO,OAAAgf,EAAA,GAAAV,EAAA,IAAA2C,GACArC,EAAAnf,KAAAO,OAAAse,EAAA,GAAAU,EAAA,IAAAiC,GAGA,OAFA+8F,EAAA59G,KAAAo/G,KAAA,SAAAt/G,EACA89G,EAAA59G,KAAAo/G,KAAA,SAAA5gG,EACAxe,KAAA47G,eAAA19F,EAAA+gG,GAAA,EAAAQ,GAAAD,EAAA5B,KAQAuB,EAAArgH,UAAAu8G,UAAA,WACA,OAAAr7G,KAAAk7G,SAKAiE,EAAArgH,UAAAy7G,iBAAA,SAAAr8F,EAAA2C,EAAAk+B,EAAA3zB,GACA,QAAAxY,IAAA5S,KAAAwuG,KACA,YAEA3tF,EAAA7gB,KAAAs6G,sBAAAz5F,GACA,GAAAk+B,GAAA/+C,KAAAipG,aAAAr2F,IAAA5S,KAAAs/G,cACAvgE,EAAA,GAEA,IAAA48D,EAAA96F,EAAAk+B,EACAn+B,EAAqBJ,GAAStC,GAG9B2hG,EAAyBl/F,GAAiBC,EAAA+6F,EAAA,GAF1Ct8G,KAAAc,KAAkCmgB,GAAQpC,GAAAy9F,GAC1Ct8G,KAAAc,KAAmCogB,GAASrC,GAAAy9F,KAI5CmE,EAA4Bn/F,GAAiBC,EAAA+6F,EAAA,GAF7Ct8G,KAAAc,KAAAH,KAAAo7G,OAAmD96F,GAAQpC,GAAAy9F,GAC3Dt8G,KAAAc,KAAAH,KAAAo7G,OAAoD76F,GAASrC,GAAAy9F,KAE7D3yC,EAAAhpE,KAAAiqE,OACA,GAAAjB,GACAhpE,KAAAm7G,mBAAAn7G,KAAAiX,eACA+xD,EAAA3tB,iBAAAx6B,GACAmoD,EAAAunB,iBAAAxxC,GACYjgC,GAAckqD,EAAAhhD,YAAA63F,GAC1B,OAAA72C,EAEA,IAAA2xC,EAAA,CACA+E,QAAA,MACApvG,QAAuBwuG,GACvBa,QAAA,SACApE,OAAA,YACAC,aAAA,GAEQjqG,EAAMopG,EAAA36G,KAAAk7G,SACdl7G,KAAA+uF,WAAA,GAAA1vF,KAAAw1B,MAAwCvU,GAAQw/F,GAAAnE,GAChD37G,KAAA+uF,WAAA,GAAA1vF,KAAAw1B,MAAwCtU,GAASu/F,GAAAnE,GACjD,IAAA9jC,EAAA73E,KAAA47G,eAAAkE,EAAA9/G,KAAA+uF,WAAAhwC,EAAA3zB,EAAAuvF,GAIA,OAHA36G,KAAAiqE,OAAA,IAA0BinB,GAAY4uB,EAAAj/F,EAAAk+B,EAAA84B,EAAA73E,KAAAwzF,aAAAxzF,KAAAwxF,oBACtCxxF,KAAAm7G,kBAAAn7G,KAAAiX,cACQ9D,EAAMnT,KAAAiqE,OAAc70D,EAASC,OAAArV,KAAAw6G,kBAAAx6G,MACrCA,KAAAiqE,QAOAk1C,EAAArgH,UAAA+8G,qBAAA,WACA,OAAA77G,KAAAwxF,oBAWA2tB,EAAArgH,UAAA88G,eAAA,SAAA19F,EAAA6C,EAAAg+B,EAAA3zB,EAAAuvF,GAMA,GALQzgG,OAAMtH,IAAA5S,KAAAwuG,KAAA,GACdmM,EAAA36G,KAAAo/G,KAAA,aAAAh0F,EAAArD,UACA,WAAA/nB,KAAAk7G,UACAP,EAAA,WAEA,GAAA57D,EACA,OAAA/+C,KAAAs/G,aACA,KAAqBP,GACrB,IAAAzB,EAAA,GAAAv+D,EAAA,KACA,mBAAA47D,EACAA,EAAA,wBAAsD2C,EAGtD3C,EAAA,sBAAA2C,EAEA,MACA,KAAqByB,GACrBpE,EAAA,kBAAA57D,EACA,MACA,KAAqBggE,GACrB,KAAqBA,GACrBpE,EAAA,OAAA57D,EACA,MACA,QACoB7kC,GAAM,KAI1BygG,EAAA,MAAA55F,EAAA,GACA45F,EAAA,OAAA55F,EAAA,GACA,IACAoqF,EADA9jF,EAAA+D,EAAAhD,qBASA,OANA+iF,EADAnrG,KAAAo/G,MAAA,MAAA/3F,EAAA46C,OAAA,KACA,CAAA/jD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGAA,EAEAy8F,EAAA,KAAAxP,EAAAn8E,KAAA,KACeyrF,GAA+Bz6G,KAAA,KAAA26G,IAO9CwE,EAAArgH,UAAA2yG,OAAA,WACA,OAAAzxG,KAAAwuG,MAOA2Q,EAAArgH,UAAAk9G,qBAAA,SAAA5qB,GACApxF,KAAAiqE,OAAA,KACAjqE,KAAAwxF,mBAAAJ,EACApxF,KAAAgX,WAOAmoG,EAAArgH,UAAA+nG,OAAA,SAAAhvB,GACAA,GAAA73E,KAAAwuG,OACAxuG,KAAAwuG,KAAA32B,EACA73E,KAAAiqE,OAAA,KACAjqE,KAAAgX,YAQAmoG,EAAArgH,UAAAm9G,aAAA,SAAAtB,GACQppG,EAAMvR,KAAAk7G,QAAAP,GACd36G,KAAAq/G,aACAr/G,KAAAiqE,OAAA,KACAjqE,KAAAgX,WAKAmoG,EAAArgH,UAAAugH,WAAA,WACA,IAAAvI,EAAA92G,KAAAk7G,QAAA,SAAiD4D,GACjD9+G,KAAAo/G,KAAoB9qE,GAAewiE,EAAA,WAEnCqI,EAhRY,CAiRVjF,IC9UE6F,GAAyB,WAC7B,IAAA1vG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqBtBsvG,GAAA,2FAgEQC,GAnCf,SAAApvG,GAKA,SAAAqvG,EAAAlnG,GACA,IAEAy6C,EADAx6C,EAAAD,GAAA,GAGAy6C,OADA7gD,IAAAqG,EAAAw6C,aACAx6C,EAAAw6C,aAGA,CAAAusD,IAEA,IAAAn9C,OAAAjwD,IAAAqG,EAAA4pD,YACA5pD,EAAA4pD,YAAA,YACAgV,OAAAjlE,IAAAqG,EAAA4+D,IACA5+D,EAAA4+D,IAAA,uDAaA,OAZAhnE,EAAAxT,KAAA2C,KAAA,CACAyzD,eACAiO,UAAAzoD,EAAAyoD,UACAmB,cACAuhC,YAAAxxF,IAAAqG,EAAAmrF,QAAAnrF,EAAAmrF,OACA1rD,aAAA9lC,IAAAqG,EAAAy/B,QAAAz/B,EAAAy/B,QAAA,GACAqvD,2BAAA9uF,EAAA8uF,2BACAlN,iBAAA5hF,EAAA4hF,iBACAhjB,MACAgsB,MAAA5qF,EAAA4qF,MACAF,yBAAA,KACS3jG,KAGT,OAhCI+/G,GAASG,EAAArvG,GAgCbqvG,EAjCA,CAkCE7U,YCvFE8U,GAAyB,WAC7B,IAAA9vG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6Dd0vG,GAbf,SAAAvvG,GAKA,SAAAwvG,EAAArnG,GACA,IACAC,EAAAD,GAAA,GAEA,OADAnI,EAAAxT,KAAA2C,KAAAiZ,IAAAjZ,KAGA,OAVImgH,GAASE,EAAAxvG,GAUbwvG,EAXA,CAYEnvD,IC5DEovD,GAAyB,WAC7B,IAAAjwG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2Kd6vG,GArJE,SAAA1vG,GAKjB,SAAA2vG,EAAAv8D,GACA,IAAAjzC,EAAAH,EAAAxT,KAAA2C,YAMA,OADAgR,EAAAyvG,OAAAx8D,EACAjzC,EAuIA,OAlJIsvG,GAASE,EAAA3vG,GAoBb2vG,EAAA1hH,UAAA6yD,aAAA,SAAA/yB,EAAA0nB,GACA,OAAer2C,KASfuwG,EAAA1hH,UAAA0wD,YAAA,SAAA5wB,EAAA0nB,GACA,OAAer2C,KAOfuwG,EAAA1hH,UAAA4hH,mBAAA,SAAAzK,EAAAl7D,EAAAnJ,GACAqkE,EAAAl7D,KACAk7D,EAAAl7D,GAAA,IAEAk7D,EAAAl7D,GAAAnJ,EAAA0nC,UAAApsE,YAAA0kC,GAWA4uE,EAAA1hH,UAAA6hH,uBAAA,SAAArzG,EAAA8d,EAAA6qF,GACA,gBAOAl7D,EAAAy+B,GACA,IAAA3qE,EAAA7O,KAAA0gH,mBAAAhiH,KAAAsB,KAAAi2G,EAAAl7D,GACA,OAAAztC,EAAA23F,kBAAA75E,EAAA2vB,EAAAy+B,EAAA3qE,IACSnQ,KAAAsB,OAYTwgH,EAAA1hH,UAAAusD,2BAAA,SAAAzsC,EAAAggB,EAAAusB,EAAAt8C,EAAA6jE,KAUA8tC,EAAA1hH,UAAA60E,eAAA,SAAAjnE,EAAAkyB,EAAAusB,GACA,OAAel7C,KAKfuwG,EAAA1hH,UAAA8hH,SAAA,WACA,OAAA5gH,KAAAygH,QAMAD,EAAA1hH,UAAA+vD,mBAAA,aAMA2xD,EAAA1hH,UAAA+hH,mBAAA,SAAArxG,GAC6DA,EAAA,OAC7DsiC,aAAiCs7C,GAAUr+C,QAC3C/uC,KAAA8gH,2BAQAN,EAAA1hH,UAAA6sD,uBAAA,SAAA/sC,EAAAggB,GACA,UASA4hF,EAAA1hH,UAAAiiH,UAAA,SAAA/3C,GACA,IAAAgpB,EAAAhpB,EAAAl3B,WAQA,OAPAkgD,GAA0B5E,GAAUr+C,QAAAijD,GAAyB5E,GAAU93E,OAC3DnC,EAAM61D,EAAQ5zD,EAASC,OAAArV,KAAA6gH,mBAAA7gH,MAEnCgyF,GAA0B5E,GAAUv+C,OACpCm6B,EAAA3nE,OACA2wF,EAAAhpB,EAAAl3B,YAEAkgD,GAA6B5E,GAAUr+C,QAKvCyxE,EAAA1hH,UAAAgiH,wBAAA,WACA,IAAA78D,EAAAjkD,KAAA4gH,WACA38D,EAAAK,cAAAL,EAAAI,kBAA4DW,GAAWE,OACvEjB,EAAAjtC,WAGAwpG,EAnJiB,CAoJf3pG,GC1KEmqG,GAAyB,WAC7B,IAAA3wG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoNduwG,GA1LQ,SAAApwG,GAKvB,SAAAqwG,EAAAj9D,GACA,IAAAjzC,EAAAH,EAAAxT,KAAA2C,KAAAikD,IAAAjkD,KAKAgR,EAAAmwG,mBAOAnwG,EAAAowG,enKdA,cmKqBApwG,EAAAqwG,gBnKrBA,cmK4BArwG,EAAAswG,uBnK5BA,cmKiCAtwG,EAAArB,QAAwB4xC,KACxB,IAAAG,EAAA1wC,EAAArB,QAAA+xC,OAIA,OAHAA,EAAAnmC,MAAA8gB,SAAA,WACAqlB,EAAAnmC,MAAAgmG,gBAAA,WACA7/D,EAAAkC,UAAA5yC,EAAA4vG,WAAA98D,eACA9yC,EA8IA,OAvLIgwG,GAASE,EAAArwG,GA8CbqwG,EAAApiH,UAAAkV,gBAAA,WACAhU,KAAA2P,QAAA+xC,OAAA/1C,MAAA3L,KAAA2P,QAAA+xC,OAAA9gD,OAAA,EACAiQ,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAQAkhH,EAAApiH,UAAAu/F,KAAA,SAAA1uF,EAAAivB,EAAA1gB,GACA,IAAA6gC,EAAAngB,EAAAmgB,WACA08D,EAAA78E,EAAA7d,KAAA,GAAAg+B,EAAA,EACA28D,EAAA98E,EAAA7d,KAAA,GAAAg+B,EAAA,EACAj+B,EAAA8d,EAAAswB,UAAApuC,SACA0gG,EAAsBthG,GAAUhC,GAChCujG,EAAuBxhG,GAAW/B,GAClCwjG,EAA0B1hG,GAAc9B,GACxCyjG,EAAyB5hG,GAAa7B,GAC9Bhc,GAAc08B,EAAA+tB,2BAAA60D,GACdt/G,GAAc08B,EAAA+tB,2BAAA80D,GACdv/G,GAAc08B,EAAA+tB,2BAAA+0D,GACdx/G,GAAc08B,EAAA+tB,2BAAAg1D,GACtBhyG,EAAAsuF,OACQt1B,GAAch5D,GAAAmR,EAAA26F,EAAAC,GACtB/rG,EAAA68D,YACA78D,EAAAu8D,OAAAs1C,EAAA,GAAAziE,EAAAyiE,EAAA,GAAAziE,GACApvC,EAAAw8D,OAAAs1C,EAAA,GAAA1iE,EAAA0iE,EAAA,GAAA1iE,GACApvC,EAAAw8D,OAAAu1C,EAAA,GAAA3iE,EAAA2iE,EAAA,GAAA3iE,GACApvC,EAAAw8D,OAAAw1C,EAAA,GAAA5iE,EAAA4iE,EAAA,GAAA5iE,GACApvC,EAAA0uF,OACQ11B,GAAch5D,EAAAmR,EAAA26F,EAAAC,IAQtBwF,EAAApiH,UAAA8iH,cAAA,SAAAjyG,EAAAivB,EAAA1gB,GACA,IAAAsjG,EAAsBthG,GAAUhC,GAChCujG,EAAuBxhG,GAAW/B,GAClCwjG,EAA0B1hG,GAAc9B,GACxCyjG,EAAyB5hG,GAAa7B,GAC9Bhc,GAAc08B,EAAA+tB,2BAAA60D,GACdt/G,GAAc08B,EAAA+tB,2BAAA80D,GACdv/G,GAAc08B,EAAA+tB,2BAAA+0D,GACdx/G,GAAc08B,EAAA+tB,2BAAAg1D,GACtB,IAAAE,EAAA7hH,KAAAshH,uBACQp/G,GAAc2/G,EAAAL,GACdt/G,GAAc2/G,EAAAJ,GACdv/G,GAAc2/G,EAAAH,GACdx/G,GAAc2/G,EAAAF,GACtBhyG,EAAAsuF,OACAtuF,EAAA68D,YACA78D,EAAAu8D,OAAA7sE,KAAAw1B,MAAA2sF,EAAA,IAAAniH,KAAAw1B,MAAA2sF,EAAA,KACA7xG,EAAAw8D,OAAA9sE,KAAAw1B,MAAA4sF,EAAA,IAAApiH,KAAAw1B,MAAA4sF,EAAA,KACA9xG,EAAAw8D,OAAA9sE,KAAAw1B,MAAA6sF,EAAA,IAAAriH,KAAAw1B,MAAA6sF,EAAA,KACA/xG,EAAAw8D,OAAA9sE,KAAAw1B,MAAA8sF,EAAA,IAAAtiH,KAAAw1B,MAAA8sF,EAAA,KACAhyG,EAAA0uF,QAQA6iB,EAAApiH,UAAAgjH,qBAAA,SAAA1+G,EAAAuM,EAAAivB,GACA,IAAAqlB,EAAAjkD,KAAA4gH,WACA,GAAA38D,EAAA/uC,YAAA9R,GAAA,CACA,IAAA21D,EAAA,IAA8B8H,GAAWz9D,EAAApD,KAAAshH,uBAAA1iF,EAAAjvB,EAAA,MACzCs0C,EAAAlvC,cAAAgkD,KAQAmoD,EAAApiH,UAAAijH,UAAA,SAAApyG,EAAAivB,GACA5+B,KAAA8hH,qBAAkCnzE,GAAeh/B,EAAAivB,IAOjDsiF,EAAApiH,UAAAkjH,WAAA,SAAAryG,EAAAivB,GACA5+B,KAAA8hH,qBAAkCnzE,GAAeh/B,EAAAivB,IAWjDsiF,EAAApiH,UAAAmjH,mBAAA,SAAArjF,EAAAjzB,EAAA/K,EAAAgoE,GACA,IAAA1Z,EAAAtwB,EAAAswB,UAEA5gC,EAAA3iB,EAAA,EACA4iB,EAAA3tB,EAAA,EACA4tB,EAHAoQ,EAAAmgB,WAGAmQ,EAAAruC,WACA4N,GAAAD,EACAE,GAAAwgC,EAAAtuC,OAAA,GAAAgoD,EACAj6C,GAAAugC,EAAAtuC,OAAA,GACA,OAAeyN,GAAgBruB,KAAAohH,eAAA9yF,EAAAC,EAAAC,EAAAC,GAAAygC,EAAApuC,SAAA4N,EAAAC,IAU/BuyF,EAAApiH,UAAA60E,eAAA,SAAAjnE,EAAAkyB,EAAAusB,GACA,IAEAlqD,EAFAihH,EAA0BhgH,GAAclC,KAAAshH,uBAAA50G,EAAAlL,SACxCmO,EAAA3P,KAAA2P,QAEA,IACA1O,EAAA0O,EAAA0iF,aAAAhzF,KAAAw1B,MAAAqtF,EAAA,IAAA7iH,KAAAw1B,MAAAqtF,EAAA,SAAAjhH,KAEA,MAAAyrG,GACA,wBAAAA,EAAAjvG,KAEA,IAAAyF,WAEAjC,EAEA,WAAAA,EAAA,GACA,KAEAA,GAEAigH,EAxLuB,CAyLrBX,ICnNE4B,GAAyB,WAC7B,IAAA9xG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+Id0xG,GApHa,SAAAvxG,GAK5B,SAAAwxG,EAAAC,GACA,IAAAtxG,EAAAH,EAAAxT,KAAA2C,KAAAsiH,IAAAtiH,KAMA,OADAgR,EAAAi5D,OAAA,KACAj5D,EAsGA,OAjHImxG,GAASE,EAAAxxG,GAgBbwxG,EAAAvjH,UAAAguE,SAAA,WACA,OAAA9sE,KAAAiqE,OAAAjqE,KAAAiqE,OAAA6C,WAAA,MAKAu1C,EAAAvjH,UAAA6yD,aAAA,SAAA/yB,EAAA0nB,GACA,IAAAvH,EAAAngB,EAAAmgB,WACAmQ,EAAAtwB,EAAAswB,UACAojB,EAAApjB,EAAAruC,WACA0hG,EAAAviH,KAAA4gH,WAAAp0D,YACAsB,EAAAlvB,EAAAmvB,UACAy0D,EAAA5jF,EAAA1gB,OAIA,QAHAtL,IAAA0zC,EAAApoC,SACAskG,EAA6BxgG,GAAewgG,EAAAl8D,EAAApoC,UAE5C4vC,EAAmBha,MAAQga,EAAsBha,MAA0BzzB,GAAOmiG,GAAA,CAClF,IAAAp3F,EAAA8jC,EAAA9jC,WAOA49C,EAAAu5C,EAAAz1C,SAAA01C,EAAAlwC,EAAAvzB,EAAA3zB,GACA49C,GAAAhpE,KAAA+gH,UAAA/3C,KACAhpE,KAAAiqE,OAAAjB,GAGA,QAAAhpE,KAAAiqE,QAKAo4C,EAAAvjH,UAAA0wD,YAAA,SAAA5wB,EAAA0nB,GACA,IAAA0iB,EAAAhpE,KAAAiqE,OACA00C,EAAA31C,EAAAhhD,YACA2zF,EAAA3yC,EAAA3tB,gBACAonE,EAAAz5C,EAAAunB,gBACAxxC,EAAAngB,EAAAmgB,WACAmQ,EAAAtwB,EAAAswB,UACAwzD,EAAAxzD,EAAAtuC,OACA0xD,EAAApjB,EAAAruC,WACAE,EAAA6d,EAAA7d,KACAmP,EAAA6uB,EAAA48D,GAAArpC,EAAAmwC,GACA92G,EAAAtM,KAAAw1B,MAAA9T,EAAA,GAAAg+B,GACAn+C,EAAAvB,KAAAw1B,MAAA9T,EAAA,GAAAg+B,GACAj+B,EAAAouC,EAAApuC,SACAA,IAEAnV,EAAA/K,EADAvB,KAAAw1B,MAAAx1B,KAAAK,KAAAiM,IAAA/K,OAIQytB,GAAgBruB,KAAAqhH,gBAAAziF,EAAA7d,KAAA,KAAA6d,EAAA7d,KAAA,OAAAg+B,EAAA,EAAAA,EAAAj+B,GAAAnV,EAAA,GAAA/K,EAAA,GAChBguB,GAAW5uB,KAAAshH,uBAAAthH,KAAAqhH,iBACnB,IAAA1xG,EAAA3P,KAAA2P,QACA+xC,EAAA/xC,EAAA+xC,OACAA,EAAA/1C,UAAA+1C,EAAA9gD,WACA8gD,EAAA/1C,QACA+1C,EAAA9gD,UAGA+O,EAAAgzG,UAAA,IAAAh3G,EAAA/K,GAGA,IAAAsd,EAAAooC,EAAApoC,OACA0kG,OAAAhwG,IAAAsL,IACaY,GAAcZ,EAAA0gB,EAAA1gB,SACfgE,GAAUhE,EAAA0gB,EAAA1gB,QACtB0kG,GACA5iH,KAAAq+F,KAAA1uF,EAAAivB,EAAA1gB,GAEA,IAAA0yE,EAAA5nB,EAAA8D,WACAnpD,EAAwB0K,GAAgBruB,KAAAohH,eAAAz1G,EAAA,EAAA/K,EAAA,EAAAsvB,IAAA,EAAAuyF,GAAA9D,EAAA,GAAA+D,EAAA,IAAA/G,EAAA8G,GAAAC,EAAA,GAAA/D,EAAA,IAAAhD,GACxC37G,KAAAmhH,mBAAAxF,EAAA58D,EAAA0jE,EACA,IAAAhkG,EAAAkF,EAAA,GACAjF,EAAAiF,EAAA,GACAk/F,EAAAjyB,EAAAjlF,MAAAgY,EAAA,GACAm/F,EAAAlyB,EAAAhwF,OAAA+iB,EAAA,GACA3jB,KAAA+hH,UAAApyG,EAAAivB,GACAikF,GAAA,IAAAC,GAAA,IACA9iH,KAAA2P,QAAAo5D,UAAA6nB,EAAA,KAAAA,EAAAjlF,OAAAilF,EAAAhwF,OAAAvB,KAAAw1B,MAAApW,GAAApf,KAAAw1B,MAAAnW,GAAArf,KAAAw1B,MAAAguF,GAAAxjH,KAAAw1B,MAAAiuF,IAEA9iH,KAAAgiH,WAAAryG,EAAAivB,GACAgkF,GACAjzG,EAAA2uF,UAEA,IAAA96C,EAAA8C,EAAA9C,QACAA,IAAAsM,WAAApO,EAAAnmC,MAAAioC,WACA9B,EAAAnmC,MAAAioC,WAEA,IAAAu/D,EAA8Bh0F,GAAiB/uB,KAAAqhH,iBAI/C,OAHA0B,IAAArhE,EAAAnmC,MAAAoI,YACA+9B,EAAAnmC,MAAAoI,UAAAo/F,GAEArhE,GAEA2gE,EAlH4B,CAmH1BpB,IC9IE+B,GAAyB,WAC7B,IAAA3yG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiDduyG,GAlBD,SAAApyG,GAKd,SAAAqyG,EAAAlqG,GACA,OAAAnI,EAAAxT,KAAA2C,KAAAgZ,IAAAhZ,KAUA,OAfIgjH,GAASE,EAAAryG,GAYbqyG,EAAApkH,UAAAsqD,eAAA,WACA,WAAmBg5D,GAAwBpiH,OAE3CkjH,EAhBc,CAiBZ9C,IC1Ca+C,GACf,UADeA,GAEf,yBCRIC,GAAyB,WAC7B,IAAA/yG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6Gd2yG,GAvDE,SAAAxyG,GAKjB,SAAAyyG,EAAAtqG,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAwsC,EAA0Bj0C,EAAM,GAAG0H,GAOnC,cANAusC,EAAA+9D,eACA/9D,EAAAg+D,wBACAxyG,EAAAH,EAAAxT,KAAA2C,KAAAwlD,IAAAxlD,MACAyjH,gBAAA7wG,IAAAqG,EAAAsqG,QAAAtqG,EAAAsqG,QAAA,GACAvyG,EAAA0yG,+BAAA9wG,IAAAqG,EAAAuqG,wBACAvqG,EAAAuqG,wBACAxyG,EAsCA,OApDIoyG,GAASE,EAAAzyG,GAsBbyyG,EAAAxkH,UAAA6kH,WAAA,WACA,OAAiC3jH,KAAAjC,IAAcolH,KAQ/CG,EAAAxkH,UAAA2kH,WAAA,SAAAF,GACAvjH,KAAA2I,IAAiBw6G,GAAYI,IAQ7BD,EAAAxkH,UAAA8kH,0BAAA,WACA,OAAkC5jH,KAAAjC,IAAcolH,KAQhDG,EAAAxkH,UAAA4kH,0BAAA,SAAAF,GACAxjH,KAAA2I,IAAiBw6G,GAAYK,IAE7BF,EArDiB,CAsDfpyD,IC5GE2yD,GAAyB,WAC7B,IAAAxzG,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2BzBozG,GAAuB,SAAAjzG,GAK3B,SAAAkzG,EAAAC,GACA,IAAAhzG,EAAAH,EAAAxT,KAAA2C,KAAAgkH,IAAAhkH,KAyCA,OApCAgR,EAAAizG,eAAA,EAKAjzG,EAAAkzG,gBAAA,KAKAlzG,EAAAmzG,iBAKAnzG,EAAAozG,cAAA,GAKApzG,EAAAqzG,WAAA,EAKArzG,EAAAszG,UrL6HA,CAAAt5G,SAAA,UqLxHAgG,EAAAuzG,cAAA,IAAkC7qC,GAAS,SAK3C1oE,EAAA+zF,WAAA,EACA/zF,EAiYA,OA/aI6yG,GAASE,EAAAlzG,GAqDbkzG,EAAAjlH,UAAA0lH,eAAA,SAAA5yE,GACA,IAAAoyE,EAAyEhkH,KAAA4gH,WACzEzZ,EAAAv1D,EAAAE,WACA0xE,EAAAQ,EAAAJ,4BACA,OAAAzc,GAA4Bv4D,GAASG,QACrCo4D,GAAyBv4D,GAASI,OAClCm4D,GAAyBv4D,GAASt5B,QAAAkuG,GASlCO,EAAAjlH,UAAA0mG,QAAA,SAAAvsD,EAAAn5C,EAAA0e,EAAAogB,GACA,IAAAmgB,EAAAngB,EAAAmgB,WACA3zB,EAAAwT,EAAAswB,UAAA9jC,WACA44F,EAAyEhkH,KAAA4gH,WAEzEhvE,EADAoyE,EAAAx3D,YACAg5C,QAAAvsD,EAAAn5C,EAAA0e,EAAAugC,EAAA3zB,GAcA,OAbAwmB,EAAAE,YAA+BlD,GAASt5B,QACxC0uG,EAAAJ,4BAIAI,EAAAL,aAAA,IAEA3jH,KAAAqkH,WAAA,GAJAzyE,EAAAyoD,SAA8BzrD,GAASG,SAOvC/uC,KAAAwkH,eAAA5yE,KACAA,IAAAsoD,kBAEAtoD,GAKAmyE,EAAAjlH,UAAA4hH,mBAAA,SAAAzK,EAAAl7D,EAAAnJ,GACA,QAAA5xC,KAAAwkH,eAAA5yE,IACA/gC,EAAA/R,UAAA4hH,mBAAArjH,KAAA2C,KAAAi2G,EAAAl7D,EAAAnJ,IAOAmyE,EAAAjlH,UAAA6yD,aAAA,SAAA/yB,EAAA0nB,GACA,UAUAy9D,EAAAjlH,UAAA0wD,YAAA,SAAA5wB,EAAA0nB,GACA,IAAA32C,EAAA3P,KAAA2P,QACAu/C,EAAAtwB,EAAAswB,UACA9jC,EAAA8jC,EAAA9jC,WACAknD,EAAApjB,EAAAruC,WACA6hG,EAAAxzD,EAAAtuC,OACAE,EAAAouC,EAAApuC,SACAi+B,EAAAngB,EAAAmgB,WACAilE,EAAyEhkH,KAAA4gH,WACzE6D,EAAAT,EAAAx3D,YACAk4D,EAAAD,EAAAxtG,cACAwR,EAAAg8F,EAAA/e,yBAAAt6E,GACA25E,OAAAnyF,IAAA6xG,EAAA1f,WAAA/kG,KAAA+kG,WAAA0f,EAAA1f,WACA9rD,EAAAxwB,EAAAwzD,kBAAA3J,EAAAyyB,GACA53C,EAAA1kC,EAAA4yB,cAAApC,GACA/6B,EAAA0gB,EAAA1gB,OACAooC,EAAApoC,SACAA,EAAqB8D,GAAe9D,EAAAooC,EAAApoC,SAEpC,IAAAomF,EAAAmgB,EAAA7e,kBAAA7mD,GAEApzC,EAAAtM,KAAAw1B,MAAA+J,EAAA7d,KAAA,GAAAujF,GACA1jG,EAAAvB,KAAAw1B,MAAA+J,EAAA7d,KAAA,GAAAujF,GACAxjF,IAEAnV,EAAA/K,EADAvB,KAAAw1B,MAAAx1B,KAAAK,KAAAiM,IAAA/K,OAGA,IAAA6d,EAAA0uC,EAAAxhD,EAAA,EAAA24F,EACA5lF,EAAAyuC,EAAAvsD,EAAA,EAAA0jG,EACAqgB,EAAA,CACAjC,EAAA,GAAAjkG,EACAikG,EAAA,GAAAhkG,EACAgkG,EAAA,GAAAjkG,EACAikG,EAAA,GAAAhkG,GAEA86D,EAAA/wD,EAAA2yD,0BAAAl9D,EAAA+6B,GAIA2rE,EAAA,GACAA,EAAA3rE,GAAA,GACA,IAAA4rE,EAAA7kH,KAAA2gH,uBAAA8D,EAAAr5F,EAAAw5F,GACAN,EAAAtkH,KAAAskH,UACAQ,EAAA9kH,KAAAukH,cACAvkH,KAAAqkH,WAAA,EACA,QAAAvkH,EAAA05E,EAAAj5E,KAAoCT,GAAA05E,EAAA/4E,OAAqBX,EACzD,QAAA0e,EAAAg7D,EAAAh5E,KAAwCge,GAAAg7D,EAAA94E,OAAqB8d,EAAA,CAC7D,IAAAozB,EAAA5xC,KAAAwlG,QAAAvsD,EAAAn5C,EAAA0e,EAAAogB,GACA,GAAA5+B,KAAAwkH,eAAA5yE,GAAA,CACA,IAAAs1D,EAA8B/2F,EAAMnQ,MACpC,GAAA4xC,EAAAE,YAA2ClD,GAASG,OAAA,CACpD61E,EAAA3rE,GAAArH,EAAA0nC,UAAApsE,YAAA0kC,EACA,IAAA2oD,EAAA3oD,EAAA2oD,aAAA2M,GACAlnG,KAAAqkH,YAAA9pB,IAAA,IAAAv6F,KAAAokH,cAAA/jH,QAAAuxC,KACA5xC,KAAAqkH,WAAA,GAGA,OAAAzyE,EAAA0oD,SAAA4M,EAAAtoE,EAAAqvB,MAEA,SAGA,IAAA82D,EAAAt8F,EAAAgzD,2BAAA7pC,EAAA0nC,UAAAwrC,EAAAR,GACAlf,GAAA,EACA2f,IACA3f,EAAAyf,EAAA5rE,EAAA,EAAA8rE,IAEA3f,GACA38E,EAAA4yD,gCAAAzpC,EAAA0nC,UAAAurC,EAAAC,EAAAR,GAIA,IAAA5iE,EAAA/xC,EAAA+xC,OACAsjE,EAAA73D,EAAAmlB,EAEQjkD,GAAgBruB,KAAAqhH,gBAAAziF,EAAA7d,KAAA,KAAA6d,EAAA7d,KAAA,OAAAujF,EAAA,EAAAA,EAAAxjF,GAAAnV,EAAA,GAAA/K,EAAA,GAChBguB,GAAW5uB,KAAAshH,uBAAAthH,KAAAqhH,iBAEXhzF,GAAgBruB,KAAAohH,eAAAz1G,EAAA,EAAA/K,EAAA,EAAAokH,IAAA,GAAAr5G,EAAA,GAAA/K,EAAA,GACxB8gD,EAAA/1C,UAAA+1C,EAAA9gD,WACA8gD,EAAA/1C,QACA+1C,EAAA9gD,UAGA+O,EAAAgzG,UAAA,IAAAh3G,EAAA/K,GAEA0lD,EAAApoC,QACAle,KAAA4hH,cAAAjyG,EAAAivB,EAAA0nB,EAAApoC,QAEAle,KAAA+hH,UAAApyG,EAAAivB,GACA5+B,KAAAokH,cAAArkH,OAAA,EAEA,IAAAklH,EAAArnH,OAAAmP,KAAA63G,GAAA33G,IAAAs9B,QACA06E,EAAAriH,KAAA,SAAAzD,EAAAyH,GACA,OAAAzH,IAAA85C,EACA,EAEAryC,IAAAqyC,GACA,EAGA95C,EAAAyH,EAAA,EAAAzH,EAAAyH,GAAA,MAGA,QAAA1J,EAAA,EAAA0U,EAAAqzG,EAAAllH,OAAuC7C,EAAA0U,IAAQ1U,EAAA,CAC/C,IAAAgoH,EAAAD,EAAA/nH,GACAioH,EAAAV,EAAA5e,iBAAAqf,EAAAnmE,EAAA3zB,GAEAg6F,EADA38F,EAAA4yB,cAAA6pE,GACA/3D,EACAk4D,EAAAF,EAAA,GAAAC,EAAAJ,EACAM,EAAAH,EAAA,GAAAC,EAAAJ,EACAO,EAAA98F,EAAA+zD,yBAAoEt8D,GAAUykG,GAAAO,GAC9EM,EAAA/8F,EAAA+yD,mBAAA+pC,GACAE,EAA2BvjH,GAAclC,KAAAohH,eAAA,CACzC9c,GAAAkhB,EAAA,GAAAb,EAAA,IAAAx3D,EACAm3C,GAAAqgB,EAAA,GAAAa,EAAA,IAAAr4D,IAEAu4D,EAAAphB,EAAAmgB,EAAApf,uBAAAj6E,GACAu6F,EAAAf,EAAAM,GACA,QAAAhgB,KAAAygB,EAAA,CACA,IACArsC,GADA1nC,EAAA+zE,EAAAzgB,IACA5rB,UAEAssC,EAAAH,EAAA,IAAAF,EAAA,GAAAjsC,EAAA,IAAA+rC,EACAQ,GAAAxmH,KAAAw1B,MAAA+wF,EAAAP,GACAS,GAAAL,EAAA,IAAAF,EAAA,GAAAjsC,EAAA,IAAAgsC,EACAS,GAAA1mH,KAAAw1B,MAAAixF,GAAAR,GAGA3nE,GAAAkoE,IAFA/lH,EAAAT,KAAAw1B,MAAA+wF,IAGAxmH,GAAA2mH,IAFAvnG,EAAAnf,KAAAw1B,MAAAixF,KAGA9lH,KAAAgmH,cAAAp0E,EAAAhT,EAAA9+B,EAAA0e,EAAAm/B,GAAAv+C,GAAAsmH,EAAAzsE,IAAAisE,GACAllH,KAAAokH,cAAAtjH,KAAA8wC,GACA5xC,KAAAimH,gBAAArnF,EAAA2wB,UAAAk1D,EAAA7yE,IAGA5xC,KAAAmkH,iBAAAO,EACA1kH,KAAAmhH,mBAAAh0D,EACAntD,KAAAikH,eAAAjkH,KAAAkkH,kBAAuDxkG,GAAM1f,KAAAkkH,gBAAAS,GAC7D3kH,KAAAkkH,gBAAAS,EACA3kH,KAAAkmH,kBAAAtnF,EAAA6lF,EAAAh8F,EAAAs2B,EAAA3zB,EAAAlN,EAAA+6B,EAAA+qE,EAAAL,cACA3jH,KAAAmmH,iBAAAvnF,EAAA6lF,GACAzkH,KAAAomH,oBAAAxnF,EAAA6lF,GACAzkH,KAAAgiH,WAAAryG,EAAAivB,GACA0nB,EAAApoC,QACAvO,EAAA2uF,UAEA,IAAA96C,GAAA8C,EAAA9C,QACAA,KAAAsM,WAAApO,EAAAnmC,MAAAioC,WACA9B,EAAAnmC,MAAAioC,YAEA,IAAAu/D,GAA8Bh0F,GAAiB/uB,KAAAqhH,iBAI/C,OAHA0B,KAAArhE,EAAAnmC,MAAAoI,YACA+9B,EAAAnmC,MAAAoI,UAAAo/F,IAEArhE,GAYAqiE,EAAAjlH,UAAAknH,cAAA,SAAAp0E,EAAAhT,EAAA9+B,EAAA0e,EAAAm/B,EAAAv+C,EAAAm9F,EAAAvC,GACA,IAAAhxB,EAAAhpE,KAAAqmH,aAAAz0E,GACA,GAAAo3B,EAAA,CAGA,IAAAk+B,EAAkB/2F,EAAMnQ,MACxBmpE,EAAA6wB,EAAApoD,EAAA0oD,SAAA4M,EAAAtoE,EAAAqvB,MAAA,EAEAw2D,EADyEzkH,KAAA4gH,WACzEp0D,YACA,IAAA2c,GAAAs7C,EAAAlf,UAAA3mE,EAAAswB,UAAA9jC,aACAprB,KAAA2P,QAAAgzG,UAAA7iH,EAAA0e,EAAAm/B,EAAAv+C,GAEA,IAAAknH,EAAAn9C,IAAAnpE,KAAA2P,QAAAy5D,YACAk9C,IACAtmH,KAAA2P,QAAAsuF,OACAj+F,KAAA2P,QAAAy5D,YAAAD,GAEAnpE,KAAA2P,QAAAo5D,UAAAC,EAAAuzB,IAAAvzB,EAAAr9D,MAAA,EAAA4wF,EAAAvzB,EAAApoE,OAAA,EAAA27F,EAAAz8F,EAAA0e,EAAAm/B,EAAAv+C,GACAknH,GACAtmH,KAAA2P,QAAA2uF,UAEA,IAAAn1B,EACAvqC,EAAA4c,SAAA,EAEAw+C,GACApoD,EAAA4oD,cAAA0M,KAMA6c,EAAAjlH,UAAAguE,SAAA,WACA,IAAAn9D,EAAA3P,KAAA2P,QACA,OAAAA,IAAA+xC,OAAA,MAQAqiE,EAAAjlH,UAAAunH,aAAA,SAAAz0E,GACA,OAA+D,EAAAk7B,YAO/Di3C,EAAAjlH,UAAAsnH,oBAAA,SAAAxnF,EAAA6lF,GACA,GAAAA,EAAAhiD,iBAAA,CAMA,IAAA8jD,EAAA,SAAA9B,EAAAx3G,EAAA2xB,GACA,IAAAquB,EAAoC98C,EAAMs0G,GAC1Cx3D,KAAAruB,EAAA2wB,WACAk1D,EAAArpB,YAAAx8D,EAAAswB,UAAA9jC,WAAAwT,EAAA2wB,UAAAtC,KAEavuD,KAAA,KAAA+lH,GACb7lF,EAAAuvB,oBAAArtD,KAC0E,KAS1EijH,EAAAjlH,UAAAmnH,gBAAA,SAAA12D,EAAAk1D,EAAA7yE,GAEA,IAAAqb,EAA4B98C,EAAMs0G,GAClCx3D,KAAAsC,IACAA,EAAAtC,GAAA,IAEAsC,EAAAtC,GAAArb,EAAAP,WAAA,GAQA0yE,EAAAjlH,UAAAqnH,iBAAA,SAAAvnF,EAAA6lF,GACA,IAAAx3D,EAA4B98C,EAAMs0G,GAClC1jG,EAAA,EACAksC,KAAAruB,EAAA2wB,YACAxuC,GAAAnjB,OAAAmP,KAAA6xB,EAAA2wB,UAAAtC,IAAAltD,QAEAktD,KAAAruB,EAAAwuB,cACArsC,GAAAnjB,OAAAmP,KAAA6xB,EAAAwuB,YAAAH,IAAAltD,QAEA,IAAA6kG,EAAA6f,EAAA7f,UACAA,EAAAx/B,cAAArkD,IACA6jF,EAAAx/B,cAAArkD,IAqBAgjG,EAAAjlH,UAAAonH,kBAAA,SAAAtnF,EAAA6lF,EAAAh8F,EAAAs2B,EAAA3zB,EAAAlN,EAAAgnG,EAAA3B,EAAAiD,GACA,IAAAv5D,EAA4B98C,EAAMs0G,GAClCx3D,KAAAruB,EAAAwuB,cACAxuB,EAAAwuB,YAAAH,GAAA,IAEA,IAGArb,EAAA4nC,EAAArsB,EAAArtD,EAAA0e,EAAAy6B,EAHAmU,EAAAxuB,EAAAwuB,YAAAH,GACAY,EAAAjvB,EAAAivB,UAGA,IAAA5U,EAFAxwB,EAAA61B,aAEyBrF,GAAAisE,IAAejsE,EAGxC,IAFAugC,EAAA/wD,EAAA2yD,0BAAAl9D,EAAA+6B,EAAAugC,GACArsB,EAAA1kC,EAAA4yB,cAAApC,GACAn5C,EAAA05E,EAAAj5E,KAAoCT,GAAA05E,EAAA/4E,OAAqBX,EACzD,IAAA0e,EAAAg7D,EAAAh5E,KAAwCge,GAAAg7D,EAAA94E,OAAqB8d,EAC7D0mG,EAAAjsE,GAAAsqE,IACA3xE,EAAA6yE,EAAAjf,QAAAvsD,EAAAn5C,EAAA0e,EAAAugC,EAAA3zB,IACA0mB,YAA+ClD,GAASC,OACxDue,EAAAxb,EAAAP,WAAA,EACAwc,EAAArd,YAAAoB,EAAAP,WACAwc,EAAA7d,QAAA,CAAA4B,EAAAqb,EACAxkC,EAAAozD,mBAAAjqC,EAAA0nC,WAAAnsB,UAGAv6C,IAAA4zG,GACAA,EAAA50E,IAIA6yE,EAAAte,QAAAltD,EAAAn5C,EAAA0e,EAAA4M,IAMA24F,EAhb2B,CAibzB9C,IAKF6C,GAAuBhlH,UAAA8hH,SACR,IAAA6F,GAAA,GCldXC,GAAyB,WAC7B,IAAAr2G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiDdi2G,GAlBF,SAAA91G,GAKb,SAAA+1G,EAAA5tG,GACA,OAAAnI,EAAAxT,KAAA2C,KAAAgZ,IAAAhZ,KAUA,OAfI0mH,GAASE,EAAA/1G,GAYb+1G,EAAA9nH,UAAAsqD,eAAA,WACA,WAAmBq9D,GAAuBzmH,OAE1C4mH,EAhBa,CAiBXvD,IChDEwD,GAAyB,WAC7B,IAAAx2G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoD7Bo2G,GAMA,mBANAA,GAYA,kBAMAC,GAAA,CACAC,MAAA,QACAC,MAAA,SAOAC,GAAA,SAAAr2G,GAOA,SAAAq2G,EAAA9jH,EAAAw7B,EAAA39B,GACA,IAAA+P,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAoBA,OAdAgR,EAAAkN,OAAA0gB,EAAA1gB,OAMAlN,EAAA6P,WAAA+d,EAAAswB,UAAAruC,WAAA+d,EAAAmgB,WAOA/tC,EAAA/P,OACA+P,EAEA,OA7BI61G,GAASK,EAAAr2G,GA6Bbq2G,EA9BA,CA+BE7yG,GA8BE8yG,GAAY,SAAAt2G,GAKhB,SAAAu2G,EAAAnuG,GACA,IAoSAwsC,EApSAz0C,EAAAH,EAAAxT,KAAA2C,KAAA,CACAorB,WAAA,QACSprB,KAKTgR,EAAAq2G,QAAA,KAKAr2G,EAAAs2G,oBAAA10G,IAAAqG,EAAAsuG,cACAtuG,EAAAsuG,cAAAR,GAAAC,MAKAh2G,EAAAw2G,cAAA50G,IAAAqG,EAAArL,QAAAqL,EAAArL,QAAA,EAKAoD,EAAAy2G,QAuRA,SAAAnrB,GAGA,IAFA,IAAAp4F,EAAAo4F,EAAAv8F,OACA0lD,EAAA,IAAAr5C,MAAAlI,GACAhH,EAAA,EAAmBA,EAAAgH,IAAShH,EAC5BuoD,EAAAvoD,GAAAwqH,GAAAprB,EAAAp/F,IAEA,OAAAuoD,EA7RAkiE,CAAA1uG,EAAAqjF,SACA,QAAAp/F,EAAA,EAAA0U,EAAAZ,EAAAy2G,QAAA1nH,OAAkD7C,EAAA0U,IAAQ1U,EAC9CiW,EAAMnC,EAAAy2G,QAAAvqH,GAAmBkY,EAASC,OAAArE,EAAAgG,QAAAhG,GAoE9C,OA9DAA,EAAAw4C,WAAA,IAA+BvY,GAAS,WACxC,UACSjgC,EAAAgG,QAAAtY,KAAAsS,IAMTA,EAAA42G,qBAMA52G,EAAA62G,qBAAA,KAKA72G,EAAAmqG,kBAKAnqG,EAAA+2C,YAAA,CACAvM,SAAA,EACAmR,2B1K7KA,c0K8KAzuC,OAAA,KACAmvC,MAAA,KACA99C,MAAA,EACAg9C,kBAuOA9G,EAvOAz0C,EAAAy2G,QAwOAhiE,EAAAx4C,IAAA,SAAAg3C,GACA,OAAAA,EAAAF,mBAxOAhF,WAAA,EACAqN,2B1KnLA,c0KoLA+B,oBAAA,GACAptC,KAAA,MACAuuC,mBAAA,GACAzB,UAAA78C,EAAAw4C,WACAyE,KAAA/vB,KAAAC,MACAoxB,UAAA,GACAL,UAA6D,CAC7DpuC,SAAA,GAEAitC,UAAA,GACAX,YAAA,GACAiC,eAAA,IAEAr+C,EAAA+yF,gBAAA,SAAAnlE,GAEA,IADA,IAAA60B,EAAA,GACAlkD,EAAA,EAAAu4G,EAAA7uG,EAAAqjF,QAAAv8F,OAA8DwP,EAAAu4G,IAAcv4G,EAAA,CAC5E,IAAAw4G,EAAA9uG,EAAAqjF,QAAA/sF,GAEAgkD,GADAw0D,aAAsDxkB,GAAMwkB,IAAAv7D,aAC5DgH,kBACA,sBAAAD,EAAA,CACA,IAAAy0D,EAAAz0D,EAAA30B,GACA60B,EAAA3yD,KAAAoB,MAAAuxD,EAAAu0D,IAGA,WAAAv0D,EAAA1zD,OAAA0zD,EAAA,YAEA7gD,IAAAqG,EAAA3N,WACA0F,EAAAi3G,aAAAhvG,EAAA3N,UAAA2N,EAAAjM,KAEAgE,EAkJA,OApPI61G,GAASO,EAAAv2G,GA2Gbu2G,EAAAtoH,UAAAmpH,aAAA,SAAA38G,EAAA48G,GACAloH,KAAAqnH,QAAA,IAA2Br6G,GAAA,UAAS,CACpC1B,YACAS,SAAA/L,KAAAsnH,iBAAAP,GAAAE,MACA14G,MAAA,EACAvB,IAAAk7G,EACAt6G,QAAA5N,KAAAwnH,WAEAxnH,KAAAgX,WAUAowG,EAAAtoH,UAAAqpH,kBAAA,SAAAjqG,EAAA2C,EAAAuK,GACA,IAAAwT,EAAiFrtB,EAAM,GAAGvR,KAAA+nD,aAC1FnpB,EAAAswB,UAA0E39C,EAAM,GAAGqtB,EAAAswB,WACnF,IAAAtuC,EAAqBJ,GAAStC,GAC9B0gB,EAAA1gB,SAAA1c,QACAo9B,EAAAyuB,MAAAzsC,EACAge,EAAA7d,KAAA,GAAA1hB,KAAAw1B,MAAwCvU,GAAQpC,GAAA2C,GAChD+d,EAAA7d,KAAA,GAAA1hB,KAAAw1B,MAAwCtU,GAASrC,GAAA2C,GACjD+d,EAAAqvB,KAAAjjD,IACA,IAAAkkD,EAAAtwB,EAAAswB,UAIA,OAHAA,EAAAtuC,SACAsuC,EAAA9jC,aACA8jC,EAAAruC,aACA+d,GAOAwoF,EAAAtoH,UAAAspH,iBAAA,WAGA,IAFA,IAAAC,GAAA,EAEAnrH,EAAA,EAAA0U,EAAA5R,KAAAynH,QAAA1nH,OAAiD7C,EAAA0U,IAAQ1U,EAEzD,GADA8C,KAAAynH,QAAAvqH,GAAAsvD,YACA1a,aAAsCkT,GAAWE,MAAA,CACjDmjE,GAAA,EACA,MAGA,OAAAA,GAKAjB,EAAAtoH,UAAAguE,SAAA,SAAA5uD,EAAA2C,EAAAk+B,EAAA3zB,GACA,IAAAprB,KAAAooH,mBACA,YAEA,IAAAxpF,EAAA5+B,KAAAmoH,kBAAAjqG,EAAA2C,EAAAuK,GAGA,GAFAprB,KAAA4nH,qBAAAhpF,EAEA5+B,KAAA6nH,qBAAA,CACA,IAAA1G,EAAAnhH,KAAA6nH,qBAAAxsE,gBACAmnE,EAAAxiH,KAAA6nH,qBAAA7/F,YACAnH,IAAAsgG,GAAsDzhG,GAAMxB,EAAAskG,KAC5DxiH,KAAA6nH,qBAAA,MAUA,OAPA7nH,KAAA6nH,sBAAA7nH,KAAAiX,gBAAAjX,KAAAm7G,mBACAn7G,KAAAsoH,kBAEA1pF,EAAAivB,UAAA5b,cAAA,OACArT,EAAA4c,SACA2B,sBAAAn9C,KAAAgX,QAAAtY,KAAAsB,OAEAA,KAAA6nH,sBAMAT,EAAAtoH,UAAAwpH,gBAAA,WAIA,IAHA,IAAA1pF,EAAA5+B,KAAA4nH,qBACA1jH,EAAAlE,KAAAynH,QAAA1nH,OACAwoH,EAAA,IAAAn8G,MAAAlI,GACAhH,EAAA,EAAuBA,EAAAgH,IAAShH,EAAA,CAChC,IAAA6S,EAAAsiF,GAAAryF,KAAAynH,QAAAvqH,GAAA0hC,IAAA2tB,iBAAArvD,IACA,IAAA6S,EAIA,OAHAw4G,EAAArrH,GAAA6S,EAMA,IAAA9O,EAAA,GACAjB,KAAA+U,cAAA,IAAAmyG,GAAAJ,GAAAloF,EAAA39B,IACAjB,KAAAqnH,QAAA14G,QAAA45G,EAAAtnH,EAAAjB,KAAAwoH,kBAAA9pH,KAAAsB,KAAA4+B,KAUAwoF,EAAAtoH,UAAA0pH,kBAAA,SAAA5pF,EAAA8tE,EAAA9gG,EAAA3K,GACA,IAAAyrG,GAAA9gG,EAAA,CAIA,IAAAsS,EAAA0gB,EAAA1gB,OACA2C,EAAA+d,EAAAswB,UAAAruC,WACA,GAAAA,IAAA7gB,KAAA4nH,qBAAA14D,UAAAruC,YACanB,GAAMxB,EAAAle,KAAA4nH,qBAAA1pG,QADnB,CAIA,IAAAvO,EACA,GAAA3P,KAAA6nH,qBACAl4G,EAAA3P,KAAA6nH,qBAAA/6C,WAAAh9D,WAAA,WAKAH,EAAsB4xC,GAFtBliD,KAAAw1B,MAAmCvU,GAAQpC,GAAA2C,GAC3CxhB,KAAAw1B,MAAoCtU,GAASrC,GAAA2C,IAE7C7gB,KAAA6nH,qBAAA,IAA4C1L,GAAWj+F,EAAA2C,EAAA,EAAAlR,EAAA+xC,QAEvD/xC,EAAAijF,aAAAhnF,EAAA,KACA5L,KAAAgX,UACAhX,KAAAm7G,kBAAAn7G,KAAAiX,cACAjX,KAAA+U,cAAA,IAAAmyG,GAAAJ,GAAAloF,EAAA39B,OAKAmmH,EAAAtoH,UAAAy7G,iBAAA,WACA,aAEA6M,EArPgB,CAsPdlN,IAMFuO,GAAA,KAQA,SAAAp2B,GAAApuC,EAAArlB,EAAA0nB,GACA,IAAA8c,EAAAnf,EAAA2I,cACA,IAAAwW,EACA,UAAAv8D,MAAA,2BAAAo9C,GAEA,IAAAmf,EAAAzR,aAAA/yB,EAAA0nB,GACA,YAEA,IAAA36C,EAAAizB,EAAA7d,KAAA,GACAngB,EAAAg+B,EAAA7d,KAAA,GACAnI,EAAAwqD,EAAA5T,YAAA5wB,EAAA0nB,GACA,KAAA1tC,aAAA6uE,mBACA,UAAA5gF,MAAA,iCAAA+R,GAEA,GAAAA,EAAAjN,WAAAiN,EAAAhY,WAEA,OADAgY,EAAA9I,WAAA,MACAuiF,aAAA,IAAA1mF,EAAA/K,GAEA,GAAA6nH,GAGA,CACA,IAAA/mE,EAAA+mE,GAAA/mE,OACAA,EAAA/1C,WAAA+1C,EAAA9gD,WACA6nH,GAA4BlnE,GAAqB51C,EAAA/K,GAGjD6nH,GAAA9F,UAAA,IAAAh3G,EAAA/K,QARA6nH,GAAwBlnE,GAAqB51C,EAAA/K,GAY7C,OADA6nH,GAAA1/C,UAAAnwD,EAAA,IAAAjN,EAAA/K,GACA6nH,GAAAp2B,aAAA,IAAA1mF,EAAA/K,GA8BA,SAAA8mH,GAAAgB,GAEA,IAAAzkE,EAYA,OAXAykE,aAAiCnlB,GACjCmlB,aAAqCriB,GACrCpiD,EAAA,IAAwB0iE,GAAS,CAAEr5G,OAAAo7G,IAEnCA,aAA0CxO,KAC1Cj2D,EAAA,IAAwBg/D,GAAU,CAAE31G,OAAAo7G,KAIpCzkE,EAAAykE,EAEAzkE,EAEe,IAAA0kE,GAAA,GC1dXC,GAAyB,WAC7B,IAAAv4G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAmB7Bm4G,GAAA,CACA,4IAGI7I,IAKJ8I,GAAA,CACAC,QAAA,CACAtsG,UAAA,MACA2nF,QAAA,GAEA4kB,qBAAA,CACAvsG,UAAA,MACA2nF,QAAA,GAEA6kB,iBAAA,CACAxsG,UAAA,MACA2nF,QAAA,GAEA8kB,gBAAA,CACAzsG,UAAA,MACA2nF,QAAA,GAEA+kB,mBAAA,CACA1sG,UAAA,MACA2nF,QAAA,GAEAglB,MAAA,CACA3sG,UAAA,MACA2nF,QAAA,GAEAilB,eAAA,CACA5sG,UAAA,MACA2nF,QAAA,GAEAklB,eAAA,CACA7sG,UAAA,MACA2nF,QAAA,GAEAmlB,cAAA,CACA9sG,UAAA,MACA2nF,QAAA,GAEAolB,aAAA,CACA/sG,UAAA,MACA2nF,QAAA,GAEAqlB,WAAA,CACAhtG,UAAA,MACA2nF,QAAA,IAMAslB,GAAA,CACAX,QAAA,CACAtwE,QAAA,EACAC,QAAA,IAEA0wE,MAAA,CACA3wE,QAAA,EACAC,QAAA,IAEA+wE,WAAA,CACAhxE,QAAA,EACAC,QAAA,KA2DeixE,GA/Bf,SAAA94G,GAKA,SAAA+4G,EAAA3wG,GACA,IACA/b,EAAA+b,EAAAgrC,MAAA5jD,QAAA,KACAwpH,GAAA,GAAA3sH,EAAA+b,EAAAgrC,MAAAhrC,EAAAgrC,MAAAziD,MAAA,EAAAtE,GACA4sH,EAAAJ,GAAAG,GACAE,EAAAjB,GAAA7vG,EAAAgrC,OACA4zB,OAAAjlE,IAAAqG,EAAA4+D,IAAA5+D,EAAA4+D,IACA,+CAAuC5+D,EAAAgrC,MACvC,gBAA6B8lE,EAAAttG,UAc7B,OAbA5L,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAo1D,GACAnnD,UAAAzoD,EAAAyoD,UACAmB,YAAA,YACAnqB,QAAA9lC,MAAAqG,EAAAy/B,QAAAz/B,EAAAy/B,QAAAoxE,EAAApxE,QACAD,QAAA7lC,MAAAqG,EAAAw/B,QAAAx/B,EAAAw/B,QAAAqxE,EAAArxE,QACA2rD,OAAA2lB,EAAA3lB,OACA2D,2BAAA9uF,EAAA8uF,2BACAlN,iBAAA5hF,EAAA4hF,iBACAb,WAAA/gF,EAAA+gF,WACAniB,MACAgsB,MAAA5qF,EAAA4qF,SACS7jG,KAGT,OA5BI4oH,GAASgB,EAAA/4G,GA4Bb+4G,EA7BA,CA8BEve,IClJE2e,GAAyB,WAC7B,IAAA35G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqL7B,SAASu5G,GAAe3wC,EAAAv6B,EAAA3zB,GACxB,IAAA3C,EAAAzoB,KAAAylG,cAIA,GAHAh9E,IACAA,EAAAzoB,KAAA0lG,yBAAAt6E,MAEA3C,EAAAi2B,iBAAA3+C,QAAAu5E,EAAA,KAGA,IAAA4wC,EAAAzhG,EAAA+yD,mBAAAlC,EAAAt5E,KAAAmqH,YACArvC,EAAmBr0B,GAAMh+B,EAAAkzD,YAAArC,EAAA,IAAAt5E,KAAA6kG,SACzB,GAAA9lD,IACA+7B,EAAmBt0B,GAASs0B,EAAA/7B,EAAA/+C,KAAA6kG,UAG5B,IAAA+Y,EAAA,CACAtC,EAAA,QACAC,OAAA,QACAC,aAAA,GAGA,OADIjqG,EAAMqsG,EAAA59G,KAAAk7G,SACVl7G,KAAA47G,eAAAtiC,EAAAwB,EAAAovC,EAAAnrE,EAAA3zB,EAAAwyF,IAEe,IAAAwM,GAzIG,SAAAv5G,GAKlB,SAAAw5G,EAAArxG,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAwD,GA0BxD,OAzBAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAiO,UAAAzoD,EAAAyoD,UACAmB,YAAA5pD,EAAA4pD,YACAz3C,WAAAnS,EAAAmS,WACA28E,2BAAA9uF,EAAA8uF,2BACAt/E,SAAAxP,EAAAwP,SACAoyE,iBAAA5hF,EAAA4hF,iBACA8L,gBAA6BsjB,GAC7BpyC,IAAA5+D,EAAA4+D,IACAihB,KAAA7/E,EAAA6/E,KACA+K,WAAAjxF,IAAAqG,EAAA4qF,OAAA5qF,EAAA4qF,MACA7J,WAAA/gF,EAAA+gF,cACSh6F,MAKTk7G,QAAAjiG,EAAA0hG,QAAA,GAKA3pG,EAAAm5G,WzLwFA,CAAAn/G,SAAA,UyLvFAgG,EAAAs0F,OAAAt0F,EAAAs5G,oBACAt5G,EAyEA,OAzGIg5G,GAASK,EAAAx5G,GAsCbw5G,EAAAvrH,UAAAwrH,iBAAA,WACA,IAAAptH,EAAA,EACAo9E,EAAA,GACA,QAAA77E,KAAAuB,KAAAk7G,QACA5gC,EAAAp9E,KAAAuB,EAAA,IAAAuB,KAAAk7G,QAAAz8G,GAEA,OAAA67E,EAAAtrD,KAAA,MAQAq7F,EAAAvrH,UAAAu8G,UAAA,WACA,OAAAr7G,KAAAk7G,SAYAmP,EAAAvrH,UAAA88G,eAAA,SAAAtiC,EAAAwB,EAAAovC,EAAAnrE,EAAA3zB,EAAAuvF,GACA,IAAA7hB,EAAA94F,KAAA84F,KACA,GAAAA,EAAA,CAIA,IAMAjhB,EANAikC,EAAA1wF,EAAArD,UAAA7W,MAAA,KAAArQ,MAOA,GANA85G,EAAA,KAAA7/B,EAAA,OAAAA,EAAA,GACA6/B,EAAA,KAAAuP,EAAAl7F,KAAA,KACA2rF,EAAA,OAAAmB,EACAnB,EAAA,QAAAmB,EACAnB,EAAA,IAAAt7G,KAAAw1B,MAAA8lF,EAAA,IAAAA,EAAA,IAAA57D,EAAA,GAAAA,GAEA,GAAA+5C,EAAA/4F,OACA83E,EAAAihB,EAAA,QAIAjhB,EAAAihB,EADwBh0E,GAAOi1D,GAAaT,GAAAwf,EAAA/4F,SAM5C,OAAe06G,GAHf5iC,EACA9hC,QAAA,oCACAA,QAAA,6CAC2B4kE,KAK3B0P,EAAAvrH,UAAA8mG,kBAAA,SAAA7mD,GACA,OAAiC,GAOjCsrE,EAAAvrH,UAAAm9G,aAAA,SAAAtB,GACQppG,EAAMvR,KAAAk7G,QAAAP,GACd36G,KAAAslG,OAAAtlG,KAAAsqH,qBAEAD,EA1GkB,CA2GhB5iB,IC7KE8iB,GAAyB,WAC7B,IAAAl6G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAmBzB85G,GAAW,SAAA35G,GAOf,SAAA45G,EAAAnxC,EAAAwB,EAAAvT,GACA,IAAAv2D,EAAAH,EAAAxT,KAAA2C,KAAAs5E,EAAiD1qC,GAASG,SAAA/uC,KAgB1D,OAXAgR,EAAA6pE,UAAAC,EAKA9pE,EAAA45D,MAAArD,EAKAv2D,EAAAs3E,QAAA,KACAt3E,EA+BA,OAtDIu5G,GAASE,EAAA55G,GA6Bb45G,EAAA3rH,UAAAguE,SAAA,WACA,GAAA9sE,KAAAsoF,QACA,OAAAtoF,KAAAsoF,QAGA,IAAAxN,EAAA96E,KAAA66E,UACAlrE,EAA0B4xC,GAAqBu5B,EAAA,GAAAA,EAAA,IAY/C,OAXAnrE,EAAA+0D,YAAA,OACA/0D,EAAA+6G,WAAA,MAAA5vC,EAAA,MAAAA,EAAA,OACAnrE,EAAA80D,UAAA,OACA90D,EAAA+0D,YAAA,QACA/0D,EAAA8+D,UAAA,SACA9+D,EAAA++D,aAAA,SACA/+D,EAAAkhD,KAAA,kBACAlhD,EAAA0+D,UAAA,EACA1+D,EAAAm8D,WAAA9rE,KAAA4qE,MAAAkQ,EAAA,KAAAA,EAAA,KAAAA,EAAA,IACAnrE,EAAAo8D,SAAA/rE,KAAA4qE,MAAAkQ,EAAA,KAAAA,EAAA,KAAAA,EAAA,IACA96E,KAAAsoF,QAAA34E,EAAA+xC,OACA/xC,EAAA+xC,QAMA+oE,EAAA3rH,UAAAuC,KAAA,aACAopH,EAvDe,CAwDb7wB,IA6Da+wB,GA7CF,SAAA95G,GAKb,SAAA+5G,EAAA5xG,GACA,IAIAC,EAAAD,GAAA,GAOA,OANAnI,EAAAxT,KAAA2C,KAAA,CACAokG,QAAA,EACAh5E,WAAAnS,EAAAmS,WACA3C,SAAAxP,EAAAwP,SACAo7E,WAAAjxF,IAAAqG,EAAA4qF,OAAA5qF,EAAA4qF,SACS7jG,KA2BT,OA1CIuqH,GAASK,EAAA/5G,GAqBb+5G,EAAA9rH,UAAA0mG,QAAA,SAAAvsD,EAAAn5C,EAAA0e,GACA,IAAA0mF,EAA2BrrB,GAAS5gC,EAAAn5C,EAAA0e,GACpC,GAAAxe,KAAA4kG,UAAAn/B,YAAAy/B,GACA,OAA2CllG,KAAA4kG,UAAA7mG,IAAAmnG,GAG3C,IAAApqB,EAA2Br0B,GAAMzmD,KAAAyoB,SAAAkzD,YAAA1iC,IACjCqgC,EAAA,CAAArgC,EAAAn5C,EAAA0e,GACAqsG,EAAA7qH,KAAA8lG,+BAAAxsB,GACA/R,OAAA,EAEAA,EADAsjD,EACA,KAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,GAGA,OAEA,IAAAj5E,EAAA,IAA2B44E,GAAWlxC,EAAAwB,EAAAvT,GAEtC,OADAvnE,KAAA4kG,UAAAj8F,IAAAu8F,EAAAtzD,GACAA,GAGAg5E,EA3Ca,CA4CXvf,ICtIEyf,GAAyB,WAC7B,IAAAz6G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqMdq6G,GA9HH,SAAAl6G,GAKZ,SAAAm6G,EAAA/xG,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAiO,UAAAzoD,EAAAyoD,UACAmB,YAAA5pD,EAAA4pD,YACAz3C,WAAwBE,GAAa,aACrCy8E,2BAAA9uF,EAAA8uF,2BACAl2D,MAAmBmT,GAAWlW,QAC9B+rD,iBAAA5hF,EAAA4hF,iBACAgJ,WAAAjxF,IAAAqG,EAAA4qF,OAAA5qF,EAAA4qF,MACA7J,WAAA/gF,EAAA+gF,cACSh6F,KAWT,GANAgR,EAAAi6G,UAAA,KAKAj6G,EAAA6pE,UAAA5hE,EAAA6hE,SACA7hE,EAAA4+D,IACA,GAAA5+D,EAAAkgF,MACgBA,GAAYlgF,EAAA4+D,IAAA7mE,EAAAk6G,uBAAAxsH,KAAAsS,KAAAm6G,oBAAAzsH,KAAAsS,QAE5B,CACA,IAAAs7F,EAAA,IAAAp0B,eACAo0B,EAAA3+F,iBAAA,OAAAqD,EAAAo6G,WAAA1sH,KAAAsS,IACAs7F,EAAA3+F,iBAAA,QAAAqD,EAAAq6G,YAAA3sH,KAAAsS,IACAs7F,EAAAn0B,KAAA,MAAAl/D,EAAA4+D,KACAy0B,EAAAvzB,YAGA9/D,EAAAqyG,SACAt6G,EAAAk6G,uBAAAjyG,EAAAqyG,UAGYpxG,GAAM,MAElB,OAAAlJ,EA+EA,OA3HI85G,GAASE,EAAAn6G,GAkDbm6G,EAAAlsH,UAAAssH,WAAA,SAAA57G,GACA,IAAA88F,EAA+C98F,EAAA,OAE/C,IAAA88F,EAAAh0B,QAAAg0B,EAAAh0B,QAAA,KAAAg0B,EAAAh0B,OAAA,KACA,IAAAqxB,OAAA,EACA,IACAA,EAA+ClyB,KAAAyH,MAAAotB,EAAA/zB,cAE/C,MAAAm0B,GAEA,YADA1sG,KAAAmrH,sBAGAnrH,KAAAkrH,uBAAAvhB,QAGA3pG,KAAAmrH,uBAOAH,EAAAlsH,UAAAusH,YAAA,SAAA77G,GACAxP,KAAAmrH,uBAMAH,EAAAlsH,UAAAysH,YAAA,WACA,OAAAvrH,KAAAirH,WAMAD,EAAAlsH,UAAAosH,uBAAA,SAAAI,GACA,IAEAptG,EAFAstG,EAAiClgG,GAAa,aAC9CuB,EAAA7sB,KAAA47B,gBAEA,QAAAhpB,IAAA04G,EAAA,QACA,IAAA3nG,EAA4BgI,GAA2B6/F,EAAA3+F,GACvD3O,EAAqBoE,GAAcgpG,EAAA,OAAA3nG,GAEnC,IAAA80B,EAAA6yE,EAAA,WACA5yE,EAAA4yE,EAAA,YACA7iG,EAAuBq0D,GAAS,CAChC5+D,OAAoBo/D,GAAoBzwD,GACxC6rB,UACAD,UACAqiC,SAAA96E,KAAA66E,YAIA,GAFA76E,KAAAyoB,WACAzoB,KAAA2mG,gBAA+BnO,GAAmB8yB,EAAA,MAAA7iG,QAClD7V,IAAA04G,EAAA,cAAAtrH,KAAAwzD,kBAAA,CACA,IAAAi4D,OAAA74G,IAAAsL,EACAA,EAAAstG,EAAAxjG,YACAhoB,KAAA+jG,gBAAA,SAAAnlE,GACA,OAAoB1c,GAAUupG,EAAA7sF,EAAA1gB,QAC9B,CAAAotG,EAAA,aAEA,OAGAtrH,KAAAirH,UAAAK,EACAtrH,KAAAq6F,SAAsBr1C,GAAWE,QAKjC8lE,EAAAlsH,UAAAqsH,oBAAA,WACAnrH,KAAAq6F,SAAsBr1C,GAAW1vC,QAEjC01G,EA5HY,CA6HVvjB,ICrMEikB,GAAyB,WAC7B,IAAAr7G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiU7B,SAASi7G,GAAeryC,EAAAv6B,EAAA3zB,GACxB,IAAA3C,EAAAzoB,KAAAylG,cAIA,GAHAh9E,IACAA,EAAAzoB,KAAA0lG,yBAAAt6E,MAEA3C,EAAAi2B,iBAAA3+C,QAAAu5E,EAAA,KAGA,GAAAv6B,GAAA/+C,KAAAipG,aAAAr2F,IAAA5S,KAAAs/G,cACAvgE,EAAA,GAEA,IAAAoO,EAAA1kC,EAAA4yB,cAAAi+B,EAAA,IACA4wC,EAAAzhG,EAAA+yD,mBAAAlC,EAAAt5E,KAAAmqH,YACArvC,EAAmBr0B,GAAMh+B,EAAAkzD,YAAArC,EAAA,IAAAt5E,KAAA6kG,SACzBtI,EAAAv8F,KAAAiiG,QACA,IAAA1F,IACAzhB,EAAmBv0B,GAAUu0B,EAAAyhB,EAAAv8F,KAAA6kG,SAC7BqlB,EAAqB7rG,GAAM6rG,EAAA/8D,EAAAovC,EAAA2tB,IAE3B,GAAAnrE,IACA+7B,EAAmBt0B,GAASs0B,EAAA/7B,EAAA/+C,KAAA6kG,UAE5B,IAAA+Y,EAAA,CACA8B,QAAA,MACApvG,QAAmBwuG,GACnBa,QAAA,SACApE,OAAA,YACAC,aAAA,GAGA,OADIjqG,EAAMqsG,EAAA59G,KAAAk7G,SACVl7G,KAAA47G,eAAAtiC,EAAAwB,EAAAovC,EAAAnrE,EAAA3zB,EAAAwyF,IAEe,IAAAgO,GA/QJ,SAAA/6G,GAKX,SAAAg7G,EAAA7yG,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAwD,GACxD2hG,EAAA1hG,EAAA0hG,QAAA,GACAmR,IAAA,gBAAAnR,MAAA,YAiDA,OAhDA3pG,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAiO,UAAAzoD,EAAAyoD,UACAmB,YAAA5pD,EAAA4pD,YACAuhC,QAAA0nB,EACA1gG,WAAAnS,EAAAmS,WACA28E,2BAAA9uF,EAAA8uF,2BACAJ,UAAA1uF,EAAA0uF,UACAl/E,SAAAxP,EAAAwP,SACAoyE,iBAAA5hF,EAAA4hF,iBACA8L,gBAA6BglB,GAC7B9zC,IAAA5+D,EAAA4+D,IACAihB,KAAA7/E,EAAA6/E,KACA+K,WAAAjxF,IAAAqG,EAAA4qF,OAAA5qF,EAAA4qF,MACA7J,WAAA/gF,EAAA+gF,cACSh6F,MAKTiiG,aAAArvF,IAAAqG,EAAAsjF,OAAAtjF,EAAAsjF,OAAA,EAKAvrF,EAAAkqG,QAAAP,EAKA3pG,EAAAouG,MAAA,EAKApuG,EAAAsuG,YAAsFrmG,EAAA,WAKtFjI,EAAAi4F,YAAAr2F,IAAAqG,EAAA+vF,OAAA/vF,EAAA+vF,MAKAh4F,EAAAm5G,W5LgDA,CAAAn/G,SAAA,U4L/CAgG,EAAAquG,aACAruG,EAAAs0F,OAAAt0F,EAAAs5G,oBACAt5G,EA4KA,OArOI06G,GAASG,EAAAh7G,GAyEbg7G,EAAA/sH,UAAAygH,qBAAA,SAAA3gG,EAAAiC,EAAAuK,EAAAuvF,GACA,IAAA6E,EAA4Bl0F,GAAaF,GACzCq0F,EAAAz/G,KAAA47B,gBACAnT,EAAAzoB,KAAAylG,cACAh9E,IACAA,EAAAzoB,KAAA0lG,yBAAA8Z,IAEA,IAAAlmC,EAAA7wD,EAAAqzD,kCAAAl9D,EAAAiC,GACA,KAAA4H,EAAAi2B,iBAAA3+C,QAAAu5E,EAAA,KAGA,IAAAnsB,EAAA1kC,EAAA4yB,cAAAi+B,EAAA,IACA4wC,EAAAzhG,EAAA+yD,mBAAAlC,EAAAt5E,KAAAmqH,YACArvC,EAAuBr0B,GAAMh+B,EAAAkzD,YAAArC,EAAA,IAAAt5E,KAAA6kG,SAC7BtI,EAAAv8F,KAAAiiG,QACA,IAAA1F,IACAzhB,EAAuBv0B,GAAUu0B,EAAAyhB,EAAAv8F,KAAA6kG,SACjCqlB,EAAyB7rG,GAAM6rG,EAAA/8D,EAAAovC,EAAA2tB,IAE/BzK,OAAAD,IACAryD,EAA6BouC,GAAyBkkB,EAAAD,EAAA5gG,EAAAuuC,GACtD+8D,EAAyBh9F,GAAeg9F,EAAA1K,EAAAC,GACxC7gG,EAAyBqO,GAASrO,EAAA4gG,EAAAC,IAElC,IAAA7B,EAAA,CACA8B,QAAA,MACApvG,QAAuBwuG,GACvBa,QAAA,iBACApE,OAAA,YACAC,aAAA,EACAoE,aAAA5/G,KAAAk7G,QAAA,QAEQ3pG,EAAMqsG,EAAA59G,KAAAk7G,QAAAP,GACd,IAAA76G,EAAAT,KAAAO,OAAAgf,EAAA,GAAAsrG,EAAA,IAAA/8D,GACA3uC,EAAAnf,KAAAO,OAAAsqH,EAAA,GAAAtrG,EAAA,IAAAuuC,GAGA,OAFAywD,EAAA59G,KAAAo/G,KAAA,SAAAt/G,EACA89G,EAAA59G,KAAAo/G,KAAA,SAAA5gG,EACAxe,KAAA47G,eAAAtiC,EAAAwB,EAAAovC,EAAA,EAAAzK,GAAAD,EAAA5B,KAKAiO,EAAA/sH,UAAAopG,UAAA,WACA,OAAAloG,KAAAiiG,SAQA4pB,EAAA/sH,UAAAu8G,UAAA,WACA,OAAAr7G,KAAAk7G,SAYA2Q,EAAA/sH,UAAA88G,eAAA,SAAAtiC,EAAAwB,EAAAovC,EAAAnrE,EAAA3zB,EAAAuvF,GACA,IAAA7hB,EAAA94F,KAAA84F,KACA,GAAAA,EAAA,CASA,GANA6hB,EAAA,MAAA7/B,EAAA,GACA6/B,EAAA,OAAA7/B,EAAA,GACA6/B,EAAA36G,KAAAo/G,KAAA,aAAAh0F,EAAArD,UACA,WAAA/nB,KAAAk7G,UACAP,EAAA,WAEA,GAAA57D,EACA,OAAA/+C,KAAAs/G,aACA,KAAqBP,GACrB,IAAAzB,EAAA,GAAAv+D,EAAA,KACA,mBAAA47D,EACAA,EAAA,wBAAsD2C,EAGtD3C,EAAA,sBAAA2C,EAEA,MACA,KAAqByB,GACrBpE,EAAA,kBAAA57D,EACA,MACA,KAAqBggE,GACrB,KAAqBA,GACrBpE,EAAA,OAAA57D,EACA,MACA,QACoB7kC,GAAM,MAI1B,IAYA29D,EAZAxwD,EAAA+D,EAAAhD,qBACA+iF,EAAA+e,EACA,GAAAlqH,KAAAo/G,MAAA,MAAA/3F,EAAA46C,OAAA,MACA,IAAAzlD,OAAA,EACAA,EAAA0tG,EAAA,GACA/e,EAAA,GAAA+e,EAAA,GACA/e,EAAA,GAAA3uF,EACAA,EAAA0tG,EAAA,GACA/e,EAAA,GAAA+e,EAAA,GACA/e,EAAA,GAAA3uF,EAIA,GAFAm+F,EAAA,KAAAxP,EAAAn8E,KAAA,KAEA,GAAA8pE,EAAA/4F,OACA83E,EAAAihB,EAAA,QAIAjhB,EAAAihB,EADwBh0E,GAAOi1D,GAAaT,GAAAwf,EAAA/4F,SAG5C,OAAe06G,GAAY5iC,EAAA8iC,KAK3BkR,EAAA/sH,UAAA8mG,kBAAA,SAAA7mD,GACA,OAAA/+C,KAAAipG,aAAAr2F,IAAA5S,KAAAs/G,YAC8B,EAD9B,GAOAuM,EAAA/sH,UAAAwrH,iBAAA,WACA,IAAAptH,EAAA,EACAo9E,EAAA,GACA,QAAA77E,KAAAuB,KAAAk7G,QACA5gC,EAAAp9E,KAAAuB,EAAA,IAAAuB,KAAAk7G,QAAAz8G,GAEA,OAAA67E,EAAAtrD,KAAA,MAOA68F,EAAA/sH,UAAAm9G,aAAA,SAAAtB,GACQppG,EAAMvR,KAAAk7G,QAAAP,GACd36G,KAAAq/G,aACAr/G,KAAAslG,OAAAtlG,KAAAsqH,qBAKAuB,EAAA/sH,UAAAugH,WAAA,WACA,IAAAvI,EAAA92G,KAAAk7G,QAAA,SAAiD4D,GACjD9+G,KAAAo/G,KAAoB9qE,GAAewiE,EAAA,WAEnC+U,EAtOW,CAuOTpkB,ICzTEskB,GAAyB,WAC7B,IAAA17G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgCzBs7G,GAAU,SAAAn7G,GAUd,SAAAyiG,EAAAh6B,EAAAznC,EAAA+wB,EAAA1kD,EAAA+tG,EAAA9yB,GACA,IAAAnoF,EAAAH,EAAAxT,KAAA2C,KAAAs5E,EAAAznC,IAAA7xC,KAoCA,OA/BAgR,EAAAqgF,KAAAzuB,EAKA5xD,EAAAiW,QAAA/I,EAKAlN,EAAAk7G,YAAAD,EAKAj7G,EAAAm7G,MAAA,KAKAn7G,EAAAo7G,MAAA,KAKAp7G,EAAAq7G,MAAA,KAKAr7G,EAAAs7G,OAAAnzB,EACAnoF,EAuJA,OArMI+6G,GAASzY,EAAAziG,GAoDbyiG,EAAAx0G,UAAAguE,SAAA,WACA,aAOAwmC,EAAAx0G,UAAAytH,QAAA,SAAA3tG,GACA,IAAA5e,KAAAmsH,QAAAnsH,KAAAosH,MACA,YAEA,IAAAI,GAAA5tG,EAAA,GAAA5e,KAAAinB,QAAA,KACAjnB,KAAAinB,QAAA,GAAAjnB,KAAAinB,QAAA,IACAwlG,GAAA7tG,EAAA,GAAA5e,KAAAinB,QAAA,KACAjnB,KAAAinB,QAAA,GAAAjnB,KAAAinB,QAAA,IACAylG,EAAA1sH,KAAAmsH,MAAA9sH,KAAAO,OAAA,EAAA6sH,GAAAzsH,KAAAmsH,MAAApsH,SACA,oBAAA2sH,EACA,YAEA,IAAA37G,EAAA27G,EAAAvjH,WAAA9J,KAAAO,MAAA4sH,EAAAE,EAAA3sH,SACAgR,GAAA,IACAA,IAEAA,GAAA,IACAA,IAGA,IAAA9P,EAAA,KACA,IAFA8P,GAAA,MAEA/Q,KAAAosH,MAAA,CACA,IAAAnwG,EAAAjc,KAAAosH,MAAAr7G,GAEA9P,EADAjB,KAAAqsH,OAAApwG,KAAAjc,KAAAqsH,MACArsH,KAAAqsH,MAAApwG,GAGAA,EAGA,OAAAhb,GAUAqyG,EAAAx0G,UAAA6tH,oBAAA,SAAA/tG,EAAA/P,EAAA+9G,GACA5sH,KAAA6xC,OAA0BjD,GAASC,OAAA,IAAA+9E,GACvBn5G,EAAUzT,KAAOoV,EAASC,OAAA,SAAAnW,GACtC2P,EAAA7O,KAAAusH,QAAA3tG,KACa5e,MACbA,KAAA6sH,kBAGA,IAAAD,EACA1+G,WAAA,WACAW,EAAA7O,KAAAusH,QAAA3tG,KACiBlgB,KAAAsB,MAAA,GAGjB6O,EAAA7O,KAAAusH,QAAA3tG,KAOA00F,EAAAx0G,UAAAuyC,OAAA,WACA,OAAArxC,KAAAqxF,MAKAiiB,EAAAx0G,UAAAguH,aAAA,WACA9sH,KAAA6xC,MAAqBjD,GAASt5B,MAC9BtV,KAAAgX,WAMAs8F,EAAAx0G,UAAA09G,YAAA,SAAAuQ,GACA/sH,KAAAmsH,MAAAY,EAAA,KACA/sH,KAAAosH,MAAAW,EAAA,KACA/sH,KAAAqsH,MAAAU,EAAA,KACA/sH,KAAA6xC,MAAqBjD,GAASI,MAC9BhvC,KAAAgX,WAKAs8F,EAAAx0G,UAAA+tH,cAAA,WACA,GAAA7sH,KAAA6xC,OAA0BjD,GAASC,KAEnC,GADA7uC,KAAA6xC,MAAyBjD,GAASE,QAClC9uC,KAAAssH,OACgBnzB,GAAYn5F,KAAAqxF,KAAArxF,KAAAw8G,YAAA99G,KAAAsB,WAAA8sH,aAAApuH,KAAAsB,WAE5B,CACA,IAAAssG,EAAA,IAAAp0B,eACAo0B,EAAA3+F,iBAAA,OAAA3N,KAAAorH,WAAA1sH,KAAAsB,OACAssG,EAAA3+F,iBAAA,QAAA3N,KAAAqrH,YAAA3sH,KAAAsB,OACAssG,EAAAn0B,KAAA,MAAAn4E,KAAAqxF,MACAib,EAAAvzB,SAQAu6B,EAAAx0G,UAAAssH,WAAA,SAAA57G,GACA,IAAA88F,EAA+C98F,EAAA,OAE/C,IAAA88F,EAAAh0B,QAAAg0B,EAAAh0B,QAAA,KAAAg0B,EAAAh0B,OAAA,KACA,IAAAqxB,OAAA,EACA,IACAA,EAAmDlyB,KAAAyH,MAAAotB,EAAA/zB,cAEnD,MAAAm0B,GAEA,YADA1sG,KAAA8sH,eAGA9sH,KAAAw8G,YAAA7S,QAGA3pG,KAAA8sH,gBAOAxZ,EAAAx0G,UAAAusH,YAAA,SAAA77G,GACAxP,KAAA8sH,gBAKAxZ,EAAAx0G,UAAAuC,KAAA,WACArB,KAAAksH,aACAlsH,KAAA6sH,iBAGAvZ,EAtMc,CAuMZ1Z,IAqNaozB,GA/LJ,SAAAn8G,GAKX,SAAAo8G,EAAAh0G,GACA,IAAAjI,EAAAH,EAAAxT,KAAA2C,KAAA,CACAorB,WAAwBE,GAAa,aACrCumB,MAAmBmT,GAAWlW,WACrB9uC,KAsBT,GAjBAgR,EAAAk7G,iBAAAt5G,IAAAqG,EAAAgzG,YACAhzG,EAAAgzG,WAKAj7G,EAAAk8G,iBAAiCt0B,GAKjC5nF,EAAAm8G,eAAAv6G,EAKA5B,EAAAs7G,OAAArzG,EAAAkgF,QAAA,EACAlgF,EAAA4+D,IACA,GAAA7mE,EAAAs7G,OACgBnzB,GAAYlgF,EAAA4+D,IAAA7mE,EAAAk6G,uBAAAxsH,KAAAsS,KAAAm6G,oBAAAzsH,KAAAsS,QAE5B,CACA,IAAAs7F,EAAA,IAAAp0B,eACAo0B,EAAA3+F,iBAAA,OAAAqD,EAAAo6G,WAAA1sH,KAAAsS,IACAs7F,EAAA3+F,iBAAA,QAAAqD,EAAAq6G,YAAA3sH,KAAAsS,IACAs7F,EAAAn0B,KAAA,MAAAl/D,EAAA4+D,KACAy0B,EAAAvzB,YAGA9/D,EAAAqyG,SACAt6G,EAAAk6G,uBAAAjyG,EAAAqyG,UAGYpxG,GAAM,MAElB,OAAAlJ,EA4IA,OA5LI+6G,GAASkB,EAAAp8G,GAsDbo8G,EAAAnuH,UAAAssH,WAAA,SAAA57G,GACA,IAAA88F,EAA+C98F,EAAA,OAE/C,IAAA88F,EAAAh0B,QAAAg0B,EAAAh0B,QAAA,KAAAg0B,EAAAh0B,OAAA,KACA,IAAAqxB,OAAA,EACA,IACAA,EAAqElyB,KAAAyH,MAAAotB,EAAA/zB,cAErE,MAAAm0B,GAEA,YADA1sG,KAAAmrH,sBAGAnrH,KAAAkrH,uBAAAvhB,QAGA3pG,KAAAmrH,uBAOA8B,EAAAnuH,UAAAusH,YAAA,SAAA77G,GACAxP,KAAAmrH,uBAOA8B,EAAAnuH,UAAAsuH,YAAA,WACA,OAAAptH,KAAAmtH,WAaAF,EAAAnuH,UAAAuuH,iCAAA,SAAAzuG,EAAAiC,EAAAhS,EAAA+9G,GACA,GAAA5sH,KAAAyoB,SAAA,CACA,IAAA6wD,EAAAt5E,KAAAyoB,SAAAqzD,kCAAAl9D,EAAAiC,GAC8C7gB,KAAAwlG,QAAAlsB,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAAt5E,KAAA47B,iBAC9C+wF,oBAAA/tG,EAAA/P,EAAA+9G,QAGA,IAAAA,EACA1+G,WAAA,WACAW,EAAA,OACiB,GAGjBA,EAAA,OAOAo+G,EAAAnuH,UAAAqsH,oBAAA,WACAnrH,KAAAq6F,SAAsBr1C,GAAW1vC,QAOjC23G,EAAAnuH,UAAAosH,uBAAA,SAAAI,GACA,IAEAptG,EAFAstG,EAAiClgG,GAAa,aAC9CuB,EAAA7sB,KAAA47B,gBAEA,QAAAhpB,IAAA04G,EAAA,QACA,IAAA3nG,EAA4BgI,GAA2B6/F,EAAA3+F,GACvD3O,EAAqBoE,GAAcgpG,EAAA,OAAA3nG,GAEnC,IAAA80B,EAAA6yE,EAAA,WACA5yE,EAAA4yE,EAAA,YACA7iG,EAAuBq0D,GAAS,CAChC5+D,OAAoBo/D,GAAoBzwD,GACxC6rB,UACAD,YAEAz4C,KAAAyoB,WACAzoB,KAAAmtH,UAAA7B,EAAA,SACA,IAAAgC,EAAAhC,EAAA,MACA,GAAAgC,EAAA,CAKA,GADAttH,KAAAktH,iBAAgC10B,GAAmB80B,EAAA7kG,QACnD7V,IAAA04G,EAAA,aACA,IAAAG,OAAA74G,IAAAsL,EACAA,EAAAstG,EAAAxjG,YACAhoB,KAAA+jG,gBAAA,SAAAnlE,GACA,OAAoB1c,GAAUupG,EAAA7sF,EAAA1gB,QAC9B,CAAAotG,EAAA,aAEA,OAGAtrH,KAAAq6F,SAAsBr1C,GAAWE,YAdjCllD,KAAAq6F,SAA0Br1C,GAAW1vC,QAmBrC23G,EAAAnuH,UAAA0mG,QAAA,SAAAvsD,EAAAn5C,EAAA0e,EAAAugC,EAAA3zB,GACA,IAAA85E,EAA2BrrB,GAAS5gC,EAAAn5C,EAAA0e,GACpC,GAAAxe,KAAA4kG,UAAAn/B,YAAAy/B,GACA,OACqDllG,KAAA4kG,UAAA7mG,IAAAmnG,GAGrD,IAAA5rB,EAAA,CAAArgC,EAAAn5C,EAAA0e,GACA6pF,EAAAroG,KAAA8lG,+BAAAxsB,EAAAluD,GACAk9E,EAAAtoG,KAAAktH,iBAAA7kB,EAAAtpD,EAAA3zB,GACAwmB,EAAA,IAA2Bo6E,GAAU1yC,OAAA1mE,IAAA01F,EAAoC15D,GAASC,KAAQD,GAASI,WAAAp8B,IAAA01F,IAAA,GAAAtoG,KAAAyoB,SAAA+yD,mBAAAlC,GAAAt5E,KAAAksH,YAAAlsH,KAAAssH,QAEnG,OADAtsH,KAAA4kG,UAAAj8F,IAAAu8F,EAAAtzD,GACAA,GAMAq7E,EAAAnuH,UAAAqnG,QAAA,SAAAltD,EAAAn5C,EAAA0e,GACA,IAAA0mF,EAA2BrrB,GAAS5gC,EAAAn5C,EAAA0e,GACpCxe,KAAA4kG,UAAAn/B,YAAAy/B,IACAllG,KAAA4kG,UAAA7mG,IAAAmnG,IAGA+nB,EA7LW,CA8LT5mB,IC9bEknB,GAAyB,WAC7B,IAAAl9G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+Kd88G,GAhJK,SAAA38G,GAYpB,SAAA48G,EAAAn0C,EAAAznC,EAAAw2D,EAAA1G,EAAA+rB,EAAAC,GACA,IAAA38G,EAAAH,EAAAxT,KAAA2C,KAAAs5E,EAAAznC,EAAA,CAAyDmoD,WAAA,KAAgBh6F,KAyDzE,OApDAgR,EAAA04D,SAAA,GAKA14D,EAAA48G,eAAA,GAKA58G,EAAA68G,mBAAA,EAKA78G,EAAA88G,oBAAA,GAKA98G,EAAA+8G,aAAA,GAIA/8G,EAAAg9G,iBAIAh9G,EAAAi9G,gBAAAP,EAIA18G,EAAAk9G,mBAAAP,EAKA38G,EAAAkxF,gBAAAP,EAKA3wF,EAAAm9G,SAAA,EAKAn9G,EAAA+gC,MAAA,EAIA/gC,EAAA6wF,iBAAAwG,EACAr3F,EAwEA,OA7IIu8G,GAASE,EAAA58G,GA0Eb48G,EAAA3uH,UAAAkV,gBAAA,WAEA,QAAAvV,KADAuB,KAAAkuH,mBAAAluH,MACAA,KAAA0pE,SAAA,CACA,IAAAhoB,EAAA1hD,KAAA0pE,SAAAjrE,GAAAijD,OACAA,EAAA/1C,MAAA+1C,EAAA9gD,OAAA,EAEA,QAAAnC,KAAAuB,KAAA4tH,eAEA,IADA,IAAAA,EAAA5tH,KAAA4tH,eAAAnvH,GACAvB,EAAA,EAAA0U,EAAAg8G,EAAA7tH,OAAuD7C,EAAA0U,IAAQ1U,EAC/D0wH,EAAA1wH,GAAA8W,kBAGAhU,KAAAq6F,SAAsBzrD,GAASK,OAC/Bp+B,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAMAytH,EAAA3uH,UAAAgR,WAAA,SAAAm0C,GACA,IAAAxlD,EAAkB0R,EAAM8zC,GAIxB,OAHAxlD,KAAAuB,KAAA0pE,WACA1pE,KAAA0pE,SAAAjrE,GAAiC8iD,MAEjCvhD,KAAA0pE,SAAAjrE,IAMAgvH,EAAA3uH,UAAAsvH,WAAA,SAAAnqE,GACA,OAAe9zC,EAAM8zC,KAAAjkD,KAAA0pE,UAOrB+jD,EAAA3uH,UAAAguE,SAAA,SAAA7oB,GACA,OAAAjkD,KAAAouH,WAAAnqE,GAAAjkD,KAAA8P,WAAAm0C,GAAAvC,OAAA,MAMA+rE,EAAA3uH,UAAAuvH,eAAA,SAAApqE,GACA,IAAAxlD,EAAkB0R,EAAM8zC,GAaxB,OAZAxlD,KAAAuB,KAAA+tH,eACA/tH,KAAA+tH,aAAAtvH,GAAA,CACA6vH,OAAA,EACAC,oBAAA,KACApN,mBAAAp2G,IACAo5G,kBAAA,EACAqK,uBAAAzjH,IACA0jH,sBAAA,EACAC,WAAA,EACAC,eAAA,IAGA3uH,KAAA+tH,aAAAtvH,IAKAgvH,EAAA3uH,UAAAuC,KAAA,WACArB,KAAAiuH,gBAAAjuH,OAEAytH,EA9IoB,CA+IlB7zB,IC9KEg1B,GAAyB,WAC7B,IAAAv+G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqJdm+G,GAnID,SAAAh+G,GAUd,SAAAi+G,EAAAx1C,EAAAznC,EAAA+wB,EAAAkV,EAAA+iB,EAAA7hF,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,KAAAs5E,EAAAznC,EAAA74B,IAAAhZ,KA6CA,OAzCAgR,EAAAq1D,UAAA,EAKAr1D,EAAAkN,OAAA,KAKAlN,EAAAq9F,QAAAv2B,EAKA9mE,EAAA+9G,UAAA,KAKA/9G,EAAAo9F,QAKAp9F,EAAAoa,WAAA,KAKApa,EAAA6P,WAKA7P,EAAA8pF,kBAAAD,EAKA7pF,EAAAw9F,KAAA5rC,EACA5xD,EAyEA,OAhII49G,GAASE,EAAAj+G,GA4Dbi+G,EAAAhwH,UAAAkV,gBAAA,WACAhU,KAAAq6F,SAAsBzrD,GAASK,OAC/Bp+B,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAOA8uH,EAAAhwH,UAAAyyG,UAAA,WACA,OAAAvxG,KAAAquG,SAOAygB,EAAAhwH,UAAAgyG,YAAA,WACA,OAAA9wG,KAAA+uH,WAKAD,EAAAhwH,UAAAuyC,OAAA,WACA,OAAArxC,KAAAwuG,MAKAsgB,EAAAhwH,UAAAuC,KAAA,WACArB,KAAA6xC,OAA0BjD,GAASC,OACnC7uC,KAAAq6F,SAA0BzrD,GAASE,SACnC9uC,KAAA86F,kBAAA96F,UAAAwuG,MACAxuG,KAAAouG,QAAApuG,KAAAke,OAAAle,KAAA6gB,WAAA7gB,KAAAorB,cAQA0jG,EAAAhwH,UAAAkwH,OAAA,SAAAzjE,EAAA0tB,GACAj5E,KAAAivH,YAAA1jE,IAKAujE,EAAAhwH,UAAAowH,QAAA,WACAlvH,KAAAq6F,SAAsBzrD,GAASt5B,QAQ/Bw5G,EAAAhwH,UAAAmwH,YAAA,SAAA1jE,GACAvrD,KAAA+uH,UAAAxjE,EACAvrD,KAAAq6F,SAAsBzrD,GAASG,SAO/B+/E,EAAAhwH,UAAAuzG,UAAA,SAAA5D,GACAzuG,KAAAouG,QAAAK,GAEAqgB,EAjIc,CAkIZl1B,ICjJEu1B,GAAyB,WAC7B,IAAA9+G,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6Vd0+G,GArQD,SAAAv+G,GAKd,SAAAi+G,EAAA71G,GACA,IAAAjI,EAAAhR,KACAorB,EAAAnS,EAAAmS,YAAA,YACAlN,EAAAjF,EAAAiF,QAAuCo/D,GAAoBlyD,GAC3D3C,EAAAxP,EAAAwP,UAA2Cq0D,GAAS,CACpD5+D,SACAw6B,QAAAz/B,EAAAy/B,SAAA,GACAD,QAAAx/B,EAAAw/B,QACAqiC,SAAA7hE,EAAA6hE,UAAA,MAmDA,OAjDA9pE,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAkwC,wBAAA1qF,EAAA0qF,wBACAjiC,UAAAzoD,EAAAyoD,UACA0iC,QAAA,EACAh5E,aACAymB,MAAA54B,EAAA44B,MACAppB,WACAoyE,iBAAA5hF,EAAA4hF,iBAAA5hF,EAAA4hF,iBAAAw0B,GACA1oB,gBAAA1tF,EAAA0tF,gBACA9uB,IAAA5+D,EAAA4+D,IACAihB,KAAA7/E,EAAA6/E,KACA+K,WAAAjxF,IAAAqG,EAAA4qF,OAAA5qF,EAAA4qF,MACA7J,WAAA/gF,EAAA+gF,cACSh6F,MAKTquG,QAAAp1F,EAAA6+D,OAAA7+D,EAAA6+D,OAAA,KAIA9mE,EAAAs+G,cAAA,GAKAt+G,EAAAqxF,aAAA,GAKArxF,EAAAu+G,sBAAA,GAKAv+G,EAAAs9F,UAAA17F,MAAAqG,EAAAs1F,UAAAt1F,EAAAs1F,SAKAv9F,EAAA22F,UAAA1uF,EAAA0uF,UAAA1uF,EAAA0uF,UAAkEknB,GAKlE79G,EAAAw+G,WAAA,GACAx+G,EAmMA,OAlQIm+G,GAASL,EAAAj+G,GAoEbi+G,EAAAhwH,UAAA0yG,YAAA,WACA,OAAAxxG,KAAAsuG,WAMAwgB,EAAAhwH,UAAAsB,MAAA,WACAJ,KAAA4kG,UAAAxkG,QACAJ,KAAAqiG,aAAA,GACAriG,KAAAuvH,sBAAA,IAQAT,EAAAhwH,UAAA4uH,eAAA,SAAA3uE,EAAA3zB,EAAAwmB,GACA,IAAA69E,EAAA,GACApnB,EAAAz2D,EAAAiwD,iBACA,GAAAwG,EAAA,CACA,IAAA5/E,EAAAzoB,KAAA0lG,yBAAAt6E,GACAlN,EAAAuK,EAAA+yD,mBAAA6sB,GACApvD,EAAAovD,EAAA,GACAxnF,EAAA4H,EAAA4yB,cAAApC,GAEY56B,GAAYH,GAAA,EAAA2C,EAAA3C,GACxB,IAAAwxG,EAAA1vH,KAAAyoB,SACAkzE,EAAA+zB,EAAA1nG,YACA2zE,GACgB35E,GAAe9D,EAAAy9E,EAAAz9E,GAE/B,IAGAyxG,EAAAC,EAHAC,EAAAH,EAAAzzC,kBAAAp7D,EAAA,GACA43B,EAAAi3E,EAAApxE,aACAwxE,EAAAD,EAAA,EAEA,KACAC,EACAH,GAAA,EACAC,GAAA,EACAF,EAAAv0C,iBAAAj9D,EAAA4xG,EAAA,SAAAC,GACA,IACAC,EADAh+E,EAAkC8nC,GAAMi2C,GAExC,GAAA/9E,KAAAhyC,KAAAqiG,aAAA,CAEA,IAAAxwD,GADAm+E,EAAAhwH,KAAAqiG,aAAArwD,IACAF,WACA,GAAAD,IAAsCjD,GAASG,QAAA8C,IAAqBjD,GAASt5B,OAAAu8B,IAAoBjD,GAASI,MAG1G,OAFA4gF,KAAA/9E,IAA2DjD,GAASI,WACpEygF,EAAA3uH,KAAAkvH,QAIA,GAAAF,IAAAD,EAAA,CACA,IAAAvnB,EAAAtoG,KAAA2mG,gBAAAopB,EAAAhxE,EAAA3zB,IACA4kG,EAAA,IAAAhwH,KAAA2nG,UAAAooB,EAAAn9G,MAAA01F,EAAgG15D,GAASI,MAASJ,GAASC,KAAAj8B,MAAA01F,EAAA,GAAAA,EAAAtoG,KAAAquG,QAAAruG,KAAA66F,mBAC3H38E,OAAAwxG,EAAAl0C,mBAAAu0C,GACAC,EAAA5kG,aACA4kG,EAAAnvG,WAAA6uG,EAAAr0E,cAAA00E,EAAA,IACA/vH,KAAAqiG,aAAArwD,GAAAg+E,EACAJ,KAAAI,EAAAl+E,aAAuElD,GAASI,MACxD77B,EAAM68G,EAAa56G,EAASC,OAAArV,KAAA0xC,iBAAA1xC,MACpDgwH,EAAA3uH,YAGAuuH,GAAA,EAGA,GADAD,GAAA,EACAK,GAGAA,EAAAl+E,aAAkDlD,GAASI,OAAA4C,EAAAE,aAA8BlD,GAASC,KAAA,CAClG+C,EAAAi8E,qBACA,IAAAoC,EAAoC98G,EAAM68G,EAAa56G,EAASC,OAAA,WAChE,IAAAw8B,EAAAm+E,EAAAl+E,WACAo+E,EAAgDp2C,GAAMk2C,EAAA12C,WACtDznC,IAA0CjD,GAASG,QAAA8C,IAAqBjD,GAASt5B,QACjFu8B,IAA8CjD,GAASG,QACnBx7B,EAAa08G,GACjDr+E,EAAAi8E,4BACAj8E,EAAAk8E,oBAAAoC,IAEAr+E,IAAmDjD,GAASt5B,QAC5Ds8B,EAAAk8E,oBAAAoC,IAAA,GAEAt+E,EAAAi8E,mBAAAjwH,OAAAmP,KAAA6kC,EAAAk8E,qBAAA/tH,QAAA,IACA6xC,EAAAG,MAAA,EACAH,EAAAu8E,QAAA0B,EACAj+E,EAAAyoD,SAAkDroF,EAAO4/B,EAAAk8E,qBAA6Bl/E,GAASG,OAAUH,GAASt5B,aAKjG5W,KAAAsB,OACjB2vH,IACAF,EAAA1vH,OAAA,UAEa4vH,GAAAG,EAAAr3E,GAIb,GAHAm3E,GAAAh+E,EAAAE,aAAgDlD,GAASC,MACzD+C,EAAAyoD,SAA8BzrD,GAASE,SAEvC6gF,GAAAC,EAAA,CACAh+E,EAAAG,KAAA89E,IAAAC,EACAl+E,EAAAu8E,QAAA2B,EACA,IAAAK,EAAAnwH,KAAAuvH,sBAAqEz1C,GAAMloC,EAAA0nC,YAC3E1nC,EAAAE,WAAsClD,GAASG,OAC/C6C,EAAAyoD,SAAAu1B,EAA4ChhF,GAASI,MAASJ,GAASG,QAEvEohF,GAAkDvzG,GAAM6yG,EAAAU,KACxDnwH,KAAA2tH,kBAAA/7E,GACA5xC,KAAAowH,eAAAx+E,EAAA69E,KAIA,OAAAA,GAMAX,EAAAhwH,UAAAsxH,eAAA,SAAAx+E,EAAA69E,GACAzvH,KAAAuvH,sBAAmCz1C,GAAMloC,EAAA0nC,YAAAm2C,EACzC,QAAAvyH,EAAA,EAAA0U,EAAA69G,EAAA1vH,OAAgD7C,EAAA0U,IAAQ1U,EACxDuyH,EAAAvyH,GAAAmpE,aAMAyoD,EAAAhwH,UAAA6uH,kBAAA,SAAA/7E,GACA,IAAAI,EAAsB8nC,GAAMloC,EAAA0nC,WAC5B,GAAAtnC,KAAAhyC,KAAAuvH,sBAEA,IADA,IAAAE,EAAAzvH,KAAAuvH,sBAAAv9E,GACA90C,EAAA,EAAA0U,EAAA69G,EAAA1vH,OAAoD7C,EAAA0U,IAAQ1U,EAAA,CAC5D,IAAA8yH,EAAAP,EAAAvyH,GACA8yH,EAAA3pD,YACA,IAAA2pD,EAAA3pD,YACA2pD,EAAAj8G,iBACA/T,KAAAqiG,aAA6CvoB,GAAMk2C,EAAA12C,oBAInDt5E,KAAAuvH,sBAAAv9E,IAKA88E,EAAAhwH,UAAA0mG,QAAA,SAAAvsD,EAAAn5C,EAAA0e,EAAAugC,EAAA3zB,GACA,IAAA85E,EAA2BrrB,GAAS5gC,EAAAn5C,EAAA0e,GACpC,GAAAxe,KAAA4kG,UAAAn/B,YAAAy/B,GACA,OACqDllG,KAAA4kG,UAAA7mG,IAAAmnG,GAGrD,IAAA5rB,EAAA,CAAArgC,EAAAn5C,EAAA0e,GACA6pF,EAAAroG,KAAA8lG,+BAAAxsB,EAAAluD,GACAwmB,EAAA,IAA2B47E,GAAgBl0C,EAAA,OAAA+uB,EAAoCz5D,GAASC,KAAQD,GAASI,MAAAq5D,EAAAroG,KAAAyoB,SAAAzoB,KAAA0tH,eAAAhvH,KAAAsB,KAAA++C,EAAA3zB,GAAAprB,KAAA2tH,kBAAAjvH,KAAAsB,OAGzG,OAFA4xC,EAAAnzC,IAAAuB,KAAAiX,cAAA/J,WACAlN,KAAA4kG,UAAAj8F,IAAAu8F,EAAAtzD,GACAA,GAMAk9E,EAAAhwH,UAAA4mG,yBAAA,SAAAt6E,GACA,IAAAra,EAAAqa,EAAArD,UACAU,EAAAzoB,KAAAwvH,WAAAz+G,GACA,IAAA0X,EAAA,CAGA,IAAAk5E,EAAA3hG,KAAAyoB,SACAA,EAAAzoB,KAAAwvH,WAAAz+G,GAA+C8rE,GAAmBzxD,OAAAxY,EAAA+uF,IAAAhmB,YAAAgmB,EAAArjD,mBAAA1rC,GAElE,OAAA6V,GAKAqmG,EAAAhwH,UAAA8mG,kBAAA,SAAA7mD,GACA,OAAAA,GAKA+vE,EAAAhwH,UAAA+mG,iBAAA,SAAA5sD,EAAA8F,EAAA3zB,GACA,IACA0vD,EAAuBr0B,GADvBzmD,KAAA0lG,yBAAAt6E,GAC6BuwD,YAAA1iC,GAAAj5C,KAAA6kG,SAC7B,OAAAxlG,KAAAw1B,MAAAimD,EAAA,GAAA/7B,GAAA1/C,KAAAw1B,MAAAimD,EAAA,GAAA/7B,KAEA+vE,EAnQc,CAoQZtoB,IAOK,SAAA6oB,GAAAz9E,EAAAimC,GACP,IAAA42B,EAAiB72B,GAAeC,EAAAjmC,EAAA2/D,YAAA3/D,EAAAo9E,OAAAtwH,KAAAkzC,KAAAs9E,QAAAxwH,KAAAkzC,IAChCA,EAAAygE,UAAA5D,GCjWe,IAAA4hB,GAAA,CACfC,IAAA,MACAC,KAAA,QCNIC,GAAyB,WAC7B,IAAAngH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2Od+/G,GAvKP,SAAA5/G,GAKR,SAAA6/G,EAAAz3G,GAEA,IAAAjI,EAAAhR,KACA2wH,OAAA/9G,IAAAqG,EAAA03G,gBACkE13G,EAAA,gBACtDo3G,GAAmBC,IAG/B7nG,EAAAxP,EAAAwP,SACAqwE,EAAA7/E,EAAA6/E,KA4DA,YA3DAlmF,IAAAkmF,QAAAlmF,IAAAqG,EAAA4+D,MACAihB,EAAmBD,GAAS5/E,EAAA4+D,OAE5B7mE,EAAAH,EAAAxT,KAAA2C,KAAA,CACAyzD,aAAAx6C,EAAAw6C,aACAiO,UAAAzoD,EAAAyoD,UACAmB,YAAA5pD,EAAA4pD,YACAz3C,WAAAnS,EAAAmS,WACA28E,2BAAA9uF,EAAA8uF,2BACAJ,UAAA1uF,EAAA0uF,UACAl/E,WACAoyE,iBAAA5hF,EAAA4hF,iBACAyJ,eAAArrF,EAAAqrF,eACAqC,gBAA6B/N,GAC7BE,OACA+K,WAAAjxF,IAAAqG,EAAA4qF,OAAA5qF,EAAA4qF,MACA7J,WAAA/gF,EAAA+gF,cACSh6F,MAKT4wH,cAAAh+G,IAAAqG,EAAA69F,QAAA79F,EAAA69F,QAAA,QAKA9lG,EAAAq9F,aAAAz7F,IAAAqG,EAAA6+D,OAAA7+D,EAAA6+D,OAAA,aAKA9mE,EAAA6/G,iBAAAj+G,IAAAqG,EAAA63G,WAAA73G,EAAA63G,WAAA,GAKA9/G,EAAAyvG,OAAAxnG,EAAAgrC,MAKAjzC,EAAA+/G,WAAA93G,EAAA2zE,UAKA57E,EAAA2J,OAAA1B,EAAAsC,MAOAvK,EAAAggH,iBAAAL,EACA3/G,EAAAs0F,OAAAt0F,EAAAigH,wBACAn4B,KAAA/4F,OAAA,IACAiR,EAAA21F,gBAAoChO,GAA0BG,EAAA7rF,IAAAikH,GAAAxyH,KAAAsS,MAE9DA,EA2FA,OApKIw/G,GAASE,EAAA7/G,GAgFb6/G,EAAA5xH,UAAA8nG,QAAA,SAAA9N,GACA94F,KAAA84F,OACA,IAAAr6F,EAAAq6F,EAAA9pE,KAAA,MACAhvB,KAAAqnG,mBAAgC1O,GAA0BG,EAAA7rF,IAAAikH,GAAAxyH,KAAAsB,QAAAvB,IAS1DiyH,EAAA5xH,UAAAqyH,cAAA,WACA,OAAAnxH,KAAA6wH,aAOAH,EAAA5xH,UAAAyyG,UAAA,WACA,OAAAvxG,KAAAquG,SAOAqiB,EAAA5xH,UAAA8hH,SAAA,WACA,OAAA5gH,KAAAygH,QAOAiQ,EAAA5xH,UAAAsyH,aAAA,WACA,OAAApxH,KAAA+wH,YAOAL,EAAA5xH,UAAAuyH,mBAAA,WACA,OAAArxH,KAAAgxH,kBAOAN,EAAA5xH,UAAA0c,SAAA,WACA,OAAAxb,KAAA2a,QAOA+1G,EAAA5xH,UAAAwyH,WAAA,WACA,OAAAtxH,KAAA4wH,UAMAF,EAAA5xH,UAAAmyH,qBAAA,WACA,IAAA/zH,EAAA,EACAo9E,EAAA,GACA,QAAA77E,KAAAuB,KAAA6wH,YACAv2C,EAAAp9E,KAAAuB,EAAA,IAAAuB,KAAA6wH,YAAApyH,GAEA,OAAA67E,EAAAtrD,KAAA,MAOA0hG,EAAA5xH,UAAAyyH,iBAAA,SAAAT,GACQv/G,EAAMvR,KAAA6wH,YAAAC,GACd9wH,KAAAslG,OAAAtlG,KAAAixH,yBAEAP,EArKQ,CAsKNjpB,IA6LF,SAAAypB,GAAAp7E,GACA,IAAA66E,EAAA3wH,KAAAgxH,iBAGArhH,EAAA,CACAs0C,MAAAjkD,KAAAygH,OACAllG,MAAAvb,KAAA2a,OACA62G,cAAAxxH,KAAA+wH,YAEAJ,GAA2BN,GAAmBC,KACtC/+G,EAAM5B,EAAA,CACd8hH,QAAA,OACAC,QAAA,UACAC,QAAA3xH,KAAA4wH,SACAgB,OAAA5xH,KAAAquG,UAMAv4D,EAAA66E,GAAmCN,GAAmBC,IAC9C7V,GAAY3kE,EAAAnmC,GACpBmmC,EAAAC,QAAA,cAAoC,SAAAz4C,EAAA0B,GACpC,OAAAA,EAAAwgC,gBAAA7vB,IAAA3Q,EAAAwgC,eAAAliC,IAEA,IAAAmrB,EAAoEzoB,KAAA,SACpE8wH,EAAA9wH,KAAA6wH,YACA,gBAOAv3C,EAAAv6B,EAAA3zB,GACA,GAAAkuD,EAGA,CACA,IAAA46B,EAAA,CACA2d,WAAAppG,EAAA+jE,YAAAlT,EAAA,IACAw4C,QAAAx4C,EAAA,GACAy4C,QAAAz4C,EAAA,IAEY/nE,EAAM2iG,EAAA4c,GAClB,IAAAj5C,EAAA/hC,EASA,OAPA+hC,EADA84C,GAAmCN,GAAmBC,IAChC7V,GAAY5iC,EAAAq8B,GAGlCr8B,EAAA9hC,QAAA,cAA6C,SAAAz4C,EAAA0B,GAC7C,OAAAk1G,EAAAl1G,OC7dA,IAAIgzH,GAAyB,WAC7B,IAAA3hH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoCzBuhH,GAAkB,SAAAphH,GAMtB,SAAAqhH,EAAAjuE,EAAAjrC,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,KAAAikD,IAAAjkD,KACAiZ,EAAAD,GAAA,GAKA,OAJAhI,EAAAmhH,QAAA,IAA4B/pC,GAAW,CACvCkB,cAAArwE,EAAAqwE,cACAxE,SAAA7rE,EAAA6rE,WAEA9zE,EAgBA,OA5BIghH,GAASE,EAAArhH,GAiBbqhH,EAAApzH,UAAAkV,gBAAA,WACAnD,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAOAkyH,EAAApzH,UAAA0sF,uBAAA,WACA,OAAAxrF,KAAAmyH,QAAA3mC,0BAEA0mC,EA7BsB,CA8BpB3R,IAoBK,SAAA6R,GAAAC,EAAAC,EAAAC,EAAA70C,GACP,GAAA60C,EAAAv3G,SAGA,OAAAu3G,EAAAv3G,SAAA5X,MACA,YAEA,YAcA,SAAAivH,EAAAC,EAAAC,EAAA70C,GACA,IAAAl+D,EAAA,SAAA5M,IAAA8qE,IAAA39E,OAAA,GACAD,EAAAyyH,EAAAv3G,SAAAiD,YAAA,GACAO,EAAA+zG,EAAAv3G,SAAAiD,YAAA,GACAo/E,EAAAk1B,EAAAr3G,WAAAmiF,GACAC,EAAAi1B,EAAAr3G,WAAAoiF,GACAC,EAAAg1B,EAAAr3G,WAAAqiF,GACAhpD,EAAAg+E,EAAAr3G,WAAAq5B,GACAxzB,EAAAwxG,EAAAr3G,WAAA6F,KACAyiC,EAAA+uE,EAAAr3G,WAAAsoC,QACAiqC,EAAA8kC,EAAAr3G,WAAAuyE,eACAlsB,EAAAgxD,EAAAr3G,WAAAqmD,MACAixD,EAAAjxD,EAAA,GACAkxD,EAAAlxD,EAAA,GACAo0B,EAAAp0B,EAAA,GACA4H,EAAA5H,EAAA,GACAmxD,EAAAL,EAAA34G,WAAA3Z,OAAAyf,EAEAmzG,EAAAC,GACAD,EAAA5yH,OAAA29E,IAAA39E,OAAA,EACA,QAAA7C,EAAA,EAAmBA,EAAAy1H,EAAA5yH,OAAkC7C,IACrDy1H,EAAAz1H,GAAA4yD,WAAAyiE,EAAAr3G,WAAAwiE,EAAAxgF,MAAA,EAGAm1H,EAAA34G,WAAA5Y,KAAAhB,EAAA0e,GAAAuC,EAAA,GAAAA,EAAA,EAAAs8E,EAAAC,EAAA95C,EAAAiqC,EAAA+kC,EAAAC,EAAA98B,EAAAxsB,GACA/8D,MAAAtN,UAAAgC,KAAAoB,MAAAmwH,EAAA34G,WAAAi5G,GACAN,EAAA34G,WAAA5Y,KAAAhB,EAAA0e,GAAAuC,EAAA,GAAAA,EAAA,EAAAw8E,EAAAD,EAAA95C,EAAAiqC,EAAA+kC,EAAAC,EAAA98B,EAAAxsB,GACA/8D,MAAAtN,UAAAgC,KAAAoB,MAAAmwH,EAAA34G,WAAAi5G,GACAN,EAAA34G,WAAA5Y,KAAAhB,EAAA0e,GAAAuC,EAAA,GAAAA,EAAA,EAAAw8E,EAAAhpD,EAAAiP,EAAAiqC,EAAA+kC,EAAAC,EAAA98B,EAAAxsB,GACA/8D,MAAAtN,UAAAgC,KAAAoB,MAAAmwH,EAAA34G,WAAAi5G,GACAN,EAAA34G,WAAA5Y,KAAAhB,EAAA0e,GAAAuC,EAAA,GAAAA,EAAA,EAAAs8E,EAAA9oD,EAAAiP,EAAAiqC,EAAA+kC,EAAAC,EAAA98B,EAAAxsB,GACA/8D,MAAAtN,UAAAgC,KAAAoB,MAAAmwH,EAAA34G,WAAAi5G,GACAL,EAAA54G,WAAA5Y,KAAA4xH,IAAA,EAAAA,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAAAA,EAAA,GA/CAG,CAAAR,EAAAC,EAAAC,EAAA70C,GAEA,QACA,QAGA,IAAAk1C,GAAA,GAsDe,IAAAE,GAAA,GCkCAC,GAnIE,WACjB,SAAAC,IAKAhzH,KAAAi5E,eAAA,KAKAj5E,KAAAizH,yBAAA,KAsHA,OA7GAD,EAAAl0H,UAAAo0H,eAAA,SAAA5lH,EAAA0L,GACA,IAAAC,EAQA,OAPAD,IACAC,EAAA,CACAggE,eAAAjgE,EAAAigE,eACAjgE,EAAAigE,eAAAj5E,KAAA64E,eAAAvrE,GACAsrE,kBAAA5/D,EAAA4/D,oBAGA54E,KAAAmzH,aAAAl6G,IAWA+5G,EAAAl0H,UAAAq0H,aAAA,SAAAl6G,GACA,OAAe1H,EAAM,CACrB0nE,eAAAj5E,KAAAi5E,eACAL,kBAAA54E,KAAAizH,0BACSh6G,IAMT+5G,EAAAl0H,UAAA0xB,QAAA,WACA,OAAevgB,KAUf+iH,EAAAl0H,UAAAs0H,YAAA,SAAA9lH,EAAA0L,GACA,OAAe/I,KAUf+iH,EAAAl0H,UAAA65E,aAAA,SAAArrE,EAAA0L,GACA,OAAe/I,KAUf+iH,EAAAl0H,UAAAu0H,aAAA,SAAA/lH,EAAA0L,GACA,OAAe/I,KASf+iH,EAAAl0H,UAAA+5E,eAAA,SAAAvrE,GACA,OAAe2C,KAUf+iH,EAAAl0H,UAAAw0H,aAAA,SAAA9nE,EAAAxyC,GACA,OAAe/I,KAUf+iH,EAAAl0H,UAAAy0H,cAAA,SAAAhoE,EAAAvyC,GACA,OAAe/I,KAUf+iH,EAAAl0H,UAAA00H,cAAA,SAAAx4G,EAAAhC,GACA,OAAe/I,KAEf+iH,EAjIiB,GA0IV,SAAAS,GAAAz4G,EAAA3R,EAAA2P,GACP,IAEA06G,EAFA96C,EAAA5/D,EAA0CsS,GAAatS,EAAA4/D,mBAAA,KACvDK,EAAAjgE,EAAuCsS,GAAatS,EAAAigE,gBAAA,KAQpD,GALAy6C,EADA96C,GAAAK,IAAgDxsD,GAAoBmsD,EAAAK,IACpE5vE,EAAA2R,EAAAG,QAAAH,GAAA2I,UAAAta,EAAAuvE,EAAAK,EAAA5vE,EAAA4vE,EAAAL,GAGA59D,EAEA3R,GAAA2P,QAAwDpG,IAAA,EAAA+gH,SAAA,CACxD,IAAAC,EAAAv0H,KAAA8C,IAAA,GAA2D,EAAAwxH,UAY3DD,IAAA14G,IACA04G,EAAA14G,EAAAG,SAEAu4G,EAAApxG,eATA,SAAArE,GACA,QAAA/gB,EAAA,EAAA0U,EAAAqM,EAAAle,OAAoD7C,EAAA0U,IAAQ1U,EAC5D+gB,EAAA/gB,GAAAmC,KAAAw1B,MAAA5W,EAAA/gB,GAAA02H,KAEA,OAAA31G,IAOA,OAAAy1G,EAOO,SAAAG,GAAA31G,EAAAlF,GACP,IAAA4/D,EAAA5/D,EAA0CsS,GAAatS,EAAA4/D,mBAAA,KACvDK,EAAAjgE,EAAuCsS,GAAatS,EAAAigE,gBAAA,KACpD,OAAAL,GAAAK,IAAgDxsD,GAAoBmsD,EAAAK,GACrD/rD,GAAehP,EAAA+6D,EAAAL,GAG9B16D,EC3OA,IAAI41G,GAAyB,WAC7B,IAAAzjH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4L7B,SAAAqjH,GAAAzmH,GACA,oBAAAA,EAAA,CACA,IAAA1O,EAAA64E,KAAAyH,MAAA5xE,GACA,OAAA1O,GAA0C,KAE1C,cAAA0O,EACAA,EAGA,KAGe,IAAA0mH,GA7KA,SAAAnjH,GAEf,SAAAojH,IACA,OAAApjH,EAAAxT,KAAA2C,YAwJA,OA1JI8zH,GAASG,EAAApjH,GAObojH,EAAAn1H,UAAA0xB,QAAA,WACA,OAAe+mD,GAAUE,MAWzBw8C,EAAAn1H,UAAAs0H,YAAA,SAAA9lH,EAAA0L,GACA,OAAAhZ,KAAAk0H,sBAAAH,GAAAzmH,GAAAtN,KAAAkzH,eAAA5lH,EAAA0L,KAWAi7G,EAAAn1H,UAAA65E,aAAA,SAAArrE,EAAA0L,GACA,OAAAhZ,KAAAm0H,uBAAAJ,GAAAzmH,GAAAtN,KAAAkzH,eAAA5lH,EAAA0L,KASAi7G,EAAAn1H,UAAAo1H,sBAAA,SAAAt1H,EAAAoa,GACA,OAAe/I,KASfgkH,EAAAn1H,UAAAq1H,uBAAA,SAAAv1H,EAAAoa,GACA,OAAe/I,KAUfgkH,EAAAn1H,UAAAu0H,aAAA,SAAA/lH,EAAA0L,GACA,OAAAhZ,KAAAo0H,uBAAAL,GAAAzmH,GAAAtN,KAAAkzH,eAAA5lH,EAAA0L,KASAi7G,EAAAn1H,UAAAs1H,uBAAA,SAAAx1H,EAAAoa,GACA,OAAe/I,KASfgkH,EAAAn1H,UAAA+5E,eAAA,SAAAvrE,GACA,OAAAtN,KAAAq0H,yBAAAN,GAAAzmH,KAQA2mH,EAAAn1H,UAAAu1H,yBAAA,SAAAz1H,GACA,OAAeqR,KAUfgkH,EAAAn1H,UAAAw0H,aAAA,SAAA9nE,EAAAxyC,GACA,OAAAy+D,KAAA00B,UAAAnsG,KAAAs0H,mBAAA9oE,EAAAxyC,KAQAi7G,EAAAn1H,UAAAw1H,mBAAA,SAAA9oE,EAAAxyC,GACA,OAAe/I,KAUfgkH,EAAAn1H,UAAAy0H,cAAA,SAAAhoE,EAAAvyC,GACA,OAAAy+D,KAAA00B,UAAAnsG,KAAAu0H,oBAAAhpE,EAAAvyC,KAQAi7G,EAAAn1H,UAAAy1H,oBAAA,SAAAhpE,EAAAvyC,GACA,OAAe/I,KAUfgkH,EAAAn1H,UAAA00H,cAAA,SAAAx4G,EAAAhC,GACA,OAAAy+D,KAAA00B,UAAAnsG,KAAAw0H,oBAAAx5G,EAAAhC,KAQAi7G,EAAAn1H,UAAA01H,oBAAA,SAAAx5G,EAAAhC,GACA,OAAe/I,KAEfgkH,EA3Je,CA4JblB,ICvLE0B,GAAyB,WAC7B,IAAApkH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgR7B,SAAAgkH,GAAAznD,GAEA,IADA,IAAA0nD,EAAA,GACAz3H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA2C7C,EAAA0U,IAAQ1U,EACnDy3H,EAAA7zH,KAAAmsE,EAAA/vE,GAAAie,SAEA,OAAAw5G,EAEe,IAAAC,GA3PO,SAAA/jH,GAKtB,SAAAgkH,EAAAC,GACA,IAAA9jH,EAAAH,EAAAxT,KAAA2C,YAOA,OAFAgR,EAAA+jH,YAAAD,GAAA,KACA9jH,EAAAgkH,0BACAhkH,EAiOA,OA7OIyjH,GAASI,EAAAhkH,GAiBbgkH,EAAA/1H,UAAAm2H,0BAAA,WACA,GAAAj1H,KAAA+0H,YAGA,QAAA73H,EAAA,EAAA0U,EAAA5R,KAAA+0H,YAAAh1H,OAAqD7C,EAAA0U,IAAQ1U,EACjDwW,EAAQ1T,KAAA+0H,YAAA73H,GAAsBkY,EAASC,OAAArV,KAAAgX,QAAAhX,OAMnD60H,EAAA/1H,UAAAk2H,wBAAA,WACA,GAAAh1H,KAAA+0H,YAGA,QAAA73H,EAAA,EAAA0U,EAAA5R,KAAA+0H,YAAAh1H,OAAqD7C,EAAA0U,IAAQ1U,EACjDiW,EAAMnT,KAAA+0H,YAAA73H,GAAsBkY,EAASC,OAAArV,KAAAgX,QAAAhX,OASjD60H,EAAA/1H,UAAAqc,MAAA,WACA,IAAA+5G,EAAA,IAAAL,EAAA,MAEA,OADAK,EAAAC,cAAAn1H,KAAA+0H,aACAG,GAKAL,EAAA/1H,UAAA2wB,eAAA,SAAA3vB,EAAA0e,EAAAkR,EAAAC,GACA,GAAAA,EAAiCpR,GAAwBve,KAAAgoB,YAAAloB,EAAA0e,GACzD,OAAAmR,EAGA,IADA,IAAAs9C,EAAAjtE,KAAA+0H,YACA73H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvDyyB,EAAAs9C,EAAA/vE,GAAAuyB,eAAA3vB,EAAA0e,EAAAkR,EAAAC,GAEA,OAAAA,GAKAklG,EAAA/1H,UAAA+f,WAAA,SAAA/e,EAAA0e,GAEA,IADA,IAAAyuD,EAAAjtE,KAAA+0H,YACA73H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvD,GAAA+vE,EAAA/vE,GAAA2hB,WAAA/e,EAAA0e,GACA,SAGA,UAKAq2G,EAAA/1H,UAAAkxB,cAAA,SAAA9R,GACQkB,GAAmBlB,GAE3B,IADA,IAAA+uD,EAAAjtE,KAAA+0H,YACA73H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EAC3CyiB,GAAMzB,EAAA+uD,EAAA/vE,GAAA8qB,aAElB,OAAA9J,GAOA22G,EAAA/1H,UAAAs2H,cAAA,WACA,OAAAV,GAAA10H,KAAA+0H,cAKAF,EAAA/1H,UAAAouE,mBAAA,WACA,OAAAltE,KAAA+0H,aAKAF,EAAA/1H,UAAAic,sBAAA,SAAAwV,GAMA,GALAvwB,KAAAwvB,4BAAAxvB,KAAAiX,gBACY7W,EAAKJ,KAAAsvB,yBACjBtvB,KAAAuvB,yCAAA,EACAvvB,KAAAwvB,2BAAAxvB,KAAAiX,eAEAsZ,EAAA,GACA,IAAAvwB,KAAAuvB,0CACAgB,EAAAvwB,KAAAuvB,yCACA,OAAAvvB,KAEA,IAAAvB,EAAA8xB,EAAArjB,WACA,GAAAlN,KAAAsvB,wBAAAvwB,eAAAN,GACA,OAAAuB,KAAAsvB,wBAAA7wB,GAMA,IAHA,IAAA42H,EAAA,GACApoD,EAAAjtE,KAAA+0H,YACAO,GAAA,EACAp4H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAAmD7C,EAAA0U,IAAQ1U,EAAA,CAC3D,IAAA8d,EAAAiyD,EAAA/vE,GACAu0B,EAAAzW,EAAAD,sBAAAwV,GACA8kG,EAAAv0H,KAAA2wB,GACAA,IAAAzW,IACAs6G,GAAA,GAGA,GAAAA,EAAA,CACA,IAAAC,EAAA,IAAAV,EAAA,MAGA,OAFAU,EAAAC,mBAAAH,GACAr1H,KAAAsvB,wBAAA7wB,GAAA82H,EACAA,EAIA,OADAv1H,KAAAuvB,yCAAAgB,EACAvwB,MAQA60H,EAAA/1H,UAAA0xB,QAAA,WACA,OAAexN,GAAYQ,qBAM3BqxG,EAAA/1H,UAAA2xB,iBAAA,SAAAvS,GAEA,IADA,IAAA+uD,EAAAjtE,KAAA+0H,YACA73H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvD,GAAA+vE,EAAA/vE,GAAAuzB,iBAAAvS,GACA,SAGA,UAKA22G,EAAA/1H,UAAAkT,QAAA,WACA,WAAAhS,KAAA+0H,YAAAh1H,QAMA80H,EAAA/1H,UAAAglB,OAAA,SAAAC,EAAAC,GAEA,IADA,IAAAipD,EAAAjtE,KAAA+0H,YACA73H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvD+vE,EAAA/vE,GAAA4mB,OAAAC,EAAAC,GAEAhkB,KAAAgX,WAMA69G,EAAA/1H,UAAAoxB,MAAA,SAAA1B,EAAA2B,EAAAC,GACA,IAAApM,EAAAoM,EACApM,IACAA,EAAqBxD,GAASxgB,KAAAgoB,cAG9B,IADA,IAAAilD,EAAAjtE,KAAA+0H,YACA73H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvD+vE,EAAA/vE,GAAAgzB,MAAA1B,EAAA2B,EAAAnM,GAEAhkB,KAAAgX,WAOA69G,EAAA/1H,UAAAq2H,cAAA,SAAAloD,GACAjtE,KAAAw1H,mBAAAd,GAAAznD,KAKA4nD,EAAA/1H,UAAA02H,mBAAA,SAAAvoD,GACAjtE,KAAAi1H,4BACAj1H,KAAA+0H,YAAA9nD,EACAjtE,KAAAg1H,0BACAh1H,KAAAgX,WAMA69G,EAAA/1H,UAAAwjB,eAAA,SAAAC,GAEA,IADA,IAAA0qD,EAAAjtE,KAAA+0H,YACA73H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvD+vE,EAAA/vE,GAAAolB,eAAAC,GAEAviB,KAAAgX,WAMA69G,EAAA/1H,UAAA4xB,UAAA,SAAAtO,EAAAC,GAEA,IADA,IAAA4qD,EAAAjtE,KAAA+0H,YACA73H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvD+vE,EAAA/vE,GAAAwzB,UAAAtO,EAAAC,GAEAriB,KAAAgX,WAKA69G,EAAA/1H,UAAAkV,gBAAA,WACAhU,KAAAi1H,4BACApkH,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAEA60H,EA9OsB,CA+OpB1lG,IC7PK,SAAAsmG,GAAAl2G,EAAAhV,EAAAtE,EAAAuZ,EAAAk9B,EAAA94B,GACP,IAAAqS,EAAAlrB,IACA2qH,EAAA3qH,IACApM,GAAAsH,EAAAsE,GAAAiV,EACA,OAAA7gB,EACAs3B,EAAA1W,EAAAhV,GACAmrH,EAAAn2G,EAAAhV,EAAA,QAEA,MAAA5L,EACAs3B,GAAA,EAAAymB,GAAAn9B,EAAAhV,GACAmyC,EAAAn9B,EAAAhV,EAAAiV,GACAk2G,GAAA,EAAAh5E,GAAAn9B,EAAAhV,EAAA,GACAmyC,EAAAn9B,EAAAhV,EAAAiV,EAAA,QAEA,OAAA7gB,EAAA,CAKA,IAJA,IAAA8iB,EAAAlC,EAAAhV,GACAsX,EAAAtC,EAAAhV,EAAA,GACAylG,EAAA,EACA2lB,EAAA,IACAz4H,EAAAqN,EAAAiV,EAAqCtiB,EAAA+I,EAAS/I,GAAAsiB,EAAA,CAC9C,IAAAkC,EAAAnC,EAAAriB,GACA4kB,EAAAvC,EAAAriB,EAAA,GACA8yG,GAAA3wG,KAAAK,MAAAgiB,EAAAD,IAAAC,EAAAD,IAAAK,EAAAD,IAAAC,EAAAD,IACA8zG,EAAA70H,KAAAkvG,GACAvuF,EAAAC,EACAG,EAAAC,EAEA,IAAArQ,EAAAirC,EAAAszD,EACAzgG,E1M9BO,SAAAqmH,EAAAC,EAAAC,GAMP,IALA,IAAAC,EAAAC,EACAC,EAAAH,GAAA55G,EACArY,EAAA,EACAC,EAAA8xH,EAAA71H,OACAm2H,GAAA,EACAryH,EAAAC,IAIAkyH,GAAAC,EAAAL,EADAG,EAAAlyH,GAAAC,EAAAD,GAAA,IACAgyH,IACA,EACAhyH,EAAAkyH,EAAA,GAGAjyH,EAAAiyH,EACAG,GAAAF,GAIA,OAAAE,EAAAryH,K0MUoBsyH,CAAYR,EAAAlkH,GAChC,GAAAlC,EAAA,GACA,IAAAnR,GAAAqT,EAAAkkH,GAAApmH,EAAA,KACAomH,GAAApmH,EAAA,GAAAomH,GAAApmH,EAAA,IACA5R,EAAA4M,IAAAgF,EAAA,GAAAiQ,EACAyW,EAAqBlR,GAAIxF,EAAA5hB,GAAA4hB,EAAA5hB,EAAA6hB,GAAAphB,GACzBs3H,EAAqB3wG,GAAIxF,EAAA5hB,EAAA,GAAA4hB,EAAA5hB,EAAA6hB,EAAA,GAAAphB,QAGzB63B,EAAA1W,EAAAhV,EAAAgF,EAAAiQ,GACAk2G,EAAAn2G,EAAAhV,EAAAgF,EAAAiQ,EAAA,GAGA,OAAAoE,GACAA,EAAA,GAAAqS,EACArS,EAAA,GAAA8xG,EACA9xG,GAGA,CAAAqS,EAAAy/F,GAYO,SAAAU,GAAA72G,EAAAhV,EAAAtE,EAAAuZ,EAAAliB,EAAA+4H,GACP,GAAApwH,GAAAsE,EACA,YAEA,IAAAqU,EACA,GAAAthB,EAAAiiB,EAAAhV,EAAAiV,EAAA,GACA,OAAA62G,IACAz3G,EAAAW,EAAA/d,MAAA+I,IAAAiV,IACAA,EAAA,GAAAliB,EACAshB,GAGA,KAGA,GAAAW,EAAAtZ,EAAA,GAAA3I,EACA,OAAA+4H,IACAz3G,EAAAW,EAAA/d,MAAAyE,EAAAuZ,EAAAvZ,IACAuZ,EAAA,GAAAliB,EACAshB,GAGA,KAIA,GAAAthB,GAAAiiB,EAAAhV,EAAAiV,EAAA,GACA,OAAAD,EAAA/d,MAAA+I,IAAAiV,GAIA,IAFA,IAAA82G,EAAA/rH,EAAAiV,EACA+2G,EAAAtwH,EAAAuZ,EACA82G,EAAAC,GAAA,CACA,IAAAR,EAAAO,EAAAC,GAAA,EACAj5H,EAAAiiB,GAAAw2G,EAAA,GAAAv2G,EAAA,GACA+2G,EAAAR,EAGAO,EAAAP,EAAA,EAGA,IAAAS,EAAAj3G,EAAA+2G,EAAA92G,EAAA,GACA,GAAAliB,GAAAk5H,EACA,OAAAj3G,EAAA/d,OAAA80H,EAAA,GAAA92G,GAAA82G,EAAA,GAAA92G,KAEA,IACAphB,GAAAd,EAAAk5H,IADAj3G,GAAA+2G,EAAA,GAAA92G,EAAA,GACAg3G,GACA53G,EAAA,GACA,QAAA1hB,EAAA,EAAmBA,EAAAsiB,EAAA,IAAgBtiB,EACnC0hB,EAAA9d,KAAwBikB,GAAIxF,GAAA+2G,EAAA,GAAA92G,EAAAtiB,GAAAqiB,EAAA+2G,EAAA92G,EAAAtiB,GAAAkB,IAG5B,OADAwgB,EAAA9d,KAAAxD,GACAshB,EClHO,SAAA63G,GAAAl3G,EAAAhV,EAAAtE,EAAAuZ,GAIP,IAHA,IAAAiC,EAAAlC,EAAAhV,GACAsX,EAAAtC,EAAAhV,EAAA,GACAxK,EAAA,EACA7C,EAAAqN,EAAAiV,EAAiCtiB,EAAA+I,EAAS/I,GAAAsiB,EAAA,CAC1C,IAAAkC,EAAAnC,EAAAriB,GACA4kB,EAAAvC,EAAAriB,EAAA,GACA6C,GAAAV,KAAAK,MAAAgiB,EAAAD,IAAAC,EAAAD,IAAAK,EAAAD,IAAAC,EAAAD,IACAJ,EAAAC,EACAG,EAAAC,EAEA,OAAA/hB,ECrBA,IAAI22H,GAAyB,WAC7B,IAAArmH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+NdimH,GA5LD,SAAA9lH,GAOd,SAAA+lH,EAAA34G,EAAA6T,GACA,IAAA9gB,EAAAH,EAAAxT,KAAA2C,YA2BA,OAtBAgR,EAAA6lH,cAAA,KAKA7lH,EAAA8lH,uBAAA,EAKA9lH,EAAAmkB,WAAA,EAKAnkB,EAAAokB,mBAAA,OACAxiB,IAAAkf,GAAA1lB,MAAA+K,QAAA8G,EAAA,IAIAjN,EAAA6gB,eAAyF,EAAAC,GAHzF9gB,EAAA4gB,mBAAAE,EAA0E,GAK1E9gB,EAuJA,OAzLI0lH,GAASE,EAAA/lH,GAyCb+lH,EAAA93H,UAAAi4H,iBAAA,SAAAn4G,GACA5e,KAAAuf,gBAIY/F,EAAMxZ,KAAAuf,gBAAAX,GAHlB5e,KAAAuf,gBAAAX,EAAApd,QAKAxB,KAAAgX,WAQA4/G,EAAA93H,UAAAqc,MAAA,WACA,WAAAy7G,EAAA52H,KAAAuf,gBAAA/d,QAAAxB,KAAAixB,SAKA2lG,EAAA93H,UAAA2wB,eAAA,SAAA3vB,EAAA0e,EAAAkR,EAAAC,GACA,OAAAA,EAAiCpR,GAAwBve,KAAAgoB,YAAAloB,EAAA0e,GACzDmR,GAEA3vB,KAAAo1B,mBAAAp1B,KAAAiX,gBACAjX,KAAAm1B,UAAA91B,KAAAK,KAAuCgzB,GAAe1yB,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAA,IACtDxf,KAAAo1B,kBAAAp1B,KAAAiX,eAEe4b,GAAkB7yB,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAAxf,KAAAm1B,WAAA,EAAAr1B,EAAA0e,EAAAkR,EAAAC,KAajCinG,EAAA93H,UAAAk4H,eAAA,SAAAnoH,GACA,OAAe4K,GAAczZ,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAA3Q,IAgB7B+nH,EAAA93H,UAAAm4H,iBAAA,SAAA35H,EAAA45H,GACA,GAAAl3H,KAAAixB,QAA2BtO,GAAcG,KACzC9iB,KAAAixB,QAA2BtO,GAAcI,KACzC,YAEA,IAAAszG,OAAAzjH,IAAAskH,KACA,OAAed,GAAuBp2H,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAAliB,EAAA+4H,IAQtCO,EAAA93H,UAAAsyB,eAAA,WACA,OAAeqC,GAAkBzzB,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,SAYjCo3G,EAAA93H,UAAAq4H,gBAAA,SAAAz6E,EAAA94B,GACA,OAAe6xG,GAAgBz1H,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAAk9B,EAAA94B,IAO/BgzG,EAAA93H,UAAAya,UAAA,WACA,OAAek9G,GAAgBz2H,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,SAK/Bo3G,EAAA93H,UAAAsuE,gBAAA,WAKA,OAJAptE,KAAA82H,uBAAA92H,KAAAiX,gBACAjX,KAAA62H,cAAA72H,KAAAm3H,gBAAA,GAAAn3H,KAAA62H,eACA72H,KAAA82H,sBAAA92H,KAAAiX,eAEAjX,KAAA62H,eAKAD,EAAA93H,UAAA4yB,8BAAA,SAAAnB,GACA,IAAA2D,EAAA,GAEA,OADAA,EAAAn0B,OAA2Ck0B,GAAcj0B,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAA+Q,EAAA2D,EAAA,GACzD,IAAA0iG,EAAA1iG,EAAyDvR,GAAcC,KAMvEg0G,EAAA93H,UAAA0xB,QAAA,WACA,OAAexN,GAAYE,aAM3B0zG,EAAA93H,UAAA2xB,iBAAA,SAAAvS,GACA,OAAesY,GAAoBx2B,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAAtB,IASnC04G,EAAA93H,UAAA+yB,eAAA,SAAA5T,EAAA6T,GACA9xB,KAAA+xB,UAAAD,EAAA7T,EAAA,GACAje,KAAAuf,kBACAvf,KAAAuf,gBAAA,IAEAvf,KAAAuf,gBAAAxf,OAAsCszB,GAAkBrzB,KAAAuf,gBAAA,EAAAtB,EAAAje,KAAAwf,QACxDxf,KAAAgX,WAEA4/G,EA1Lc,CA2LZ1lG,IC9NEkmG,GAAyB,WAC7B,IAAA/mH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAmQd2mH,GAjOI,SAAAxmH,GASnB,SAAAymH,EAAAr5G,EAAA6T,EAAA0B,GACA,IAAAxiB,EAAAH,EAAAxT,KAAA2C,YAgBA,GAXAgR,EAAAknB,MAAA,GAKAlnB,EAAAmkB,WAAA,EAKAnkB,EAAAokB,mBAAA,EACAhpB,MAAA+K,QAAA8G,EAAA,IACAjN,EAAA6gB,eAAgG,EAAAC,QAEhG,QAAAlf,IAAAkf,GAAA0B,EACAxiB,EAAA4gB,mBAAAE,EAA0E,GAC1E9gB,EAAAknB,MAAA1E,MAEA,CAKA,IAJA,IAAAvC,EAAAjgB,EAAAwgB,YACA+lG,EAA2D,EAC3Dh4G,EAAA,GACA+S,EAAA,GACAp1B,EAAA,EAAA0U,EAAA2lH,EAAAx3H,OAAoD7C,EAAA0U,IAAQ1U,EAAA,CAC5D,IAAAs6H,EAAAD,EAAAr6H,GACA,IAAAA,IACA+zB,EAAAumG,EAAAhmG,aAEgBhY,EAAM+F,EAAAi4G,EAAAlmG,sBACtBgB,EAAAxxB,KAAAye,EAAAxf,QAEAiR,EAAA4gB,mBAAAX,EAAA1R,GACAvO,EAAAknB,MAAA5F,EAEA,OAAAthB,EA8KA,OA9NIomH,GAASE,EAAAzmH,GAuDbymH,EAAAx4H,UAAA24H,iBAAA,SAAAD,GACAx3H,KAAAuf,gBAIY/F,EAAMxZ,KAAAuf,gBAAAi4G,EAAAlmG,qBAAA9vB,SAHlBxB,KAAAuf,gBAAAi4G,EAAAlmG,qBAAA9vB,QAKAxB,KAAAk4B,MAAAp3B,KAAAd,KAAAuf,gBAAAxf,QACAC,KAAAgX,WAQAsgH,EAAAx4H,UAAAqc,MAAA,WACA,WAAAm8G,EAAAt3H,KAAAuf,gBAAA/d,QAAAxB,KAAAixB,OAAAjxB,KAAAk4B,MAAA12B,UAKA81H,EAAAx4H,UAAA2wB,eAAA,SAAA3vB,EAAA0e,EAAAkR,EAAAC,GACA,OAAAA,EAAiCpR,GAAwBve,KAAAgoB,YAAAloB,EAAA0e,GACzDmR,GAEA3vB,KAAAo1B,mBAAAp1B,KAAAiX,gBACAjX,KAAAm1B,UAAA91B,KAAAK,KAAuCkzB,GAAoB5yB,KAAAuf,gBAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,OAAA,IAC3Dxf,KAAAo1B,kBAAAp1B,KAAAiX,eAEekc,GAAuBnzB,KAAAuf,gBAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,OAAAxf,KAAAm1B,WAAA,EAAAr1B,EAAA0e,EAAAkR,EAAAC,KAwBtC2nG,EAAAx4H,UAAAm4H,iBAAA,SAAA35H,EAAA45H,EAAAQ,GACA,GAAA13H,KAAAixB,QAA4BtO,GAAcG,KAC1C9iB,KAAAixB,QAA2BtO,GAAcI,MACzC,IAAA/iB,KAAAuf,gBAAAxf,OACA,YAEA,IAAAs2H,OAAAzjH,IAAAskH,KACAS,OAAA/kH,IAAA8kH,KACA,OHhBO,SAAAn4G,EAAAhV,EAAA+nB,EAAA9S,EAAAliB,EAAA+4H,EAAAsB,GACP,GAAAA,EACA,OAAAvB,GAAA72G,EAAAhV,EAAA+nB,IAAAvyB,OAAA,GAAAyf,EAAAliB,EAAA+4H,GAEA,IAAAz3G,EACA,GAAAthB,EAAAiiB,EAAAC,EAAA,GACA,OAAA62G,IACAz3G,EAAAW,EAAA/d,MAAA,EAAAge,IACAA,EAAA,GAAAliB,EACAshB,GAGA,KAGA,GAAAW,IAAAxf,OAAA,GAAAzC,EACA,OAAA+4H,IACAz3G,EAAAW,EAAA/d,MAAA+d,EAAAxf,OAAAyf,IACAA,EAAA,GAAAliB,EACAshB,GAGA,KAGA,QAAA1hB,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAAA,CAC7C,IAAA+I,EAAAqsB,EAAAp1B,GACA,GAAAqN,GAAAtE,EAAA,CAGA,GAAA3I,EAAAiiB,EAAAhV,EAAAiV,EAAA,GACA,YAEA,GAAAliB,GAAAiiB,EAAAtZ,EAAA,GACA,OAAAmwH,GAAA72G,EAAAhV,EAAAtE,EAAAuZ,EAAAliB,GAAA,GAEAiN,EAAAtE,GAEA,YGtBe2xH,CAAwB53H,KAAAuf,gBAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,OAAAliB,EAAA+4H,EAAAsB,IAQvCL,EAAAx4H,UAAAsyB,eAAA,WACA,OAAeuC,GAAuB3zB,KAAAuf,gBAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,SAKtC83G,EAAAx4H,UAAA45B,QAAA,WACA,OAAA14B,KAAAk4B,OAQAo/F,EAAAx4H,UAAA+4H,cAAA,SAAAtoH,GACA,OAAAA,EAAA,GAAAvP,KAAAk4B,MAAAn4B,QAAAwP,EACA,KAEA,IAAmBonH,GAAU32H,KAAAuf,gBAAA/d,MAAA,IAAA+N,EAAA,EAAAvP,KAAAk4B,MAAA3oB,EAAA,GAAAvP,KAAAk4B,MAAA3oB,IAAAvP,KAAAixB,SAO7BqmG,EAAAx4H,UAAAg5H,eAAA,WAOA,IANA,IAAAv4G,EAAAvf,KAAAuf,gBACA+S,EAAAtyB,KAAAk4B,MACAjH,EAAAjxB,KAAAixB,OAEAsmG,EAAA,GACAhtH,EAAA,EACArN,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAyC7C,EAAA0U,IAAQ1U,EAAA,CACjD,IAAA+I,EAAAqsB,EAAAp1B,GACAs6H,EAAA,IAAiCb,GAAUp3G,EAAA/d,MAAA+I,EAAAtE,GAAAgrB,GAC3CsmG,EAAAz2H,KAAA02H,GACAjtH,EAAAtE,EAEA,OAAAsxH,GAKAD,EAAAx4H,UAAAyuE,iBAAA,WAMA,IALA,IAAAwqD,EAAA,GACAx4G,EAAAvf,KAAAuf,gBACAhV,EAAA,EACA+nB,EAAAtyB,KAAAk4B,MACA1Y,EAAAxf,KAAAwf,OACAtiB,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAyC7C,EAAA0U,IAAQ1U,EAAA,CACjD,IAAA+I,EAAAqsB,EAAAp1B,GAEYsc,EAAMu+G,EADStC,GAAgBl2G,EAAAhV,EAAAtE,EAAAuZ,EAAA,KAE3CjV,EAAAtE,EAEA,OAAA8xH,GAKAT,EAAAx4H,UAAA4yB,8BAAA,SAAAnB,GACA,IAAA2D,EAAA,GACAS,EAAA,GAEA,OADAT,EAAAn0B,OAA2C20B,GAAmB10B,KAAAuf,gBAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,OAAA+Q,EAAA2D,EAAA,EAAAS,GAC9D,IAAA2iG,EAAApjG,EAA8DvR,GAAcC,GAAA+R,IAM5E2iG,EAAAx4H,UAAA0xB,QAAA,WACA,OAAexN,GAAYM,mBAM3Bg0G,EAAAx4H,UAAA2xB,iBAAA,SAAAvS,GACA,OhL9LO,SAAAqB,EAAAhV,EAAA+nB,EAAA9S,EAAAtB,GACP,QAAAhhB,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAqC7C,EAAA0U,IAAQ1U,EAAA,CAC7C,GAAAs5B,GAAAjX,EAAAhV,EAAA+nB,EAAAp1B,GAAAsiB,EAAAtB,GACA,SAEA3T,EAAA+nB,EAAAp1B,GAEA,SgLuLe86H,CAAyBh4H,KAAAuf,gBAAA,EAAAvf,KAAAk4B,MAAAl4B,KAAAwf,OAAAtB,IASxCo5G,EAAAx4H,UAAA+yB,eAAA,SAAA5T,EAAA6T,GACA9xB,KAAA+xB,UAAAD,EAAA7T,EAAA,GACAje,KAAAuf,kBACAvf,KAAAuf,gBAAA,IAEA,IAAA+S,EAAmBgB,GAAuBtzB,KAAAuf,gBAAA,EAAAtB,EAAAje,KAAAwf,OAAAxf,KAAAk4B,OAC1Cl4B,KAAAuf,gBAAAxf,OAAA,IAAAuyB,EAAAvyB,OAAA,EAAAuyB,IAAAvyB,OAAA,GACAC,KAAAgX,WAEAsgH,EA/NmB,CAgOjBpmG,IClQE+mG,GAAyB,WAC7B,IAAA5nH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2KdwnH,GA7ID,SAAArnH,GAOd,SAAAsnH,EAAAl6G,EAAA6T,GACA,IAAA9gB,EAAAH,EAAAxT,KAAA2C,YAOA,OANA8xB,IAAA1lB,MAAA+K,QAAA8G,EAAA,IACAjN,EAAA4gB,mBAAAE,EAA0E,GAG1E9gB,EAAA6gB,eAAyF,EAAAC,GAEzF9gB,EA4HA,OA1IIinH,GAASE,EAAAtnH,GAqBbsnH,EAAAr5H,UAAAs5H,YAAA,SAAA9uG,GACAtpB,KAAAuf,gBAIY/F,EAAMxZ,KAAAuf,gBAAA+J,EAAAgI,sBAHlBtxB,KAAAuf,gBAAA+J,EAAAgI,qBAAA9vB,QAKAxB,KAAAgX,WAQAmhH,EAAAr5H,UAAAqc,MAAA,WAEA,OADA,IAAAg9G,EAAAn4H,KAAAuf,gBAAA/d,QAAAxB,KAAAixB,SAMAknG,EAAAr5H,UAAA2wB,eAAA,SAAA3vB,EAAA0e,EAAAkR,EAAAC,GACA,GAAAA,EAAiCpR,GAAwBve,KAAAgoB,YAAAloB,EAAA0e,GACzD,OAAAmR,EAIA,IAFA,IAAApQ,EAAAvf,KAAAuf,gBACAC,EAAAxf,KAAAwf,OACAtiB,EAAA,EAAA0U,EAAA2N,EAAAxf,OAAoD7C,EAAA0U,EAAQ1U,GAAAsiB,EAAA,CAC5D,IAAAyT,EAAkCzO,GAAS1kB,EAAA0e,EAAAe,EAAAriB,GAAAqiB,EAAAriB,EAAA,IAC3C,GAAA+1B,EAAAtD,EAAA,CACAA,EAAAsD,EACA,QAAAzmB,EAAA,EAA+BA,EAAAgT,IAAYhT,EAC3CkjB,EAAAljB,GAAA+S,EAAAriB,EAAAsP,GAEAkjB,EAAA3vB,OAAAyf,GAGA,OAAAmQ,GAQAwoG,EAAAr5H,UAAAsyB,eAAA,WACA,OAAeqC,GAAkBzzB,KAAAuf,gBAAA,EAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,SAQjC24G,EAAAr5H,UAAAu5H,SAAA,SAAA9oH,GACA,IAAA5Q,EAAAqB,KAAAuf,gBAAAvf,KAAAuf,gBAAAxf,OAAAC,KAAAwf,OAAA,EACA,OAAAjQ,EAAA,GAAA5Q,GAAA4Q,EACA,KAEA,IAAmB+lB,GAAKt1B,KAAAuf,gBAAA/d,MAAA+N,EAAAvP,KAAAwf,QAAAjQ,EAAA,GAAAvP,KAAAwf,QAAAxf,KAAAixB,SAOxBknG,EAAAr5H,UAAAmwF,UAAA,WAMA,IALA,IAAA1vE,EAAAvf,KAAAuf,gBACA0R,EAAAjxB,KAAAixB,OACAzR,EAAAxf,KAAAwf,OAEAgvE,EAAA,GACAtxF,EAAA,EAAA0U,EAAA2N,EAAAxf,OAAoD7C,EAAA0U,EAAQ1U,GAAAsiB,EAAA,CAC5D,IAAA8J,EAAA,IAA4BgM,GAAK/V,EAAA/d,MAAAtE,IAAAsiB,GAAAyR,GACjCu9D,EAAA1tF,KAAAwoB,GAEA,OAAAklE,GAMA2pC,EAAAr5H,UAAA0xB,QAAA,WACA,OAAexN,GAAYK,aAM3B80G,EAAAr5H,UAAA2xB,iBAAA,SAAAvS,GAGA,IAFA,IAAAqB,EAAAvf,KAAAuf,gBACAC,EAAAxf,KAAAwf,OACAtiB,EAAA,EAAA0U,EAAA2N,EAAAxf,OAAoD7C,EAAA0U,EAAQ1U,GAAAsiB,EAAA,CAG5D,GAAgBX,GAAUX,EAF1BqB,EAAAriB,GACAqiB,EAAAriB,EAAA,IAEA,SAGA,UASAi7H,EAAAr5H,UAAA+yB,eAAA,SAAA5T,EAAA6T,GACA9xB,KAAA+xB,UAAAD,EAAA7T,EAAA,GACAje,KAAAuf,kBACAvf,KAAAuf,gBAAA,IAEAvf,KAAAuf,gBAAAxf,OAAsCszB,GAAkBrzB,KAAAuf,gBAAA,EAAAtB,EAAAje,KAAAwf,QACxDxf,KAAAgX,WAEAmhH,EA3Ic,CA4IZjnG,IC/JK,SAASonG,GAAY/4G,EAAAhV,EAAAupB,EAAAtU,GAG5B,IAFA,IAAAqW,EAAA,GACA3X,E5M+KA,CAAAlT,SAAA,U4M9KA9N,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAo1B,EAAAwB,EAAA52B,GACAghB,EAAiBoB,GAAiCC,EAAAhV,EAAA+nB,EAAA,GAAA9S,GAClDqW,EAAA/0B,MAAAod,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAA,EAAA,OACA3T,EAAA+nB,IAAAvyB,OAAA,GAEA,OAAA81B,ECpBA,IAAI0iG,GAAyB,WAC7B,IAAAloH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6Vd8nH,GAtTC,SAAA3nH,GAQhB,SAAA4nH,EAAAx6G,EAAA6T,EAAA4mG,GACA,IAAA1nH,EAAAH,EAAAxT,KAAA2C,YAoCA,GA/BAgR,EAAA2nH,OAAA,GAKA3nH,EAAA4nH,6BAAA,EAKA5nH,EAAA6nH,oBAAA,KAKA7nH,EAAAmkB,WAAA,EAKAnkB,EAAAokB,mBAAA,EAKApkB,EAAAqnB,mBAAA,EAKArnB,EAAAsnB,yBAAA,MACAogG,IAAAtsH,MAAA+K,QAAA8G,EAAA,KAKA,IAJA,IAAAgT,EAAAjgB,EAAAwgB,YACAsnG,EAAqD,EACrDv5G,EAAA,GACAuU,EAAA,GACA52B,EAAA,EAAA0U,EAAAknH,EAAA/4H,OAAiD7C,EAAA0U,IAAQ1U,EAAA,CACzD,IAAA28B,EAAAi/F,EAAA57H,GACA,IAAAA,IACA+zB,EAAA4I,EAAArI,aAIA,IAFA,IAAAjnB,EAAAgV,EAAAxf,OACAuyB,EAAAuH,EAAAnB,UACAlsB,EAAA,EAAA8C,EAAAgjB,EAAAvyB,OAAiDyM,EAAA8C,IAAQ9C,EACzD8lB,EAAA9lB,IAAAjC,EAEgBiP,EAAM+F,EAAAsa,EAAAvI,sBACtBwC,EAAAhzB,KAAAwxB,GAEAR,EAAAb,EACAhT,EAAAsB,EACAm5G,EAAA5kG,EASA,YAPAlhB,IAAAkf,GAAA4mG,GACA1nH,EAAA4gB,mBAAAE,EAA0E,GAC1E9gB,EAAA2nH,OAAAD,GAGA1nH,EAAA6gB,eAAuG,EAAAC,GAEvG9gB,EA0OA,OAnTIunH,GAASE,EAAA5nH,GAgFb4nH,EAAA35H,UAAAi6H,cAAA,SAAAl/F,GAEA,IAAAvH,EACA,GAAAtyB,KAAAuf,gBAKA,CACA,IAAAhV,EAAAvK,KAAAuf,gBAAAxf,OACYyZ,EAAMxZ,KAAAuf,gBAAAsa,EAAAvI,sBAElB,QAAAp0B,EAAA,EAAA0U,GADA0gB,EAAAuH,EAAAnB,UAAAl3B,SACAzB,OAA6C7C,EAAA0U,IAAQ1U,EACrDo1B,EAAAp1B,IAAAqN,OATAvK,KAAAuf,gBAAAsa,EAAAvI,qBAAA9vB,QACA8wB,EAAAuH,EAAAnB,UAAAl3B,QACAxB,KAAA24H,OAAA73H,OAUAd,KAAA24H,OAAA73H,KAAAwxB,GACAtyB,KAAAgX,WAQAyhH,EAAA35H,UAAAqc,MAAA,WAGA,IAFA,IAAAjX,EAAAlE,KAAA24H,OAAA54H,OACAi5H,EAAA,IAAA5sH,MAAAlI,GACAhH,EAAA,EAAuBA,EAAAgH,IAAShH,EAChC87H,EAAA97H,GAAA8C,KAAA24H,OAAAz7H,GAAAsE,QAEA,WAAAi3H,EAAAz4H,KAAAuf,gBAAA/d,QAAAxB,KAAAixB,OAAA+nG,IAKAP,EAAA35H,UAAA2wB,eAAA,SAAA3vB,EAAA0e,EAAAkR,EAAAC,GACA,OAAAA,EAAiCpR,GAAwBve,KAAAgoB,YAAAloB,EAAA0e,GACzDmR,GAEA3vB,KAAAo1B,mBAAAp1B,KAAAiX,gBACAjX,KAAAm1B,UAAA91B,KAAAK,K5LlEO,SAAA6f,EAAAhV,EAAAupB,EAAAtU,EAAA7f,GACP,QAAAzC,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAo1B,EAAAwB,EAAA52B,GACAyC,EAAAizB,GAAArT,EAAAhV,EAAA+nB,EAAA9S,EAAA7f,GACA4K,EAAA+nB,IAAAvyB,OAAA,GAEA,OAAAJ,E4L4DuCs5H,CAAyBj5H,KAAAuf,gBAAA,EAAAvf,KAAA24H,OAAA34H,KAAAwf,OAAA,IAChExf,KAAAo1B,kBAAAp1B,KAAAiX,e5LqDO,SAAAsI,EAAAhV,EAAAupB,EAAAtU,EAAAsT,EAAAC,EAAAjzB,EAAA0e,EAAAkR,EAAAC,EAAAqD,GAEP,IADA,IAAAE,EAAAF,GAAA,CAAAjoB,SACA7N,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAo1B,EAAAwB,EAAA52B,GACAyyB,EAAAwD,GAAA5T,EAAAhV,EAAA+nB,EAAA9S,EAAAsT,EAAAC,EAAAjzB,EAAA0e,EAAAkR,EAAAC,EAAAuD,GACA3oB,EAAA+nB,IAAAvyB,OAAA,GAEA,OAAA4vB,E4L1DeupG,CAA4Bl5H,KAAAy4B,6BAAA,EAAAz4B,KAAA24H,OAAA34H,KAAAwf,OAAAxf,KAAAm1B,WAAA,EAAAr1B,EAAA0e,EAAAkR,EAAAC,KAK3C8oG,EAAA35H,UAAA+f,WAAA,SAAA/e,EAAA0e,GACA,OtL/EO,SAAAe,EAAAhV,EAAAupB,EAAAtU,EAAA1f,EAAA0e,GACP,OAAAsV,EAAA/zB,OACA,SAEA,QAAA7C,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAo1B,EAAAwB,EAAA52B,GACA,GAAAy4B,GAAApW,EAAAhV,EAAA+nB,EAAA9S,EAAA1f,EAAA0e,GACA,SAEAjU,EAAA+nB,IAAAvyB,OAAA,GAEA,SsLoEeo5H,CAAsBn5H,KAAAy4B,6BAAA,EAAAz4B,KAAA24H,OAAA34H,KAAAwf,OAAA1f,EAAA0e,IAOrCi6G,EAAA35H,UAAAqhB,QAAA,WACA,O7LpIO,SAAAZ,EAAAhV,EAAAupB,EAAAtU,GAEP,IADA,IAAAY,EAAA,EACAljB,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAo1B,EAAAwB,EAAA52B,GACAkjB,GAAgBiS,GAAW9S,EAAAhV,EAAA+nB,EAAA9S,GAC3BjV,EAAA+nB,IAAAvyB,OAAA,GAEA,OAAAqgB,E6L6Heg5G,CAAgBp5H,KAAAy4B,6BAAA,EAAAz4B,KAAA24H,OAAA34H,KAAAwf,SAgB/Bi5G,EAAA35H,UAAAsyB,eAAA,SAAAsG,GACA,IAAAnY,EAQA,YAPA3M,IAAA8kB,EAEYI,GADZvY,EAAAvf,KAAAy4B,6BAAAj3B,QACkC,EAAAxB,KAAA24H,OAAA34H,KAAAwf,OAAAkY,GAGlCnY,EAAAvf,KAAAuf,gBAEesU,GAA4BtU,EAAA,EAAAvf,KAAA24H,OAAA34H,KAAAwf,SAK3Ci5G,EAAA35H,UAAA2uE,SAAA,WACA,OAAAztE,KAAA24H,QAKAF,EAAA35H,UAAA6uE,sBAAA,WACA,GAAA3tE,KAAA44H,6BAAA54H,KAAAiX,cAAA,CACA,IAAA4e,EAA8ByiG,GAAkBt4H,KAAAuf,gBAAA,EAAAvf,KAAA24H,OAAA34H,KAAAwf,QAChDxf,KAAA64H,oBAAuC1iG,GAA6Bn2B,KAAAy4B,6BAAA,EAAAz4B,KAAA24H,OAAA34H,KAAAwf,OAAAqW,GACpE71B,KAAA44H,4BAAA54H,KAAAiX,cAEA,OAAAjX,KAAA64H,qBAQAJ,EAAA35H,UAAAu6H,kBAAA,WACA,WAAmBnB,GAAUl4H,KAAA2tE,wBAAAnsE,QAAuCmhB,GAAcG,MAKlF21G,EAAA35H,UAAA25B,2BAAA,WACA,GAAAz4B,KAAAq4B,mBAAAr4B,KAAAiX,cAAA,CACA,IAAAsI,EAAAvf,KAAAuf,iBjLrKO,SAAAA,EAAAhV,EAAAupB,EAAAtU,EAAAkY,GACP,QAAAx6B,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAo1B,EAAAwB,EAAA52B,GACA,IAAAu6B,GAAAlY,EAAAhV,EAAA+nB,EAAA9S,EAAAkY,GACA,SAEApF,EAAAvyB,SACAwK,EAAA+nB,IAAAvyB,OAAA,IAGA,SiL4JgBu5H,CAAuB/5G,EAAA,EAAAvf,KAAA24H,OAAA34H,KAAAwf,SAIvCxf,KAAAs4B,yBAAA/Y,EAAA/d,QACAxB,KAAAs4B,yBAAAv4B,OACoB+3B,GAAsB93B,KAAAs4B,yBAAA,EAAAt4B,KAAA24H,OAAA34H,KAAAwf,SAL1Cxf,KAAAs4B,yBAAA/Y,EAOAvf,KAAAq4B,kBAAAr4B,KAAAiX,cAEA,OAAAjX,KAAAs4B,0BAKAmgG,EAAA35H,UAAA4yB,8BAAA,SAAAnB,GACA,IAAA2D,EAAA,GACAqlG,EAAA,GAEA,OADArlG,EAAAn0B,OzLkFO,SAAAwf,EAAAhV,EAAAupB,EAAAtU,EAAA8Q,EAAA4D,EAAAC,EAAAolG,GACP,QAAAr8H,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAo1B,EAAAwB,EAAA52B,GACAy3B,EAAA,GACAR,EAAAY,GAAAxV,EAAAhV,EAAA+nB,EAAA9S,EAAA8Q,EAAA4D,EAAAC,EAAAQ,GACA4kG,EAAAz4H,KAAA6zB,GACApqB,EAAA+nB,IAAAvyB,OAAA,GAEA,OAAAo0B,EyL1F2CqlG,CAAkBx5H,KAAAuf,gBAAA,EAAAvf,KAAA24H,OAAA34H,KAAAwf,OAAAngB,KAAAK,KAAA6wB,GAAA2D,EAAA,EAAAqlG,GAC7D,IAAAd,EAAAvkG,EAA2DvR,GAAcC,GAAA22G,IAQzEd,EAAA35H,UAAA26H,WAAA,SAAAlqH,GACA,GAAAA,EAAA,GAAAvP,KAAA24H,OAAA54H,QAAAwP,EACA,YAEA,IAAAhF,EACA,OAAAgF,EACAhF,EAAA,MAEA,CACA,IAAAmvH,EAAA15H,KAAA24H,OAAAppH,EAAA,GACAhF,EAAAmvH,IAAA35H,OAAA,GAEA,IAAAuyB,EAAAtyB,KAAA24H,OAAAppH,GAAA/N,QACAyE,EAAAqsB,IAAAvyB,OAAA,GACA,OAAAwK,EACA,QAAArN,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAA6C7C,EAAA0U,IAAQ1U,EACrDo1B,EAAAp1B,IAAAqN,EAGA,WAAmB2uB,GAAOl5B,KAAAuf,gBAAA/d,MAAA+I,EAAAtE,GAAAjG,KAAAixB,OAAAqB,IAO1BmmG,EAAA35H,UAAA66H,YAAA,WAMA,IALA,IAAA1oG,EAAAjxB,KAAAixB,OACA1R,EAAAvf,KAAAuf,gBACAuU,EAAA9zB,KAAA24H,OACAG,EAAA,GACAvuH,EAAA,EACArN,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAA0C7C,EAAA0U,IAAQ1U,EAAA,CAClD,IAAAo1B,EAAAwB,EAAA52B,GAAAsE,QACAyE,EAAAqsB,IAAAvyB,OAAA,GACA,OAAAwK,EACA,QAAAiC,EAAA,EAAA8C,EAAAgjB,EAAAvyB,OAAiDyM,EAAA8C,IAAQ9C,EACzD8lB,EAAA9lB,IAAAjC,EAGA,IAAAsvB,EAAA,IAA8BX,GAAO3Z,EAAA/d,MAAA+I,EAAAtE,GAAAgrB,EAAAqB,GACrCwmG,EAAAh4H,KAAA+4B,GACAtvB,EAAAtE,EAEA,OAAA6yH,GAMAL,EAAA35H,UAAA0xB,QAAA,WACA,OAAexN,GAAYO,eAM3Bk1G,EAAA35H,UAAA2xB,iBAAA,SAAAvS,GACA,OnL9MO,SAAAqB,EAAAhV,EAAAupB,EAAAtU,EAAAtB,GACP,QAAAhhB,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAo1B,EAAAwB,EAAA52B,GACA,GAAAk6B,GAAA7X,EAAAhV,EAAA+nB,EAAA9S,EAAAtB,GACA,SAEA3T,EAAA+nB,IAAAvyB,OAAA,GAEA,SmLsMe65H,CAA8B55H,KAAAy4B,6BAAA,EAAAz4B,KAAA24H,OAAA34H,KAAAwf,OAAAtB,IAS7Cu6G,EAAA35H,UAAA+yB,eAAA,SAAA5T,EAAA6T,GACA9xB,KAAA+xB,UAAAD,EAAA7T,EAAA,GACAje,KAAAuf,kBACAvf,KAAAuf,gBAAA,IAEA,IAAAuU,E3LrRO,SAAAvU,EAAAhV,EAAAypB,EAAAxU,EAAAk5G,GAGP,IAFA,IAAA5kG,EAAA4kG,GAAA,GACAx7H,EAAA,EACAsP,EAAA,EAAA8C,EAAA0kB,EAAAj0B,OAA8CyM,EAAA8C,IAAQ9C,EAAA,CACtD,IAAA8lB,EAAAgB,GAAA/T,EAAAhV,EAAAypB,EAAAxnB,GAAAgT,EAAAsU,EAAA52B,IACA42B,EAAA52B,KAAAo1B,EACA/nB,EAAA+nB,IAAAvyB,OAAA,GAGA,OADA+zB,EAAA/zB,OAAA7C,EACA42B,E2L4QoB+lG,CAA4B75H,KAAAuf,gBAAA,EAAAtB,EAAAje,KAAAwf,OAAAxf,KAAA24H,QAChD,OAAA7kG,EAAA/zB,OACAC,KAAAuf,gBAAAxf,OAAA,MAEA,CACA,IAAA+5H,EAAAhmG,IAAA/zB,OAAA,GACAC,KAAAuf,gBAAAxf,OAAA,IAAA+5H,EAAA/5H,OACA,EAAA+5H,IAAA/5H,OAAA,GAEAC,KAAAgX,WAEAyhH,EApTgB,CAqTdvnG,ICzVE6oG,GAAyB,WAC7B,IAAA1pH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgP7B,SAAA2iH,GAAAz0H,EAAAoa,GACA,IAAApa,EACA,YAKA,IAAAoc,EACA,OAAApc,EAAA,MACA,KAAaokB,GAAYC,MACzBjI,EAqDA,SAAApc,GACA,WAAe02B,GAAK12B,EAAA,aAtDpBo7H,CAAiE,GACjE,MAEA,KAAah3G,GAAYE,YACzBlI,EAwDA,SAAApc,GACA,WAAe+3H,GAAU/3H,EAAA,aAzDzBq7H,CAA2E,GAC3E,MAEA,KAAaj3G,GAAYI,QACzBpI,EAgFA,SAAApc,GACA,WAAes6B,GAAOt6B,EAAA,aAjFtBs7H,CAAqE,GACrE,MAEA,KAAal3G,GAAYK,YACzBrI,EA8DA,SAAApc,GACA,WAAes5H,GAAUt5H,EAAA,aA/DzBu7H,CAA2E,GAC3E,MAEA,KAAan3G,GAAYM,kBACzBtI,EAmDA,SAAApc,GACA,WAAey4H,GAAez4H,EAAA,aApD9Bw7H,CAAqF,GACrF,MAEA,KAAap3G,GAAYO,cACzBvI,EA6DA,SAAApc,GACA,WAAe45H,GAAY55H,EAAA,aA9D3By7H,CAA+E,GAC/E,MAEA,KAAar3G,GAAYQ,oBACzBxI,EAcA,SAAApc,EAAAoa,GACA,IAAAi0D,EAAAruE,EAAA,WAAAqO,IAKA,SAAA+N,GACA,OAAAq4G,GAAAr4G,EAAAhC,KAEA,WAAe47G,GAAkB3nD,GAvBjCqtD,CAA2F,GAC3F,MAEA,QACA,UAAAzzH,MAAA,6BAAAjI,EAAAwE,MAGA,OAAWqwH,GAA4Bz4G,GAAA,EAAAhC,GAiEvC,SAAAw6G,GAAAx4G,EAAAhC,GAEA,IAEAuhH,EAFAn3H,GADA4X,EAAey4G,GAA4Bz4G,GAAA,EAAAhC,IAC3CwX,UAGA,OAAAptB,GACA,KAAa4f,GAAYC,MACzBs3G,EA6GA,SAAAv/G,EAAAhC,GACA,OACA5V,KAAA,QACA6a,YAAAjD,EAAAoW,kBAhHAopG,CAA0D,GAC1D,MAEA,KAAax3G,GAAYE,YACzBq3G,EAyDA,SAAAv/G,EAAAhC,GACA,OACA5V,KAAA,aACA6a,YAAAjD,EAAAoW,kBA5DAqpG,CAAoE,GACpE,MAEA,KAAaz3G,GAAYI,QACzBm3G,EAgHA,SAAAv/G,EAAAhC,GACA,IAAA2e,EACA3e,IACA2e,EAAA3e,EAAA0hH,aAEA,OACAt3H,KAAA,UACA6a,YAAAjD,EAAAoW,eAAAuG,IAvHAgjG,CAA8D,EAAA3hH,GAC9D,MAEA,KAAagK,GAAYK,YACzBk3G,EAuEA,SAAAv/G,EAAAhC,GACA,OACA5V,KAAA,aACA6a,YAAAjD,EAAAoW,kBA1EAwpG,CAAoE,GACpE,MAEA,KAAa53G,GAAYM,kBACzBi3G,EAwDA,SAAAv/G,EAAAhC,GACA,OACA5V,KAAA,kBACA6a,YAAAjD,EAAAoW,kBA3DAypG,CAA8E,GAC9E,MAEA,KAAa73G,GAAYO,cACzBg3G,EA0EA,SAAAv/G,EAAAhC,GACA,IAAA2e,EACA3e,IACA2e,EAAA3e,EAAA0hH,aAEA,OACAt3H,KAAA,eACA6a,YAAAjD,EAAAoW,eAAAuG,IAjFAmjG,CAAwE,EAAA9hH,GACxE,MAEA,KAAagK,GAAYQ,oBACzB+2G,EAqBA,SAAAv/G,EAAAhC,GAMA,OACA5V,KAAA,qBACA6pE,WAPAjyD,EAAAkyD,qBAAAjgE,IAAA,SAAA+N,GACA,IAAA/B,EAAsB1H,EAAM,GAAGyH,GAE/B,cADAC,EAAA2/D,kBACA46C,GAAAx4G,EAAA/B,MAzBA8hH,CAAoF,EAAA/hH,GACpF,MAEA,KAAagK,GAAYS,OACzB82G,EAAA,CACAn3H,KAAA,qBACA6pE,WAAA,IAEA,MAEA,QACA,UAAApmE,MAAA,8BAAAzD,GAGA,OAAAm3H,EA4Fe,IAAAS,GA1aJ,SAAAnqH,GAKX,SAAAoqH,EAAAjiH,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GAsBA,OArBAhI,EAAAH,EAAAxT,KAAA2C,aAIAi5E,eAA+B3tD,GAAarS,EAAAggE,eAC5ChgE,EAAAggE,eAAA,aACAhgE,EAAA2/D,oBACA5nE,EAAAiiH,yBAA6C3nG,GAAarS,EAAA2/D,oBAO1D5nE,EAAA0J,cAAAzB,EAAAiiH,aAMAlqH,EAAAmqH,qBAAAliH,EAAAmiH,oBACApqH,EAmJA,OA/KI+oH,GAASkB,EAAApqH,GAiCboqH,EAAAn8H,UAAAo1H,sBAAA,SAAAt1H,EAAAoa,GAIA,IAAAqiH,EAAA,KAWArgH,EAAAq4G,IATAgI,EADA,YAAAz8H,EAAA,KACuD,EAGvD,CACAwE,KAAA,UACA4X,SAAuD,EACvDE,WAAA,OAGA,SAAAlC,GACAwyC,EAAA,IAA0BlxC,EAc1B,OAbAta,KAAA0a,cACA8wC,EAAApwC,gBAAApb,KAAA0a,eAEA1a,KAAAm7H,sBAAA,kBAAAE,SAAAzoH,GACA44C,EAAApwC,gBAAAigH,EAAA,eAEA7vE,EAAAvwC,YAAAD,GACA,OAAAqgH,GACA7vE,EAAAxvC,MAAAq/G,EAAA,IAEAA,EAAA,YACA7vE,EAAA3zC,cAAAwjH,EAAA,eAEA7vE,GAKAyvE,EAAAn8H,UAAAq1H,uBAAA,SAAAv1H,EAAAoa,GACA,IAEAuyC,EAAA,KACA,yBAHqD,EAGrD,MAEAA,EAAA,GAEA,IADA,IAAA+vE,EAF+E,EAE/E,SACAp+H,EAAA,EAAA0U,EAAA0pH,EAAAv7H,OAAwD7C,EAAA0U,IAAQ1U,EAChEquD,EAAAzqD,KAAAd,KAAAk0H,sBAAAoH,EAAAp+H,GAAA8b,SAIAuyC,EAAA,CAAAvrD,KAAAk0H,sBAAAt1H,EAAAoa,IAEA,OAAAuyC,GAKA0vE,EAAAn8H,UAAAs1H,uBAAA,SAAAx1H,EAAAoa,GACA,OAAAq6G,GAAuD,EAAAr6G,IAKvDiiH,EAAAn8H,UAAAu1H,yBAAA,SAAAz1H,GACA,IACAwsB,EADAmwG,EAAA38H,EAAA,IAaA,OAXA28H,EACA,QAAAA,EAAA,KACAnwG,EAA6BE,GAAaiwG,EAAA,iBAG1BrhH,GAAM,MAItBkR,EAAAprB,KAAAi5E,eAEA,GAYAgiD,EAAAn8H,UAAAw1H,mBAAA,SAAA9oE,EAAAxyC,GACAA,EAAAhZ,KAAAmzH,aAAAn6G,GAEA,IAAApa,EAAA,CACAwE,KAAA,UACA4X,SAAA,KACAE,WAAA,MAEAe,EAAAuvC,EAAA9vC,aACA9I,IAAAqJ,IACArd,EAAAqd,MAEA,IAAAjB,EAAAwwC,EAAAlwC,cACAN,IACApc,EAAAoc,SAAAw4G,GAAAx4G,EAAAhC,IAEA,IAAAkC,EAAAswC,EAAAzzC,gBAKA,cAJAmD,EAAAswC,EAAAnwC,mBACarJ,EAAOkJ,KACpBtc,EAAAsc,cAEAtc,GAWAq8H,EAAAn8H,UAAAy1H,oBAAA,SAAAhpE,EAAAvyC,GACAA,EAAAhZ,KAAAmzH,aAAAn6G,GAEA,IADA,IAAAwiH,EAAA,GACAt+H,EAAA,EAAA0U,EAAA25C,EAAAxrD,OAA6C7C,EAAA0U,IAAQ1U,EACrDs+H,EAAA16H,KAAAd,KAAAs0H,mBAAA/oE,EAAAruD,GAAA8b,IAEA,OACA5V,KAAA,oBACAmoD,SAAAiwE,IAYAP,EAAAn8H,UAAA01H,oBAAA,SAAAx5G,EAAAhC,GACA,OAAAw6G,GAAAx4G,EAAAhb,KAAAmzH,aAAAn6G,KAEAiiH,EAhLW,CAiLTjH,IC7OEyH,GAAyB,WAC7B,IAAAprH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0BzBgrH,GAAa,qzBACbC,GAAe,0ZAwSJC,GA9Ka,SAAA/qH,GAM5B,SAAAgrH,EAAAC,EAAA9iH,GACA,IZRAgwD,EYQAh4D,EAAAhR,KACAiZ,EAAAD,GAAA,GACA8rE,EAAA7rE,EAAA6rE,UAAA,GACAA,EAAAi3C,UAAA9iH,EAAAyuE,WZXA1e,EADAp5D,SAAAC,cAAA,UACAC,WAAA,MAAAE,gBAAA,MACA/O,KAAA,GAAA+nE,EAAA/nE,KAAA,GAAA+nE,EAAA/nE,KAAA,GAAA+nE,EAAA/nE,KAAA,OACA+nE,GYUA,IAAAgzD,ElMlIA,ckM2LA,OAxDAl3C,EAAiBiD,GAAcC,mBAAAg0C,GAC/BhrH,EAAAH,EAAAxT,KAAA2C,KAAA87H,EAAA,CACAh3C,WACAwE,cAAArwE,EAAAqwE,iBACStpF,MACTi8H,iBAAA,EACAjrH,EAAAkrH,gBAAA,IAAoCp6C,GAAgB,GAAKtE,IACzDxsE,EAAAmrH,eAAA,IAAmCr6C,GAAgB,GAAKtE,IACxDxsE,EAAAorH,SAAAprH,EAAAmhH,QAAA/mC,WAAAnyE,EAAA4qE,gBAA4E83C,GAAe1iH,EAAAuqE,cAA0Bk4C,IACrH1qH,EAAAmhH,QAAArrC,WAAA91E,EAAAorH,UACAprH,EAAAqrH,cAAApjH,EAAAqjH,cAAA,WACA,UAEAtrH,EAAAurH,eAAAtjH,EAAAujH,eAAA,SAAAhxE,EAAAj8C,GAEA,OADqEi8C,EAAAlwC,cACrE8V,iBAAA7hB,IAEAyB,EAAAyrH,iBAAAxjH,EAAAyjH,iBAAA,WACA,UAEA1rH,EAAA2rH,kBAAA1jH,EAAA2jH,kBAAA,SAAApxE,EAAAj8C,GACA,OAAAA,EAAA,OAEAyB,EAAA6rH,YAAA,UACA7rH,EAAA8rH,eAAA7jH,EAAA8jH,eAAA,SAAAvxE,EAAA+V,GACA,OAAAvhE,KAAA68H,aAEA7rH,EAAAgsH,wBAAA/jH,EAAAgkH,wBAAA,WACA,UAEAjsH,EAAAksH,eAAA,IAAmClC,GAKnChqH,EAAAmsH,qBAAA,GACAnsH,EAAAg3C,gB/MTA,CAAAh9C,SAAA,U+MiBAgG,EAAAosH,kBAAApB,EAMAhrH,EAAAqsH,iBlMrLA,ckM0LArsH,EAAAssH,uBlM1LA,ckM2LAtsH,EAwGA,OA3KIyqH,GAASI,EAAAhrH,GAwEbgrH,EAAA/8H,UAAAkV,gBAAA,WACAnD,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAKA67H,EAAA/8H,UAAA0wD,YAAA,SAAA5wB,EAAA0nB,GACAtmD,KAAAmyH,QAAA5nC,aAAA,EAAAvqF,KAAAm8H,eAAAziH,WAAA3Z,QACAC,KAAAmyH,QAAAtnC,aAAAjsD,GACA,IAAA8iB,EAAA1hD,KAAAmyH,QAAA9nC,YACA7mC,EAAA8C,EAAA9C,QAIA,OAHAA,IAAAsM,WAAApO,EAAAnmC,MAAAioC,WACA9B,EAAAnmC,MAAAioC,WAEA9B,GAKAm6E,EAAA/8H,UAAA6yD,aAAA,SAAA/yB,GACA,IACA2+F,EAD6Ev9H,KAAA4gH,WAC7Ep0D,YACA0C,EAAAtwB,EAAAswB,UAIAsuE,EAAAx9H,KAAAi8H,gBAAAsB,EAAAtmH,cACA,GAAAumH,EAAA,CACAx9H,KAAAi8H,gBAAAsB,EAAAtmH,cACAjX,KAAAm9H,qBAAA,GACA,IAAA/xG,EAAA8jC,EAAA9jC,WACAvK,EAAAquC,EAAAruC,WACA08G,EAAA1rB,aAAA,EAAA7mG,kBAAA6V,EAAAuK,GAEA,IAAAqyG,GAAA7+F,EAAAmvB,UAAkDja,MAAQlV,EAAAmvB,UAAqCja,IAC/FmwE,GAA6BvkG,GAAM1f,KAAAgoD,gBAAAppB,EAAA1gB,SACnCs/G,GAAAvZ,IAAAwZ,IACAz9H,KAAA09H,gBAAA9+F,GACA5+B,KAAAgoD,gBAAAppB,EAAA1gB,OAAA1c,SAGAxB,KAAAmyH,QAAAzmC,wBAAA9sD,EAAA5+B,KAAAo9H,mBACQ9vG,GAAiBttB,KAAAo9H,kBAAAp9H,KAAAs9H,wBACzBt9H,KAAAmyH,QAAA/nC,YAAAxrD,GAEA5+B,KAAAmyH,QAAA9tC,W5F1NO,M4F0NqCrkF,KAAAk8H,iBAC5Cl8H,KAAAmyH,QAAA9tC,W5FlNO,M4FkN6CrkF,KAAAm8H,gBACpD,IAAAwB,EAAAp5C,aAAAq5C,kBAOA,OANA59H,KAAAmyH,QAAAtmC,qBAA0C1D,GAAa,E5FlJhD,K4F0HP,GAwB0Ew1C,EAAA,GAC1E39H,KAAAmyH,QAAAtmC,qBAA0C1D,GAAa,E5FnJhD,K4F0HP,GAyByEw1C,EAAA,EAAAA,GACzE39H,KAAAmyH,QAAAtmC,qBAA0C1D,GAAa,E5FpJhD,K4F0HP,GA0B2Ew1C,EAAA,EAAAA,GAC3E39H,KAAAmyH,QAAAtmC,qBAA0C1D,GAAa,E5FrJhD,K4F0HP,GA2ByEw1C,EAAA,EAAAA,GACzE39H,KAAAmyH,QAAAtmC,qBAA0C1D,GAAa,E5FtJhD,K4F0HP,GA4BkFw1C,EAAA,EAAAA,GAClF39H,KAAAmyH,QAAAtmC,qBAA0C1D,GAAa,E5FvJhD,K4F0HP,GA6BuEw1C,EAAA,EAAAA,IACvE,GAOA9B,EAAA/8H,UAAA4+H,gBAAA,SAAA9+F,GACA,IACA2+F,EAD6Ev9H,KAAA4gH,WAC7Ep0D,YACAxsD,KAAAk8H,gBAAAxiH,WAAA3Z,OAAA,EACAC,KAAAm8H,eAAAziH,WAAA3Z,OAAA,EAEAC,KAAAmyH,QAAAzmC,wBAAA9sD,EAAA5+B,KAAAq9H,kBACQzuG,GAAoB5uB,KAAAs9H,uBAAAt9H,KAAAq9H,kBAI5B,IAFA,IACA7xE,EADAD,EAAAgyE,EAAAzsB,cAEA5zG,EAAA,EAAuBA,EAAAquD,EAAAxrD,OAAqB7C,IAE5C,IADAsuD,EAAAD,EAAAruD,IACAoe,eAAAkwC,EAAAlwC,cAAAkV,YAA8ExN,GAAYC,MAA1F,CAGA,IAAAsvG,EAAAvyH,KAAAm9H,qBAA2DhtH,EAAMq7C,IACjE+mE,IACAA,EAAAvyH,KAAAk9H,eAAA5I,mBAAA9oE,GACAxrD,KAAAm9H,qBAA0ChtH,EAAMq7C,IAAA+mE,GAEhDA,EAAAv3G,SAAAiD,YAAA,GAAAje,KAAAu8H,eAAA/wE,EAAA,GACA+mE,EAAAv3G,SAAAiD,YAAA,GAAAje,KAAAu8H,eAAA/wE,EAAA,GACYtpD,GAAclC,KAAAq9H,iBAAA9K,EAAAv3G,SAAAiD,aAC1Bs0G,EAAAr3G,WAAAq3G,EAAAr3G,YAAA,GACAq3G,EAAAr3G,WAAAqmD,MAAAvhE,KAAA88H,eAAAtxE,EAAAxrD,KAAA68H,aACAtK,EAAAr3G,WAAAmiF,GAAAr9F,KAAA28H,kBAAAnxE,EAAA,GACA+mE,EAAAr3G,WAAAoiF,GAAAt9F,KAAA28H,kBAAAnxE,EAAA,GACA+mE,EAAAr3G,WAAAqiF,GAAAv9F,KAAA28H,kBAAAnxE,EAAA,GACA+mE,EAAAr3G,WAAAq5B,GAAAv0C,KAAA28H,kBAAAnxE,EAAA,GACA+mE,EAAAr3G,WAAA6F,KAAA/gB,KAAAq8H,cAAA7wE,GACA+mE,EAAAr3G,WAAAsoC,QAAAxjD,KAAAy8H,iBAAAjxE,GACA+mE,EAAAr3G,WAAAuyE,eAAAztF,KAAAg9H,wBAAAxxE,GAAA,IACY4mE,GAAmBpyH,KAAAk8H,gBAAAl8H,KAAAm8H,eAAA5J,GAE/BvyH,KAAAmyH,QAAAxoC,gB5F7QO,M4F6Q0C3pF,KAAAk8H,iBACjDl8H,KAAAmyH,QAAAxoC,gB5FrQO,M4FqQkD3pF,KAAAm8H,iBAEzDN,EA5K4B,CA6K1B/I,IC5TF+K,GAAA,CACAC,eAAA,EACAC,WAAA,EACAt6G,OAAA,EACAu6G,WAAA,EACAC,OAAA,EACAC,WAAA,EACAC,WAAA,EACAC,aAAA,EACAC,KAAA,EACAC,gBAAA,EACAC,eAAA,GACAC,iBAAA,GACAC,OAAA,IAKWC,GAAe,CAAAb,GAAAQ,MAIfM,GAAiB,CAAAd,GAAAY,QAIrBG,GAAA,CAAAf,GAAAE,YAIAc,GAAA,CAAAhB,GAAAG,YACQc,GAAA,GCrCXC,GAAyB,WAC7B,IAAA1uH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+bdsuH,GA7ZE,SAAAnuH,GAQjB,SAAAouH,EAAA3uG,EAAA2iB,EAAApyB,EAAAk+B,GACA,IAAA/tC,EAAAH,EAAAxT,KAAA2C,YAoEA,OA/DAgR,EAAAsf,YAMAtf,EAAAiiC,YAKAjiC,EAAA+tC,aAKA/tC,EAAAkuH,aAAA,EAMAluH,EAAA6P,aAKA7P,EAAAmuH,2BAAA,KAKAnuH,EAAAouH,2BAAA,KAKApuH,EAAAquH,mBAAA,KAKAruH,EAAAsuH,aAAA,GAKAtuH,EAAAiN,YAAA,GAKAjN,EAAAuuH,eAAA,GAKAvuH,EAAAwuH,yBAAA,GAKAxuH,EAAA6gC,MAAwE,GACxE7gC,EA8UA,OA1ZI+tH,GAASE,EAAApuH,GAmFbouH,EAAAngI,UAAA2gI,gBAAA,SAAAC,GACA,IAAA3gF,EAAA/+C,KAAA++C,WACA,UAAAA,EAAA2gF,IAAAzyH,IAAA,SAAA0yH,GACA,OAAAA,EAAA5gF,KAaAkgF,EAAAngI,UAAA8gI,sBAAA,SAAArgH,EAAAhV,EAAAtE,EAAAuZ,EAAAqgH,EAAAC,GACA,IAAAC,EAAA//H,KAAAie,YAAAle,OACAme,EAAAle,KAAAggI,uBACAF,IACAv1H,GAAAiV,GAEA,IAIAtiB,EAAA+iI,EAAAC,EAJAC,EAAA5gH,EAAAhV,GACA61H,EAAA7gH,EAAAhV,EAAA,GACA81H,EAAArgI,KAAAu/H,eACAe,GAAA,EAEA,IAAApjI,EAAAqN,EAAAiV,EAAiCtiB,EAAA+I,EAAS/I,GAAAsiB,EAC1C6gH,EAAA,GAAA9gH,EAAAriB,GACAmjI,EAAA,GAAA9gH,EAAAriB,EAAA,IACAgjI,EAAsBjhH,GAAsBf,EAAAmiH,MAC5CJ,GACAK,IACAtgI,KAAAie,YAAA8hH,KAAAI,EACAngI,KAAAie,YAAA8hH,KAAAK,GAEApgI,KAAAie,YAAA8hH,KAAAM,EAAA,GACArgI,KAAAie,YAAA8hH,KAAAM,EAAA,GACAC,GAAA,GAEAJ,IAAiCziH,GAAYE,cAC7C3d,KAAAie,YAAA8hH,KAAAM,EAAA,GACArgI,KAAAie,YAAA8hH,KAAAM,EAAA,GACAC,GAAA,GAGAA,GAAA,EAEAH,EAAAE,EAAA,GACAD,EAAAC,EAAA,GACAJ,EAAAC,EAOA,OAJAL,GAAAS,GAAApjI,IAAAqN,EAAAiV,KACAxf,KAAAie,YAAA8hH,KAAAI,EACAngI,KAAAie,YAAA8hH,KAAAK,GAEAL,GAUAd,EAAAngI,UAAAyhI,uBAAA,SAAAhhH,EAAAhV,EAAA+nB,EAAA9S,EAAAghH,GACA,QAAAtjI,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAyC7C,EAAA0U,IAAQ1U,EAAA,CACjD,IAAA+I,EAAAqsB,EAAAp1B,GACAujI,EAAAzgI,KAAA4/H,sBAAArgH,EAAAhV,EAAAtE,EAAAuZ,GAAA,MACAghH,EAAA1/H,KAAA2/H,GACAl2H,EAAAtE,EAEA,OAAAsE,GAKA00H,EAAAngI,UAAAqkE,WAAA,SAAAnoD,EAAAwwC,EAAA4X,GACApjE,KAAA0gI,cAAAl1E,GACA,IAGAjsC,EAAAkhH,EAAAD,EAAAG,EACAp2H,EAJAnH,EAAA4X,EAAAwV,UACAhR,EAAAxE,EAAA2W,YACAivG,EAAA5gI,KAAAie,YAAAle,OAGA,GAAAqD,GAAoB4f,GAAYO,cAAA,CAEhChE,GADAvE,EAA+E,GAC/Eyd,6BACAkoG,EAAA,GACA,IAAA7sG,EAAA9Y,EAAAyyD,WACAljE,EAAA,EACA,QAAArN,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAA8C7C,EAAA0U,IAAQ1U,EAAA,CACtD,IAAA2jI,EAAA,GACAt2H,EAAAvK,KAAAugI,uBAAAhhH,EAAAhV,EAAAupB,EAAA52B,GAAAsiB,EAAAqhH,GACAF,EAAA7/H,KAAA+/H,GAEA7gI,KAAAs/H,aAAAx+H,KAAA,CAAoCg+H,GAAiBb,OACrD2C,EAAAD,EAAA3lH,EAAAooD,EAAgEvvC,UAEhEzwB,GAAyB4f,GAAYI,SAAAhgB,GAAoB4f,GAAYM,mBACrEk9G,EAAA,GACAjhH,EAAAnc,GAAuC4f,GAAYI,QACgB,EAAAqV,6BACnEzd,EAAAsW,qBACA/mB,EAAAvK,KAAAugI,uBAAAhhH,EAAA,EAC+G,EAAAmZ,UAAAlZ,EAAAghH,GAC/GxgI,KAAAs/H,aAAAx+H,KAAA,CAAoCg+H,GAAiBb,OACrD2C,EAAAJ,EAAAxlH,EAAAooD,EAA+DzvC,MAE/DvwB,GAAyB4f,GAAYE,aAAA9f,GAAwB4f,GAAYK,aACzE9D,EAAAvE,EAAAsW,qBACAmvG,EAAAzgI,KAAA4/H,sBAAArgH,EAAA,EAAAA,EAAAxf,OAAAyf,GAAA,MACAxf,KAAAs/H,aAAAx+H,KAAA,CAAoCg+H,GAAiBb,OACrD2C,EAAAH,EAAAzlH,EAAAooD,EAA8D3vC,MAE9DrwB,GAAyB4f,GAAYC,QACrC1D,EAAAvE,EAAAsW,qBACAtxB,KAAAie,YAAAnd,KAAAye,EAAA,GAAAA,EAAA,IACAkhH,EAAAzgI,KAAAie,YAAAle,OACAC,KAAAs/H,aAAAx+H,KAAA,CAAoCg+H,GAAiBb,OACrD2C,EAAAH,EAAAzlH,EAAAooD,KAEApjE,KAAA8gI,YAAAt1E,IAMAyzE,EAAAngI,UAAA4hI,cAAA,SAAAl1E,GACAxrD,KAAAm/H,2BAAA,CAA2CL,GAAiBhB,eAAAtyE,EAAA,GAC5DxrD,KAAAs/H,aAAAx+H,KAAAd,KAAAm/H,4BACAn/H,KAAAo/H,2BAAA,CAA2CN,GAAiBhB,eAAAtyE,EAAA,GAC5DxrD,KAAAw/H,yBAAA1+H,KAAAd,KAAAo/H,6BAKAH,EAAAngI,UAAA8J,OAAA,WACA,OACA02H,aAAAt/H,KAAAs/H,aACAE,yBAAAx/H,KAAAw/H,yBACAvhH,YAAAje,KAAAie,cAMAghH,EAAAngI,UAAAiiI,gCAAA,WACA,IAIA7jI,EAJAsiI,EAAAx/H,KAAAw/H,yBAEAA,EAAA3rB,UAGA,IACAmtB,EACA59H,EAFAzE,EAAA6gI,EAAAz/H,OAGAwc,GAAA,EACA,IAAArf,EAAA,EAAmBA,EAAAyB,IAAOzB,GAE1BkG,GADA49H,EAAAxB,EAAAtiI,IACgD,KACxB4hI,GAAiBV,aACzC7hH,EAAArf,EAEAkG,GAA6B07H,GAAiBhB,iBAC9CkD,EAAA,GAAA9jI,EACgBof,EAAetc,KAAAw/H,yBAAAjjH,EAAArf,GAC/Bqf,GAAA,IAOA0iH,EAAAngI,UAAA0lE,mBAAA,SAAAC,EAAAC,GACA,IAAA7yB,EAAA7xC,KAAA6xC,MACA,GAAA4yB,EAAA,CACA,IAAAkK,EAAAlK,EAAAmK,WACA/8B,EAAA4yB,UAA8BzB,GAAW2L,G7G7NlC,a6GiOP98B,EAAA4yB,eAAA7xD,EAEA,GAAA8xD,EAAA,CACA,IAAAmK,EAAAnK,EAAAkK,WACA/8B,EAAA6yB,YAAgC1B,GAAW6L,G7GvMpC,Q6GyMP,IAAAC,EAAApK,EAAAqK,aACAl9B,EAAAm8B,aAAAp7D,IAAAk8D,EACAA,E7GpOO,Q6GqOP,IAAAE,EAAAtK,EAAAuK,cACAp9B,EAAAq8B,SAAAc,EACAA,EAAAxtE,QAA8CmlE,GAC9C,IAAAuI,EAAAxK,EAAAyK,oBACAt9B,EAAAs8B,eAAAe,G7G/NO,E6GiOP,IAAAE,EAAA1K,EAAA2K,cACAx9B,EAAAu8B,cAAAx7D,IAAAw8D,EACAA,E7G9NO,Q6G+NP,IAAAE,EAAA5K,EAAApkD,WACAuxB,EAAAw8B,eAAAz7D,IAAA08D,EACAA,E7GnMO,E6GoMP,IAAAC,EAAA7K,EAAA8K,gBACA39B,EAAAy8B,gBAAA17D,IAAA28D,EACAA,E7G/NO,G6GgOP19B,EAAAw8B,UAAAruE,KAAAk/H,eACAl/H,KAAAk/H,aAAArtF,EAAAw8B,UAEAruE,KAAAq/H,mBAAA,WAIAxtF,EAAA6yB,iBAAA9xD,EACAi/B,EAAAm8B,aAAAp7D,EACAi/B,EAAAq8B,SAAA,KACAr8B,EAAAs8B,oBAAAv7D,EACAi/B,EAAAu8B,cAAAx7D,EACAi/B,EAAAw8B,eAAAz7D,EACAi/B,EAAAy8B,gBAAA17D,GAOAqsH,EAAAngI,UAAAmiI,WAAA,SAAApvF,GACA,IAAA4yB,EAAA5yB,EAAA4yB,UAEAy8D,EAAA,CAA+BpC,GAAiBP,eAAA95D,GAKhD,MAJA,iBAAAA,GAEAy8D,EAAApgI,MAAA,GAEAogI,GAKAjC,EAAAngI,UAAAqiI,YAAA,SAAAtvF,GACA7xC,KAAAs/H,aAAAx+H,KAAAd,KAAAohI,aAAAvvF,KAMAotF,EAAAngI,UAAAsiI,aAAA,SAAAvvF,GACA,OACYitF,GAAiBN,iBAC7B3sF,EAAA6yB,YAAA7yB,EAAAw8B,UAAAruE,KAAA++C,WAAAlN,EAAAm8B,QACAn8B,EAAAu8B,SAAAv8B,EAAAy8B,WACAtuE,KAAAy/H,gBAAA5tF,EAAAq8B,UAAAr8B,EAAAs8B,eAAAnuE,KAAA++C,aAOAkgF,EAAAngI,UAAAuiI,gBAAA,SAAAxvF,EAAAovF,GACA,IAAAx8D,EAAA5yB,EAAA4yB,UACA,iBAAAA,GAAA5yB,EAAAyvF,kBAAA78D,SACA7xD,IAAA6xD,GACAzkE,KAAAs/H,aAAAx+H,KAAAmgI,EAAA5jI,KAAA2C,KAAA6xC,IAEAA,EAAAyvF,iBAAA78D,IAOAw6D,EAAAngI,UAAAyiI,kBAAA,SAAA1vF,EAAAsvF,GACA,IAAAz8D,EAAA7yB,EAAA6yB,YACAsJ,EAAAn8B,EAAAm8B,QACAE,EAAAr8B,EAAAq8B,SACAC,EAAAt8B,EAAAs8B,eACAC,EAAAv8B,EAAAu8B,SACAC,EAAAx8B,EAAAw8B,UACAC,EAAAz8B,EAAAy8B,YACAz8B,EAAA2vF,oBAAA98D,GACA7yB,EAAA4vF,gBAAAzzD,GACAE,GAAAr8B,EAAA6vF,kBAAmD9kH,GAAMi1B,EAAA6vF,gBAAAxzD,IACzDr8B,EAAA8vF,uBAAAxzD,GACAt8B,EAAA+vF,iBAAAxzD,GACAv8B,EAAAgwF,kBAAAxzD,GACAx8B,EAAAiwF,mBAAAxzD,UACA17D,IAAA8xD,GACAy8D,EAAA9jI,KAAA2C,KAAA6xC,GAEAA,EAAA2vF,mBAAA98D,EACA7yB,EAAA4vF,eAAAzzD,EACAn8B,EAAA6vF,gBAAAxzD,EACAr8B,EAAA8vF,sBAAAxzD,EACAt8B,EAAA+vF,gBAAAxzD,EACAv8B,EAAAgwF,iBAAAxzD,EACAx8B,EAAAiwF,kBAAAxzD,IAMA2wD,EAAAngI,UAAAgiI,YAAA,SAAAt1E,GACAxrD,KAAAm/H,2BAAA,GAAAn/H,KAAAs/H,aAAAv/H,OACAC,KAAAm/H,2BAAA,KACAn/H,KAAAo/H,2BAAA,GAAAp/H,KAAAw/H,yBAAAz/H,OACAC,KAAAo/H,2BAAA,KACA,IAAA2C,EAAA,CAAsCjD,GAAiBV,aAAA5yE,GACvDxrD,KAAAs/H,aAAAx+H,KAAAihI,GACA/hI,KAAAw/H,yBAAA1+H,KAAAihI,IASA9C,EAAAngI,UAAAkhI,qBAAA,WACA,IAAAhgI,KAAAq/H,qBACAr/H,KAAAq/H,mBAAsClkH,GAAKnb,KAAAizC,WAC3CjzC,KAAAk/H,aAAA,IACA,IAAAvzH,EAAA3L,KAAA6gB,YAAA7gB,KAAAk/H,aAAA,KACgB7gH,GAAMre,KAAAq/H,mBAAA1zH,EAAA3L,KAAAq/H,oBAGtB,OAAAr/H,KAAAq/H,oBAEAJ,EA3ZiB,CA4Zfh8D,IC9bE++D,GAAyB,WAC7B,IAAA3xH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+MduxH,GA7LO,SAAApxH,GAQtB,SAAAqxH,EAAA5xG,EAAA2iB,EAAApyB,EAAAk+B,GACA,IAAA/tC,EAAAH,EAAAxT,KAAA2C,KAAAswB,EAAA2iB,EAAApyB,EAAAk+B,IAAA/+C,KAkEA,OA7DAgR,EAAAmxH,gBAAA,KAKAnxH,EAAAihF,mBAAA,KAKAjhF,EAAAi5D,OAAA,KAKAj5D,EAAAoxH,cAAAxvH,EAKA5B,EAAAqxH,cAAAzvH,EAKA5B,EAAAsxH,aAAA1vH,EAKA5B,EAAAu8E,cAAA36E,EAKA5B,EAAAuxH,cAAA3vH,EAKA5B,EAAAwxH,cAAA5vH,EAKA5B,EAAAw8E,qBAAA56E,EAKA5B,EAAAsjD,eAAA1hD,EAKA5B,EAAA08E,YAAA96E,EAKA5B,EAAAwjF,YAAA5hF,EACA5B,EAgHA,OA1LIgxH,GAASE,EAAArxH,GAoFbqxH,EAAApjI,UAAA2jI,iBAAA,SAAAljH,EAAAhV,EAAAtE,EAAAuZ,GACA,OAAAxf,KAAA4/H,sBAAArgH,EAAAhV,EAAAtE,EAAAuZ,GAAA,OAKA0iH,EAAApjI,UAAAqlE,UAAA,SAAAC,EAAA5Y,GACA,GAAAxrD,KAAAiqE,OAAA,CAGAjqE,KAAA0gI,cAAAl1E,GACA,IAAAjsC,EAAA6kD,EAAA9yC,qBACA9R,EAAA4kD,EAAAzyC,YACA+wG,EAAA1iI,KAAAie,YAAAle,OACAggI,EAAA//H,KAAAyiI,iBAAAljH,EAAA,EAAAA,EAAAxf,OAAAyf,GACAxf,KAAAs/H,aAAAx+H,KAAA,CACYg+H,GAAiBX,WAAAuE,EAAA3C,EAAA//H,KAAAiqE,OAE7BjqE,KAAAoiI,SAAApiI,KAAAqiI,SAAAriI,KAAAmiI,gBAAAniI,KAAAsiI,QAAAtiI,KAAAutF,SACAvtF,KAAAuiI,SAAAviI,KAAAwiI,SAAAxiI,KAAAwtF,gBAAAxtF,KAAAs0D,UACAt0D,KAAA0tF,OAAA1tF,KAAA++C,WAAA/+C,KAAAw0F,SAEAx0F,KAAAw/H,yBAAA1+H,KAAA,CACYg+H,GAAiBX,WAAAuE,EAAA3C,EAAA//H,KAAAiyF,mBAE7BjyF,KAAAoiI,SAAApiI,KAAAqiI,SAAAriI,KAAAmiI,gBAAAniI,KAAAsiI,QAAAtiI,KAAAutF,SACAvtF,KAAAuiI,SAAAviI,KAAAwiI,SAAAxiI,KAAAwtF,gBAAAxtF,KAAAs0D,UACAt0D,KAAA0tF,OAAA1tF,KAAAw0F,SAEAx0F,KAAA8gI,YAAAt1E,KAKA02E,EAAApjI,UAAAilE,eAAA,SAAAC,EAAAxY,GACA,GAAAxrD,KAAAiqE,OAAA,CAGAjqE,KAAA0gI,cAAAl1E,GACA,IAAAjsC,EAAAykD,EAAA1yC,qBACA9R,EAAAwkD,EAAAryC,YACA+wG,EAAA1iI,KAAAie,YAAAle,OACAggI,EAAA//H,KAAAyiI,iBAAAljH,EAAA,EAAAA,EAAAxf,OAAAyf,GACAxf,KAAAs/H,aAAAx+H,KAAA,CACYg+H,GAAiBX,WAAAuE,EAAA3C,EAAA//H,KAAAiqE,OAE7BjqE,KAAAoiI,SAAApiI,KAAAqiI,SAAAriI,KAAAmiI,gBAAAniI,KAAAsiI,QAAAtiI,KAAAutF,SACAvtF,KAAAuiI,SAAAviI,KAAAwiI,SAAAxiI,KAAAwtF,gBAAAxtF,KAAAs0D,UACAt0D,KAAA0tF,OAAA1tF,KAAA++C,WAAA/+C,KAAAw0F,SAEAx0F,KAAAw/H,yBAAA1+H,KAAA,CACYg+H,GAAiBX,WAAAuE,EAAA3C,EAAA//H,KAAAiyF,mBAE7BjyF,KAAAoiI,SAAApiI,KAAAqiI,SAAAriI,KAAAmiI,gBAAAniI,KAAAsiI,QAAAtiI,KAAAutF,SACAvtF,KAAAuiI,SAAAviI,KAAAwiI,SAAAxiI,KAAAwtF,gBAAAxtF,KAAAs0D,UACAt0D,KAAA0tF,OAAA1tF,KAAAw0F,SAEAx0F,KAAA8gI,YAAAt1E,KAKA02E,EAAApjI,UAAA8J,OAAA,WAeA,OAdA5I,KAAA+gI,kCAEA/gI,KAAAoiI,cAAAxvH,EACA5S,KAAAqiI,cAAAzvH,EACA5S,KAAAiyF,mBAAA,KACAjyF,KAAAiqE,OAAA,KACAjqE,KAAAsiI,aAAA1vH,EACA5S,KAAA0tF,YAAA96E,EACA5S,KAAAutF,cAAA36E,EACA5S,KAAAuiI,cAAA3vH,EACA5S,KAAAwiI,cAAA5vH,EACA5S,KAAAwtF,qBAAA56E,EACA5S,KAAAs0D,eAAA1hD,EACA5S,KAAAw0F,YAAA5hF,EACA/B,EAAA/R,UAAA8J,OAAAvL,KAAA2C,OAKAkiI,EAAApjI,UAAA6lE,cAAA,SAAAC,EAAA+9D,GACA,IAAA3+G,EAAA4gD,EAAA8K,YACA3uD,EAAA6jD,EAAA/X,UACA+1E,EAAAh+D,EAAA+oB,qBAAA,GACA3kB,EAAApE,EAAAkI,SAAA,GACA2N,EAAA7V,EAAAiL,YACA7vE,KAAAoiI,SAAAp+G,EAAA,GACAhkB,KAAAqiI,SAAAr+G,EAAA,GACAhkB,KAAAmiI,gBAAgF,EAChFniI,KAAAiyF,mBAAA2wC,EACA5iI,KAAAiqE,OAAAjB,EACAhpE,KAAAsiI,QAAAvhH,EAAA,GACA/gB,KAAAutF,SAAA3oB,EAAAzgB,aACAnkD,KAAAuiI,SAAA9nD,EAAA,GACAz6E,KAAAwiI,SAAA/nD,EAAA,GACAz6E,KAAAwtF,gBAAA5oB,EAAAmL,oBACA/vE,KAAAs0D,UAAAsQ,EAAArpB,cACAv7C,KAAA0tF,OAAA9oB,EAAAoL,WACAhwE,KAAAw0F,OAAAzzE,EAAA,IAEAmhH,EA3LsB,CA4LpBlD,IC9ME6D,GAAyB,WAC7B,IAAAxyH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAyHdoyH,GAvGY,SAAAjyH,GAQ3B,SAAAkyH,EAAAzyG,EAAA2iB,EAAApyB,EAAAk+B,GACA,OAAAluC,EAAAxT,KAAA2C,KAAAswB,EAAA2iB,EAAApyB,EAAAk+B,IAAA/+C,KA4FA,OApGI6iI,GAASE,EAAAlyH,GAkBbkyH,EAAAjkI,UAAAkkI,qBAAA,SAAAzjH,EAAAhV,EAAAtE,EAAAuZ,GACA,IAAAkjH,EAAA1iI,KAAAie,YAAAle,OACAggI,EAAA//H,KAAA4/H,sBAAArgH,EAAAhV,EAAAtE,EAAAuZ,GAAA,MACAyjH,EAAA,CAAuCnE,GAAiBR,gBAAAoE,EAAA3C,GAGxD,OAFA//H,KAAAs/H,aAAAx+H,KAAAmiI,GACAjjI,KAAAw/H,yBAAA1+H,KAAAmiI,GACAh9H,GAKA88H,EAAAjkI,UAAA6kE,eAAA,SAAAC,EAAApY,GACA,IAAA3Z,EAAA7xC,KAAA6xC,MACA6yB,EAAA7yB,EAAA6yB,YACA2J,EAAAx8B,EAAAw8B,UACA,QAAAz7D,IAAA8xD,QAAA9xD,IAAAy7D,EAAA,CAGAruE,KAAAuhI,kBAAA1vF,EAAA7xC,KAAAmhI,aACAnhI,KAAA0gI,cAAAl1E,GACAxrD,KAAAw/H,yBAAA1+H,KAAA,CACYg+H,GAAiBN,iBAC7B3sF,EAAA6yB,YAAA7yB,EAAAw8B,UAAAx8B,EAAAm8B,QAAAn8B,EAAAu8B,SACAv8B,EAAAy8B,WAAAz8B,EAAAq8B,SAAAr8B,EAAAs8B,gBACWywD,IACX,IAAAr/G,EAAAqkD,EAAAtyC,qBACA9R,EAAAokD,EAAAjyC,YACA3xB,KAAAgjI,qBAAAzjH,EAAA,EAAAA,EAAAxf,OAAAyf,GACAxf,KAAAw/H,yBAAA1+H,KAA2C69H,IAC3C3+H,KAAA8gI,YAAAt1E,KAKAu3E,EAAAjkI,UAAA+kE,oBAAA,SAAAC,EAAAtY,GACA,IAAA3Z,EAAA7xC,KAAA6xC,MACA6yB,EAAA7yB,EAAA6yB,YACA2J,EAAAx8B,EAAAw8B,UACA,QAAAz7D,IAAA8xD,QAAA9xD,IAAAy7D,EAAA,CAGAruE,KAAAuhI,kBAAA1vF,EAAA7xC,KAAAmhI,aACAnhI,KAAA0gI,cAAAl1E,GACAxrD,KAAAw/H,yBAAA1+H,KAAA,CACYg+H,GAAiBN,iBAC7B3sF,EAAA6yB,YAAA7yB,EAAAw8B,UAAAx8B,EAAAm8B,QAAAn8B,EAAAu8B,SACAv8B,EAAAy8B,WAAAz8B,EAAAq8B,SAAAr8B,EAAAs8B,gBACWywD,IAKX,IAJA,IAAAtsG,EAAAwxC,EAAAprC,UACAnZ,EAAAukD,EAAAxyC,qBACA9R,EAAAskD,EAAAnyC,YACApnB,EAAA,EACArN,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAyC7C,EAAA0U,IAAQ1U,EACjDqN,EAAAvK,KAAAgjI,qBAAAzjH,EAAAhV,EAAA+nB,EAAAp1B,GAAAsiB,GAEAxf,KAAAw/H,yBAAA1+H,KAA2C69H,IAC3C3+H,KAAA8gI,YAAAt1E,KAKAu3E,EAAAjkI,UAAA8J,OAAA,WACA,IAAAipC,EAAA7xC,KAAA6xC,MAMA,OALAj/B,MAAAi/B,EAAAqxF,YAAArxF,EAAAqxF,YAAAljI,KAAAie,YAAAle,QACAC,KAAAs/H,aAAAx+H,KAAmC69H,IAEnC3+H,KAAA+gI,kCACA/gI,KAAA6xC,MAAA,KACAhhC,EAAA/R,UAAA8J,OAAAvL,KAAA2C,OAKA+iI,EAAAjkI,UAAAqiI,YAAA,SAAAtvF,GACAj/B,MAAAi/B,EAAAqxF,YAAArxF,EAAAqxF,YAAAljI,KAAAie,YAAAle,SACAC,KAAAs/H,aAAAx+H,KAAmC69H,IACnC9sF,EAAAqxF,WAAAljI,KAAAie,YAAAle,QAEA8xC,EAAAqxF,WAAA,EACAryH,EAAA/R,UAAAqiI,YAAA9jI,KAAA2C,KAAA6xC,GACA7xC,KAAAs/H,aAAAx+H,KAA+B89H,KAE/BmE,EArG2B,CAsGzB/D,ICxHEmE,GAAyB,WAC7B,IAAA9yH,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoNd0yH,GAhMS,SAAAvyH,GAQxB,SAAAwyH,EAAA/yG,EAAA2iB,EAAApyB,EAAAk+B,GACA,OAAAluC,EAAAxT,KAAA2C,KAAAswB,EAAA2iB,EAAApyB,EAAAk+B,IAAA/+C,KAqLA,OA7LImjI,GAASE,EAAAxyH,GAkBbwyH,EAAAvkI,UAAAwkI,sBAAA,SAAA/jH,EAAAhV,EAAA+nB,EAAA9S,GACA,IAAAqyB,EAAA7xC,KAAA6xC,MACA66B,OAAA95D,IAAAi/B,EAAA4yB,UACAkI,EAAA/5D,MAAAi/B,EAAA6yB,YACA6+D,EAAAjxG,EAAAvyB,OACAC,KAAAs/H,aAAAx+H,KAA+B89H,IAC/B5+H,KAAAw/H,yBAAA1+H,KAA2C89H,IAC3C,QAAA1hI,EAAA,EAAuBA,EAAAqmI,IAAarmI,EAAA,CACpC,IAAA+I,EAAAqsB,EAAAp1B,GACAwlI,EAAA1iI,KAAAie,YAAAle,OACAggI,EAAA//H,KAAA4/H,sBAAArgH,EAAAhV,EAAAtE,EAAAuZ,GAAA,GAAAmtD,GACAs2D,EAAA,CAA2CnE,GAAiBR,gBAAAoE,EAAA3C,GAC5D//H,KAAAs/H,aAAAx+H,KAAAmiI,GACAjjI,KAAAw/H,yBAAA1+H,KAAAmiI,GACAt2D,IAGA3sE,KAAAs/H,aAAAx+H,KAAuC+9H,IACvC7+H,KAAAw/H,yBAAA1+H,KAAmD+9H,KAEnDt0H,EAAAtE,EAUA,OARAymE,IACA1sE,KAAAs/H,aAAAx+H,KAAmC49H,IACnC1+H,KAAAw/H,yBAAA1+H,KAA+C49H,KAE/C/xD,IACA3sE,KAAAs/H,aAAAx+H,KAAmC69H,IACnC3+H,KAAAw/H,yBAAA1+H,KAA+C69H,KAE/Cp0H,GAKA84H,EAAAvkI,UAAAwkE,WAAA,SAAAC,EAAA/X,GACA,IAAA3Z,EAAA7xC,KAAA6xC,MACA4yB,EAAA5yB,EAAA4yB,UACAC,EAAA7yB,EAAA6yB,YACA,QAAA9xD,IAAA6xD,QAAA7xD,IAAA8xD,EAAA,CAGA1kE,KAAAwjI,uBACAxjI,KAAA0gI,cAAAl1E,QACA54C,IAAAi/B,EAAA4yB,WACAzkE,KAAAw/H,yBAAA1+H,KAAA,CACgBg+H,GAAiBP,ehHV1B,cgHcP3rH,IAAAi/B,EAAA6yB,aACA1kE,KAAAw/H,yBAAA1+H,KAAA,CACgBg+H,GAAiBN,iBACjC3sF,EAAA6yB,YAAA7yB,EAAAw8B,UAAAx8B,EAAAm8B,QAAAn8B,EAAAu8B,SACAv8B,EAAAy8B,WAAAz8B,EAAAq8B,SAAAr8B,EAAAs8B,iBAGA,IAAA5uD,EAAAgkD,EAAAjyC,qBACA9R,EAAA+jD,EAAA5xC,YACA+wG,EAAA1iI,KAAAie,YAAAle,OACAC,KAAA4/H,sBAAArgH,EAAA,EAAAA,EAAAxf,OAAAyf,GAAA,MACA,IAAAikH,EAAA,CAAiC3E,GAAiBr7G,OAAAi/G,GAClD1iI,KAAAs/H,aAAAx+H,KAA+B89H,GAAoB6E,GACnDzjI,KAAAw/H,yBAAA1+H,KAA2C89H,GAAoB6E,GAC/DzjI,KAAAw/H,yBAAA1+H,KAA2C49H,SAC3C9rH,IAAAi/B,EAAA4yB,WACAzkE,KAAAs/H,aAAAx+H,KAAmC49H,SAEnC9rH,IAAAi/B,EAAA6yB,cACA1kE,KAAAs/H,aAAAx+H,KAAmC69H,IACnC3+H,KAAAw/H,yBAAA1+H,KAA+C69H,KAE/C3+H,KAAA8gI,YAAAt1E,KAKA63E,EAAAvkI,UAAAulE,YAAA,SAAAC,EAAA9Y,GACA,IAAA3Z,EAAA7xC,KAAA6xC,MACA4yB,EAAA5yB,EAAA4yB,UACAC,EAAA7yB,EAAA6yB,YACA,QAAA9xD,IAAA6xD,QAAA7xD,IAAA8xD,EAAA,CAGA1kE,KAAAwjI,uBACAxjI,KAAA0gI,cAAAl1E,QACA54C,IAAAi/B,EAAA4yB,WACAzkE,KAAAw/H,yBAAA1+H,KAAA,CACgBg+H,GAAiBP,ehHpD1B,cgHwDP3rH,IAAAi/B,EAAA6yB,aACA1kE,KAAAw/H,yBAAA1+H,KAAA,CACgBg+H,GAAiBN,iBACjC3sF,EAAA6yB,YAAA7yB,EAAAw8B,UAAAx8B,EAAAm8B,QAAAn8B,EAAAu8B,SACAv8B,EAAAy8B,WAAAz8B,EAAAq8B,SAAAr8B,EAAAs8B,iBAGA,IAAA77C,EAAAgyC,EAAA5rC,UACAnZ,EAAA+kD,EAAA7rC,6BACAjZ,EAAA8kD,EAAA3yC,YACA3xB,KAAAsjI,sBAAA/jH,EAAA,EAAA+S,EAAA9S,GACAxf,KAAA8gI,YAAAt1E,KAKA63E,EAAAvkI,UAAAmlE,iBAAA,SAAAC,EAAA1Y,GACA,IAAA3Z,EAAA7xC,KAAA6xC,MACA4yB,EAAA5yB,EAAA4yB,UACAC,EAAA7yB,EAAA6yB,YACA,QAAA9xD,IAAA6xD,QAAA7xD,IAAA8xD,EAAA,CAGA1kE,KAAAwjI,uBACAxjI,KAAA0gI,cAAAl1E,QACA54C,IAAAi/B,EAAA4yB,WACAzkE,KAAAw/H,yBAAA1+H,KAAA,CACgBg+H,GAAiBP,ehHnF1B,cgHuFP3rH,IAAAi/B,EAAA6yB,aACA1kE,KAAAw/H,yBAAA1+H,KAAA,CACgBg+H,GAAiBN,iBACjC3sF,EAAA6yB,YAAA7yB,EAAAw8B,UAAAx8B,EAAAm8B,QAAAn8B,EAAAu8B,SACAv8B,EAAAy8B,WAAAz8B,EAAAq8B,SAAAr8B,EAAAs8B,iBAOA,IAJA,IAAAr6C,EAAAowC,EAAAuJ,WACAluD,EAAA2kD,EAAAzrC,6BACAjZ,EAAA0kD,EAAAvyC,YACApnB,EAAA,EACArN,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAA0C7C,EAAA0U,IAAQ1U,EAClDqN,EAAAvK,KAAAsjI,sBAAA/jH,EAAAhV,EAAAupB,EAAA52B,GAAAsiB,GAEAxf,KAAA8gI,YAAAt1E,KAKA63E,EAAAvkI,UAAA8J,OAAA,WACA5I,KAAA+gI,kCACA/gI,KAAA6xC,MAAA,KAKA,IAAAvhB,EAAAtwB,KAAAswB,UACA,OAAAA,EAEA,IADA,IAAArS,EAAAje,KAAAie,YACA/gB,EAAA,EAAA0U,EAAAqM,EAAAle,OAAoD7C,EAAA0U,IAAQ1U,EAC5D+gB,EAAA/gB,GAAiC03B,GAAI3W,EAAA/gB,GAAAozB,GAGrC,OAAAzf,EAAA/R,UAAA8J,OAAAvL,KAAA2C,OAKAqjI,EAAAvkI,UAAA0kI,qBAAA,WACA,IAAA3xF,EAAA7xC,KAAA6xC,WAEAj/B,IADAi/B,EAAA4yB,WAEAzkE,KAAAqhI,gBAAAxvF,EAAA7xC,KAAAihI,iBAEAruH,IAAAi/B,EAAA6yB,aACA1kE,KAAAuhI,kBAAA1vF,EAAA7xC,KAAAmhI,cAGAkC,EA9LwB,CA+LtBrE,ICvMK,SAAA0E,GAAAptC,EAAA/2E,EAAAhV,EAAAtE,EAAAuZ,GACP,IAKAtiB,EAAAymI,EAAAC,EAAAniH,EAAAI,EAAAgiH,EAAAC,EAAAC,EAAAC,EALAC,EAAA15H,EACA25H,EAAA35H,EACA45H,EAAA,EACA7mI,EAAA,EACAo5B,EAAAnsB,EAEA,IAAArN,EAAAqN,EAAoBrN,EAAA+I,EAAS/I,GAAAsiB,EAAA,CAC7B,IAAAkC,EAAAnC,EAAAriB,GACA4kB,EAAAvC,EAAAriB,EAAA,QACA0V,IAAA6O,IACAsiH,EAAAriH,EAAAD,EACAuiH,EAAAliH,EAAAD,EACA+hH,EAAAvkI,KAAAK,KAAAqkI,IAAAC,UACApxH,IAAAixH,IACAvmI,GAAAqmI,EACAtkI,KAAA+kI,MAAAP,EAAAE,EAAAD,EAAAE,IAAAL,EAAAC,IACAttC,IACAh5F,EAAA6mI,IACAA,EAAA7mI,EACA2mI,EAAAvtG,EACAwtG,EAAAhnI,GAEAI,EAAA,EACAo5B,EAAAx5B,EAAAsiB,IAGAmkH,EAAAC,EACAC,EAAAE,EACAD,EAAAE,GAEAviH,EAAAC,EACAG,EAAAC,EAGA,OADAxkB,GAAAsmI,GACAO,EAAA,CAAAztG,EAAAx5B,GAAA,CAAA+mI,EAAAC,GC/CA,IAAIG,GAAyB,WAC7B,IAAAh0H,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6BtB4zH,GAAA,CACPt4E,KAAA,EACA/lD,IAAA,EACA2a,OAAA,GACA+W,MAAA,EACAjB,MAAA,EACAu1B,IAAA,EACAs4E,OAAA,GACAC,QAAA,GACAC,WAAA,GACAC,YAAA,GACAttD,OAAA,GC5BAutD,GAAA,CACAC,OAAcxB,GACdyB,QAAe7F,GACf1tC,MAAa2wC,GACbrL,WAAkBkM,GAClB7qG,QAAemrG,GACfntC,KDuBqB,SAAAplF,GAQrB,SAAAi0H,EAAAx0G,EAAA2iB,EAAApyB,EAAAk+B,GACA,IAAA/tC,EAAAH,EAAAxT,KAAA2C,KAAAswB,EAAA2iB,EAAApyB,EAAAk+B,IAAA/+C,KA+EA,OA1EAgR,EAAAmxH,gBAKAnxH,EAAA+zH,QAAA,KAKA/zH,EAAA45D,MAAA,GAKA55D,EAAA65D,aAAA,EAKA75D,EAAA85D,aAAA,EAKA95D,EAAA+5D,yBAAAn4D,EAKA5B,EAAAg6D,cAAA,EAKAh6D,EAAAk6D,eAAA,KAIAl6D,EAAAg0H,WAAA,GAKAh0H,EAAAm6D,iBAAA,KAIAn6D,EAAAi0H,aAAA,GAKAj0H,EAAAo6D,WAAuE,GAIvEp6D,EAAAk0H,WAAA,GAKAl0H,EAAAm0H,SAAA,GAKAn0H,EAAAo0H,SAAA,GAKAp0H,EAAAq0H,WAAA,GACQx+D,GAAUL,QAClBx1D,EAoTA,OA3YIqzH,GAASS,EAAAj0H,GA4Fbi0H,EAAAhmI,UAAA8J,OAAA,WACA,IAAA02H,EAAAzuH,EAAA/R,UAAA8J,OAAAvL,KAAA2C,MAIA,OAHAs/H,EAAA4F,WAAAllI,KAAAklI,WACA5F,EAAA0F,WAAAhlI,KAAAglI,WACA1F,EAAA2F,aAAAjlI,KAAAilI,aACA3F,GAKAwF,EAAAhmI,UAAAylE,SAAA,SAAAvpD,EAAAwwC,GACA,IAAAoiB,EAAA5tE,KAAAkrE,eACA4C,EAAA9tE,KAAAmrE,iBACAoD,EAAAvuE,KAAAorE,WACA,QAAAprE,KAAA4qE,OAAA2D,IAAAX,GAAAE,GAAA,CAGA,IAKA5wE,EAAA0U,EALA2K,EAAAvc,KAAAie,YAAAle,OACAulI,EAAAtqH,EAAAwV,UACAjR,EAAA,KACAtZ,EAAA,EACAuZ,EAAA,EAEA,GAAA+uD,EAAAioB,YAAoCX,GAAaC,KAAA,CACjD,IAAiB5zE,GAAUliB,KAAAggI,uBAAAhlH,EAAAgN,aAC3B,OAEA,IAAAsK,OAAA,EAGA,GAFA/S,EAAAvE,EAAAsW,qBACA9R,EAAAxE,EAAA2W,YACA2zG,GAAgCtiH,GAAYE,YAC5CoP,EAAA,CAAA/S,EAAAxf,aAEA,GAAAulI,GAAqCtiH,GAAYM,kBACjDgP,EAAAtX,EAAA0d,eAEA,GAAA4sG,GAAqCtiH,GAAYI,QACjDkP,EAAAtX,EAAA0d,UAAAl3B,MAAA,UAEA,GAAA8jI,GAAqCtiH,GAAYO,cAAA,CACjD,IAAAuQ,EAAA9Y,EAAAyyD,WAEA,IADAn7C,EAAA,GACAp1B,EAAA,EAAA0U,EAAAkiB,EAAA/zB,OAA8C7C,EAAA0U,IAAQ1U,EACtDo1B,EAAAxxB,KAAAgzB,EAAA52B,GAAA,IAGA8C,KAAA0gI,cAAAl1E,GAIA,IAHA,IAAAijB,EAAAF,EAAAE,UACA82D,EAAA,EACAC,OAAA,EACA7nI,EAAA,EAAA8nI,EAAAnzG,EAAAvyB,OAA6CpC,EAAA8nI,IAAQ9nI,EAAA,CACrD,GAAAiV,MAAA67D,EAAA,CACA,IAAA8pB,EAAgCmrC,GAAan1D,EAAA+nB,SAAA/2E,EAAAgmH,EAAAjzG,EAAA30B,GAAA6hB,GAC7C+lH,EAAAhtC,EAAA,GACAitC,EAAAjtC,EAAA,QAGAitC,EAAAlzG,EAAA30B,GAEA,IAAAT,EAAAqoI,EAAoCroI,EAAAsoI,EAAatoI,GAAAsiB,EACjDxf,KAAAie,YAAAnd,KAAAye,EAAAriB,GAAAqiB,EAAAriB,EAAA,IAEA+I,EAAAjG,KAAAie,YAAAle,OACAwlI,EAAAjzG,EAAA30B,GACAqC,KAAA0lI,WAAAnpH,EAAAtW,EAAAjG,KAAAmiI,iBACA5lH,EAAAtW,EAEAjG,KAAA8gI,YAAAt1E,OAEA,CACA,IAAAm6E,EAAA,KAIA,OAHAp3D,EAAAlmB,WACAs9E,EAAA,IAEAL,GACA,KAAqBtiH,GAAYC,MACjC,KAAqBD,GAAYK,YAEjCpd,GADAsZ,EAAAvE,EAAAsW,sBACAvxB,OACA,MACA,KAAqBijB,GAAYE,YACjC3D,EAA4F,EAAA6tD,kBAC5F,MACA,KAAqBpqD,GAAYS,OACjClE,EAAwF,EAAAiB,YACxF,MACA,KAAqBwC,GAAYM,kBAEjCrd,GADAsZ,EAAiG,EAAAguD,oBACjGxtE,OACA,MACA,KAAqBijB,GAAYI,QACjC7D,EAAyF,EAAAoZ,uBACzF41C,EAAAlmB,UACAs9E,EAAA7kI,KAAAye,EAAA,GAAAvf,KAAA6gB,YAEArB,EAAA,EACA,MACA,KAAqBwD,GAAYO,cACjC,IAAA6S,EAAiG,EAAAu3C,wBAEjG,IADApuD,EAAA,GACAriB,EAAA,EAAA0U,EAAAwkB,EAAAr2B,OAA2D7C,EAAA0U,EAAQ1U,GAAA,EACnEqxE,EAAAlmB,UACAs9E,EAAA7kI,KAAAs1B,EAAAl5B,EAAA,GAAA8C,KAAA6gB,YAEAtB,EAAAze,KAAAs1B,EAAAl5B,GAAAk5B,EAAAl5B,EAAA,IAGA,OADA+I,EAAAsZ,EAAAxf,QAEA,OAKAkG,EAAAjG,KAAA4/H,sBAAArgH,EAAA,EAAAtZ,EAAAuZ,GAAA,MACAxf,KAAA4lI,mBACAr3D,EAAAsoB,gBAAAtoB,EAAAwoB,oBACA/2F,KAAAwkE,mBAAA+J,EAAAsoB,eAAAtoB,EAAAwoB,kBACAxoB,EAAAsoB,iBACA72F,KAAAqhI,gBAAArhI,KAAA6xC,MAAA7xC,KAAAihI,YACAjhI,KAAAw/H,yBAAA1+H,KAAAd,KAAAihI,WAAAjhI,KAAA6xC,SAEA08B,EAAAwoB,mBACA/2F,KAAAuhI,kBAAAvhI,KAAA6xC,MAAA7xC,KAAAmhI,aACAnhI,KAAAw/H,yBAAA1+H,KAAAd,KAAAohI,aAAAphI,KAAA6xC,UAGA7xC,KAAA0gI,cAAAl1E,GAIA,IAAAq6E,EAAA7lI,KAAA++C,WACA/+C,KAAAs/H,aAAAx+H,KAAA,CAAoCg+H,GAAiBX,WAAA5hH,EAAAtW,EACrD,KAAA8E,QAAA/K,KAAAmiI,gBAAAp3H,IAAA,MACA/K,KAAA+qE,oBAAA/qE,KAAAgrE,cAAA,EAAAjgE,IACAwjE,EAAAnvB,SAAqCwnB,GACjBA,GAAc2H,EAAAnvB,QAAAnyC,IAAA,SAAAjO,GAClC,OAAAA,EAAA6mI,MAEAt3D,EAAAsoB,iBAAAtoB,EAAAwoB,iBACA/2F,KAAA4qE,MAAA5qE,KAAAmlI,SAAAnlI,KAAAqlI,WAAArlI,KAAAolI,SACAplI,KAAA6qE,aAAA7qE,KAAA8qE,aAAA66D,IAEA3lI,KAAAw/H,yBAAA1+H,KAAA,CAAgDg+H,GAAiBX,WAAA5hH,EAAAtW,EACjE,KAAA8E,QAAA/K,KAAAmiI,gBAAAp3H,IAAA,MACA/K,KAAA+qE,oBAAA/qE,KAAAgrE,cAAA,EAAAhrE,KAAA++C,WAAAh0C,IACAwjE,EAAAnvB,UACAmvB,EAAAsoB,iBAAAtoB,EAAAwoB,iBACA/2F,KAAA4qE,MAAA5qE,KAAAmlI,SAAAnlI,KAAAqlI,WAAArlI,KAAAolI,SACAplI,KAAA6qE,aAAA7qE,KAAA8qE,aAAA66D,IAEA3lI,KAAA8gI,YAAAt1E,MAMAs5E,EAAAhmI,UAAA8mI,gBAAA,WACA,IAAA93D,EAAA9tE,KAAAmrE,iBACAoD,EAAAvuE,KAAAorE,WACAwC,EAAA5tE,KAAAkrE,eACA46D,EAAA9lI,KAAAqlI,WACAv3D,IACAg4D,KAAA9lI,KAAAilI,eACAjlI,KAAAilI,aAAAa,GAAA,CACAphE,YAAAoJ,EAAApJ,YACAsJ,QAAAF,EAAAE,QACAG,eAAAL,EAAAK,eACAE,UAAAP,EAAAO,UACAD,SAAAN,EAAAM,SACAE,WAAAR,EAAAQ,WACAJ,SAAAJ,EAAAI,YAIA,IAAA63D,EAAA/lI,KAAAmlI,SACAY,KAAA/lI,KAAAklI,aACAllI,KAAAklI,WAAAa,GAAA,CACAl1E,KAAA0d,EAAA1d,KACA4d,UAAAF,EAAAE,WlH1MO,SkH2MPC,aAAAH,EAAAG,clHtMO,SkHuMPx+C,MAAAq+C,EAAAr+C,QAGA,IAAA81G,EAAAhmI,KAAAolI,SACAx3D,IACAo4D,KAAAhmI,KAAAglI,aACAhlI,KAAAglI,WAAAgB,GAAA,CACAvhE,UAAAmJ,EAAAnJ,cAWAqgE,EAAAhmI,UAAA4mI,WAAA,SAAAnpH,EAAAtW,EAAA08H,GACA,IAAA70D,EAAA9tE,KAAAmrE,iBACAoD,EAAAvuE,KAAAorE,WACA06D,EAAA9lI,KAAAqlI,WACAU,EAAA/lI,KAAAmlI,SACAa,EAAAhmI,KAAAolI,SACAplI,KAAA4lI,kBACA,IAAA7mF,EAAA/+C,KAAA++C,WACAknF,EAAA3B,GAAA/1D,EAAAG,cACA7F,EAAA7oE,KAAA8qE,aAAA/rB,EACAwoB,EAAAvnE,KAAA4qE,MACAuG,EAAA5C,EAAAr+C,MACAi/D,EAAArhB,IAAAO,UAAA8C,EAAA,IACAnxE,KAAAs/H,aAAAx+H,KAAA,CAAgCg+H,GAAiBZ,WACjD3hH,EAAAtW,EAAAggI,EAAAtD,EACAp0D,EAAAlmB,SAAA29E,EAAAz3D,EAAA+nB,SACAv3C,EACA8pB,EAAAi9D,EAAA32C,EAAApwC,EAAAwoB,EAAAw+D,EAAA,IAEA/lI,KAAAw/H,yBAAA1+H,KAAA,CAA4Cg+H,GAAiBZ,WAC7D3hH,EAAAtW,EAAAggI,EAAAtD,EACAp0D,EAAAlmB,SAAA29E,EAAAz3D,EAAA+nB,SACA,EACAztB,EAAAi9D,EAAA32C,EAAA5nB,EAAAw+D,EAAA,EAAAhnF,KAMA+lF,EAAAhmI,UAAAgmE,aAAA,SAAAC,EAAA49D,GACA,IAAAp0D,EAAAX,EAAAE,EACA,GAAA/I,EAGA,CACA/kE,KAAAmiI,gBAAoF,EACpF,IAAAlyD,EAAAlL,EAAA6H,UACAqD,IAIArC,EAAA5tE,KAAAkrE,kBAEA0C,EAAA5tE,KAAAkrE,eAAkG,IAElG0C,EAAAnJ,UAAsCzB,GAAWiN,EAAArB,YlH9S1C,SkHuSPhB,EAAA5tE,KAAAkrE,eAAA,KASA,IAAAiF,EAAApL,EAAA8H,YACA,GAAAsD,EAGA,EACArC,EAAA9tE,KAAAmrE,oBAEA2C,EAAA9tE,KAAAmrE,iBAAwG,IAExG,IAAA+C,EAAAiC,EAAAlB,cACAd,EAAAgC,EAAAhB,oBACAd,EAAA8B,EAAA7vD,WACAguD,EAAA6B,EAAAX,gBACA1B,EAAAE,QAAAmC,EAAApB,clHxTO,QkHyTPjB,EAAAI,aAAA1sE,QAAqEmlE,GACrEmH,EAAAK,oBACAv7D,IAAAu7D,ElHjTO,EkHiTiEA,EACxEL,EAAAM,SAAA+B,EAAAd,elH7SO,QkH8SPvB,EAAAO,eACAz7D,IAAAy7D,ElHjRO,EkHiRuDA,EAC9DP,EAAAQ,gBACA17D,IAAA07D,ElH5SO,GkH4SyDA,EAChER,EAAApJ,YAA0C1B,GAAWmN,EAAAvB,YlHxS9C,akHoRPd,EAAA9tE,KAAAmrE,iBAAA,KAsBAoD,EAAAvuE,KAAAorE,WACA,IAAAva,EAAAkU,EAAA6L,WlH9UO,kBkH+UK3J,GAASpW,GACrB,IAAAsgB,EAAApM,EAAAiL,WACAzB,EAAAlmB,SAAA0c,EAAAoyB,cACA5oB,EAAA1d,OACA0d,EAAA+nB,SAAAvxB,EAAAmyB,cACA3oB,EAAAioB,UAAAzxB,EAAAkyB,eACA1oB,EAAAE,UAAA1J,EAAAuM,eACA/C,EAAAG,aAAA3J,EAAAyM,mBlHzSO,SkH0SPjD,EAAAsoB,eAAA9xB,EAAAqyB,oBACA7oB,EAAAwoB,iBAAAhyB,EAAAsyB,sBACA9oB,EAAAnvB,QAAA2lB,EAAAuyB,cAA0D1wB,GAC1D2H,EAAAr+C,WAAAtd,IAAAu+D,EAAA,EAAAA,EACA,IAAAN,EAAA9L,EAAA+L,aACAC,EAAAhM,EAAAiM,aACAC,EAAAlM,EAAAgL,oBACAmB,EAAAnM,EAAAxpB,cACAv7C,KAAA4qE,MAAA7F,EAAAgI,WAAA,GACA/sE,KAAA6qE,kBAAAj4D,IAAAi+D,EAAA,EAAAA,EACA7wE,KAAA8qE,kBAAAl4D,IAAAm+D,EAAA,EAAAA,EACA/wE,KAAA+qE,yBAAAn4D,IAAAq+D,KACAjxE,KAAAgrE,mBAAAp4D,IAAAs+D,EAAA,EAAAA,EACAlxE,KAAAqlI,WAAAv3D,GACA,iBAAAA,EAAApJ,YAAAoJ,EAAApJ,YAAwFv0D,EAAM29D,EAAApJ,cAC9FoJ,EAAAE,QAAAF,EAAAK,eAAA,IAAAL,EAAAO,UACAP,EAAAM,SAAAN,EAAAQ,WAAA,IAAAR,EAAAI,SAAAl/C,OAAA,IACA,GACAhvB,KAAAmlI,SAAA52D,EAAA1d,KAAA0d,EAAAr+C,OAAAq+C,EAAAE,WAAA,KACAzuE,KAAAolI,SAAAx3D,EACA,iBAAAA,EAAAnJ,UAAAmJ,EAAAnJ,UAAA,IAAuFt0D,EAAMy9D,EAAAnJ,WAC7F,QAtEAzkE,KAAA4qE,MAAA,IAyEAk6D,EA5YqB,CA6YnB9F,KC9TakH,GApGC,WAQhB,SAAAC,EAAA71G,EAAA2iB,EAAApyB,EAAAk+B,EAAAqnF,GAKApmI,KAAAqmI,WAAAD,EAKApmI,KAAAmiI,gBAAA,KAKAniI,KAAAsmI,WAAAh2G,EAKAtwB,KAAAumI,WAAAtzF,EAKAjzC,KAAAwnD,YAAAzI,EAKA/+C,KAAAwmI,YAAA3lH,EAKA7gB,KAAAymI,kBAAA,GAuDA,OAjDAN,EAAArnI,UAAA4nI,aAAA,SAAAC,GACA,IAAAP,EAAA,KAWA,OAVApmI,KAAAqmI,aACAM,GACAP,EAAApmI,KAAAmiI,iBACkC,MAGlCiE,EAAApmI,KAAAmiI,gBvN+GA,CAAAn3H,SAAA,WuN9GAlK,KAAA,IAGAslI,GAKAD,EAAArnI,UAAA8J,OAAA,WACA,IAAAg+H,EAAA,GACA,QAAAC,KAAA7mI,KAAAymI,kBAAA,CACAG,EAAAC,GAAAD,EAAAC,IAAA,GACA,IAAAC,EAAA9mI,KAAAymI,kBAAAI,GACA,QAAAE,KAAAD,EAAA,CACA,IAAAE,EAAAF,EAAAC,GAAAn+H,SACAg+H,EAAAC,GAAAE,GAAAC,GAGA,OAAAJ,GAOAT,EAAArnI,UAAAmoI,WAAA,SAAAvjF,EAAAwjF,GACA,IAAAC,OAAAv0H,IAAA8wC,IAAAx2C,WAAA,IACAk6H,EAAApnI,KAAAymI,kBAAAU,QACAv0H,IAAAw0H,IACAA,EAAA,GACApnI,KAAAymI,kBAAAU,GAAAC,GAEA,IAAAC,EAAAD,EAAAF,QACAt0H,IAAAy0H,IAEAA,EAAA,IAAAC,EADA3C,GAAAuC,IACAlnI,KAAAsmI,WAAAtmI,KAAAumI,WAAAvmI,KAAAwmI,YAAAxmI,KAAAwnD,aACA4/E,EAAAF,GAAAG,GAEA,OAAAA,GAEAlB,EAlGgB,GCdDoB,GAAA,CACf9jH,OAAA,SACA0vF,QAAA,UACA8T,MAAA,QACA/jG,YAAA,aACAE,QAAA,UACAs0D,KAAA,QCOO,SAAA8vD,GAAAjoH,EAAAhV,EAAAtE,EAAAuZ,EAAA+nD,EAAAkgE,EAAAnxC,EAAApmE,EAAAw3G,EAAA72E,EAAAlK,GAcP,IAbA,IAYAp3C,EAAAo4H,EAZA3hI,EAAA,GAEA6tG,EAAAt0F,EAAAhV,GAAAgV,EAAAtZ,EAAAuZ,GACAooH,EAAArgE,EAAAxnE,OACA0hB,EAAAlC,EAAAhV,GACAsX,EAAAtC,EAAAhV,EAAA,GAEAmX,EAAAnC,EADAhV,GAAAiV,GAEAsC,EAAAvC,EAAAhV,EAAA,GACAs9H,EAAA,EACAz4H,EAAA/P,KAAAK,KAAAL,KAAA8C,IAAAuf,EAAAD,EAAA,GAAApiB,KAAA8C,IAAA2f,EAAAD,EAAA,IACAimH,GAAA,EAEA5qI,EAAA,EAAmBA,EAAA0qI,IAAc1qI,EAAA,CAKjC,IAHA,IAAA6qI,EAAAxgE,EADAh4D,EAAAskG,EAAA+zB,EAAA1qI,EAAA,EAAAA,GAEA8qI,EAAA93G,EAAAw3G,EAAA72E,EAAAk3E,EAAAphF,GACAshF,EAAAR,EAAAO,EAAA,EACAz9H,EAAAtE,EAAAuZ,GAAAqoH,EAAAz4H,EAAA64H,GACAxmH,EAAAC,EACAG,EAAAC,EAEAJ,EAAAnC,EADAhV,GAAAiV,GAEAsC,EAAAvC,EAAAhV,EAAA,GACAs9H,GAAAz4H,EACAA,EAAA/P,KAAAK,KAAAL,KAAA8C,IAAAuf,EAAAD,EAAA,GAAApiB,KAAA8C,IAAA2f,EAAAD,EAAA,IAEA,IAAAqmH,EAAAD,EAAAJ,EACA9jH,EAAA1kB,KAAAqmB,MAAA5D,EAAAD,EAAAH,EAAAD,GAIA,GAHAoyF,IACA9vF,KAAA,GAAA1kB,KAAAslB,GAAAtlB,KAAAslB,SAEA/R,IAAA+0H,EAAA,CACA,IAAA5yF,EAAAhxB,EAAA4jH,EAGA,GAFAG,KAAA,IAAA/yF,EACAA,KAAA11C,KAAAslB,IAAA,EAAAtlB,KAAAslB,GAAAowB,GAAA11C,KAAAslB,GAAA,EAAAtlB,KAAAslB,GAAA,EACAtlB,KAAA6L,IAAA6pC,GAAAuhD,EACA,YAGAqxC,EAAA5jH,EACA,IAAA4zG,EAAAuQ,EAAA94H,EACAtP,EAAgBilB,GAAItD,EAAAC,EAAAi2G,GACpBn5G,EAAgBuG,GAAIlD,EAAAC,EAAA61G,GACpB3xH,EAAAuJ,GAAA,CAAAzP,EAAA0e,EAAAwpH,EAAA,EAAAjkH,EAAAgkH,GACAN,GAAAO,EAEA,OAAAF,EAAA9hI,EAAA,EAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAuhE,ICnEA,IAAI4gE,GAAyB,WAC7B,IAAA93H,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2CzB03H,G1NiJJ,CAAAp9H,SAAA,U0N7IIq9H,G7MjBJ,c6MmBIC,GAAE,GAEFC,GAAE,GAENC,GAAA,GAEAC,GAAA,GA2tBeC,GA1tBH,SAAA73H,GAQZ,SAAA83H,EAAA9nH,EAAAk+B,EAAAwvD,EAAA+wB,GACA,IAAAtuH,EAAAH,EAAAxT,KAAA2C,YA8EA,OAzEAgR,EAAAu9F,WAKAv9F,EAAA+tC,aAMA/tC,EAAA6P,aAKA7P,EAAA43H,WAIA53H,EAAAq+C,eAAA,GAKAr+C,EAAAsuH,4BAKAtuH,EAAAiN,YAAAqhH,EAAArhH,YAKAjN,EAAA63H,iBAAA,GAKA73H,EAAA83H,mB7MhFA,c6MqFA93H,EAAAwuH,yBAAAF,EAAAE,yBAKAxuH,EAAAq6D,kBAAA,KAKAr6D,EAAA24D,cAAA,EAIA34D,EAAAg0H,WAAA1F,EAAA0F,YAAA,GAIAh0H,EAAAi0H,aAAA3F,EAAA2F,cAAA,GAIAj0H,EAAAk0H,WAAA5F,EAAA4F,YAAA,GAKAl0H,EAAA+3H,QAAA,GACA/3H,EAioBA,OAvtBIm3H,GAASQ,EAAA93H,GA2Fb83H,EAAA7pI,UAAAkV,gBAAA,WACQ6yD,GAAUH,QAAA1mE,MAClB6Q,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OASA2oI,EAAA7pI,UAAAkqI,aAAA,SAAAzhE,EAAAw+D,EAAAC,EAAAF,GACA,IAAAlzE,EACAn0D,EAAAqnI,EAAAC,EAAAx+D,EAAAy+D,EAAAhmI,KAAA++C,WACA,IAAa8nB,GAAUpB,YAAAhnE,GAAA,CACvB,IAAAqvE,EAAAg4D,EAAA9lI,KAAAilI,aAAAa,GAAA,KACAl4D,EAAAo4D,EAAAhmI,KAAAglI,WAAAgB,GAAA,KACAz3D,EAAAvuE,KAAAklI,WAAAa,GACAhnF,EAAA/+C,KAAA++C,WACA7uB,EAAAq+C,EAAAr+C,MAAA6uB,EACAkqF,EAAwB3E,GAAU/1D,EAAAE,WtH1D3B,UsH2DP0gB,EAAA22C,GAAAh4D,EAAAO,UAAAP,EAAAO,UAAA,EACAvhE,EAAAy6D,EAAAr2D,MAAA,MACAg4H,EAAAp8H,EAAA/M,OACAopI,EAAA,GACAx9H,EtHwHO,SAAAklD,EAAA/jD,EAAAq8H,GAGP,IAFA,IAAAD,EAAAp8H,EAAA/M,OACA4L,EAAA,EACAzO,EAAA,EAAmBA,EAAAgsI,IAAchsI,EAAA,CACjC,IAAAksI,EAAA3gE,GAAA5X,EAAA/jD,EAAA5P,IACAyO,EAAAtM,KAAAM,IAAAgM,EAAAy9H,GACAD,EAAAroI,KAAAsoI,GAEA,OAAAz9H,EsHhIwB09H,CAAiB96D,EAAA1d,KAAA/jD,EAAAq8H,GACzCG,EAA6B/gE,GAAiBgG,EAAA1d,MAC9CjwD,EAAA0oI,EAAAJ,EACAK,EAAA59H,EAAAwjF,EACAx/E,EAA0B4xC,GAE1BliD,KAAAc,MAAAopI,EAAA,GAAAr5G,GAAA7wB,KAAAc,MAAAS,EAAAuuF,GAAAj/D,IACA0iC,EAAAjjD,EAAA+xC,OACYmlB,GAAUl+D,IAAAlK,EAAAm0D,GACtB,GAAA1iC,GACAvgB,EAAAugB,WAEAvgB,EAAAkhD,KAAA0d,EAAA1d,KACAi1E,IACAn2H,EAAA+0D,YAAAoJ,EAAApJ,YACA/0D,EAAA0+D,UAAA8gB,EACAx/E,EAAAq+D,QAA2DF,EAAA,QAC3Dn+D,EAAAy+D,SAA6DN,EAAA,SAC7Dn+D,EAAA2+D,WAAAR,EAAAQ,WACA3+D,EAAAs+D,aAAAH,EAAAI,SAAAnuE,SACA4P,EAAAs+D,YAAAH,EAAAI,UACAv+D,EAAAw+D,eAAAL,EAAAK,iBAGA63D,IACAr2H,EAAA80D,UAAAmJ,EAAAnJ,WAEA90D,EAAA++D,aAAA,SACA/+D,EAAA8+D,UAAA,SACA,IAAA+6D,EAAA,GAAAP,EACAnpI,EAAAmpI,EAAAM,EAAAC,EAAAr6C,EACAjyF,OAAA,EACA,GAAA4oI,EACA,IAAA5oI,EAAA,EAA2BA,EAAAgsI,IAAchsI,EACzCyS,EAAAm8D,WAAAh/D,EAAA5P,GAAA4C,EAAA0pI,EAAAL,EAAAjsI,GAAA,IAAAiyF,EAAAm6C,GAAApsI,EAAAosI,GAGA,GAAAtD,EACA,IAAA9oI,EAAA,EAA2BA,EAAAgsI,IAAchsI,EACzCyS,EAAAo8D,SAAAj/D,EAAA5P,GAAA4C,EAAA0pI,EAAAL,EAAAjsI,GAAA,IAAAiyF,EAAAm6C,GAAApsI,EAAAosI,GAIA,OAAeziE,GAAU9oE,IAAAU,EAAAuB,OAWzB2oI,EAAA7pI,UAAA2qI,sBAAA,SAAA95H,EAAAwuF,EAAAC,EAAAoqC,EAAAC,EAAAvH,EAAAwI,GACA/5H,EAAA68D,YACA78D,EAAAu8D,OAAAhqE,MAAAyN,EAAAwuF,GACAxuF,EAAAw8D,OAAAjqE,MAAAyN,EAAAyuF,GACAzuF,EAAAw8D,OAAAjqE,MAAAyN,EAAA64H,GACA74H,EAAAw8D,OAAAjqE,MAAAyN,EAAA84H,GACA94H,EAAAw8D,OAAAjqE,MAAAyN,EAAAwuF,GACA+iC,IACAlhI,KAAA4oI,WAAiD1H,EAAA,GACjDlhI,KAAAuuF,MAAA5+E,IAEA+5H,IACA1pI,KAAA2pI,gBAAAh6H,EAA8D,GAC9DA,EAAAg9D,WAuBAg8D,EAAA7pI,UAAA8qI,aAAA,SAAAj6H,EAAA7P,EAAA0e,EAAAwqD,EAAA/kD,EAAAC,EAAAy+G,EAAA/hI,EAAA4iD,EAAAylB,EAAAC,EAAApoD,EAAAoP,EAAA25G,EAAAl+H,EAAAyzC,EAAA8hF,EAAAwI,GACA,IAAAI,EAAA5I,GAAAwI,EAGA5pI,GAFAmkB,GAAAiM,EAGA1R,GAFA0F,GAAAgM,EAGA,IAAAytB,EAAAhyC,EAAAs9D,EAAAD,EAAAr9D,MAAAq9D,EAAAr9D,MAAAs9D,EAAAt9D,EACAvM,EAAAwB,EAAAsoE,EAAAF,EAAApoE,OAAAooE,EAAApoE,OAAAsoE,EAAAtoE,EACAmpI,EAAA3qF,EAAA,GAAAzB,EAAAztB,EAAAkvB,EAAA,GACA4qF,EAAA5qF,EAAA,GAAAhgD,EAAA8wB,EAAAkvB,EAAA,GACA6qF,EAAAnqI,EAAAs/C,EAAA,GACA8qF,EAAA1rH,EAAA4gC,EAAA,IACA0qF,GAAA,IAAAhpH,KACYwnH,GAAE,GAAAG,GAAA,GAAAwB,EACF3B,GAAE,GAAMC,GAAE,GAAA2B,EACV3B,GAAE,GAAAC,GAAA,GAAAyB,EAAAF,EACdvB,GAAA,GAAAC,GAAA,GAAAyB,EAAAF,GAEA,IAAArmH,EAAA,KACA,OAAA7C,EAAA,CACA,IAAAk/B,EAAAlgD,EAAAmkB,EACAg8B,EAAAzhC,EAAA0F,EACAP,EAAwB0K,GAAiBg6G,GAAYroF,EAAAC,EAAA,IAAAn/B,GAAAk/B,GAAAC,GACzC/9C,GAAemmI,GAAcC,IAC7BpmI,GAAemmI,GAAcE,IAC7BrmI,GAAemmI,GAAYG,IAC3BtmI,GAAemmI,GAAYI,IAC3BtpH,GAAc9f,KAAAQ,IAAUyoI,GAAE,GAAKC,GAAE,GAAAC,GAAA,GAAAC,GAAA,IAAAppI,KAAAQ,IAA6ByoI,GAAE,GAAKC,GAAE,GAAAC,GAAA,GAAAC,GAAA,IAAAppI,KAAAM,IAA6B2oI,GAAE,GAAKC,GAAE,GAAAC,GAAA,GAAAC,GAAA,IAAAppI,KAAAM,IAA6B2oI,GAAE,GAAKC,GAAE,GAAAC,GAAA,GAAAC,GAAA,IAAoBL,SAGvKjpH,GAAc8qH,EAAAC,EAAAD,EAAAF,EAAAG,EAAAF,EAAuC5B,IAEjE,IAAA1mF,EAAA/xC,EAAA+xC,OACAyoF,EAAAT,IAAA,GAAAx5G,EAAA,IACAyG,EAAyByxG,GAAS,GAAA+B,GAAAzoF,EAAA/1C,OAAuCy8H,GAAS,GAAA+B,GAAA,GACtE/B,GAAS,GAAA+B,GAAAzoF,EAAA9gD,QAAwCwnI,GAAS,GAAA+B,GAAA,EAKtE,GAJAN,IACA/pI,EAAAT,KAAAw1B,MAAA/0B,GACA0e,EAAAnf,KAAAw1B,MAAArW,IAEAmkH,EAAA,CACA,IAAAhsG,GAAA,GAAAgsG,EAAA,GACA,OAEYhjH,GAAMgjH,EAAiByF,IACnC,IAAAgC,EAAAzzG,EACA,CAAAhnB,EAAAgU,IAAAniB,MAAA,QAAAgiD,EAAAwlB,EAAAC,EAAAC,EAAAvrB,EAAAv+C,EAAAU,EAAA0e,EAAA0R,GACA,KACAk6G,GAAAN,GACAM,EAAAtpI,KAAAogI,EAAAwI,EAAuEpB,GAAIC,GAAEC,GAAAC,IAE7E9F,EAAA7hI,KAAAspI,QAEAzzG,IACAmzG,GACA9pI,KAAAypI,sBAAA95H,EAAoD24H,GAAIC,GAAEC,GAAAC,GACtB,EACA,GAExB1/D,GAASp5D,EAAAgU,EAAA6/B,EAAAwlB,EAAAC,EAAAC,EAAAvrB,EAAAv+C,EAAAU,EAAA0e,EAAA0R,KAOrBy4G,EAAA7pI,UAAAyvF,MAAA,SAAA5+E,GACA,GAAA3P,KAAA4oI,WAAA,CACA,IAAAnjB,EAA2BvjH,GAAclC,KAAA8oI,mBAAA,OACzCuB,EAAA,IAAArqI,KAAA++C,WACApvC,EAAAsuF,OACAtuF,EAAA+gB,UAAA+0F,EAAA,GAAA4kB,EAAA5kB,EAAA,GAAA4kB,GACA16H,EAAAmU,OAAA9jB,KAAA2pE,eAEAh6D,EAAA+8D,OACA1sE,KAAA4oI,YACAj5H,EAAA2uF,WAQAqqC,EAAA7pI,UAAA6qI,gBAAA,SAAAh6H,EAAAqxH,GACArxH,EAAA+0D,YAAgFs8D,EAAA,GAChFrxH,EAAA0+D,UAA8C2yD,EAAA,GAC9CrxH,EAAAq+D,QAAmDgzD,EAAA,GACnDrxH,EAAAy+D,SAAqD4yD,EAAA,GACrDrxH,EAAA2+D,WAA+C0yD,EAAA,GAC/CrxH,EAAAs+D,cACAt+D,EAAAw+D,eAAuD6yD,EAAA,GACvDrxH,EAAAs+D,YAAyD+yD,EAAA,MASzD2H,EAAA7pI,UAAA+yE,gBAAA,SAAA8wD,EAAAn3E,EAAAkmB,GACA,GAAAixD,KAAA5iI,OAAA,GACA,IAAAuqI,EAAA3H,EAAA,GACA,MAAA2H,MAAA3H,EAAA5iI,OAAA,GAEA,IAAAg3E,EAAA,CACAx2E,KAA4CoiI,EAAA,GAC5CniI,KAA4CmiI,EAAA,GAC5CliI,KAA4CkiI,EAAA,GAC5CjiI,KAA4CiiI,EAAA,GAC5CxkI,MAAAqtD,GAKA,GAHAkmB,IACAA,EAAA,IAAwC67B,GAAApuG,EAAK,KAE7CuyE,EAAAtwE,SAAA21E,GAAA,CACArF,EAAApwE,OAAAy1E,GACA,QAAAvqE,EAAA,EAAA8C,EAAAqzH,EAAA5iI,OAA+DyM,EAAA8C,IAAQ9C,EAAA,CACvE,IAAA+9H,EAA6D5H,EAAAn2H,GAC7D+9H,IACAA,EAAAxqI,OAAA,IACAC,KAAAypI,sBAAAc,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAE4BxhE,GAAS7mE,WAAA0Q,EAAA23H,KAIrC5H,EAAA5iI,OAAA,EACgBqf,GAAmBujH,IAGnC,OAAAjxD,GAUAi3D,EAAA7pI,UAAA0rI,iCAAA,SAAAjjE,EAAAw+D,EAAAD,EAAAE,GACA,IAAAz3D,EAAAvuE,KAAAklI,WAAAa,GACAnzE,EAAA5yD,KAAAgpI,aAAAzhE,EAAAw+D,EAAAC,EAAAF,GACAh4D,EAAA9tE,KAAAilI,aAAAa,GACA/mF,EAAA/+C,KAAA++C,WACAkqF,EAAoB3E,GAAU/1D,EAAAE,WtH5SvB,UsH6SPw3D,EAAuB3B,GAAU/1D,EAAAG,ctHxS1B,UsHySPygB,EAAArhB,KAAAO,UAAAP,EAAAO,UAAA,EAKA,OACAzb,QACA3uC,QAJAglH,GADAr2E,EAAAjnD,MAAAozC,EAAA,EAAAwvB,EAAAr+C,OACA,MAAA+4G,GAAA95C,EAKAjrE,QAJA+hH,EAAArzE,EAAAhyD,OAAAm+C,EAAA,MAAAknF,GAAA92C,IAqBAw5C,EAAA7pI,UAAA2rI,SAAA,SAAA96H,EAAAgU,EAAA+mH,EAAApL,EAAAuK,EAAAc,EAAAC,GAGA,IAAAp/D,E7M1VOj+C,EAAAC,E6MwVPxtB,KAAAqvD,eAAAtvD,OAAA,EAGAC,KAAAqrE,mBAAsCzuD,GAAM+G,EAAA3jB,KAAA8oI,oBAC5Ct9D,EAAAxrE,KAAAqrE,mBAGArrE,KAAAqrE,oBACArrE,KAAAqrE,kBAAA,IAEAG,EAA+B9nD,GAAW1jB,KAAAie,YAAA,EAAAje,KAAAie,YAAAle,OAAA,EAAA4jB,EAAA3jB,KAAAqrE,mB7MlWnC99C,E6MmW0BvtB,KAAA8oI,mB7MnW1Bt7G,E6MmW0B7J,E7MlWjC4J,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,GACAD,EAAA,GAAAC,EAAA,I6MuXA,IAxBA,IAIAq9G,EACA5mH,EAAAC,EAAA4mH,EAAAC,EAAAC,EAAAC,EAAAtI,EAAA35D,EAAAzB,EAAAw+D,EACAD,EAAAE,EAgB8Dx6E,EAC9D1rD,EAAA0e,EAvBA0sH,GAA4Bl5H,EAAO04H,GACnCxtI,EAAA,EACA0U,EAAA0tH,EAAAv/H,OACAvC,EAAA,EAIA2tI,EAAA,EACAC,EAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAAvrI,KAAA6oI,iBACAp/D,EAAAzpE,KAAA2pE,cACA93B,EAA+D,CAC/DliC,UACAovC,WAAA/+C,KAAA++C,WACAl+B,WAAA7gB,KAAA6gB,WACAC,SAAA2oD,GAIA+hE,EAAAxrI,KAAAs/H,iBAAAt/H,KAAAuuG,SAAA,MAGArxG,EAAA0U,GAAA,CACA,IAAAovH,EAAA1B,EAAApiI,GAEA,OADoD8jI,EAAA,IAEpD,KAAqBlC,GAAiBhB,eACtCtyE,EAAgFw1E,EAAA,GAChFkK,GAAAR,EAA6Dv6H,EAAMq7C,QAAAlwC,cACnEpe,EAA8C8jI,EAAA,QAE9CpuH,IAAAg4H,GAA6D1oH,GAAU0oH,EAAAp/E,EAAAlwC,cAAA0M,eAIvE9qB,EAHAA,EAA8C8jI,EAAA,KAK9C,MACA,KAAqBlC,GAAiBf,WACtCoN,EAAAK,IACAxrI,KAAAuuF,MAAA5+E,GACAw7H,EAAA,GAEAC,EAAAI,IACA77H,EAAAg9D,SACAy+D,EAAA,GAEAD,GAAAC,IACAz7H,EAAA68D,YACAs+D,EAAAC,EAAAhgI,OAEA7N,EACA,MACA,KAAqB4hI,GAAiBr7G,OAEtC,IAAAhC,EAAA+pD,EADAhuE,EAA0CwjI,EAAA,IAE1Cn/G,EAAA2pD,EAAAhuE,EAAA,GAGAihB,EAFA+sD,EAAAhuE,EAAA,GAEAikB,EACA/C,EAFA8sD,EAAAhuE,EAAA,GAEAqkB,EACA7jB,EAAAqB,KAAAK,KAAA+e,IAAAC,KACA/O,EAAAu8D,OAAAzqD,EAAAzjB,EAAA6jB,GACAlS,EAAA88D,IAAAhrD,EAAAI,EAAA7jB,EAAA,IAAAqB,KAAAslB,IAAA,KACAznB,EACA,MACA,KAAqB4hI,GAAiBd,WACtCruH,EAAAy8D,cACAlvE,EACA,MACA,KAAqB4hI,GAAiBb,OACtCzgI,EAA0CwjI,EAAA,GAC1C6J,EAAA7J,EAAA,GACA,IAAAhmH,EAA6FgmH,EAAA,GAC7F59D,EAAA49D,EAAA,GACAx3H,EAAA,GAAAw3H,EAAAjhI,OAAAihI,EAAA,QAAApuH,EACAi/B,EAAA72B,WACA62B,EAAA2Z,UACAtuD,KAAAquI,IACAA,EAAAruI,GAAA,IAEA,IAAAo/B,EAAAivG,EAAAruI,GACAsM,EACAA,EAAAgiE,EAAAhuE,EAAAqtI,EAAA,EAAAvuG,IAGAA,EAAA,GAAAkvC,EAAAhuE,GACA8+B,EAAA,GAAAkvC,EAAAhuE,EAAA,GACA8+B,EAAAv8B,OAAA,GAEAqjE,EAAA9mC,EAAAuV,KACA30C,EACA,MACA,KAAqB4hI,GAAiBX,WACtC3gI,EAA0CwjI,EAAA,GAC1C6J,EAA2C7J,EAAA,GAC3Ch4D,EAA2Fg4D,EAAA,GAE3F/8G,EAAgD+8G,EAAA,GAChD98G,EAAgD88G,EAAA,GAChD2B,EAAAgI,EAAA,KAA+G3J,EAAA,GAC/G,IAAApgI,EAAmDogI,EAAA,GACnDx9E,EAAoDw9E,EAAA,GACpD/3D,EAAoD+3D,EAAA,GACpD93D,EAAoD83D,EAAA,IACpDvzC,GAA4DuzC,EAAA,IAC5DlgH,GAAqDkgH,EAAA,IACrD9wG,GAAkD8wG,EAAA,IAClDr1H,GAAkDq1H,EAAA,IAClD,IAAAh4D,GAAAg4D,EAAAjhI,QAAA,IAEAwnE,EAAiDy5D,EAAA,IACjD+E,EAAoD/E,EAAA,IACpD8E,EAAsD9E,EAAA,IACtDgF,EAAoDhF,EAAA,IACpD,IAAAyK,GAAAzrI,KAAAwqI,iCAAAjjE,EAAAw+D,EAAAD,EAAAE,GACAh9D,EAAAg4D,EAAA,GAAAyK,GAAA74E,MACA,IAAAie,GAA4DmwD,EAAA,IAC5D/8G,EAAA+8G,EAAA,IAAAyK,GAAAxnH,QAAA4sD,IAAA7wE,KAAA++C,WACA,IAAAgyB,GAA4DiwD,EAAA,IAC5D98G,EAAA88G,EAAA,IAAAyK,GAAAvnH,QAAA6sD,IAAA/wE,KAAA++C,WACAn+C,EAAAogI,EAAA,GAAAh4D,EAAApoE,OACA+K,GAAAq1H,EAAA,IAAAh4D,EAAAr9D,MAEA,IAAAg6H,QAAA,EACA3E,EAAAjhI,OAAA,KACA4lI,GAA2D3E,EAAA,KAE3D,IAAA5hF,QAAA,EAAAy3C,QAAA,EAAAE,QAAA,EACAiqC,EAAAjhI,OAAA,IACAq/C,GAA2D4hF,EAAA,IAC3DnqC,GAA4DmqC,EAAA,IAC5DjqC,GAA8DiqC,EAAA,MAG9D5hF,GAAkCwnB,GAClCiwB,GAAAE,IAAA,GAEAtJ,KACA3sE,IAAA2oD,GAGA,IADA,IAAAiiE,GAAA,EAC0BluI,EAAAqtI,EAAQrtI,GAAA,EAClCmoI,OAAA+F,MAAA//H,GAAA3L,KAAA++C,YAGA/+C,KAAA4pI,aAAAj6H,EAAA67D,EAAAhuE,GAAAguE,EAAAhuE,EAAA,GAAAwrE,EAAA/kD,EAAAC,EAAAy+G,EAAA/hI,EAAA4iD,EAAAylB,EAAAC,EAAApoD,GAAAoP,GAAA25G,EAAAl+H,GAAAyzC,GAAAy3C,GAAgQ,OAAAE,GAAyE,QAEzU/2F,KAAAqvD,eAAAvuD,KAAAd,KAAA2iI,EAAAn3E,KACAtuD,EACA,MACA,KAAqB4hI,GAAiBZ,WACtC,IAAA3hH,GAAkDykH,EAAA,GAClD/6H,GAAgD+6H,EAAA,GAChDiF,GAAqDjF,EAAA,GACrD2B,EAAAgI,EAAA,KAA+G3J,EAAA,GAC/G,IAAA34E,GAAqD24E,EAAA,GACrDgF,EAAgDhF,EAAA,GAChD,IAAA1qC,GAAqD0qC,EAAA,GACrD2K,GAA8D3K,EAAA,GAC9Dn4D,GAAoDm4D,EAAA,GACpD8E,EAAkD9E,EAAA,IAClD,IAAA7xC,GAAwD6xC,EAAA,IACxDz5D,EAA6Cy5D,EAAA,IAC7C+E,EAAgD/E,EAAA,IAChD,IAAA4K,GAA4D5K,EAAA,IAC5DzyD,GAAAvuE,KAAAklI,WAAAa,GACAl1E,GAAA0d,GAAA1d,KACAsgB,GAAA5C,GAAAr+C,MAAAy7G,GACAE,QAAA,EAEAA,GADAh7E,MAAA7wD,KAAA+oI,QACA/oI,KAAA+oI,QAAAl4E,IAGA7wD,KAAA+oI,QAAAl4E,IAAA,GAEA,IAAAi7E,GAAqCrV,GAAgBjrD,EAAAjvD,GAAAtW,GAAA,GACrD8lI,GAAA56D,GAAiDzI,GAAwB7X,GAAA0W,EAAAskE,IACzE,GAAAxjF,IAAA0jF,IAAAD,GAAA,CACA,IAAAr9D,GAAAzuE,KAAAklI,WAAAa,GAAAt3D,UAEAu9D,GAAoCxE,GAAch8D,EAAAjvD,GAAAtW,GAAA,EAAAshE,GADlDukE,GAAAC,IAAiEzH,GAAU71D,IACzB6nB,GAAAnlB,GAAqEzI,GAAwB7X,GAAAg7E,IAC/I,GAAAG,GAAA,CACA,IAAAzuI,QAAA,EAAA0uI,QAAA,EAAAC,QAAA,EAAAt5E,QAAA,EAAAu5E,QAAA,EACA,GAAArG,EACA,IAAAvoI,GAAA,EAAA0uI,GAAAD,GAAAjsI,OAA8DxC,GAAA0uI,KAAQ1uI,GAEtE2uI,IADAC,GAAAH,GAAAzuI,KAC8D,GAC9Dq1D,GAAA5yD,KAAAgpI,aAAAkD,GAAAnG,EAAA,GAAAD,GACA7hH,EAAgEkoH,GAAA,GAAAh9C,GAChEjrE,EAAA+hH,GAAArzE,GAAAhyD,OAAA,MAAAqlI,IAAA92C,GAAAtmB,GACA7oE,KAAA4pI,aAAAj6H,EACsDw8H,GAAA,GAAiCA,GAAA,GAAAv5E,GAAA3uC,EAAAC,EAAAy+G,EAAA/vE,GAAAhyD,OAAA,MACjCurI,GAAA,GAAAP,IAAA,EAAAh5E,GAAAjnD,MAAoDi7D,GAAc,WAGxH,GAAAo/D,EACA,IAAAzoI,GAAA,EAAA0uI,GAAAD,GAAAjsI,OAA8DxC,GAAA0uI,KAAQ1uI,GAEtE2uI,IADAC,GAAAH,GAAAzuI,KAC8D,GAC9Dq1D,GAAA5yD,KAAAgpI,aAAAkD,GAAAnG,EAAAC,EAAA,IACA/hH,EAAgEkoH,GAAA,GAChEjoH,EAAA+hH,GAAArzE,GAAAhyD,OAAAioE,GACA7oE,KAAA4pI,aAAAj6H,EACsDw8H,GAAA,GAAiCA,GAAA,GAAAv5E,GAAA3uC,EAAAC,EAAAy+G,EAAA/vE,GAAAhyD,OAAA,MACjCurI,GAAA,GAAAP,IAAA,EAAAh5E,GAAAjnD,MAAoDi7D,GAAc,YAKxH5mE,KAAAqvD,eAAAvuD,KAAAd,KAAA2iI,EAAAn3E,KACAtuD,EACA,MACA,KAAqB4hI,GAAiBV,aACtC,QAAAxrH,IAAA+3H,EAAA,CAEA,IAAA3kI,GAAA2kI,EADAn/E,EAAoFw1E,EAAA,IAEpF,GAAAh7H,GACA,OAAAA,KAGA9I,EACA,MACA,KAAqB4hI,GAAiBT,KACtCmN,EACAL,IAGAnrI,KAAAuuF,MAAA5+E,KAEAzS,EACA,MACA,KAAqB4hI,GAAiBR,gBAYtC,IAXA9gI,EAA0CwjI,EAAA,GAC1C6J,EAA2C7J,EAAA,GAC3ClhI,EAAA0rE,EAAAhuE,GAGAytI,GAFAzsH,EAAAgtD,EAAAhuE,EAAA,IAEA,MADAwtI,EAAAlrI,EAAA,QAEAgrI,GAAAG,IAAAF,IACAp7H,EAAAu8D,OAAApsE,EAAA0e,GACAssH,EAAAE,EACAD,EAAAE,GAEAztI,GAAA,EAAgCA,EAAAqtI,EAAQrtI,GAAA,EAGxCwtI,GAFAlrI,EAAA0rE,EAAAhuE,IAEA,KACAytI,GAFAzsH,EAAAgtD,EAAAhuE,EAAA,IAEA,KACAA,GAAAqtI,EAAA,GAAAG,IAAAF,GAAAG,IAAAF,IACAp7H,EAAAw8D,OAAArsE,EAAA0e,GACAssH,EAAAE,EACAD,EAAAE,KAGA/tI,EACA,MACA,KAAqB4hI,GAAiBP,eACtC8M,EAAArK,EACAhhI,KAAA4oI,WAAA5H,EAAA,GACAmK,IACAnrI,KAAAuuF,MAAA5+E,GACAw7H,EAAA,EACAC,IACAz7H,EAAAg9D,SACAy+D,EAAA,IAGAz7H,EAAA80D,UAA0Fu8D,EAAA,KAC1F9jI,EACA,MACA,KAAqB4hI,GAAiBN,iBACtC8M,EAAAtK,EACAoK,IACAz7H,EAAAg9D,SACAy+D,EAAA,GAEAprI,KAAA2pI,gBAAAh6H,EAAsE,KACtEzS,EACA,MACA,KAAqB4hI,GAAiBL,OACtC+M,EACAJ,IAGAz7H,EAAAg9D,WAEAzvE,EACA,MACA,UACAA,GAIAiuI,GACAnrI,KAAAuuF,MAAA5+E,GAEAy7H,GACAz7H,EAAAg9D,UAYAg8D,EAAA7pI,UAAAstI,QAAA,SAAAz8H,EAAAgU,EAAA8lD,EAAAihE,EAAAb,GACA7pI,KAAA2pE,cAAAF,EACAzpE,KAAAyqI,SAAA96H,EAAAgU,EAAA+mH,EAAA1qI,KAAAs/H,aAAAuK,OAAAj3H,WAeA+1H,EAAA7pI,UAAAutI,oBAAA,SAAA18H,EAAAgU,EAAA8lD,EAAAihE,EAAA4B,EAAA1B,GAEA,OADA5qI,KAAA2pE,cAAAF,EACAzpE,KAAAyqI,SAAA96H,EAAAgU,EAAA+mH,EAAA1qI,KAAAw/H,0BAAA,EAAA8M,EAAA1B,IAEAjC,EAxtBY,CAytBV/0H,GC9wBE24H,GAAyB,WAC7B,IAAAl8H,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0B7B87H,GAAA,CACIjF,GAAWnkH,QACXmkH,GAAW9jH,OACX8jH,GAAWrkH,YACXqkH,GAAWtgB,MACXsgB,GAAW7vD,KACX6vD,GAAWp0B,SAEXs5B,GAAa,SAAA57H,GAcjB,SAAA67H,EAAAz5F,EAAApyB,EAAAk+B,EAAAwvD,EAAAo+B,EAAAC,GACA,IAAA57H,EAAAH,EAAAxT,KAAA2C,YA0CA,OArCAgR,EAAAu1H,WAAAtzF,EAKAjiC,EAAAs9F,UAAAC,EAKAv9F,EAAAw2C,YAAAzI,EAKA/tC,EAAAw1H,YAAA3lH,EAKA7P,EAAA67H,cAAAD,EAKA57H,EAAA87H,mBAAA,GAKA97H,EAAA+7H,qBAAA,KAKA/7H,EAAAg8H,uB9M9DA,c8M+DAh8H,EAAAi8H,iBAAAN,GACA37H,EA4NA,OApRIu7H,GAASG,EAAA77H,GA8Db67H,EAAA5tI,UAAAu/F,KAAA,SAAA1uF,EAAAgU,GACA,IAAAupH,EAAAltI,KAAAmtI,cAAAxpH,GACAhU,EAAA68D,YACA78D,EAAAu8D,OAAAghE,EAAA,GAAAA,EAAA,IACAv9H,EAAAw8D,OAAA+gE,EAAA,GAAAA,EAAA,IACAv9H,EAAAw8D,OAAA+gE,EAAA,GAAAA,EAAA,IACAv9H,EAAAw8D,OAAA+gE,EAAA,GAAAA,EAAA,IACAv9H,EAAA0uF,QAOAquC,EAAA5tI,UAAAmuI,iBAAA,SAAAN,GACA,QAAAjpF,KAAAipF,EAAA,CACA,IAAAS,EAAAptI,KAAA8sI,mBAAAppF,QACA9wC,IAAAw6H,IACAptI,KAAA8sI,mBAAAppF,GAAA0pF,EAAA,IAEA,IAAAC,EAAAV,EAAAjpF,GACA,QAAAwjF,KAAAmG,EAAA,CACA,IAAA/N,EAAA+N,EAAAnG,GACAkG,EAAAlG,GAAA,IAA6CwB,GAAQ1oI,KAAAwmI,YAAAxmI,KAAAwnD,YAAAxnD,KAAAsuG,UAAAgxB,MAOrDoN,EAAA5tI,UAAAkV,gBAAA,WACA,QAAAilC,KAAAj5C,KAAA8sI,mBAAA,CACA,IAAAM,EAAAptI,KAAA8sI,mBAAA7zF,GACA,QAAAx6C,KAAA2uI,EACAA,EAAA3uI,GAAAuV,kBAGA,GAAAhU,KAAA+sI,qBAAA,CACA,IAAArrF,EAAA1hD,KAAA+sI,qBAAArrF,OACAA,EAAA/1C,MAAA+1C,EAAA9gD,OAAA,EAEAiQ,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAMA0sI,EAAA5tI,UAAAwuI,aAAA,SAAAF,GACA,QAAA1pF,KAAA1jD,KAAA8sI,mBAEA,IADA,IAAAS,EAAAvtI,KAAA8sI,mBAAAppF,GACAxmD,EAAA,EAAA0U,EAAAw7H,EAAArtI,OAAkD7C,EAAA0U,IAAQ1U,EAC1D,GAAAkwI,EAAAlwI,KAAAqwI,EACA,SAIA,UAaAb,EAAA5tI,UAAAusD,2BAAA,SAAAzsC,EAAAiC,EAAAC,EAAAqqC,EAAAu/E,EAAA77H,EAAA6jE,GAEA,IAAA86D,EAAA,GADAriF,EAAA9rD,KAAAw1B,MAAAs2B,IACA,EACAxnC,EAAwB0K,GAAgBruB,KAAAgtI,uBAAA7hF,EAAA,GAAAA,EAAA,KAAAtqC,GAAA,EAAAA,GAAAC,GAAAlC,EAAA,IAAAA,EAAA,IACxC5e,KAAA+sI,uBACA/sI,KAAA+sI,qBAAwCxrF,GAAqBisF,MAE7D,IAWAC,EAXA99H,EAAA3P,KAAA+sI,qBACAp9H,EAAA+xC,OAAA/1C,QAAA6hI,GAAA79H,EAAA+xC,OAAA9gD,SAAA4sI,GACA79H,EAAA+xC,OAAA/1C,MAAA6hI,EACA79H,EAAA+xC,OAAA9gD,OAAA4sI,GAGA79H,EAAAgzG,UAAA,IAAA6qB,UAMA56H,IAAA5S,KAAA6sI,gBAEYzuH,GADZqvH,E3NDA,CAAAziI,SAAA,U2NE4B4T,GAChBP,GAAMovH,EAAA5sH,GAAA7gB,KAAA6sI,cAAA1hF,GAAAsiF,IAElB,IACAvG,EADAv8B,EAgKO,SAAAtlF,GACP,QAAAzS,IAAA86H,GAAAroH,GACA,OAAAqoH,GAAAroH,GAIA,IAFA,IAAAsoH,EAAA,EAAAtoH,EAAA,EACA9gB,EAAA,IAAA6H,MAAAuhI,GACAzwI,EAAA,EAAmBA,EAAAywI,EAAezwI,IAClCqH,EAAArH,GAAA,IAAAkP,MAAAuhI,GAEA,IAAA7tI,EAAAulB,EACA7G,EAAA,EACAuc,EAAA,EACA,KAAAj7B,GAAA0e,GACAovH,GAAArpI,EAAA8gB,EAAAvlB,EAAAulB,EAAA7G,GACAovH,GAAArpI,EAAA8gB,EAAA7G,EAAA6G,EAAAvlB,GACA8tI,GAAArpI,EAAA8gB,EAAA7G,EAAA6G,EAAAvlB,GACA8tI,GAAArpI,EAAA8gB,EAAAvlB,EAAAulB,EAAA7G,GACAovH,GAAArpI,EAAA8gB,EAAAvlB,EAAAulB,EAAA7G,GACAovH,GAAArpI,EAAA8gB,EAAA7G,EAAA6G,EAAAvlB,GACA8tI,GAAArpI,EAAA8gB,EAAA7G,EAAA6G,EAAAvlB,GACA8tI,GAAArpI,EAAA8gB,EAAAvlB,EAAAulB,EAAA7G,GAGA,IADAuc,GAAA,MADAvc,GAEA1e,GAAA,MAEAi7B,GAAA,KADAj7B,GAAA,IAKA,OADA4tI,GAAAroH,GAAA9gB,EACAA,EA7LAspI,CAAA1iF,GAMA,SAAAw/E,EAAAn/E,GAEA,IADA,IAAAz7C,EAAAJ,EAAA0iF,aAAA,IAAAm7C,KAAAvsI,KACA6sI,EAAA,EAA6BA,EAAAN,EAAmBM,IAChD,QAAAC,EAAA,EAAiCA,EAAAP,EAAmBO,IACpD,GAAApjC,EAAAmjC,GAAAC,IACAh+H,EAAA,GAAAg+H,EAAAP,EAAAM,GAAA,MACA,IAAAE,OAAA,EAKA,QAJAt7D,GAAAw0D,GAAyEK,GAAWtgB,OAAAigB,GAAyBK,GAAW7vD,OACxH,IAAAhF,EAAAryE,QAAAmrD,MACAwiF,EAAAn/H,EAAA28C,IAEAwiF,QAIAr+H,EAAAgzG,UAAA,IAAA6qB,MASA,IAEAtwI,EAAAsP,EAAA4gI,EAAAa,EAAAjoI,EAFAi/G,EAAArnH,OAAAmP,KAAA/M,KAAA8sI,oBAAA7/H,IAAAs9B,QAGA,IAFA06E,EAAAriH,KAAgBsZ,GAEhBhf,EAAA+nH,EAAAllH,OAAA,EAA+B7C,GAAA,IAAQA,EAAA,CACvC,IAAAiqI,EAAAliB,EAAA/nH,GAAAgQ,WAEA,IADAkgI,EAAAptI,KAAA8sI,mBAAA3F,GACA36H,EAAAggI,GAAAzsI,OAAA,EAAsCyM,GAAA,IAAQA,EAG9C,QAAAoG,KADAq7H,EAAAb,EADAlG,EAAAsF,GAAAhgI,OAGAxG,EAAAioI,EAAA5B,oBAAA18H,EAAAgU,EAAA7C,EAAA4pH,EAAAC,EAAA8C,IAEA,OAAAznI,IAWA0mI,EAAA5tI,UAAAquI,cAAA,SAAAxpH,GACA,IAAAsvB,EAAAjzC,KAAAumI,WACA,IAAAtzF,EACA,YAEA,IAAA1yC,EAAA0yC,EAAA,GACAzyC,EAAAyyC,EAAA,GACAxyC,EAAAwyC,EAAA,GACAvyC,EAAAuyC,EAAA,GACAi6F,EAAA,CAAA3sI,EAAAC,EAAAD,EAAAG,EAAAD,EAAAC,EAAAD,EAAAD,GAEA,OADQkjB,GAAWwpH,EAAA,MAAAvpH,EAAAupH,GACnBA,GAKAR,EAAA5tI,UAAAkT,QAAA,WACA,OAAeA,EAAOhS,KAAA8sI,qBAYtBJ,EAAA5tI,UAAAstI,QAAA,SAAAz8H,EAAAgU,EAAA8lD,EAAAihE,EAAAb,EAAAqE,EAAAC,GAEA,IAAAlpB,EAAArnH,OAAAmP,KAAA/M,KAAA8sI,oBAAA7/H,IAAAs9B,QACA06E,EAAAriH,KAAgBsZ,GAGhBlc,KAAAumI,aACA52H,EAAAsuF,OACAj+F,KAAAq+F,KAAA1uF,EAAAgU,IAEA,IACAzmB,EAAA0U,EAAApF,EAAA8C,EAAA83H,EAAAC,EADA+G,EAAAF,GAAA1B,GAEA,IAAAtvI,EAAA,EAAA0U,EAAAqzG,EAAAllH,OAAmC7C,EAAA0U,IAAQ1U,EAAA,CAC3C,IAAAiqI,EAAAliB,EAAA/nH,GAAAgQ,WAEA,IADAk6H,EAAApnI,KAAA8sI,mBAAA3F,GACA36H,EAAA,EAAA8C,EAAA8+H,EAAAruI,OAAiDyM,EAAA8C,IAAQ9C,EAAA,CACzD,IAAA06H,EAAAkH,EAAA5hI,GAEA,QAAAoG,KADAy0H,EAAAD,EAAAF,IAEA,IAAAiH,GACAjH,GAAwCK,GAAWtgB,OAAAigB,GAAyBK,GAAW7vD,KAUvF2vD,EAAA+E,QAAAz8H,EAAAgU,EAAA8lD,EAAAihE,EAAAb,OAVuF,CACvF,IAAAzD,EAAA+H,EAAAhH,GACAf,EAIAA,EAAAtlI,KAAAumI,EAAA1jH,EAAAniB,MAAA,IAHA2sI,EAAAhH,GAAA,CAAAE,EAAA1jH,EAAAniB,MAAA,MAYAxB,KAAAumI,YACA52H,EAAA2uF,WAGAouC,EArRiB,CAsRf94H,GAMF85H,GAAA,CACAW,EAAA,QASA,SAAAT,GAAAnhI,EAAA3M,EAAA0e,GACA,IAAAthB,EACAmoB,EAAAhmB,KAAAO,MAAA6M,EAAA1M,OAAA,GACA,GAAAD,GAAAulB,EACA,IAAAnoB,EAAAmoB,EAAwBnoB,EAAA4C,EAAO5C,IAC/BuP,EAAAvP,GAAAshB,IAAA,OAGA,GAAA1e,EAAAulB,EACA,IAAAnoB,EAAA4C,EAAA,EAAuB5C,EAAAmoB,EAAYnoB,IACnCuP,EAAAvP,GAAAshB,IAAA,EAkDO,SAAA8vH,GAAAC,EAAA5+H,EAAAmR,EAAA+oH,EAAAx6E,GAGP,IAFA,IAAA41D,EAAArnH,OAAAmP,KAAAwhI,GAAAthI,IAAAs9B,QAAA3nC,KAA4DsZ,GAC5DozC,EAAA,GACArW,EAAA,EAAAu1F,EAAAvpB,EAAAllH,OAAmCk5C,EAAAu1F,IAAQv1F,EAG3C,IAFA,IAAAw1F,EAAAF,EAAAtpB,EAAAhsE,GAAA/rC,YACAwhI,OAAA,EACAxxI,EAAA,EAAA0U,EAAA68H,EAAA1uI,OAAiD7C,EAAA0U,GAAQ,CACzD,IAAAq8H,EAAAQ,EAAAvxI,KACA+wI,IAAAS,IACAA,EAAAT,EACA5+E,EAAAvuD,KAAAmtI,EAAA5+E,iBAEA,IAAA1rC,EAAA8qH,EAAAvxI,KACA+wI,EAAA7B,QAAAz8H,EAAAgU,EAAA7C,EAAAwuC,EAAAu6E,IAIe,IAAA8E,GAAA,GC7YfC,GAAA,GAOAC,GAAA,CACAt5G,MA4MA,SAAAu5G,EAAA9zH,EAAAO,EAAAiwC,GACA,IAAAoZ,EAAArpD,EAAAuxD,WACA,GAAAlI,EAAA,CACA,GAAAA,EAAAgpB,iBAA0CR,GAAUr+C,OACpD,OAEA,IAAAggG,EAAAD,EAAA7H,WAAA1rH,EAAAO,YAAqEyrH,GAAWtgB,OAChF8nB,EAAApqE,cAAAC,EAAAkqE,EAAApI,cAAA,IACAqI,EAAA5qE,UAAAnpD,EAAAwwC,GAEA,IAAAuZ,EAAAxpD,EAAAwxD,UACA,GAAAhI,EAAA,CACA,IAAAiqE,EAAAF,EAAA7H,WAAA1rH,EAAAO,YAAoEyrH,GAAW7vD,MAC/Es3D,EAAAlqE,aAAAC,EAAA+pE,EAAApI,eAAA9hE,IACAoqE,EAAAzqE,SAAAvpD,EAAAwwC,KAzNAorE,WA8IA,SAAAkY,EAAA9zH,EAAAO,EAAAiwC,GACA,IAAAkZ,EAAAnpD,EAAAsxD,YACA,GAAAnI,EAAA,CACA,IAAAuqE,EAAAH,EAAA7H,WAAA1rH,EAAAO,YAA0EyrH,GAAWrkH,aACrF+rH,EAAAzqE,mBAAA,KAAAE,GACAuqE,EAAAtrE,eAAA3oD,EAAAwwC,GAEA,IAAAuZ,EAAAxpD,EAAAwxD,UACA,GAAAhI,EAAA,CACA,IAAAiqE,EAAAF,EAAA7H,WAAA1rH,EAAAO,YAAoEyrH,GAAW7vD,MAC/Es3D,EAAAlqE,aAAAC,EAAA+pE,EAAApI,cAAA,IACAsI,EAAAzqE,SAAAvpD,EAAAwwC,KAxJAvzB,QAwPA,SAAA62G,EAAA9zH,EAAAO,EAAAiwC,GACA,IAAAiZ,EAAAlpD,EAAAqxD,UACAlI,EAAAnpD,EAAAsxD,YACA,GAAApI,GAAAC,EAAA,CACA,IAAAwqE,EAAAJ,EAAA7H,WAAA1rH,EAAAO,YAAuEyrH,GAAWnkH,SAClF8rH,EAAA1qE,mBAAAC,EAAAC,GACAwqE,EAAA7qE,YAAArpD,EAAAwwC,GAEA,IAAAuZ,EAAAxpD,EAAAwxD,UACA,GAAAhI,EAAA,CACA,IAAAiqE,EAAAF,EAAA7H,WAAA1rH,EAAAO,YAAoEyrH,GAAW7vD,MAC/Es3D,EAAAlqE,aAAAC,EAAA+pE,EAAApI,cAAA,IACAsI,EAAAzqE,SAAAvpD,EAAAwwC,KAnQA2sE,WAgOA,SAAA2W,EAAA9zH,EAAAO,EAAAiwC,GACA,IAAAoZ,EAAArpD,EAAAuxD,WACA,GAAAlI,EAAA,CACA,GAAAA,EAAAgpB,iBAA0CR,GAAUr+C,OACpD,OAEA,IAAAggG,EAAAD,EAAA7H,WAAA1rH,EAAAO,YAAqEyrH,GAAWtgB,OAChF8nB,EAAApqE,cAAAC,EAAAkqE,EAAApI,cAAA,IACAqI,EAAAhrE,eAAA/oD,EAAAwwC,GAEA,IAAAuZ,EAAAxpD,EAAAwxD,UACA,GAAAhI,EAAA,CACA,IAAAiqE,EAAAF,EAAA7H,WAAA1rH,EAAAO,YAAoEyrH,GAAW7vD,MAC/Es3D,EAAAlqE,aAAAC,EAAA+pE,EAAApI,eAAA9hE,IACAoqE,EAAAzqE,SAAAvpD,EAAAwwC,KA7OA8rE,gBA+JA,SAAAwX,EAAA9zH,EAAAO,EAAAiwC,GACA,IAAAkZ,EAAAnpD,EAAAsxD,YACA,GAAAnI,EAAA,CACA,IAAAuqE,EAAAH,EAAA7H,WAAA1rH,EAAAO,YAA0EyrH,GAAWrkH,aACrF+rH,EAAAzqE,mBAAA,KAAAE,GACAuqE,EAAAprE,oBAAA7oD,EAAAwwC,GAEA,IAAAuZ,EAAAxpD,EAAAwxD,UACA,GAAAhI,EAAA,CACA,IAAAiqE,EAAAF,EAAA7H,WAAA1rH,EAAAO,YAAoEyrH,GAAW7vD,MAC/Es3D,EAAAlqE,aAAAC,EAAA+pE,EAAApI,cAAA,IACAsI,EAAAzqE,SAAAvpD,EAAAwwC,KAzKAitE,aAkLA,SAAAqW,EAAA9zH,EAAAO,EAAAiwC,GACA,IAAAiZ,EAAAlpD,EAAAqxD,UACAlI,EAAAnpD,EAAAsxD,YACA,GAAAnI,GAAAD,EAAA,CACA,IAAAyqE,EAAAJ,EAAA7H,WAAA1rH,EAAAO,YAAuEyrH,GAAWnkH,SAClF8rH,EAAA1qE,mBAAAC,EAAAC,GACAwqE,EAAAjrE,iBAAAjpD,EAAAwwC,GAEA,IAAAuZ,EAAAxpD,EAAAwxD,UACA,GAAAhI,EAAA,CACA,IAAAiqE,EAAAF,EAAA7H,WAAA1rH,EAAAO,YAAoEyrH,GAAW7vD,MAC/Es3D,EAAAlqE,aAAAC,EAAA+pE,EAAApI,cAAA,IACAsI,EAAAzqE,SAAAvpD,EAAAwwC,KA7LAqpE,mBA2HA,SAAAsa,EAAAn0H,EAAAO,EAAAiwC,GACA,IACAtuD,EAAA0U,EADAq7D,EAAAjyD,EAAAkyD,qBAEA,IAAAhwE,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAAuC7C,EAAA0U,IAAQ1U,EAAA,CAC/C,IAAAkyI,EAAAP,GAAA5hE,EAAA/vE,GAAAszB,WACA4+G,EAAAD,EAAAliE,EAAA/vE,GAAAqe,EAAAiwC,KA/HAo5E,OAiCA,SAAAkK,EAAA9zH,EAAAO,EAAAiwC,GACA,IAAAiZ,EAAAlpD,EAAAqxD,UACAlI,EAAAnpD,EAAAsxD,YACA,GAAApI,GAAAC,EAAA,CACA,IAAA2qE,EAAAP,EAAA7H,WAAA1rH,EAAAO,YAAsEyrH,GAAW9jH,QACjF4rH,EAAA7qE,mBAAAC,EAAAC,GACA2qE,EAAA/rE,WAAAtoD,EAAAwwC,GAEA,IAAAuZ,EAAAxpD,EAAAwxD,UACA,GAAAhI,EAAA,CACA,IAAAiqE,EAAAF,EAAA7H,WAAA1rH,EAAAO,YAAoEyrH,GAAW7vD,MAC/Es3D,EAAAlqE,aAAAC,EAAA+pE,EAAApI,cAAA,IACAsI,EAAAzqE,SAAAvpD,EAAAwwC,MAtCO,SAAA8jF,GAAAC,EAAAC,GACP,OAAA56F,SAAoBzkC,EAAMo/H,GAAA,IAAA36F,SAA2BzkC,EAAMq/H,GAAA,IAOpD,SAAAC,GAAA5uH,EAAAk+B,GACP,IAAAzuB,EAAAo/G,GAAA7uH,EAAAk+B,GACA,OAAAzuB,IAOO,SAAAo/G,GAAA7uH,EAAAk+B,GACP,OAAA6vF,GAAA/tH,EAAAk+B,EAiCO,SAAA4wF,GAAAR,EAAA3jF,EAAAjwC,EAAAgV,EAAApe,EAAAigE,GACP,IAAA3lB,GAAA,EACAmY,EAAArpD,EAAAuxD,WACA,GAAAlI,EAAA,CACA,IAAAotB,EAAAptB,EAAAgpB,gBACAoE,GAA0B5E,GAAUr+C,QAAAijD,GAAyB5E,GAAU93E,MACvEsvD,EAAAspB,oBAAA/7E,EAAAigE,IAGA4f,GAA8B5E,GAAUv+C,MACxC+1B,EAAAvjE,OAEA2wF,EAAAptB,EAAAgpB,gBACAhpB,EAAAqpB,kBAAA97E,EAAAigE,GACA3lB,GAAA,GAIA,OAQA,SAAA0iF,EAAA3jF,EAAAjwC,EAAAgV,GACA,IAAAvV,EAAAO,EAAAyxD,qBAAAzxD,CAAAiwC,GACA,IAAAxwC,EACA,OAEA,IAAAyW,EAAAzW,EAAAD,sBAAAwV,GAEA,GADAhV,EAAAqxC,eAeA,SAAAgjF,EAAAT,EAAAn0H,EAAAO,EAAAiwC,GACA,GAAAxwC,EAAAwV,WAA8BxN,GAAYQ,oBAAA,CAE1C,IADA,IAAAypD,EAAoF,EAAAmoD,gBACpFl4H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvD0yI,EAAAT,EAAAliE,EAAA/vE,GAAAqe,EAAAiwC,GAEA,OAEA,IAAA67E,EAAA8H,EAAAlI,WAAA1rH,EAAAO,YAA2DyrH,GAAWp0B,SACtEk0B,EAAAlkE,WAA6E,EAAA3X,EAAAjwC,EAAAqxC,eAtB7EgjF,CAAAT,EAAA19G,EAAAlW,EAAAiwC,OAEA,CACA,IAAA4jF,EAAAP,GAAAp9G,EAAAjB,WACA4+G,EAAAD,EAAA19G,EAAAlW,EAAAiwC,IArBAqkF,CAAAV,EAAA3jF,EAAAjwC,EAAAgV,GACAk8B,ECtGA,IAAIqjF,GAAyB,WAC7B,IAAAz/H,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAuUdq/H,GA1Sc,SAAAl/H,GAK7B,SAAAm/H,EAAAlU,GACA,IAAA9qH,EAAAH,EAAAxT,KAAA2C,KAAA87H,IAAA97H,KAoCA,OA/BAgR,EAAAi/H,QAAA,EAKAj/H,EAAAmqG,mBAAA,EAKAnqG,EAAAk/H,oBAAAnlI,IAKAiG,EAAAkzG,gB7NqIA,CAAAl5G,SAAA,U6NhIAgG,EAAAm/H,qBAAA,KAKAn/H,EAAAo/H,aAAA,KAKAp/H,EAAAq/H,oBAAA,EACAr/H,EA8PA,OAvSI8+H,GAASE,EAAAn/H,GA8Cbm/H,EAAAlxI,UAAA0wD,YAAA,SAAA5wB,EAAA0nB,GACA,IAAA32C,EAAA3P,KAAA2P,QACA+xC,EAAA/xC,EAAA+xC,OACAytF,EAAAnvI,KAAAowI,aACA,IAAAjB,KAAAn9H,UAIA,OAHA0vC,EAAA/1C,MAAA,IACA+1C,EAAA/1C,MAAA,GAEA+1C,EAEA,IAAA3C,EAAAngB,EAAAmgB,WAEQ5wB,GAASnuB,KAAAqhH,gBAAA,EAAAtiE,EAAA,EAAAA,GACTnwB,GAAW5uB,KAAAshH,uBAAAthH,KAAAqhH,iBAEnB,IAAA11G,EAAAtM,KAAAw1B,MAAA+J,EAAA7d,KAAA,GAAAg+B,GACAn+C,EAAAvB,KAAAw1B,MAAA+J,EAAA7d,KAAA,GAAAg+B,GACA,GAAA2C,EAAA/1C,UAAA+1C,EAAA9gD,UAAA,CACA8gD,EAAA/1C,QACA+1C,EAAA9gD,SACA,IAAAmiH,EAAkCh0F,GAAiB/uB,KAAAqhH,iBACnD3/D,EAAAnmC,MAAAoI,YAAAo/F,IACArhE,EAAAnmC,MAAAoI,UAAAo/F,QAIApzG,EAAAgzG,UAAA,IAAAh3G,EAAA/K,GAEAZ,KAAA+hH,UAAApyG,EAAAivB,GACA,IAAA1gB,EAAA0gB,EAAA1gB,OACAgxC,EAAAtwB,EAAAswB,UACA9jC,EAAA8jC,EAAA9jC,WACAtK,EAAAouC,EAAApuC,SACA0xD,EAAApnD,EAAApD,YACAu1G,EAAAv9H,KAAA4gH,WAAAp0D,YAEA8jF,EAAAhqF,EAAApoC,OACA0kG,OAAAhwG,IAAA09H,EACA1tB,GACA5iH,KAAAq+F,KAAA1uF,EAAAivB,EAAA0xG,GAEA,IAAAviF,EAAAnvB,EAAAmvB,UACA87E,IAAA97E,EAAsCja,KAAQia,EAAyBja,KACvEnwB,EAAA3jB,KAAAiiH,mBAAArjF,EAAAjzB,EAAA/K,EAAA,GACA0uD,EAAAhJ,EAAApC,QAAAtlB,EAAA0wB,mBAAA,GACAi/E,EAAkFvuI,KAAA4gH,WAAA2vB,eAAA,GAAyC,KAE3H,GADApB,EAAA/C,QAAAz8H,EAAAgU,EAAA7C,EAAAwuC,EAAAu6E,OAAAj3H,EAAA27H,GACAhR,EAAA1qD,YAAAznD,EAAAtD,aAAiEhJ,GAAc0zD,EAAAt0D,GAAA,CAK/E,IAJA,IAAA4Y,EAAA5Y,EAAA,GACAu0D,EAA6BnyD,GAAQkyD,GACrCg+D,EAAA,EACA5nE,OAAA,EACA9xC,EAAA07C,EAAA,KAEA5J,EAAA6J,IADA+9D,EAEA,IAAA1lC,EAAA9qG,KAAAiiH,mBAAArjF,EAAAjzB,EAAA/K,EAAAgoE,GACAumE,EAAA/C,QAAAz8H,EAAAm7F,EAAAhqF,EAAAwuC,EAAAu6E,OAAAj3H,EAAA27H,GACAz3G,GAAA27C,EAIA,IAFA+9D,EAAA,EACA15G,EAAA5Y,EAAA,GACA4Y,EAAA07C,EAAA,KAEA5J,EAAA6J,IADA+9D,EAEA,IAAAC,EAAAzwI,KAAAiiH,mBAAArjF,EAAAjzB,EAAA/K,EAAAgoE,GACAumE,EAAA/C,QAAAz8H,EAAA8gI,EAAA3vH,EAAAwuC,EAAAu6E,OAAAj3H,EAAA27H,GACAz3G,GAAA27C,GAGA,GAAA87D,EAAA,CACA,IAAAmC,EAAA9xG,EAAAmvB,UAEYugF,GAAeC,EAAA5+H,EAAAmR,IAD3B4vH,EAAqC58F,KAAQ48F,EAA2B58F,KAC7ClV,EAAAywB,gBAE3BuzD,GACAjzG,EAAA2uF,UAEAt+F,KAAAgiH,WAAAryG,EAAAivB,GACA,IAAA4kB,EAAA8C,EAAA9C,QAIA,OAHAA,IAAAsM,WAAApO,EAAAnmC,MAAAioC,WACA9B,EAAAnmC,MAAAioC,WAEA9B,GAKAsuF,EAAAlxI,UAAAusD,2BAAA,SAAAzsC,EAAAggB,EAAAusB,EAAAt8C,EAAA6jE,GACA,GAAA1yE,KAAAowI,aAGA,CACA,IAAAvvH,EAAA+d,EAAAswB,UAAAruC,WACAC,EAAA8d,EAAAswB,UAAApuC,SACA6vH,EAA0E3wI,KAAA4gH,WAE1EgwB,EAAA,GAaA,OAZA5wI,KAAAowI,aAAA/kF,2BAAAzsC,EAAAiC,EAAAC,EAAAqqC,EAAA,GAKA,SAAAK,GACA,IAAA/sD,EAA0B0R,EAAMq7C,GAChC,KAAA/sD,KAAAmyI,GAEA,OADAA,EAAAnyI,IAAA,EACAoQ,EAAA28C,EAAAmlF,IAEaA,EAAAJ,eAAA79D,EAAA,QAObs9D,EAAAlxI,UAAA+vD,mBAAA,WACA,IAAA5K,EAAAjkD,KAAA4gH,WACA38D,EAAAK,cAAAtkD,KAAAowI,cACAnsF,EAAAjtC,WAQAg5H,EAAAlxI,UAAA+xI,wBAAA,SAAArhI,GACAxP,KAAA8gH,2BAKAkvB,EAAAlxI,UAAA6yD,aAAA,SAAA/yB,EAAA0nB,GACA,IAAAw1E,EAA6E97H,KAAA4gH,WAC7E2c,EAAAzB,EAAAtvE,YACAskF,EAAAlyG,EAAAmvB,UAA6Cja,IAC7Ci9F,EAAAnyG,EAAAmvB,UAA+Cja,IAC/Ck9F,EAAAlV,EAAAmV,0BACAC,EAAApV,EAAAqV,4BACA,IAAAnxI,KAAAiwI,SAAAe,GAAAF,IACAI,GAAAH,EACA,SAEA,IAAAK,EAAAxyG,EAAA1gB,OACAgxC,EAAAtwB,EAAAswB,UACA9jC,EAAA8jC,EAAA9jC,WACAvK,EAAAquC,EAAAruC,WACAk+B,EAAAngB,EAAAmgB,WACAsyF,EAAAvV,EAAA7kH,cACAq6H,EAAAxV,EAAAyV,kBACAC,EAAA1V,EAAA2V,sBACA7+H,IAAA4+H,IACAA,EAAqClC,IAErC,IAAApxH,EAAqBG,GAAM+yH,EAAAE,EAAAzwH,GAC3B2xD,EAAAtjB,EAAA9jC,WAAApD,YACA,GAAAu1G,EAAA1qD,YAAA3jB,EAAA9jC,WAAAtD,aACahJ,GAAc0zD,EAAA5zC,EAAA1gB,QAAA,CAM3B,IAAAu0D,EAA6BnyD,GAAQkyD,GACrC+pB,EAAAl9F,KAAAM,IAAkC2gB,GAAQpC,GAAA,EAAAu0D,GAC1Cv0D,EAAA,GAAAs0D,EAAA,GAAA+pB,EACAr+E,EAAA,GAAAs0D,EAAA,GAAA+pB,EAEA,IAAAv8F,KAAAiwI,QACAjwI,KAAAkwI,qBAAArvH,GACA7gB,KAAAm7G,mBAAAk2B,GACArxI,KAAAmwI,sBAAAqB,GACY1yH,GAAc9e,KAAAkkH,gBAAAhmG,GAE1B,OADAle,KAAAqwI,oBAAA,GACA,EAEArwI,KAAAowI,cACApwI,KAAAowI,aAAAr8H,UAEA/T,KAAAowI,aAAA,KACApwI,KAAAiwI,QAAA,EACA,IAAAd,EAAA,IAA8BjJ,GAAmBwJ,GAAkB7uH,EAAAk+B,GAAA7gC,EAAA2C,EAAAk+B,EAAA+8E,EAAAyU,gBACnEhT,EAAA1rB,aAAA3zF,EAAA2C,EAAAuK,GAKA,IAAAgjC,EAAA,SAAA5C,GACA,IAAAiqC,EACAi8C,EAAAlmF,EAAA7vC,oBAAAmgH,EAAAngH,mBAIA,GAHA+1H,IACAj8C,EAAAi8C,EAAAlmF,EAAA3qC,IAEA40E,EAAA,CACA,IAAA64B,EAAAtuH,KAAA2vI,cAAAnkF,EAAA3qC,EAAAk+B,EAAA02C,EAAA05C,GACAnvI,KAAAiwI,OAAAjwI,KAAAiwI,QAAA3hB,IAES5vH,KAAAsB,MACT,GAAAwxI,EAAA,CAEA,IAAAG,EAAA,GACApU,EAAA5sB,uBAAAzyF,EAIA,SAAAstC,GACAmmF,EAAA7wI,KAAA0qD,KAEAmmF,EAAA/uI,KAAA4uI,GACA,QAAAt0I,EAAA,EAAA0U,EAAA+/H,EAAA5xI,OAAmD7C,EAAA0U,IAAQ1U,EAC3DkxD,EAAAujF,EAAAz0I,SAIAqgI,EAAA5sB,uBAAAzyF,EAAAkwC,GAEA,IAAAwjF,EAAAzC,EAAAvmI,SACAipI,EAAA,IAAgClD,GAAazwH,EAAA2C,EAAAk+B,EAAAw+E,EAAA/rB,cAAAogC,EAAA9V,EAAAyV,mBAO7C,OANAvxI,KAAAkwI,oBAAArvH,EACA7gB,KAAAm7G,kBAAAk2B,EACArxI,KAAAmwI,qBAAAqB,EACAxxI,KAAAkkH,gBAAAhmG,EACAle,KAAAowI,aAAAyB,EACA7xI,KAAAqwI,oBAAA,GACA,GAUAL,EAAAlxI,UAAA6wI,cAAA,SAAAnkF,EAAA3qC,EAAAk+B,EAAA02C,EAAAq5C,GACA,IAAAr5C,EACA,SAEA,IAAAhpC,GAAA,EACA,GAAArgD,MAAA+K,QAAAs+E,GACA,QAAAv4F,EAAA,EAAA0U,EAAA6jF,EAAA11F,OAA+C7C,EAAA0U,IAAQ1U,EACvDuvD,EAA0BkjF,GAAab,EAAAtjF,EAAAiqC,EAAAv4F,GAAmCuyI,GAAyB5uH,EAAAk+B,GAAA/+C,KAAA6wI,wBAAA7wI,OAAAysD,OAInGA,EAAsBkjF,GAAab,EAAAtjF,EAAAiqC,EAAgCg6C,GAAyB5uH,EAAAk+B,GAAA/+C,KAAA6wI,wBAAA7wI,MAE5F,OAAAysD,GAEAujF,EAxS6B,CAyS3B/uB,ICtUE6wB,GAAyB,WAC7B,IAAAzhI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+IdqhI,GA/GmB,SAAAlhI,GAKlC,SAAAmhI,EAAA/tF,GACA,IAAAjzC,EAAAH,EAAAxT,KAAA2C,KAAAikD,IAAAjkD,KAeA,OAXAgR,EAAAihI,iBAAA,GAKAjhI,EAAAkhI,gBAAA,IAAoCnC,GAAyB9rF,GAK7DjzC,EAAAmhI,iBAAAluF,EAAAmuF,gBACAphI,EAwFA,OA5GI8gI,GAASE,EAAAnhI,GAyBbmhI,EAAAlzI,UAAAkV,gBAAA,WACAhU,KAAAkyI,gBAAAn+H,UACAlD,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAKAgyI,EAAAlzI,UAAA+vD,mBAAA,WACA7uD,KAAAkyI,gBAAArjF,sBAKAmjF,EAAAlzI,UAAA6yD,aAAA,SAAA/yB,EAAA0nB,GACA,IAAAvH,EAAAngB,EAAAmgB,WAEAuzB,EADA1zC,EAAAswB,UACAruC,WACAitC,EAAAlvB,EAAAmvB,UACAskF,EAAAryI,KAAAkyI,gBACA1vB,EAAA5jF,EAAA1gB,OAKA,GAJA,IAAAle,KAAAmyI,kBAEYhwH,GADZqgG,IAAAhhH,MAAA,GAC2BxB,KAAAmyI,mBAE3BrkF,EAAmBha,MAAQga,EAAsBha,MAA0BzzB,GAAOmiG,GAAA,CAClF,IAAA8vB,EAAAtyI,KAAAiyI,iBACAtiI,EAAA0iI,EAAA1iI,QACA4iI,EAA+FhhI,EAAM,GAAGqtB,EAAA,CACxGywB,eAAA,GACAtuC,KAAA,CACoBT,GAAQkiG,GAAAlwC,EACR/xD,GAASiiG,GAAAlwC,GAE7BpjB,UAAyE39C,EAAM,GAAGqtB,EAAAswB,UAAA,CAClFpuC,SAAA,MAGA0xH,EAAA50I,OAAAmP,KAAAwlI,EAAAjjF,oBAAA1sD,OACA6vI,EAAA,IAA8Bt2B,GAAWqG,EAAAlwC,EAAAvzB,EAAApvC,EAAA+xC,OAAA,SAAA7yC,IACzCwjI,EAAA1gF,aAAA4gF,EAAAjsF,KACA+rF,EAAAhC,oBACyBzzH,GAAM01H,EAAAE,KAC/BH,EAAA7iF,YAAA+iF,EAAAjsF,GACoBmrB,GAAoB8gE,EAAA,MACxCD,EAAAE,EACA3jI,OAGYsE,EAAMs/H,EAAUr9H,EAASC,OAAA,WACrCo9H,EAAA3gG,aAA2Cs7C,GAAUr+C,SACrD/uC,KAAAiqE,OAAAwoE,EACAzyI,KAAAiyI,iBAAAK,IAEatyI,MACbyyI,EAAApxI,OAEA,GAAArB,KAAAiqE,OAAA,CACA,IAAAjB,EAAAhpE,KAAAiqE,OACA0xC,EAAA3yC,EAAA3tB,gBACAonE,EAAAz5C,EAAAunB,gBACAvwF,KAAAmhH,mBAAAxF,EAAA58D,EAAA0jE,EAEA,QAAAziH,KAAAiqE,QAKA+nE,EAAAlzI,UAAAijH,UAAA,aAIAiwB,EAAAlzI,UAAAkjH,WAAA,aAIAgwB,EAAAlzI,UAAAusD,2BAAA,SAAAzsC,EAAAggB,EAAAusB,EAAAt8C,EAAA6jE,GACA,OAAA1yE,KAAAkyI,gBACAlyI,KAAAkyI,gBAAA7mF,2BAAAzsC,EAAAggB,EAAAusB,EAAAt8C,EAAA6jE,GAGA7hE,EAAA/R,UAAAusD,2BAAAhuD,KAAA2C,KAAA4e,EAAAggB,EAAAusB,EAAAt8C,EAAA6jE,IAGAs/D,EA7GkC,CA8GhC5vB,IChIaswB,GAAA,CACfzrB,MAAA,QACA0rB,OAAA,UChBIC,GAAyB,WAC7B,IAAAviI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAkC7BmiI,GAAA,CACA7pE,MAAA,CAAcu+D,GAAUnkH,QAAUmkH,GAAU9jH,OACpC8jH,GAAUrkH,YAAcqkH,GAAUtgB,MAAQsgB,GAAU7vD,MAC5Do7D,OAAA,CAAevL,GAAUnkH,QAAUmkH,GAAUrkH,cAK7C6vH,GAAA,CACA/pE,MAAA,CAAcu+D,GAAUp0B,SACxB2/B,OAAA,CAAevL,GAAUtgB,MAAQsgB,GAAU7vD,KAAO6vD,GAAUp0B,UA4hB7C6/B,GArhBkB,SAAAniI,GAKjC,SAAAoiI,EAAAhvF,GACA,IAAAjzC,EAAAH,EAAAxT,KAAA2C,KAAAikD,IAAAjkD,KACAkzI,EAAAliI,EAAArB,QAAA+xC,OAKA1wC,EAAAmiI,gBAAgC5xF,KAChC,IAAA6xF,EAAApiI,EAAAmiI,gBAAAzxF,OACA0xF,EAAA73H,MAAA8gB,SAAA,WACA+2G,EAAA73H,MAAAgmG,gBAAA,WACA,IAAAj1E,EAAA18B,SAAAC,cAAA,OACA0L,EAAA+wB,EAAA/wB,MAiDA,OAhDAA,EAAA8gB,SAAA,WACA9gB,EAAA5P,MAAA,OACA4P,EAAA3a,OAAA,OACA0rC,EAAAmc,YAAAyqF,GACA5mG,EAAAmc,YAAA2qF,GAKApiI,EAAAqiI,WAAA/mG,EAMAt7B,EAAAsiI,uBnNtDA,cmN4DAtiI,EAAAuiI,8BnN5DA,cmNiEAviI,EAAAi/H,QAAA,EAKAj/H,EAAAwiI,uBAKAxiI,EAAAyiI,sBAAA,GAIAziI,EAAA0iI,kBAAA,GAKA1iI,EAAA2iI,cnNpFA,cmNsFA3iI,EAAA+zF,WAAA,EACA/zF,EAidA,OAlhBI4hI,GAASK,EAAApiI,GAsEboiI,EAAAn0I,UAAAkV,gBAAA,WACAhU,KAAAmzI,gBAAAzxF,OAAA/1C,MAAA3L,KAAAmzI,gBAAAzxF,OAAA9gD,OAAA,EACAiQ,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAOAizI,EAAAn0I,UAAA80I,YAAA,SAAAhiG,EAAAmN,EAAA3zB,GACA,IAAAyoH,EAAsB1jI,EAAMyhC,GAC5BC,EAAAD,EAAAE,YACAD,IAAwBjD,GAASG,QAAA6C,EAAAG,MACjCF,IAAsBjD,GAASt5B,OAAAu8B,IAAoBjD,GAASK,QAC5D4kG,KAAA7zI,KAAA0zI,oBACYngI,EAAavT,KAAA0zI,kBAAAG,WACzB7zI,KAAA0zI,kBAAAG,IAEAhiG,IAAsBjD,GAASG,QAAA8C,IAAqBjD,GAASt5B,QAC7DtV,KAAA8zI,qBAAAliG,EAAAmN,EAAA3zB,GACAprB,KAAA+zI,sBAAAniG,EAAAmN,EAAA3zB,KACAprB,KAAAyzI,sBAAAI,GAAAjiG,KAOAqhG,EAAAn0I,UAAA0mG,QAAA,SAAAvsD,EAAAn5C,EAAA0e,EAAAogB,GACA,IAAAgT,EAA0E/gC,EAAA/R,UAAA0mG,QAAAnoG,KAAA2C,KAAAi5C,EAAAn5C,EAAA0e,EAAAogB,GAC1EmgB,EAAAngB,EAAAmgB,WACAmQ,EAAAtwB,EAAAswB,UACAruC,EAAAquC,EAAAruC,WACAuK,EAAA8jC,EAAA9jC,WACA,GAAAwmB,EAAAE,WAA8BlD,GAASG,OAAA,CACvC6C,EAAAo8E,iBAAAntG,EACA,IAAAgzH,EAA0B1jI,EAAMyhC,GAChC,KAAAiiG,KAAA7zI,KAAA0zI,mBAAA,CACA,IAAAM,EAAkC7gI,EAAMy+B,EAAOx8B,EAASC,OAAArV,KAAA4zI,YAAAl1I,KAAAsB,KAAA4xC,EAAAmN,EAAA3zB,IACxDprB,KAAA0zI,kBAAAG,GAAAG,OAGA,CACA,IAAAjmF,EAAAnvB,EAAAmvB,aACAA,EAAmCja,KAAQia,EAAyBja,MACpElC,EAAAo8E,mBACAp8E,EAAAo8E,iBAAAntG,GAEA7gB,KAAA4zI,YAAAhiG,EAAAmN,EAAA3zB,GAEA,OAAAwmB,GAKAqhG,EAAAn0I,UAAA0lH,eAAA,SAAA5yE,GACA,OAAA/gC,EAAA/R,UAAA0lH,eAAAnnH,KAAA2C,KAAA4xC,MAAAw8E,WAAApuH,KAAA4gH,aAKAqyB,EAAAn0I,UAAAunH,aAAA,SAAAz0E,GACA,OAAAA,EAAAk7B,SAAA9sE,KAAA4gH,aAKAqyB,EAAAn0I,UAAA6yD,aAAA,SAAA/yB,EAAA0nB,GACA,IAAA2tF,EAAAj0I,KAAA4gH,WAAA3pG,cAKA,OAJAjX,KAAAwzI,wBAAAS,IACAj0I,KAAAokH,cAAArkH,OAAA,GAEAC,KAAAwzI,uBAAAS,EACApjI,EAAA/R,UAAA6yD,aAAAt0D,KAAA2C,KAAA4+B,EAAA0nB,IAQA2sF,EAAAn0I,UAAAg1I,qBAAA,SAAAliG,EAAAmN,EAAA3zB,GACA,IAAA64B,EAA2EjkD,KAAA4gH,WAC3EszB,EAAAjwF,EAAAhtC,cACAk9H,EAAAlwF,EAAAwtF,kBAAA,KACA5wH,EAAA+wB,EAAAo8E,iBACAomB,EAAAxiG,EAAAy8E,eAAApqE,GACA,GAAAmwF,EAAA9lB,OAAA8lB,EAAAjzB,qBAAAtgG,GACAuzH,EAAAjwB,kBAAA+vB,GACAE,EAAA7lB,qBAAA4lB,GAAAC,EAAA1lB,YAAA98E,EAAAu8E,QAFA,CAKA,IAAA7gH,EAAA22C,EAAAuI,YACAm1C,EAAAr0F,EAAAm4F,cAEAykB,EADA58G,EAAAo4F,yBAAAt6E,GACAowD,mBAAA5pC,EAAAiwD,kBACA4tB,EAAAniH,EAAAogH,eAAA3uE,EAAA3zB,EAAAwmB,GACAyiG,EAAuBlkI,EAAM8zC,GAC7B2pE,EAAAh8E,EAAAg8E,eAAAymB,GACA,GAAAzmB,EACA,QAAA1wH,EAAA,EAAA0U,EAAAg8G,EAAA7tH,OAAuD7C,EAAA0U,IAAQ1U,EAC/D0wH,EAAA1wH,GAAA6W,UAGA69B,EAAAg8E,eAAAymB,GAAA,GAiDA,IAhDA,IAAAriC,EAAA,SAAA5zG,EAAAk2I,GACA,IAAAtkB,EAAAP,EAAArxH,GACA,GAAA4xH,EAAAl+E,YAAyClD,GAASG,OAClD,iBAEA,IAAAghF,EAAAC,EAAA12C,UACAi7D,EAAA5yC,EAAAnmB,mBAAAu0C,GACAykB,EAA+BxyH,GAAekoG,EAAAqqB,GAC9CE,EAAiC/0H,GAAM60H,EAAAC,GAAA,KACvBn2H,GAAMm2H,EAAAvwF,EAAAstF,kBAAA1wH,EAAAqxF,EAAAoS,WACtB8vB,EAAA9lB,OAAA,EACA,IAAAwgB,EAAA,IAAmC5I,GAAkB,EAAAsO,EAAA3zH,EAAAk+B,EAAAkF,EAAAssF,gBACrDhgH,EAAmCk/G,GAAyB5uH,EAAAk+B,GAK5DqP,EAAA,SAAA5C,GACA,IAAAiqC,EACAi8C,EAAAlmF,EAAA7vC,oBAAAsoC,EAAAtoC,mBAIA,GAHA+1H,IACAj8C,EAAAi8C,EAAAlmF,EAAA3qC,IAEA40E,EAAA,CACA,IAAA64B,EAAAtuH,KAAA2vI,cAAAnkF,EAAAj7B,EAAAklE,EAAAq5C,GACA9uI,KAAAiwI,OAAAjwI,KAAAiwI,QAAA3hB,EACA8lB,EAAA9lB,MAAA8lB,EAAA9lB,WAGA/iE,EAAAykE,EAAAlf,cACAqjC,OAAAC,EAAA7lB,qBACAhjE,EAAA3oD,KAAAuxI,GAEA,QAAAj3I,EAAA,EAAA0U,EAAA25C,EAAAxrD,OAAiD7C,EAAA0U,IAAQ1U,EAAA,CACzD,IAAAsuD,EAAAD,EAAAruD,GACAu3I,IAAuCvyH,GAAUuyH,EAAAjpF,EAAAlwC,cAAA0M,cACjDomC,EAAA/wD,KAAA60G,EAAA1mD,GAGA,IAAAkpF,EAAA5F,EAAAlmI,SAEA+rI,EAAA1wF,EAAAssF,gBAAA,IAAA9gB,EAAA1vH,OACA,KACAy0I,EACAI,EAAA,IAA2CjG,GAAmBgG,EAAA9zH,EAAAk+B,EAAAzxC,EAAAkkG,cAAAkjC,EAAAzwF,EAAAstF,mBAC9D3/F,EAAAg8E,eAAAymB,GAAAvzI,KAAA8zI,IAEA1iC,EAAAlyG,KACA5B,EAAA,EAAAk2I,EAAA7kB,EAAA1vH,OAAgD3B,EAAAk2I,IAAQl2I,EACxD4zG,EAAA5zG,GAEAg2I,EAAAjwB,iBAAA+vB,EACAE,EAAA1lB,UAAA98E,EAAAu8E,QACAimB,EAAA7lB,oBAAA4lB,EACAC,EAAAjzB,mBAAAtgG,IAKAoyH,EAAAn0I,UAAAusD,2BAAA,SAAAzsC,EAAAggB,EAAAusB,EAAAt8C,EAAA6jE,GACA,IAAA7xD,EAAA+d,EAAAswB,UAAAruC,WACAC,EAAA8d,EAAAswB,UAAApuC,SACAqqC,EAAAv4C,MAAAu4C,EAAA,EAAAA,EACA,IAOA+qE,EACAh5H,EAAA0U,EARAqyC,EAA2EjkD,KAAA4gH,WAC3EwlB,EAAAniF,EAAAssF,eAEA9nH,EADAw7B,EAAAuI,YACAk5C,yBAAA9mE,EAAAswB,UAAA9jC,YAEAmgC,EAAA,GACA64D,EAA0FpkH,KAAA,cAG1F,IAAA9C,EAAA,EAAA0U,EAAAwyG,EAAArkH,OAA8C7C,EAAA0U,IAAQ1U,EAAA,CACtD,IAAA00C,EAAAwyE,EAAAlnH,GACA,IAAAkpI,EAIA,IAAqBznH,GADrB8J,EAAA+yD,mBAAA5pC,EAAAiwD,kBACuCjjF,GACvC,SAIA,IADA,IAAAgvG,EAAAh8E,EAAAg8E,eAAqDz9G,EAAM8zC,IAC3D7lD,EAAA,EAAAk2I,EAAA1mB,EAAA7tH,OAAuD3B,EAAAk2I,IAAQl2I,EAAA,CAC/D,IAAAyzI,EAAAjkB,EAAAxvH,GACA83H,KAAA2b,EAAAxmF,2BAAAzsC,EAAAiC,EAAAC,EAAAqqC,EAAA,GAKA,SAAAK,GACA,IAAA/sD,EAAA+sD,EAAA9vC,QAIA,QAHA9I,IAAAnU,IACAA,EAA8B0R,EAAMq7C,MAEpC/sD,KAAA8sD,GAEA,OADAA,EAAA9sD,IAAA,EACAoQ,EAAA28C,EAAAvH,IAEiBA,EAAAssF,eAAA79D,EAAA,OAGjB,OAAAwjD,GAKA+c,EAAAn0I,UAAA+vD,mBAAA,WACA,IAAA5K,EAAAjkD,KAAA4gH,WACA38D,EAAAK,mBAAA1xC,IAAA5S,KAAAwzI,wBACAvvF,EAAAjtC,WAQAi8H,EAAAn0I,UAAA+xI,wBAAA,SAAArhI,GACAxP,KAAA8gH,2BAKAmyB,EAAAn0I,UAAA0wD,YAAA,SAAA5wB,EAAA0nB,GACAz1C,EAAA/R,UAAA0wD,YAAAnyD,KAAA2C,KAAA4+B,EAAA0nB,GACA,IAAArC,EAA2EjkD,KAAA4gH,WAC3E7yD,EAAAnvB,EAAAmvB,UACAhc,IAAAgc,EAA+Bja,KAAQia,EAAyBja,KAChE+gG,EAAA5wF,EAAA6wF,gBACA,GAAAD,IAA2BnC,GAAoBzrB,MAE/C,OADAjnH,KAAA+0I,kBAAAhjG,EAAAnT,GACA5+B,KAAAqzI,WAEA,IAAarhI,EAAOhS,KAAAyzI,yBAAAzzI,KAAAikH,cAEpB,OADAjkH,KAAA+0I,kBAAAhjG,EAAAnT,GACA5+B,KAAAqzI,WAEA,IAAA1jI,EAAA3P,KAAAmzI,gBACA5E,EAAAtqF,EAAAssF,eAAA,GAAwD,KACxDjjI,EAAA22C,EAAAuI,YACAwoF,EAAAjC,GAAA8B,GACA91F,EAAAngB,EAAAmgB,WACAj+B,EAAA8d,EAAAswB,UAAApuC,SACAC,EAAA6d,EAAA7d,KAEQoN,GAASnuB,KAAAszI,uBAAA,EAAAv0F,EAAA,EAAAA,GACTnwB,GAAW5uB,KAAAuzI,8BAAAvzI,KAAAszI,wBAEnB,IAAA5xF,EAAA/xC,EAAA+xC,OACA/1C,EAAAtM,KAAAw1B,MAAA9T,EAAA,GAAAg+B,GACAn+C,EAAAvB,KAAAw1B,MAAA9T,EAAA,GAAAg+B,GACA,GAAA2C,EAAA/1C,UAAA+1C,EAAA9gD,UAAA,CACA8gD,EAAA/1C,QACA+1C,EAAA9gD,SACA,IAAAmiH,EAAkCh0F,GAAiB/uB,KAAAszI,wBACnD5xF,EAAAnmC,MAAAoI,YAAAo/F,IACArhE,EAAAnmC,MAAAoI,UAAAo/F,QAIApzG,EAAAgzG,UAAA,IAAAh3G,EAAA/K,GAKA,IAHA,IAAAq1G,EAAAj2G,KAAAokH,cACA37F,EAAAnb,EAAAo4F,yBAAA9mE,EAAAswB,UAAA9jC,YACA6pH,EAAA,GACA/3I,EAAA+4G,EAAAl2G,OAAA,EAAsC7C,GAAA,IAAQA,EAAA,CAC9C,IAAA00C,EAA8EqkE,EAAA/4G,GAC9E,GAAA00C,EAAAE,YAAmClD,GAASK,MAQ5C,IALA,IAAAqqC,EAAA1nC,EAAA0nC,UACA4wC,EAAAzhG,EAAA+yD,mBAAA5pC,EAAAiwD,kBACAqzC,EAAAzsH,EAAA+yD,mBAAAlC,EAAAt5E,KAAAskH,WAAA,GAAA4F,EAAA,GACAvmG,EAAA3jB,KAAAiiH,mBAAArjF,EAAAjzB,EAAA/K,EAAAs0I,GACAtnB,EAAAh8E,EAAAg8E,eAAqDz9G,EAAM8zC,IAC3D7lD,EAAA,EAAAk2I,EAAA1mB,EAAA7tH,OAAuD3B,EAAAk2I,IAAQl2I,EAAA,CAC/D,IAAAyzI,EAAAjkB,EAAAxvH,GACA,GAAAyzI,EAAAvE,aAAA0H,GAAA,CAIA,IAAA9vB,EAAAtzE,EAAA0nC,UAAA,GACA2rC,OAAA,EAAAkwB,OAAA,EACA,IAAA5G,EAAA,CACAtpB,EAAA,GACAkwB,EAAAtD,EAAA1E,cAAAxpH,GACAhU,EAAAsuF,OAGA,QAAAzxF,EAAA,EAAA8C,EAAA2lI,EAAAl1I,OAAsDyM,EAAA8C,IAAQ9C,EAAA,CAC9D,IAAA6xF,EAAA42C,EAAAzoI,GACA04G,EAAAD,EAAAz4G,KACAmD,EAAA68D,YAEA78D,EAAAu8D,OAAAipE,EAAA,GAAAA,EAAA,IACAxlI,EAAAw8D,OAAAgpE,EAAA,GAAAA,EAAA,IACAxlI,EAAAw8D,OAAAgpE,EAAA,GAAAA,EAAA,IACAxlI,EAAAw8D,OAAAgpE,EAAA,GAAAA,EAAA,IAEAxlI,EAAAu8D,OAAAmyB,EAAA,GAAAA,EAAA,IACA1uF,EAAAw8D,OAAAkyB,EAAA,GAAAA,EAAA,IACA1uF,EAAAw8D,OAAAkyB,EAAA,GAAAA,EAAA,IACA1uF,EAAAw8D,OAAAkyB,EAAA,GAAAA,EAAA,IACA1uF,EAAA0uF,SAIAwzC,EAAAzF,QAAAz8H,EAAAgU,EAAA7C,EAAA,GAAsEixB,EAAAijG,EAAAzG,GACtEA,IACA5+H,EAAA2uF,UACA22C,EAAAn0I,KAAAq0I,GACAlwB,EAAAnkH,KAAAokH,MAIAqpB,GACYD,GAAeC,EAAA5+H,EAAAmR,EAAAixB,EAAAnT,EAAAywB,gBAE3B,IAAA7L,EAAA8C,EAAA9C,QAOA,OANAA,IAAAsM,WAAApO,EAAAnmC,MAAAioC,WACA9B,EAAAnmC,MAAAioC,WAIAxjD,KAAA+0I,kBAAAhjG,EAAAnT,GACA5+B,KAAAqzI,YAMAJ,EAAAn0I,UAAAi2I,kBAAA,SAAAhjG,EAAAnT,GAGA,QAAAsoE,KAAAlnG,KAAAyzI,sBAAA,CACA,IAAA1hG,GAAA7T,KAAAC,MAAAS,EAAAqvB,KAAA,EACA,MAEA,IAAArc,EAAA5xC,KAAAyzI,sBAAAvsC,GACAtoE,EAAA4c,SAAA,SACAx7C,KAAAyzI,sBAAAvsC,GACA,IAAAjjD,EAA+EjkD,KAAA4gH,WAC/E1xD,EAAAtwB,EAAAswB,UAEA/B,EADAlJ,EAAAuI,YAAAk5C,yBAAAx2C,EAAA9jC,YACAiwB,cAAAzJ,EAAA0nC,UAAA,IACA87D,EAAAx2G,EAAAmgB,WAAAnN,EAAAo8E,iBAAA7gE,EACAntD,KAAAq1I,iBAAAzjG,EAAAhT,EAAAmgB,WAAAq2F,EAAAlmF,EAAA9jC,YAEQhrB,EAAKJ,KAAAyzI,wBASbR,EAAAn0I,UAAA6wI,cAAA,SAAAnkF,EAAAj7B,EAAAklE,EAAAo8C,GACA,IAAAp8C,EACA,SAEA,IAAAhpC,GAAA,EACA,GAAArgD,MAAA+K,QAAAs+E,GACA,QAAAv4F,EAAA,EAAA0U,EAAA6jF,EAAA11F,OAA+C7C,EAAA0U,IAAQ1U,EACvDuvD,EAA0BkjF,GAAakC,EAAArmF,EAAAiqC,EAAAv4F,GAAAqzB,EAAAvwB,KAAA6wI,wBAAA7wI,OAAAysD,OAIvCA,EAAsBkjF,GAAakC,EAAArmF,EAAAiqC,EAAAllE,EAAAvwB,KAAA6wI,wBAAA7wI,MAEnC,OAAAysD,GASAwmF,EAAAn0I,UAAAi1I,sBAAA,SAAAniG,EAAAmN,EAAA3zB,GACA,IAAA64B,EAA2EjkD,KAAA4gH,WAC3E00B,EAAA1jG,EAAAy8E,eAAApqE,GACAiwF,EAAAjwF,EAAAhtC,cACAk3G,EAAAv8E,EAAAu8E,QACAttG,EAAA+wB,EAAAo8E,iBACA,OAAAsnB,EAAA9mB,yBAAA3tG,GAAAy0H,EAAA7mB,uBAAAylB,GAAAoB,EAAA3mB,gBAAAR,GASA8kB,EAAAn0I,UAAAu2I,iBAAA,SAAAzjG,EAAAmN,EAAAq2F,EAAAhqH,GACA,IAAA64B,EAA2EjkD,KAAA4gH,WAC3E00B,EAAA1jG,EAAAy8E,eAAApqE,GACAiwF,EAAAjwF,EAAAhtC,cACA22G,EAAAh8E,EAAAg8E,eAAiDz9G,EAAM8zC,IACvDqxF,EAAA7mB,qBAAAylB,EACAoB,EAAA3mB,cAAA/8E,EAAAu8E,QACA,IAAA70C,EAAA1nC,EAAAiwD,iBACA5oD,EAAAqgC,EAAA,GACAhsE,EAAA22C,EAAAuI,YACA/jC,EAAAnb,EAAAo4F,yBAAAt6E,GACAvK,EAAA4H,EAAA4yB,cAAApC,GACAtpC,EAAAiiC,EAAA9hC,WAAAm0C,GAEAlF,EAAA1/C,KAAAM,IAAAo/C,EAAAq2F,EAAAr2F,GACA,IAAAh+B,EAAAzT,EAAAu4F,iBAAA5sD,EAAA8F,EAAA3zB,GACAzb,EAAA+xC,OAAA/1C,MAAAoV,EAAA,GACApR,EAAA+xC,OAAA9gD,OAAAmgB,EAAA,GACA,IAAAw0H,EAAAx2F,EAAAq2F,EACA,OAAAG,EAAA,CACA,IAAAxyB,EAAkC31F,GAAcptB,KAAA2zI,eACpCzlH,GAAc60F,EAAAwyB,KAC1B5lI,EAAA05D,aAAAnnE,MAAAyN,EAAAozG,GAEA,IAAAmH,EAAAzhG,EAAA+yD,mBAAAlC,EAAAt5E,KAAAskH,WACAkxB,EAAAJ,EAAAv0H,EACA8C,EAAwByJ,GAAcptB,KAAA2zI,eAC9BzlH,GAAcvK,EAAA6xH,MACdpnH,GAAkBzK,GAAAumG,EAAA,IAAAA,EAAA,IAC1B,QAAAhtH,EAAA,EAAA0U,EAAAg8G,EAAA7tH,OAAmD7C,EAAA0U,IAAQ1U,EAAA,CAC3D0wH,EAAA1wH,GACAkvI,QAAAz8H,EAAAgU,EAAA,MAA2D,EAAAkvH,GAAA5uF,EAAA6wF,kBAE3DQ,EAAA9mB,uBAAA58E,EAAAo8E,kBAKAilB,EAAAn0I,UAAA60E,eAAA,SAAAjnE,EAAAkyB,EAAAusB,GACA,IAAAlqD,EAAA4P,EAAA/R,UAAA60E,eAAAt2E,KAAA2C,KAAA0M,EAAAkyB,EAAAusB,GACA,GAAAlqD,EACA,OAAAA,EAEA,IAAAihH,EAA0BhgH,GAAclC,KAAAuzI,8BAAA7mI,EAAAlL,SACxCmO,EAAA3P,KAAAmzI,gBACA,IACAlyI,EAAA0O,EAAA0iF,aAAAhzF,KAAAw1B,MAAAqtF,EAAA,IAAA7iH,KAAAw1B,MAAAqtF,EAAA,SAAAjhH,KAEA,MAAAyrG,GACA,wBAAAA,EAAAjvG,KAEA,IAAAyF,WAEAjC,EAEA,WAAAA,EAAA,GACA,KAEAA,GAEAgyI,EAnhBiC,CAohB/BxsB,ICvkBF,IAAIgvB,GAAyB,WAC7B,IAAAplI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8DzBglI,GACJ,cA+IeC,GAlII,SAAA9kI,GAKnB,SAAA+kI,EAAA58H,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAC6C,GAC7CwsC,EAA0Bj0C,EAAM,GAAG0H,GA0CnC,cAzCAusC,EAAAjqC,aACAiqC,EAAAqwF,oBACArwF,EAAAwrF,4BACAxrF,EAAA0rF,wBACAlgI,EAAAH,EAAAxT,KAAA2C,KAAAwlD,IAAAxlD,MAKAqmI,gBAAAzzH,IAAAqG,EAAAmtH,WAAAntH,EAAAmtH,UAKAp1H,EAAA67H,mBAAAj6H,IAAAqG,EAAA48H,aACA58H,EAAA48H,aAAA,IAMA7kI,EAAA2J,OAAA,KAMA3J,EAAA4J,oBAAAhI,EACA5B,EAAAyK,SAAAxC,EAAAsC,OAKAvK,EAAA8kI,2BAAAljI,IAAAqG,EAAA+3H,sBACA/3H,EAAA+3H,qBAKAhgI,EAAA+kI,6BAAAnjI,IAAAqG,EAAAi4H,wBACAj4H,EAAAi4H,uBACAlgI,EA6EA,OA/HIykI,GAASG,EAAA/kI,GAuDb+kI,EAAA92I,UAAAyxI,aAAA,WACA,OAAAvwI,KAAAqmI,YAKAuP,EAAA92I,UAAAyyI,gBAAA,WACA,OAAAvxI,KAAA6sI,eAMA+I,EAAA92I,UAAA2yI,eAAA,WACA,OACuEzxI,KAAAjC,IAAc23I,KASrFE,EAAA92I,UAAA0c,SAAA,WACA,OAAAxb,KAAA2a,QAOAi7H,EAAA92I,UAAA6c,iBAAA,WACA,OAAA3b,KAAA4a,gBAMAg7H,EAAA92I,UAAAmyI,wBAAA,WACA,OAAAjxI,KAAA81I,uBAMAF,EAAA92I,UAAAqyI,0BAAA,WACA,OAAAnxI,KAAA+1I,yBAMAH,EAAA92I,UAAAk3I,eAAA,SAAA7B,GACAn0I,KAAA2I,IAAiB+sI,GAAQvB,IAYzByB,EAAA92I,UAAA2c,SAAA,SAAAF,GACAvb,KAAA2a,YAAA/H,IAAA2I,IAAoDg6E,GACpDv1F,KAAA4a,eAAA,OAAAW,OACA3I,E1FoKO,SAAAnJ,GACP,IAAAioI,EACA,sBAAAjoI,EACAioI,EAAAjoI,MAEA,CAIA,IAAAoS,EACAzP,MAAA+K,QAAA1N,GACAoS,EAAApS,GAGYyQ,EAA2B,qBAAA4B,UAAA,IAEvCD,EAAA,CADyC,IAGzC61H,EAAA,WACA,OAAA71H,GAGA,OAAA61H,E0F1LwBuE,CAAej2I,KAAA2a,QACvC3a,KAAAgX,WAEA4+H,EAhImB,CAiIjB1kF,IC7MEglF,GAAyB,WAC7B,IAAA7lI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiDdylI,GAlBA,SAAAtlI,GAKf,SAAAulI,EAAAp9H,GACA,OAAAnI,EAAAxT,KAAA2C,KAAAgZ,IAAAhZ,KAUA,OAfIk2I,GAASE,EAAAvlI,GAYbulI,EAAAt3I,UAAAsqD,eAAA,WACA,WAAmB2mF,GAAyB/vI,OAE5Co2I,EAhBe,CAiBbT,ICpCF,SAASU,GAAI1e,EAAAh0G,EAAA4M,GAmBb,IAfA,IAcA+lH,EAAAh5I,EAAAi5I,EAAAC,EAAAC,EAAAh4I,EAdA8gB,EAAA,GACAm3H,EAAA/e,EAAA,GACAgf,EAAAhf,EAAA,GACAx4H,EAAAwkB,EAAA+yH,GACA9vI,EAAA+c,EAAAgzH,GAEAC,EAAA,CAAAD,EAAAD,GAEAriH,EAAA,CAAAztB,EAAAzH,GAEA03I,EAAA,MAEAC,EAAA,GACAC,EAAA,MAEAA,EAAA,GAAAF,EAAA92I,OAAA,GAEAw2I,EAAAM,EAAAh2I,MACA61I,EAAAE,EAAA/1I,MACA1B,EAAAk1B,EAAAxzB,OAEApC,EAAA83I,EAAArpI,cACA4pI,IACAv3H,EAAAze,KAAA3B,EAAA,GAAAA,EAAA,IACA23I,EAAAr4I,IAAA,GAGA+3I,EAAAK,EAAAh2I,MACA81I,EAAAC,EAAA/1I,MACA+F,EAAAytB,EAAAxzB,MAKY0jB,IADZjnB,EAAAqmB,EADA2yH,EAAA3e,EADA8e,GAAAF,EAAAC,GAAA,KAGkC,GAAAl5I,EAAA,GAAA6B,EAAA,GAAAA,EAAA,GAAAyH,EAAA,GAAAA,EAAA,IAAA2pB,GAIlChR,EAAAze,KAAA8F,EAAA,GAAAA,EAAA,IAEAkwI,EADAr4I,EAAA+3I,EAAAtpI,aACA,IAKA2pI,EAAA/1I,KAAA01I,EAAAC,IAAAF,GACAliH,EAAAvzB,KAAA8F,EAAAtJ,IAAA6B,GACAy3I,EAAA91I,KAAA61I,EAAAL,IAAAI,IAGA,OAAAn3H,EClEA,IAAIy3H,GAAyB,WAC7B,IAAA3mI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAuC7BumI,GAAA,IAA+BhjD,GAAM,CACrC1yB,MAAA,oBAMA21E,GAAA,CACA,sDAqsBeC,GAnmBF,SAAAtmI,GAKb,SAAAumI,EAAAp+H,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAwsC,EAA0Bj0C,EAAM,CAChCy/H,sBAAA,EACAE,wBAAA,EACA2E,aAAA,GACS58H,GA0OT,cAzOAusC,EAAA6xF,gBACA7xF,EAAAkf,mBACAlf,EAAA8xF,kBACA9xF,EAAA+xF,kBACA/xF,EAAAgyF,yBACAhyF,EAAAiyF,yBACAjyF,EAAAkyF,wBACAlyF,EAAAmyF,wBACAnyF,EAAAoyF,qBACApyF,EAAAqyF,qBACAryF,EAAAsyF,WACA9mI,EAAAH,EAAAxT,KAAA2C,KAAAwlD,IAAAxlD,MAIAk4C,YAAA,KAKAlnC,EAAA+mI,QAAA/sI,IAKAgG,EAAAgnI,QAAAhtI,IAKAgG,EAAAinI,SAAAjtI,IAKAgG,EAAAknI,SAAAltI,IAKAgG,EAAAmnI,SAAAntI,IAKAgG,EAAAonI,SAAAptI,IAKAgG,EAAAqnI,UAAArtI,IAKAgG,EAAAsnI,UAAAttI,IAKAgG,EAAAunI,iBAAA3lI,IAAAqG,EAAAq+H,WAAAr+H,EAAAq+H,WAAA,IAKAtmI,EAAAwnI,eAAA5lI,IAAAqG,EAAAo+H,SAAAp+H,EAAAo+H,SAAA,IAKArmI,EAAAynI,WAAA,GAKAznI,EAAA0nI,WAAA,GAKA1nI,EAAA2nI,kBAAA/lI,IAAAqG,EAAAyrD,YAAAzrD,EAAAyrD,YAAAuyE,GAKAjmI,EAAA4nI,0BAAAhmI,EAKA5B,EAAA6nI,wBAAAjmI,EAKA5B,EAAA8nI,wBAAA,KAKA9nI,EAAA+nI,iBAAA,KAKA/nI,EAAAgoI,iBAAA,KACA//H,EAAAs+H,aAKAvmI,EAAAioI,mBAAArmI,MAAAqG,EAAAu+H,kBACgBriG,GAAmBz2C,KAAAsS,EAAA,MAAAiI,EAAAu+H,kBAKnCxmI,EAAAkoI,mBAAAtmI,MAAAqG,EAAAw+H,kBACgBtiG,GAAmBz2C,KAAAsS,EAAA,MAAAiI,EAAAw+H,kBAOnCzmI,EAAAmoI,kBAAAvmI,MAAAqG,EAAAy+H,iBAAA,EACAz+H,EAAAy+H,iBAOA1mI,EAAAooI,kBAAAxmI,MAAAqG,EAAA0+H,iBAAA,EACA1+H,EAAA0+H,iBAKA3mI,EAAAqoI,oBAAA,GAMAroI,EAAAsoI,eAAA,SAAA9tF,GACA,IAAAoH,EAAApH,EAAAztD,IAAA,mBAkBA,OAjBAiC,KAAAq5I,oBAAAzmF,KACA5yD,KAAAq5I,oBAAAzmF,GAAA,IAA0DgjC,GAAK,CAC/DruB,UAAA30D,IAAAqG,EAAA2+H,cAAA3+H,EAAA2+H,cACA,IAAgC5hD,GAAI,CACpCzuB,KAAA3U,EACA/B,KAAA,0BACA6d,aAAA,SACAhC,KAAA,IAA0CojB,GAAI,CAC9CvuB,MAAA,kBAEAoL,OAAA,IAA4CsnB,GAAM,CAClD1yB,MAAA,sBACA51D,MAAA,SAKA3L,KAAAq5I,oBAAAzmF,IACal0D,KAAAsS,GAKbA,EAAAuoI,oBAAA,GAMAvoI,EAAAwoI,eAAA,SAAAhuF,GACA,IAAAoH,EAAApH,EAAAztD,IAAA,mBAkBA,OAjBAiC,KAAAu5I,oBAAA3mF,KACA5yD,KAAAu5I,oBAAA3mF,GAAA,IAA0DgjC,GAAK,CAC/DruB,UAAA30D,IAAAqG,EAAA4+H,cAAA5+H,EAAA4+H,cACA,IAAgC7hD,GAAI,CACpCzuB,KAAA3U,EACA/B,KAAA,0BACA4d,UAAA,QACA/B,KAAA,IAA0CojB,GAAI,CAC9CvuB,MAAA,kBAEAoL,OAAA,IAA4CsnB,GAAM,CAClD1yB,MAAA,sBACA51D,MAAA,SAKA3L,KAAAu5I,oBAAA3mF,IACal0D,KAAAsS,GACbA,EAAA+nI,iBAAA,GACA/nI,EAAAgoI,iBAAA,IAMAhoI,EAAAyoI,gBAAA7mI,IAAAqG,EAAA6+H,UAAA7+H,EAAA6+H,UAAAZ,GAEAlmI,EAAAwgD,UAAA,IAA4B08C,GAAY,CACxCO,OAAAz9F,EAAA0oI,eAAAh7I,KAAAsS,GACA29F,SAAsBv1B,GACtB7tB,SAAA,IAA0B1yC,EAC1B01F,UAAA,EACAM,iBAAA,EACAhL,MAAA5qF,EAAA4qF,SAOA7yF,EAAA2oI,aAAA,GAKA3oI,EAAA4oI,WAAA,IAA+BhkD,GAAK,CACpCjpB,OAAA37D,EAAA2nI,eAKA3nI,EAAAkzG,gBAAA,KACAlzG,EAAAglI,eAAA,MACAhlI,EAAAm5G,WAAA,KACAn5G,EA2WA,OAhmBIgmI,GAASI,EAAAvmI,GA6PbumI,EAAAt4I,UAAA46I,eAAA,SAAAx7H,EAAA2C,EAAAuK,GACA,IAAA9d,EAAAtN,KAAAwsD,YAGAqtF,EAA2B73H,GAD3BhiB,KAAAgoB,aAAA,EAAAhd,kBAC0CkT,EAAAle,KAAAmqH,YAK1C,GAHAj8G,WAAA,WACAZ,EAAA6kG,mBAAAj0F,IACS,KACTle,KAAAkkH,iBAAoCxkG,GAAM1f,KAAAkkH,gBAAA21B,KAG1C75I,KAAAkkH,gBAAA21B,EAEYx5H,GAAOw5H,KAAnB,CAIA,IAAAj5H,EAAqBJ,GAASq5H,GAC9BtpH,EAAA1P,IAAA,IACA7gB,KAAAk4C,cACazrB,GAAoBzsB,KAAAk4C,YAAA9sB,KAEjCprB,KAAA85I,sBAAA1uH,GAEAprB,KAAA+5I,iBAAAF,EAAAj5H,EAAAC,EAAA0P,GAEA,IAOAi7B,EAPAwuF,EAAAh6I,KAAAy4I,WAAA14I,OAAAC,KAAA04I,WAAA34I,OAQA,IAPAC,KAAA+4I,mBACAiB,GAAAh6I,KAAA+4I,iBAAAh5I,QAEAC,KAAAg5I,mBACAgB,GAAAh6I,KAAAg5I,iBAAAj5I,QAGAi6I,EAAAh6I,KAAA25I,aAAA55I,QACAyrD,EAAA,IAA0BlxC,EAC1Bta,KAAA25I,aAAA74I,KAAA0qD,GAEA,IAAAyuF,EAAA3sI,EAAAujG,wBACAopC,EAAA75I,QACA,IAEAlD,EAAAC,EAaA+8I,EAfAC,EAAA,EAGA,IAAAj9I,EAAA,EAAAC,EAAA6C,KAAAy4I,WAAA14I,OAA+C7C,EAAAC,IAAOD,GACtDsuD,EAAAxrD,KAAA25I,aAAAQ,MACAl/H,YAAAjb,KAAAy4I,WAAAv7I,IACAsuD,EAAA/vC,SAAAzb,KAAA45I,YACAK,EAAAn5I,KAAA0qD,GAEA,IAAAtuD,EAAA,EAAAC,EAAA6C,KAAA04I,WAAA34I,OAA+C7C,EAAAC,IAAOD,GACtDsuD,EAAAxrD,KAAA25I,aAAAQ,MACAl/H,YAAAjb,KAAA04I,WAAAx7I,IACAsuD,EAAA/vC,SAAAzb,KAAA45I,YACAK,EAAAn5I,KAAA0qD,GAGA,GAAAxrD,KAAA+4I,iBACA,IAAA77I,EAAA,EAAAC,EAAA6C,KAAA+4I,iBAAAh5I,OAAyD7C,EAAAC,IAAOD,EAChEg9I,EAAAl6I,KAAA+4I,iBAAA77I,IACAsuD,EAAAxrD,KAAA25I,aAAAQ,MACAl/H,YAAAi/H,EAAAE,MACA5uF,EAAA/vC,SAAAzb,KAAAs5I,gBACA9tF,EAAA7iD,IAAA,kBAAAuxI,EAAA3yE,MACA0yE,EAAAn5I,KAAA0qD,GAGA,GAAAxrD,KAAAg5I,iBACA,IAAA97I,EAAA,EAAAC,EAAA6C,KAAAg5I,iBAAAj5I,OAAyD7C,EAAAC,IAAOD,EAChEg9I,EAAAl6I,KAAAg5I,iBAAA97I,IACAsuD,EAAAxrD,KAAA25I,aAAAQ,MACAl/H,YAAAi/H,EAAAE,MACA5uF,EAAA/vC,SAAAzb,KAAAw5I,gBACAhuF,EAAA7iD,IAAA,kBAAAuxI,EAAA3yE,MACA0yE,EAAAn5I,KAAA0qD,KAcA4rF,EAAAt4I,UAAAu7I,aAAA,SAAAC,EAAAC,EAAAC,EAAAjqH,EAAArS,EAAA3O,GACA,IAAAioH,EAAAx3H,KAAAy6I,aAAAH,EAAAC,EAAAC,EAAAjqH,EAAAhhB,GACA,GAAY2S,GAAUs1G,EAAAxvG,YAAA9J,GAAA,CACtB,GAAAle,KAAA+4I,iBAAA,CACA,IAAA2B,EAAA16I,KAAA26I,kBAAAnjB,EAAAt5G,EAAA3O,GACAvP,KAAA+4I,iBAAAxpI,GAAA,CACA6qI,KAAAM,EACAnzE,KAAAvnE,KAAAi5I,mBAAAqB,IAGAt6I,KAAAy4I,WAAAlpI,KAAAioH,EAEA,OAAAjoH,GAYA6nI,EAAAt4I,UAAA87I,aAAA,SAAA10H,EAAA20H,EAAAC,EAAAvqH,EAAArS,EAAA3O,GACA,IAAAioH,EAAAx3H,KAAA+6I,aAAA70H,EAAA20H,EAAAC,EAAAvqH,EAAAhhB,GACA,GAAY2S,GAAUs1G,EAAAxvG,YAAA9J,GAAA,CACtB,GAAAle,KAAAg5I,iBAAA,CACA,IAAA0B,EAAA16I,KAAAg7I,kBAAAxjB,EAAAt5G,EAAA3O,GACAvP,KAAAg5I,iBAAAzpI,GAAA,CACA6qI,KAAAM,EACAnzE,KAAAvnE,KAAAk5I,mBAAAhzH,IAGAlmB,KAAA04I,WAAAnpI,KAAAioH,EAEA,OAAAjoH,GASA6nI,EAAAt4I,UAAAi7I,iBAAA,SAAA77H,EAAA0C,EAAAC,EAAA0P,GACA,IAAA22C,EAAAlnE,KAAAi7I,aAAAp6H,GACA,OAAAqmD,EAQA,OAPAlnE,KAAAy4I,WAAA14I,OAAAC,KAAA04I,WAAA34I,OAAA,EACAC,KAAA+4I,mBACA/4I,KAAA+4I,iBAAAh5I,OAAA,QAEAC,KAAAg5I,mBACAh5I,KAAAg5I,iBAAAj5I,OAAA,IAIA,IAIAm7I,EAAA/9H,EAAA+I,EAAAo0H,EAJAa,EAAAn7I,KAAA64I,mBAAAj4H,GACAw6H,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACA9D,EAAAr3I,KAAAw4I,UAEA8C,EAAA,CACAj8I,KAAAM,IAAAue,EAAA,GAAAle,KAAAs4I,UACAj5I,KAAAM,IAAAue,EAAA,GAAAle,KAAAq4I,UACAh5I,KAAAQ,IAAAqe,EAAA,GAAAle,KAAAo4I,UACA/4I,KAAAQ,IAAAqe,EAAA,GAAAle,KAAAm4I,WAGAqC,GADAc,EAAsBpuH,GAAeouH,EAAAt7I,KAAAk4C,YAAA,cACrC,GACA4iG,EAAAQ,EAAA,GACAf,EAAAe,EAAA,GACAT,EAAAS,EAAA,GAMA,IAHAhB,EAAcj2H,GADd+2H,EAAA/7I,KAAAO,MAAAw7I,EAAAl0E,KACmBlnE,KAAAk4I,QAAAl4I,KAAAg4I,SACnB76H,EAAAnd,KAAAq6I,aAAAC,EAAAC,EAAAC,EAAAjqH,EAAArS,EAAA,GACAg9H,EAAA,EACAZ,GAAAt6I,KAAAk4I,SAAAgD,IAAA7D,GACAiD,EAAAj7I,KAAAM,IAAA26I,EAAApzE,EAAAlnE,KAAAk4I,SACA/6H,EAAAnd,KAAAq6I,aAAAC,EAAAC,EAAAC,EAAAjqH,EAAArS,EAAAf,GAIA,IAFAm9H,EAAcj2H,GAAK+2H,EAAAp7I,KAAAk4I,QAAAl4I,KAAAg4I,SACnBkD,EAAA,EACAZ,GAAAt6I,KAAAg4I,SAAAkD,IAAA7D,GACAiD,EAAAj7I,KAAAQ,IAAAy6I,EAAApzE,EAAAlnE,KAAAg4I,SACA76H,EAAAnd,KAAAq6I,aAAAC,EAAAC,EAAAC,EAAAjqH,EAAArS,EAAAf,GAWA,IATAnd,KAAAy4I,WAAA14I,OAAAod,EACAnd,KAAA+4I,mBACA/4I,KAAA+4I,iBAAAh5I,OAAAod,GAIA+I,EAAc7B,GADdg3H,EAAAh8I,KAAAO,MAAAy7I,EAAAn0E,KACmBlnE,KAAAi4I,QAAAj4I,KAAA+3I,SACnB56H,EAAAnd,KAAA46I,aAAA10H,EAAA20H,EAAAC,EAAAvqH,EAAArS,EAAA,GACAg9H,EAAA,EACAh1H,GAAAlmB,KAAAi4I,SAAAiD,IAAA7D,GACAnxH,EAAA7mB,KAAAM,IAAAumB,EAAAghD,EAAAlnE,KAAAi4I,SACA96H,EAAAnd,KAAA46I,aAAA10H,EAAA20H,EAAAC,EAAAvqH,EAAArS,EAAAf,GAIA,IAFA+I,EAAc7B,GAAKg3H,EAAAr7I,KAAAi4I,QAAAj4I,KAAA+3I,SACnBmD,EAAA,EACAh1H,GAAAlmB,KAAA+3I,SAAAmD,IAAA7D,GACAnxH,EAAA7mB,KAAAQ,IAAAqmB,EAAAghD,EAAAlnE,KAAA+3I,SACA56H,EAAAnd,KAAA46I,aAAA10H,EAAA20H,EAAAC,EAAAvqH,EAAArS,EAAAf,GAEAnd,KAAA04I,WAAA34I,OAAAod,EACAnd,KAAAg5I,mBACAh5I,KAAAg5I,iBAAAj5I,OAAAod,IAQAi6H,EAAAt4I,UAAAm8I,aAAA,SAAAp6H,GASA,IARA,IAAAu6H,EAAAp7I,KAAA84I,wBAAA,GACAuC,EAAAr7I,KAAA84I,wBAAA,GACA5xE,GAAA,EACAz1D,EAAApS,KAAA8C,IAAAnC,KAAAu4I,YAAA13H,EAAA,GAEAs9E,EAAA,GAEAC,EAAA,GACAlhG,EAAA,EAAA0U,EAAA5R,KAAAy5I,WAAA15I,OAAoD7C,EAAA0U,IAAQ1U,EAAA,CAC5D,IAAA63C,EAAA/0C,KAAAy5I,WAAAv8I,GAAA,EAQA,GAPAihG,EAAA,GAAAi9C,EAAArmG,EACAopD,EAAA,GAAAk9C,EAAAtmG,EACAqpD,EAAA,GAAAg9C,EAAArmG,EACAqpD,EAAA,GAAAi9C,EAAAtmG,EACA/0C,KAAA44I,qBAAAz6C,KACAn+F,KAAA44I,qBAAAx6C,KACA/+F,KAAA8C,IAAAi8F,EAAA,GAAAD,EAAA,MAAA9+F,KAAA8C,IAAAi8F,EAAA,GAAAD,EAAA,OACA1sF,EACA,MAEAy1D,EAAAlnE,KAAAy5I,WAAAv8I,GAEA,OAAAgqE,GAWAkwE,EAAAt4I,UAAA27I,aAAA,SAAAH,EAAAC,EAAAC,EAAAjqH,EAAAhhB,GACA,IAAAgQ,ED1gBO,SAAA+6H,EAAAh1H,EAAAC,EAAA6F,EAAAmF,GAEP,OAAW8lH,GAKX,SAAAkF,GACA,OAAAjB,EAAAh1H,GAAAC,EAAAD,GAAAi2H,IACOvuH,GARsB1B,GAAa,aAQvBF,GAAAmF,GCigBWirH,CAAQlB,EAAAC,EAAAC,EAAAx6I,KAAAk4C,YAAA3nB,GACtCinG,EAAAx3H,KAAAy4I,WAAAlpI,GAQA,OAPAioH,GAIAA,EAAA5lG,mBAA0CjP,GAAcC,GAAArD,GACxDi4G,EAAAxgH,WAJAwgH,EAAAx3H,KAAAy4I,WAAAlpI,GAAA,IAAsDonH,GAAUp3G,EAAkBoD,GAAcC,IAMhG40G,GASA4f,EAAAt4I,UAAA67I,kBAAA,SAAAnjB,EAAAt5G,EAAA3O,GACA,IAKA+Z,EALA/J,EAAAi4G,EAAAlmG,qBACAmqH,EAAAp8I,KAAAM,IAAAue,EAAA,GAAAqB,EAAA,IACAm8H,EAAAr8I,KAAAQ,IAAAqe,EAAA,GAAAqB,IAAAxf,OAAA,IACAmmB,EAAkB7B,GAAKnG,EAAA,GAAA7e,KAAA6L,IAAAgT,EAAA,GAAAA,EAAA,IAAAle,KAAAm5I,kBAAAsC,EAAAC,GACvB98H,EAAA,CAAAW,EAAA,GAAA2G,GASA,OAPA3W,KAAAvP,KAAA+4I,kBACAzvH,EAAAtpB,KAAA+4I,iBAAAxpI,GAAA6qI,MACAvoH,eAAAjT,GAGA0K,EAAA,IAAwBgM,GAAK1W,GAE7B0K,GAOA8tH,EAAAt4I,UAAA68I,aAAA,WACA,OAAA37I,KAAAy4I,YAWArB,EAAAt4I,UAAAi8I,aAAA,SAAA70H,EAAA20H,EAAAC,EAAAvqH,EAAAhhB,GACA,IAAAgQ,ED1iBO,SAAA2G,EAAAF,EAAA41H,EAAAxwH,EAAAmF,GAEP,OAAW8lH,GAKX,SAAAkF,GACA,OAAAv1H,GAAA41H,EAAA51H,GAAAu1H,EAAAr1H,IACO8G,GARsB1B,GAAa,aAQvBF,GAAAmF,GCiiBWsrH,CAAQ31H,EAAA20H,EAAAC,EAAA96I,KAAAk4C,YAAA3nB,GACtCinG,EAAAx3H,KAAA04I,WAAAnpI,GAQA,OAPAioH,GAIAA,EAAA5lG,mBAA0CjP,GAAcC,GAAArD,GACxDi4G,EAAAxgH,WAJAwgH,EAAA,IAA6Bb,GAAUp3G,EAAkBoD,GAAcC,IAMvE40G,GASA4f,EAAAt4I,UAAAk8I,kBAAA,SAAAxjB,EAAAt5G,EAAA3O,GACA,IAKA+Z,EALA/J,EAAAi4G,EAAAlmG,qBACAwqH,EAAAz8I,KAAAM,IAAAue,EAAA,GAAAqB,EAAA,IACAw8H,EAAA18I,KAAAQ,IAAAqe,EAAA,GAAAqB,IAAAxf,OAAA,IAEA6e,EAAA,CADkByF,GAAKnG,EAAA,GAAA7e,KAAA6L,IAAAgT,EAAA,GAAAA,EAAA,IAAAle,KAAAo5I,kBAAA0C,EAAAC,GACvBx8H,EAAA,IASA,OAPAhQ,KAAAvP,KAAAg5I,kBACA1vH,EAAAtpB,KAAAg5I,iBAAAzpI,GAAA6qI,MACAvoH,eAAAjT,GAGA0K,EAAA,IAAwBgM,GAAK1W,GAE7B0K,GAOA8tH,EAAAt4I,UAAAk9I,aAAA,WACA,OAAAh8I,KAAA04I,YAMAtB,EAAAt4I,UAAAg7I,sBAAA,SAAA1uH,GACA,IAAAogG,EAAiClgG,GAAa,aAC9CnE,EAAAiE,EAAAjD,iBACA8zH,EAA2B/uH,GAAe/F,EAAAqkG,EAAApgG,GAC1CprB,KAAA+3I,QAAA5wH,EAAA,GACAnnB,KAAAg4I,QAAA7wH,EAAA,GACAnnB,KAAAi4I,QAAA9wH,EAAA,GACAnnB,KAAAk4I,QAAA/wH,EAAA,GACAnnB,KAAAm4I,SAAA8D,EAAA,GACAj8I,KAAAo4I,SAAA6D,EAAA,GACAj8I,KAAAq4I,SAAA4D,EAAA,GACAj8I,KAAAs4I,SAAA2D,EAAA,GACAj8I,KAAA44I,qBAAoC5rH,GAAYw+F,EAAApgG,GAChDprB,KAAA64I,mBAAkC7rH,GAAY5B,EAAAogG,GAC9CxrH,KAAA84I,wBAAA94I,KAAA64I,mBAA+Dr4H,GAAS4K,EAAApD,cACxEhoB,KAAAk4C,YAAA9sB,GAEAgsH,EAjmBa,CAkmBXjB,ICnvBE+F,GAAyB,WAC7B,IAAA7rI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiDzByrI,GAAQ,CACZC,KAAA,OACAC,SAAA,WACAtzH,OAAA,UAMAuzH,GAAA,qCA4Je,IAAAC,GAjJJ,SAAA1rI,GAKX,SAAA2rI,EAAAxjI,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAwsC,EAA0Bj0C,EAAM,GAAG0H,UACnCusC,EAAAi3F,gBACAj3F,EAAAngC,cACAmgC,EAAAk3F,YACAl3F,EAAAkiB,QACA12D,EAAAH,EAAAxT,KAAA2C,KAAAwlD,IAAAxlD,MAKA28I,UAAA,KACQxpI,EAAMnC,EAAQkH,EAAmBikI,GAAQE,UAAArrI,EAAA4rI,uBAAA5rI,GACjDA,EAAA6rI,YAAA5jI,EAAAwjI,SAAAxjI,EAAAwjI,SAAAH,IACAtrI,EAAA8rI,aAAAlqI,IAAAqG,EAAAyjI,KAAAzjI,EAAAyjI,KAAA,IACA1rI,EAAA6+E,eAAAj9E,IAAAqG,EAAAoM,OAAApM,EAAAoM,OAAA,GACA,IAAAqiD,EAAAzuD,EAAAyuD,OAAAzuD,EAAAyuD,OAAA,SAYA,OAVA12D,EAAA+rI,gBADA,iBAAAr1E,EACA,SAAAlc,GACA,OAAAA,EAAAztD,IAAA2pE,IAIAA,EAIA12D,EAAAglI,eAAA,MACAhlI,EA2FA,OA7HIkrI,GAASM,EAAA3rI,GA0Cb2rI,EAAA19I,UAAAk+I,QAAA,WACA,OAAiCh9I,KAAAjC,IAAco+I,GAAQC,OAQvDI,EAAA19I,UAAAm+I,YAAA,WACA,OAAwCj9I,KAAAjC,IAAco+I,GAAQE,WAQ9DG,EAAA19I,UAAAi7B,UAAA,WACA,OAAiC/5B,KAAAjC,IAAco+I,GAAQpzH,SAKvDyzH,EAAA19I,UAAA89I,uBAAA,WACA58I,KAAA28I,UAgEA,SAAAO,GAMA,IALA,IAEAvtI,EAAkB4xC,GAFlB,EACA,KAEAk7F,EAAA9sI,EAAAwtI,qBAAA,IAHA,EACA,KAGAC,EAAA,GAAAF,EAAAn9I,OAAA,GACA7C,EAAA,EAAA0U,EAAAsrI,EAAAn9I,OAAuC7C,EAAA0U,IAAQ1U,EAC/Cu/I,EAAAY,aAAAngJ,EAAAkgJ,EAAAF,EAAAhgJ,IAIA,OAFAyS,EAAA80D,UAAAg4E,EACA9sI,EAAA6iF,SAAA,IATA,EACA,KASA7iF,EAAA+xC,OA3EA47F,CAAAt9I,KAAAi9I,gBAQAT,EAAA19I,UAAAg+I,QAAA,SAAAJ,GACA18I,KAAA2I,IAAiBwzI,GAAQC,KAAAM,IAQzBF,EAAA19I,UAAA+9I,YAAA,SAAAK,GACAl9I,KAAA2I,IAAiBwzI,GAAQE,SAAAa,IAQzBV,EAAA19I,UAAA+wF,UAAA,SAAAxqE,GACArlB,KAAA2I,IAAiBwzI,GAAQpzH,OAAA1D,IAKzBm3H,EAAA19I,UAAAsqD,eAAA,WACA,WAAmBwyE,GAAwB57H,KAAA,CAC3CwjF,aAAA,y4BACAK,eAAA,siBACAiB,SAAA,CACAy4D,OAAA,WACA,OAAyE,GAAzEv9I,KAAAjC,IAAqCo+I,GAAQpzH,QAAA/oB,KAAAjC,IAAoBo+I,GAAQC,QACxD19I,KAAAsB,MACjBw9I,YAAA,WACA,OAAAx9I,KAAAjC,IAAoCo+I,GAAQpzH,QAAA1pB,KAAAM,IAAA,EAAAK,KAAAjC,IAAgCo+I,GAAQC,QACnE19I,KAAAsB,MACjBy9I,aAAA,SAAA7+G,GACA,OAAAA,EAAAswB,UAAAruC,aAGAyoE,cAAA,CACA,CACAzF,eAAA,kfACAiB,SAAA,CACA44D,kBAAA19I,KAAA28I,aAIAjgB,gBAAA18H,KAAA+8I,mBAGAP,EA9HW,CA+HTrG,ICpMEwH,GAAyB,WAC7B,IAAAttI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqGdktI,GAlCK,SAAA/sI,GAKpB,SAAAgtI,EAAA7kI,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAqE,GACrEwsC,EAA0Bj0C,EAAM,GAAG0H,GAQnC,cAPAusC,EAAAs4F,YACA9sI,EAAAH,EAAAxT,KAAA2C,KAAAwlD,IAAAxlD,MAKA+9I,iBAAAnrI,IAAAqG,EAAA6kI,WAAA7kI,EAAA6kI,WAAA,EACA9sI,EAgBA,OA/BI2sI,GAASE,EAAAhtI,GAoBbgtI,EAAA/+I,UAAAszI,cAAA,WACA,OAAApyI,KAAA+9I,aAOAF,EAAA/+I,UAAAsqD,eAAA,WACA,WAAmB2oF,GAA8B/xI,OAEjD69I,EAhCoB,CAiClBlI,ICpGEqI,GAAyB,WAC7B,IAAA3tI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoKdutI,GA9EI,SAAAptI,GAKnB,SAAAqtI,EAAAllI,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAwsC,EAAiDj0C,EAAM,GAAG0H,UAC1DusC,EAAA+9D,eACA/9D,EAAAg+D,uBACAxyG,EAAAH,EAAAxT,KAAA2C,KAA2E,IAAAA,KAC3E,IAAA60I,EAAA57H,EAAA47H,YAA+CnC,GAAoBC,OAYnE,OAXQz4H,EAAMtH,MAAAiiI,GACdA,GAA0BnC,GAAoBzrB,OAC9C4tB,GAA0BnC,GAAoBC,OAAA,IAK9C3hI,EAAAmtI,YAAAtJ,EACA7jI,EAAAyyG,WAAAxqG,EAAAsqG,QAAAtqG,EAAAsqG,QAAA,GACAvyG,EAAA0yG,+BAAA9wG,IAAAqG,EAAAuqG,wBACAvqG,EAAAuqG,wBACAxyG,EAoDA,OA3EIgtI,GAASE,EAAArtI,GA8BbqtI,EAAAp/I,UAAAsqD,eAAA,WACA,WAAmB4pF,GAA6BhzI,OAKhDk+I,EAAAp/I,UAAAg2I,cAAA,WACA,OAAA90I,KAAAm+I,aAQAD,EAAAp/I,UAAA6kH,WAAA,WACA,OAAiC3jH,KAAAjC,IAAcolH,KAQ/C+6B,EAAAp/I,UAAA8kH,0BAAA,WACA,OAAkC5jH,KAAAjC,IAAcolH,KAQhD+6B,EAAAp/I,UAAA2kH,WAAA,SAAAF,GACAvjH,KAAA2I,IAAiBw6G,GAAYI,IAQ7B26B,EAAAp/I,UAAA4kH,0BAAA,SAAAF,GACAxjH,KAAA2I,IAAiBw6G,GAAYK,IAE7B06B,EA5EmB,CA6EjBvI,IC/JEyI,GAAyB,WAC7B,IAAA/tI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiC7B2tI,GAMA,cAOAC,GAAA,SAAAztI,GAQA,SAAAytI,EAAAl7I,EAAAm7I,EAAAC,EAAAz4C,GACA,IAAA/0F,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAmBA,OAbAgR,EAAAu6C,SAAAizF,EAMAxtI,EAAAutI,OAMAvtI,EAAAoa,WAAA26E,EACA/0F,EAEA,OA7BIotI,GAASE,EAAAztI,GA6BbytI,EA9BA,CA+BEjqI,GAiJF,SAAAoqI,GAAAjvI,GAEA,IADA,IAAAkvI,EAAAlvI,EAAAmvI,aAAAD,MACAxhJ,EAAA,EAAA0U,EAAA8sI,EAAA3+I,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAqhJ,EAAAG,EAAA/kI,KAAAzc,GACA0hJ,EAAA,IAAAC,WACAD,EAAAjxI,iBAAgCyH,EAASY,KAAAhW,KAAA8+I,cAAApgJ,KAAAsB,KAAAu+I,IACzCK,EAAAG,WAAAR,IAMA,SAAAS,GAAAxvI,GACAA,EAAA4E,kBACA5E,EAAAgF,iBACAhF,EAAAmvI,aAAAM,WAAA,OAEe,IAAAC,GA1JA,SAAAruI,GAKf,SAAAsuI,EAAAnmI,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GA+BA,OA9BAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA2tD,YAAyB15C,KAChBjU,MAKTo/I,oBAAAnmI,EAAAomI,mBACApmI,EAAAomI,mBAAA,GAKAruI,EAAAknC,YAAAj/B,EAAAmS,WACYE,GAAarS,EAAAmS,YAAA,KAKzBpa,EAAAsuI,gBAAA,KAKAtuI,EAAAuuI,QAAAtmI,EAAA3L,QAAA,KAKA0D,EAAAS,OAAAwH,EAAAxH,OAAAwH,EAAAxH,OAAA,KACAT,EA6FA,OAlIIotI,GAASe,EAAAtuI,GA4CbsuI,EAAArgJ,UAAAggJ,cAAA,SAAAP,EAAA/uI,GACA,IAAAxJ,EAAAwJ,EAAAiC,OAAAzL,OACAiH,EAAAjN,KAAAqwD,SACAjlC,EAAAprB,KAAAk4C,YACA9sB,IAEAA,EADAne,EAAA6/C,UACAlxB,iBAIA,IAFA,IAAAyjH,EAAAr/I,KAAAo/I,oBACA7zF,EAAA,GACAruD,EAAA,EAAA0U,EAAAytI,EAAAt/I,OAAuD7C,EAAA0U,IAAQ1U,EAAA,CAC/D,IAAA46E,EAAA,IAAAunE,EAAAniJ,GAIA,IAHAquD,EAAAvrD,KAAAw/I,iBAAA1nE,EAAA9xE,EAAA,CACA4yE,kBAAAxtD,MAEAmgC,EAAAxrD,OAAA,EACA,MAGAC,KAAAu/I,UACAv/I,KAAAu/I,QAAAn/I,QACAJ,KAAAu/I,QAAArmE,YAAA3tB,IAEAvrD,KAAA+U,cAAA,IAAAupI,GAAAD,GAAAE,EAAAhzF,EAAAngC,KAKA+zH,EAAArgJ,UAAA2gJ,mBAAA,WACA,IAAAxyI,EAAAjN,KAAAqwD,SACA,GAAApjD,EAAA,CACA,IAAAyyI,EAAA1/I,KAAAyR,OAAAzR,KAAAyR,OAAAxE,EAAAogC,cACArtC,KAAAs/I,gBAAA,CACgBnsI,EAAMusI,EAAWtqI,EAASS,KAAA4oI,GAAAz+I,MAC1BmT,EAAMusI,EAAWtqI,EAASO,UAAAqpI,GAAAh/I,MAC1BmT,EAAMusI,EAAWtqI,EAASQ,SAAAopI,GAAAh/I,MAC1BmT,EAAMusI,EAAWtqI,EAASS,KAAAmpI,GAAAh/I,SAO1Cm/I,EAAArgJ,UAAA03D,UAAA,SAAAC,GACA5lD,EAAA/R,UAAA03D,UAAAn5D,KAAA2C,KAAAy2D,GACAA,EACAz2D,KAAAy/I,qBAGAz/I,KAAA2/I,wBAMAR,EAAArgJ,UAAAmrD,OAAA,SAAAh9C,GACAjN,KAAA2/I,uBACA9uI,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,GACAjN,KAAA0tD,aACA1tD,KAAAy/I,sBAUAN,EAAArgJ,UAAA0gJ,iBAAA,SAAA1nE,EAAAvQ,EAAAtuD,GACA,IACA,OAAA6+D,EAAAa,aAAApR,EAAAtuD,GAEA,MAAA/Z,GACA,cAMAigJ,EAAArgJ,UAAA6gJ,qBAAA,WACA3/I,KAAAs/I,kBACAt/I,KAAAs/I,gBAAA7lI,QAAyClG,GACzCvT,KAAAs/I,gBAAA,OAGAH,EAnIe,CAoIb7oF,IC7NEspF,GAAyB,WAC7B,IAAAvvI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAsIdmvI,GAjGM,SAAAhvI,GAKrB,SAAAivI,EAAA9mI,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GA2BA,OA1BAhI,EAAAH,EAAAxT,KAAA2C,KAA4E,IAAAA,MAK5Ey5D,WAAAxgD,EAAAygD,UAAAzgD,EAAAygD,UAAmEjC,GAKnEzmD,EAAAipD,gBAAArnD,EAKA5B,EAAA+uI,oBAAAntI,EAKA5B,EAAA8uD,gBAAA,EAKA9uD,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IACAttB,EA6DA,OA9FI4uI,GAASE,EAAAjvI,GAsCbivI,EAAAhhJ,UAAAs5D,gBAAA,SAAA9K,GACA,GAAasK,GAAStK,GAAtB,CAGA,IAAArgD,EAAAqgD,EAAArgD,IACA8T,EAAA9T,EAAA4/C,UACAtiD,EAAA+iD,EAAA5gD,MACA0V,EAAA7X,EAAA,GAAAwW,EAAA,KACAsB,EAAAtB,EAAA,KAAAxW,EAAA,GACAkwC,EAAAp7C,KAAAqmB,MAAArD,EAAAD,GACA49H,EAAA3gJ,KAAAK,KAAA0iB,IAAAC,KACA0kB,EAAA95B,EAAA6/C,UACA,QAAAl6C,IAAA5S,KAAAi6D,WAAA,CACA,IAAAgmF,EAAAjgJ,KAAAi6D,WAAAxf,EACA1T,EAAAyZ,eAAAy/F,GAEAjgJ,KAAAi6D,WAAAxf,OACA7nC,IAAA5S,KAAA+/I,gBACAh5G,EAAAqZ,iBAAApgD,KAAA+/I,eAAAC,QAEAptI,IAAA5S,KAAA+/I,iBACA//I,KAAA8/D,gBAAA9/D,KAAA+/I,eAAAC,GAEAhgJ,KAAA+/I,eAAAC,IAKAF,EAAAhhJ,UAAAw5D,cAAA,SAAAhL,GACA,IAAasK,GAAStK,GACtB,SAEA,IACAvmB,EADAumB,EAAArgD,IACA6/C,UACAzwC,EAAArc,KAAA8/D,gBAAA,OAGA,OAFA/4B,EAAAka,eAAAjhD,KAAA60D,UAAAx4C,GACArc,KAAA8/D,gBAAA,GACA,GAKAggF,EAAAhhJ,UAAAq5D,gBAAA,SAAA7K,GACA,QAAasK,GAAStK,OAGtBttD,KAAAy5D,WAAAnM,KACAA,EAAArgD,IAAA6/C,UAAA9L,mBACAhhD,KAAAi6D,gBAAArnD,EACA5S,KAAA+/I,oBAAAntI,GACA,KAMAktI,EA/FqB,CAgGnB7nF,ICrIEioF,GAAyB,WAC7B,IAAA7vI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2BzByvI,GAAM,SAAAtvI,GASV,SAAA+zH,EAAAhkH,EAAAwE,EAAA0M,GACA,IAAA9gB,EAAAH,EAAAxT,KAAA2C,YACA,QAAA4S,IAAAkf,QAAAlf,IAAAwS,EACApU,EAAA4gB,mBAAAE,EAAAlR,OAEA,CACA,IAAAyE,EAAAD,GAAA,EACApU,EAAAovI,mBAAAx/H,EAAAyE,EAAAyM,GAEA,OAAA9gB,EAyLA,OA1MIkvI,GAAStb,EAAA/zH,GAyBb+zH,EAAA9lI,UAAAqc,MAAA,WACA,WAAAypH,EAAA5kI,KAAAuf,gBAAA/d,aAAAoR,EAAA5S,KAAAixB,SAKA2zG,EAAA9lI,UAAA2wB,eAAA,SAAA3vB,EAAA0e,EAAAkR,EAAAC,GACA,IAAApQ,EAAAvf,KAAAuf,gBACAd,EAAA3e,EAAAyf,EAAA,GACAb,EAAAF,EAAAe,EAAA,GACA0T,EAAAxU,IAAAC,IACA,GAAAuU,EAAAtD,EAAA,CACA,OAAAsD,EACA,QAAA/1B,EAAA,EAA+BA,EAAA8C,KAAAwf,SAAiBtiB,EAChDwyB,EAAAxyB,GAAAqiB,EAAAriB,OAGA,CACA,IAAA63C,EAAA/0C,KAAA+5B,YAAA16B,KAAAK,KAAAuzB,GACAvD,EAAA,GAAAnQ,EAAA,GAAAw1B,EAAAt2B,EACAiR,EAAA,GAAAnQ,EAAA,GAAAw1B,EAAAr2B,EACA,IAAAxhB,EAAA,EAA+BA,EAAA8C,KAAAwf,SAAiBtiB,EAChDwyB,EAAAxyB,GAAAqiB,EAAAriB,GAIA,OADAwyB,EAAA3vB,OAAAC,KAAAwf,OACAyT,EAGA,OAAAtD,GAMAi1G,EAAA9lI,UAAA+f,WAAA,SAAA/e,EAAA0e,GACA,IAAAe,EAAAvf,KAAAuf,gBACAd,EAAA3e,EAAAyf,EAAA,GACAb,EAAAF,EAAAe,EAAA,GACA,OAAAd,IAAAC,KAAA1e,KAAAqgJ,qBAOAzb,EAAA9lI,UAAA0hB,UAAA,WACA,OAAAxgB,KAAAuf,gBAAA/d,MAAA,EAAAxB,KAAAwf,SAKAolH,EAAA9lI,UAAAkxB,cAAA,SAAA9R,GACA,IAAAqB,EAAAvf,KAAAuf,gBACA8F,EAAA9F,EAAAvf,KAAAwf,QAAAD,EAAA,GACA,OAAeJ,GAAcI,EAAA,GAAA8F,EAAA9F,EAAA,GAAA8F,EAAA9F,EAAA,GAAA8F,EAAA9F,EAAA,GAAA8F,EAAAnH,IAO7B0mH,EAAA9lI,UAAAi7B,UAAA,WACA,OAAA16B,KAAAK,KAAAM,KAAAqgJ,sBAMAzb,EAAA9lI,UAAAuhJ,kBAAA,WACA,IAAA5hI,EAAAze,KAAAuf,gBAAAvf,KAAAwf,QAAAxf,KAAAuf,gBAAA,GACAb,EAAA1e,KAAAuf,gBAAAvf,KAAAwf,OAAA,GAAAxf,KAAAuf,gBAAA,GACA,OAAAd,IAAAC,KAMAkmH,EAAA9lI,UAAA0xB,QAAA,WACA,OAAexN,GAAYS,QAM3BmhH,EAAA9lI,UAAA2xB,iBAAA,SAAAvS,GAEA,GAAYgE,GAAUhE,EADtBle,KAAAgoB,aACsB,CACtB,IAAApH,EAAA5gB,KAAAwgB,YACA,OAAAtC,EAAA,IAAA0C,EAAA,IAAA1C,EAAA,IAAA0C,EAAA,KAGA1C,EAAA,IAAA0C,EAAA,IAAA1C,EAAA,IAAA0C,EAAA,IAGmBd,GAAa5B,EAAAle,KAAA+vB,qBAAArxB,KAAAsB,QAEhC,UAOA4kI,EAAA9lI,UAAA+7C,UAAA,SAAAj6B,GACA,IAAApB,EAAAxf,KAAAwf,OACA6F,EAAArlB,KAAAuf,gBAAAC,GAAAxf,KAAAuf,gBAAA,GACAA,EAAAqB,EAAApf,QACA+d,EAAAC,GAAAD,EAAA,GAAA8F,EACA,QAAAnoB,EAAA,EAAuBA,EAAAsiB,IAAYtiB,EACnCqiB,EAAAC,EAAAtiB,GAAA0jB,EAAA1jB,GAEA8C,KAAA4xB,mBAAA5xB,KAAAixB,OAAA1R,GACAvf,KAAAgX,WAUA4tH,EAAA9lI,UAAAshJ,mBAAA,SAAAx/H,EAAAyE,EAAAyM,GACA9xB,KAAA+xB,UAAAD,EAAAlR,EAAA,GACA5gB,KAAAuf,kBACAvf,KAAAuf,gBAAA,IAGA,IAAAA,EAAAvf,KAAAuf,gBACAhV,EAAqB6oB,GAAiB7T,EAAA,EAAAqB,EAAA5gB,KAAAwf,QACtCD,EAAAhV,KAAAgV,EAAA,GAAA8F,EACA,QAAAnoB,EAAA,EAAA0U,EAAA5R,KAAAwf,OAAyCtiB,EAAA0U,IAAQ1U,EACjDqiB,EAAAhV,KAAAgV,EAAAriB,GAEAqiB,EAAAxf,OAAAwK,EACAvK,KAAAgX,WAKA4tH,EAAA9lI,UAAAsyB,eAAA,WACA,aAKAwzG,EAAA9lI,UAAA+yB,eAAA,SAAA5T,EAAA6T,KAMA8yG,EAAA9lI,UAAA+wF,UAAA,SAAAxqE,GACArlB,KAAAuf,gBAAAvf,KAAAwf,QAAAxf,KAAAuf,gBAAA,GAAA8F,EACArlB,KAAAgX,WAMA4tH,EAAA9lI,UAAAglB,OAAA,SAAAC,EAAAC,GACA,IAAApD,EAAA5gB,KAAAwgB,YACAhB,EAAAxf,KAAA2xB,YACA3xB,KAAA66C,UAAuB/2B,GAAMlD,EAAA,EAAAA,EAAA7gB,OAAAyf,EAAAuE,EAAAC,EAAApD,IAC7B5gB,KAAAgX,WAMA4tH,EAAA9lI,UAAA4xB,UAAA,SAAAtO,EAAAC,GACA,IAAAzB,EAAA5gB,KAAAwgB,YACAhB,EAAAxf,KAAA2xB,YACA3xB,KAAA66C,UAAuBz2B,GAASxD,EAAA,EAAAA,EAAA7gB,OAAAyf,EAAA4C,EAAAC,EAAAzB,IAChC5gB,KAAAgX,WAEA4tH,EA3MU,CA4MR1zG,IAuBFivH,GAAMrhJ,UAAA6kB,UACS,IAAA28H,GAAA,GC/PXC,GAAyB,WAC7B,IAAAlwI,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAyHzB8vI,GAAI,CACRv9H,MAAA,QACAC,YAAA,aACAE,QAAA,UACAK,OAAA,UAKAg9H,GAMA,YANAA,GAYA,UAOAC,GAAA,SAAA7vI,GAMA,SAAA6vI,EAAAt9I,EAAAooD,GACA,IAAAx6C,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAOA,OADAgR,EAAAw6C,UACAx6C,EAEA,OAfIuvI,GAASG,EAAA7vI,GAeb6vI,EAhBA,CAiBErsI,GAq0Ba,IAAAssI,GA7zBP,SAAA9vI,GAKR,SAAA+vI,EAAA3nI,GACA,IAAAjI,EAAAhR,KACAi/D,EAAuE,EACvEA,EAAA1G,WACA0G,EAAA1G,SAAsCrkD,IAEtClD,EAAAH,EAAAxT,KAAA2C,KAAAi/D,IAAAj/D,MAKA6gJ,eAAA,EAKA7vI,EAAA8vI,QAAA,KAKA9vI,EAAA+vI,aAKA/vI,EAAAgwI,cAKAhwI,EAAAiwI,WAAA,EAMAjwI,EAAAuuI,QAAAtmI,EAAA3L,OAAA2L,EAAA3L,OAAA,KAMA0D,EAAA+9G,UAAA91G,EAAAsyC,SAAAtyC,EAAAsyC,SAAA,KAMAv6C,EAAAkwI,eAAAjoI,EAAAkoI,cAAAloI,EAAAkoI,cAAA,GAMAnwI,EAAAowI,MAA8CnoI,EAAA,KAM9CjI,EAAA+sD,MAuuBA,SAAA36D,GACA,IAAA/E,EACA+E,IAAiB4f,GAAYC,OAC7B7f,IAAiB4f,GAAYK,YAC7BhlB,EAAemiJ,GAAIv9H,MAEnB7f,IAAsB4f,GAAYE,aAClC9f,IAAiB4f,GAAYM,kBAC7BjlB,EAAemiJ,GAAIt9H,YAEnB9f,IAAsB4f,GAAYI,SAClChgB,IAAiB4f,GAAYO,cAC7BllB,EAAemiJ,GAAIp9H,QAEnBhgB,IAAsB4f,GAAYS,SAClCplB,EAAemiJ,GAAI/8H,QAEnB,SAxvBA49H,CAAArwI,EAAAowI,OAOApwI,EAAAswI,aAAAroI,EAAAsoI,UAQAvwI,EAAAwwI,WAAAvoI,EAAAwoI,UACAxoI,EAAAwoI,UACAzwI,EAAA+sD,QAA6ByiF,GAAIp9H,QAAA,IAOjCpS,EAAA0wI,WAAAzoI,EAAA0oI,UAAA1oI,EAAA0oI,UAAA32I,IAMAgG,EAAA4wI,iBAAA3oI,EAAA4oI,gBAAA5oI,EAAA4oI,gBAAqF5tI,EACrF,IAooBAwhF,EApoBAgd,EAAAx5F,EAAAw5F,iBACA,IAAAA,EACA,GAAAzhG,EAAAowI,QAAgCp+H,GAAYS,OAM5CgvF,EAAA,SAAAx0F,EAAA6jI,GACA,IAAAtoH,EAAAsoH,GACA,IAA4BxB,GAAM,CAAAv1I,UAClCg3I,EAAwCxrG,GAAyBt4B,EAAA,GAAAA,EAAA,IAEjE,OADAub,EAAA4mH,mBAAAniI,EAAA,GAAA5e,KAAAK,KAAAqiJ,IACAvoH,OAGA,CACA,IAAAwoH,EACAC,EAAAjxI,EAAA+sD,MACAkkF,IAA+BzB,GAAIv9H,MACnC++H,EAAoC1sH,GAEpC2sH,IAAoCzB,GAAIt9H,YACxC8+H,EAAoCrrB,GAEpCsrB,IAAoCzB,GAAIp9H,UACxC4+H,EAAoC9oH,IAOpCu5E,EAAA,SAAAx0F,EAAA6jI,GACA,IAAA9mI,EAAA8mI,EAkBA,OAjBA9mI,EACAinI,IAAuCzB,GAAIp9H,QAC3CnF,EAAA,GAAAle,OAEAib,EAAA6W,eAAA,CAAA5T,EAAA,GAAA9Q,OAAA,CAAA8Q,EAAA,UAGAjD,EAAA6W,eAAA,IAIA7W,EAAA6W,eAAA5T,GAIAjD,EAAA,IAAAgnI,EAAA/jI,GAEAjD,GAkGA,OA1FAhK,EAAA+jF,kBAAA0d,EAKAzhG,EAAAkxI,sBAAAtvI,IAAAqG,EAAAkpI,gBAAAlpI,EAAAkpI,gBAAA,IAOAnxI,EAAAoxI,kBAAA,KAMApxI,EAAAqxI,eAAA,KAMArxI,EAAAsxI,aAAA,KAMAtxI,EAAAuxI,cAAA,KAMAvxI,EAAAwxI,YAAA,KAMAxxI,EAAAyxI,kBAAA,KAQAzxI,EAAA0xI,uBAAAzpI,EAAA0pI,eACA1pI,EAAA0pI,eAAA1pI,EAAA0pI,eAAA,GAMA3xI,EAAA4xI,SAAA,IAA6BzM,GAAW,CACxC7oI,OAAA,IAAwB4gG,GAAY,CACpCW,iBAAA,EACAhL,QAAA5qF,EAAA4qF,OAAA5qF,EAAA4qF,QAEAtoF,MAAAtC,EAAAsC,MAAAtC,EAAAsC,OA0gBAk6E,EAAiBD,KACjB,SAAAhqC,EAAA3qC,GACA,OAAA40E,EAAAjqC,EAAAlwC,cAAAkV,aA1gBA0gH,wBAAA,IAOAlgI,EAAA0J,cAAAzB,EAAAiiH,aAKAlqH,EAAAyoD,WAAAxgD,EAAAygD,UAAAzgD,EAAAygD,UAAmElC,GAKnExmD,EAAA6xI,mBACA5pI,EAAA6pI,SACA9xI,EAAA6xI,mBAAuC1rF,GAGvCnmD,EAAA6xI,mBAAA5pI,EAAA8pI,kBACA9pI,EAAA8pI,kBAA4CtrF,GAEpCtkD,EAAMnC,EAAQkH,EAAmBg+C,GAAmBC,QAAAnlD,EAAAgyI,aAAAhyI,GAC5DA,EAweA,OA9tBIuvI,GAASK,EAAA/vI,GA2Pb+vI,EAAA9hJ,UAAAmrD,OAAA,SAAAh9C,GACA4D,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,GACAjN,KAAAgjJ,gBAOApC,EAAA9hJ,UAAAmkJ,WAAA,WACA,OAAAjjJ,KAAA4iJ,UAOAhC,EAAA9hJ,UAAA6uD,YAAA,SAAAn+C,GACAA,EAAA0vB,cAAA97B,OAAyCgS,EAASI,aAElDhG,EAAAgF,iBAEAxU,KAAAihJ,UAAAjhJ,KAAA+9D,QAAwCyiF,GAAIv9H,OAAAjjB,KAAA6iJ,mBAAArzI,GAC5C,IAAA4yB,EAAA5yB,EAAApM,OAAkC88B,GAAmBG,YACrD6iH,GAAA,GACAljJ,KAAAihJ,WAAAjhJ,KAAAghJ,eAAAxxI,EAAApM,OAAoE88B,GAAmBE,cACvFlC,KAAAC,MACAn+B,KAAAghJ,eAAAhhJ,KAAAkiJ,kBACAliJ,KAAA8gJ,QAAAtxI,EAAA9C,MACA1M,KAAA6gJ,eAAA7gJ,KAAAihJ,UACA7+G,GAAA,GAGApiC,KAAAghJ,mBAAApuI,EAEA5S,KAAA6gJ,oBAAAjuI,IAAA5S,KAAA+gJ,eACAn3G,aAAA5pC,KAAA+gJ,cACA/gJ,KAAA+gJ,kBAAAnuI,IA0BA,OAvBA5S,KAAAihJ,WACAzxI,EAAApM,OAA2B88B,GAAmBE,aAC9C,OAAApgC,KAAAqiJ,gBACAriJ,KAAAmjJ,cAAA3zI,GACA0zI,GAAA,GAEAljJ,KAAAihJ,WACAzxI,EAAApM,OAA2B88B,GAAmBI,YAC9C4iH,GAAA,EAEA9gH,GACA8gH,EAAA1zI,EAAApM,OAAkC88B,GAAmBG,cACrDrgC,KAAAihJ,UACAiC,EAAAljJ,KAAAmuC,mBAAA3+B,IAEwD,EAAAwxB,aAAAiC,aAAuCtB,IAC/FnyB,EAAApM,OAAgC88B,GAAmBE,kBAAAxtB,IAAA5S,KAAA+gJ,eACnD/gJ,KAAAmuC,mBAAA3+B,GAGAA,EAAApM,OAAgC88B,GAAmBxqB,WACnDwtI,GAAA,GAEAryI,EAAA/R,UAAA6uD,YAAAtwD,KAAA2C,KAAAwP,IAAA0zI,GAKAtC,EAAA9hJ,UAAAq5D,gBAAA,SAAA3oD,GAEA,OADAxP,KAAA6gJ,eAAA7gJ,KAAAihJ,UACAjhJ,KAAAihJ,WACAjhJ,KAAA8gJ,QAAAtxI,EAAA9C,MACA1M,KAAAoiJ,mBACApiJ,KAAAojJ,cAAA5zI,IAEA,GAEAxP,KAAAy5D,WAAAjqD,IACAxP,KAAAghJ,cAAA9iH,KAAAC,MACAn+B,KAAA+gJ,aAAA7yI,WAAA,WACAlO,KAAAmuC,mBAAA,IAA4CrN,GAAuBZ,GAAmBG,YAAA7wB,EAAAvC,IAAAuC,EAAAwxB,cAAA,EAAAxxB,EAAAovB,cACzElgC,KAAAsB,WAAAkiJ,kBACbliJ,KAAA8gJ,QAAAtxI,EAAA9C,OACA,IAGA1M,KAAAghJ,mBAAApuI,GACA,IAMAguI,EAAA9hJ,UAAAw5D,cAAA,SAAA9oD,GACA,IAAA0zI,GAAA,EACAljJ,KAAA+gJ,eACAn3G,aAAA5pC,KAAA+gJ,cACA/gJ,KAAA+gJ,kBAAAnuI,GAEA5S,KAAAmuC,mBAAA3+B,GACA,IAAA6zI,EAAArjJ,KAAA+9D,QAAwCyiF,GAAI/8H,OA4B5C,OA3BAzjB,KAAA6gJ,eACA7gJ,KAAAoiJ,kBAMApiJ,KAAAihJ,WAAAoC,EACArjJ,KAAAsjJ,gBAEAtjJ,KAAAujJ,UAAA/zI,GACAxP,KAAA4hJ,iBAAApyI,IACAxP,KAAAsjJ,gBAIAtjJ,KAAAmjJ,cAAA3zI,IAdAxP,KAAAojJ,cAAA5zI,GACAxP,KAAA+9D,QAAmCyiF,GAAIv9H,OACvCjjB,KAAAsjJ,iBAcAJ,GAAA,GAEAljJ,KAAAihJ,YACAjhJ,KAAAoiJ,kBAAA,KACApiJ,KAAAwjJ,kBAEAN,GAAAljJ,KAAAshJ,YACA9xI,EAAA4E,kBAEA8uI,GAQAtC,EAAA9hJ,UAAAqvC,mBAAA,SAAA3+B,GACA,GAAAxP,KAAA8gJ,WACA9gJ,KAAAihJ,WAAAjhJ,KAAA6gJ,eACA7gJ,KAAAihJ,YAAAjhJ,KAAA6gJ,eAAA,CACA,IAAA4C,EAAAzjJ,KAAA8gJ,QACA4C,EAAAl0I,EAAA9C,MACA+R,EAAAglI,EAAA,GAAAC,EAAA,GACAhlI,EAAA+kI,EAAA,GAAAC,EAAA,GACAzwH,EAAAxU,IAAAC,IAIA,GAHA1e,KAAA6gJ,cAAA7gJ,KAAAihJ,UACAhuH,EAAAjzB,KAAA0iJ,uBACAzvH,GAAAjzB,KAAA0iJ,wBACA1iJ,KAAA6gJ,cACA,SASA,OANA7gJ,KAAAoiJ,kBACApiJ,KAAA2jJ,eAAAn0I,GAGAxP,KAAA4jJ,2BAAAp0I,IAEA,GAQAoxI,EAAA9hJ,UAAAykJ,UAAA,SAAA/zI,GACA,IAAAq0I,GAAA,EACA,GAAA7jJ,KAAAqiJ,eAAA,CACA,IAAAyB,GAAA,EACAC,EAAA,CAAA/jJ,KAAAoiJ,mBACA,GAAApiJ,KAAA+9D,QAA+ByiF,GAAIt9H,YACnC4gI,EAAA9jJ,KAAAuiJ,cAAAxiJ,OAAAC,KAAAwhJ,gBAEA,GAAAxhJ,KAAA+9D,QAAoCyiF,GAAIp9H,QAAA,CACxC,IAAA4gI,EAA4DhkJ,KAAA,cAC5D8jJ,EAAAE,EAAA,GAAAjkJ,OAAAC,KAAAwhJ,WACAuC,EAAA,CAAAC,EAAA,MAAAA,EAAA,GAAAA,EAAA,GAAAjkJ,OAAA,IAEA,GAAA+jJ,EAEA,IADA,IAAA72I,EAAAuC,EAAAvC,IACA/P,EAAA,EAAA0U,EAAAmyI,EAAAhkJ,OAAyE7C,EAAA0U,EAAQ1U,IAAA,CACjF,IAAA+mJ,EAAAF,EAAA7mJ,GACAgnJ,EAAAj3I,EAAAy/C,uBAAAu3F,GACAv3I,EAAA8C,EAAA9C,MACA+R,EAAA/R,EAAA,GAAAw3I,EAAA,GACAxlI,EAAAhS,EAAA,GAAAw3I,EAAA,GACA/C,EAAAnhJ,KAAAihJ,UAAA,EAAAjhJ,KAAAkhJ,eAEA,GADA2C,EAAAxkJ,KAAAK,KAAA+e,IAAAC,MAAAyiI,EACA,CACAnhJ,KAAAoiJ,kBAAA6B,EACA,QAKA,OAAAJ,GAMAjD,EAAA9hJ,UAAA8kJ,2BAAA,SAAAp0I,GACA,IAAAyO,EAAAzO,EAAAoP,WAAApd,QACAxB,KAAAsiJ,aAKmDtiJ,KAAAsiJ,aAAAhnI,cACnDuW,eAAA5T,IALAje,KAAAsiJ,aAAA,IAAoChoI,EAAO,IAAKgb,GAAKrX,IACrDje,KAAAmkJ,0BAYAvD,EAAA9hJ,UAAAskJ,cAAA,SAAA5zI,GACA,IAAAknB,EAAAlnB,EAAAoP,WACA5e,KAAAoiJ,kBAAA1rH,EACA12B,KAAA+9D,QAA2ByiF,GAAIv9H,MAC/BjjB,KAAAuiJ,cAAA7rH,EAAAl1B,QAEAxB,KAAA+9D,QAAgCyiF,GAAIp9H,SACpCpjB,KAAAuiJ,cAAA,EAAA7rH,EAAAl1B,QAAAk1B,EAAAl1B,UACAxB,KAAAyiJ,kBAAAziJ,KAAAuiJ,cAAA,IAGAviJ,KAAAuiJ,cAAA,CAAA7rH,EAAAl1B,QAAAk1B,EAAAl1B,SAEAxB,KAAAyiJ,oBACAziJ,KAAAwiJ,YAAA,IAAmCloI,EAAO,IAAKq8G,GAAU32H,KAAAyiJ,qBAEzD,IAAAznI,EAAAhb,KAAA+0F,kBAAA/0F,KAAAuiJ,eACAviJ,KAAAqiJ,eAAA,IAAkC/nI,EAClCta,KAAA0a,eACA1a,KAAAqiJ,eAAAjnI,gBAAApb,KAAA0a,eAEA1a,KAAAqiJ,eAAApnI,YAAAD,GACAhb,KAAAmkJ,wBACAnkJ,KAAA+U,cAAA,IAAA2rI,GAAAD,GAAAzgJ,KAAAqiJ,kBAOAzB,EAAA9hJ,UAAA6kJ,eAAA,SAAAn0I,GACA,IAEAyO,EAAAqW,EAwBA8vH,EA1BAxlI,EAAApP,EAAAoP,WACA5D,EAA8Ehb,KAAAqiJ,eAAA/mI,eAE9Etb,KAAA+9D,QAA2ByiF,GAAIv9H,MAC/BqR,EAAAt0B,KAAAuiJ,cAEAviJ,KAAA+9D,QAAgCyiF,GAAIp9H,SAEpCkR,GADArW,EAAmDje,KAAA,kBACnDie,EAAAle,OAAA,GACAC,KAAAujJ,UAAA/zI,KAEAoP,EAAA5e,KAAAoiJ,kBAAA5gJ,UAKA8yB,GADArW,EAAAje,KAAAuiJ,eACAtkI,EAAAle,OAAA,GAEAu0B,EAAA,GAAA1V,EAAA,GACA0V,EAAA,GAAA1V,EAAA,GACA5e,KAAA+0F,kBAAyD/0F,KAAA,cAAAgb,GACzDhb,KAAAsiJ,eACmDtiJ,KAAAsiJ,aAAAhnI,cACnDuW,eAAAjT,GAIA,GAAA5D,EAAAwV,WAAkCxN,GAAYI,SAC9CpjB,KAAA+9D,QAA2ByiF,GAAIp9H,QAAA,CAC/BpjB,KAAAwiJ,cACAxiJ,KAAAwiJ,YAAA,IAAuCloI,GAEvC,IAAA+pI,EAA0C,EAAAtrH,cAAA,IAC1CqrH,EAAmDpkJ,KAAAwiJ,YAAAlnI,gBAMnD8oI,EAAAxyH,mBAAAyyH,EAAA7yH,YAAA6yH,EAAA/yH,sBACA8yH,EAAAptI,YALAotI,EAAA,IAAqCztB,GAAU0tB,EAAA/yH,qBAAA+yH,EAAA7yH,aAC/CxxB,KAAAwiJ,YAAAvnI,YAAAmpI,SAOApkJ,KAAAyiJ,oBACA2B,EAAmDpkJ,KAAAwiJ,YAAAlnI,eACnDuW,eAAA7xB,KAAAyiJ,mBAEAziJ,KAAAmkJ,yBAOAvD,EAAA9hJ,UAAAqkJ,cAAA,SAAA3zI,GACA,IAEAw4D,EACA/pD,EAHAW,EAAApP,EAAAoP,WACA5D,EAA8Ehb,KAAAqiJ,eAAA/mI,cAG9Etb,KAAA+9D,QAA2ByiF,GAAIt9H,aAC/BljB,KAAAoiJ,kBAAAxjI,EAAApd,SACAyc,EAAmDje,KAAA,eACnDD,QAAAC,KAAA0hJ,aACA1hJ,KAAAihJ,UACAhjI,EAAApd,MAGAmnE,GAAA,GAGA/pD,EAAAnd,KAAA8d,EAAApd,SACAxB,KAAA+0F,kBAAA92E,EAAAjD,IAEAhb,KAAA+9D,QAAgCyiF,GAAIp9H,WACpCnF,EAAmDje,KAAA,kBACnDD,QAAAC,KAAA0hJ,aACA1hJ,KAAAihJ,UACAhjI,EAAApd,MAGAmnE,GAAA,GAGA/pD,EAAAnd,KAAA8d,EAAApd,SACAwmE,IACAhoE,KAAAoiJ,kBAAAnkI,EAAA,IAEAje,KAAA+0F,kBAAA/0F,KAAAuiJ,cAAAvnI,IAEAhb,KAAAmkJ,wBACAn8E,GACAhoE,KAAAsjJ,iBAOA1C,EAAA9hJ,UAAAwlJ,gBAAA,WACA,GAAAtkJ,KAAAqiJ,eAAA,CAGA,IACApkI,EADAjD,EAA8Ehb,KAAAqiJ,eAAA/mI,cAI9Etb,KAAA+9D,QAA2ByiF,GAAIt9H,cAC/BjF,EAAmDje,KAAA,eACnD4B,QAAA,KACA5B,KAAA+0F,kBAAA92E,EAAAjD,GACAiD,EAAAle,QAAA,IACAC,KAAAoiJ,kBAAAnkI,IAAAle,OAAA,GAAAyB,UAGAxB,KAAA+9D,QAAgCyiF,GAAIp9H,WACpCnF,EAAmDje,KAAA,kBACnD4B,QAAA,KACmD5B,KAAAwiJ,YAAAlnI,cACnDuW,eAAA5T,GACAje,KAAA+0F,kBAAA/0F,KAAAuiJ,cAAAvnI,IAEA,IAAAiD,EAAAle,SACAC,KAAAoiJ,kBAAA,MAEApiJ,KAAAmkJ,0BAQAvD,EAAA9hJ,UAAAwkJ,cAAA,WACA,IAAAiB,EAAAvkJ,KAAAwjJ,gBACA,GAAAe,EAAA,CAGA,IAAAtmI,EAAAje,KAAAuiJ,cACAvnI,EAA8EupI,EAAAjpI,cAC9Etb,KAAA+9D,QAA2ByiF,GAAIt9H,aAE/BjF,EAAApd,MACAb,KAAA+0F,kBAAA92E,EAAAjD,IAEAhb,KAAA+9D,QAAgCyiF,GAAIp9H,UAEC,KAAAviB,MACrCb,KAAA+0F,kBAAA92E,EAAAjD,GACAiD,EAAAjD,EAAAoW,kBAGApxB,KAAAohJ,QAA2Bp+H,GAAYK,YACvCkhI,EAAAtpI,YAAA,IAA0Ci9G,GAAU,CAA4B,KAEhFl4H,KAAAohJ,QAAgCp+H,GAAYM,kBAC5CihI,EAAAtpI,YAAA,IAA0Co8G,GAAe,CAA2B,KAEpFr3H,KAAAohJ,QAAgCp+H,GAAYO,eAC5CghI,EAAAtpI,YAAA,IAA0Cu9G,GAAY,CAA2B,KAGjFx4H,KAAA+U,cAAA,IAAA2rI,GAAAD,GAAA8D,IAEAvkJ,KAAA+uH,WACA/uH,KAAA+uH,UAAAjuH,KAAAyjJ,GAEAvkJ,KAAAu/I,SACAv/I,KAAAu/I,QAAAhwC,WAAAg1C,KAQA3D,EAAA9hJ,UAAA0kJ,cAAA,WACAxjJ,KAAAoiJ,kBAAA,KACA,IAAAmC,EAAAvkJ,KAAAqiJ,eAOA,OANAkC,IACAvkJ,KAAAqiJ,eAAA,KACAriJ,KAAAsiJ,aAAA,KACAtiJ,KAAAwiJ,YAAA,KACAxiJ,KAAA4iJ,SAAAp2F,YAAApsD,OAAA,IAEAmkJ,GASA3D,EAAA9hJ,UAAA0a,OAAA,SAAAgyC,GACA,IACAgsE,EADAhsE,EAAAlwC,cAEAtb,KAAAqiJ,eAAA72F,EACAxrD,KAAAuiJ,cAAA/qB,EAAApmG,iBACA,IAAAkD,EAAAt0B,KAAAuiJ,cAAAviJ,KAAAuiJ,cAAAxiJ,OAAA,GACAC,KAAAoiJ,kBAAA9tH,EAAA9yB,QACAxB,KAAAuiJ,cAAAzhJ,KAAAwzB,EAAA9yB,SACAxB,KAAAmkJ,wBACAnkJ,KAAA+U,cAAA,IAAA2rI,GAAAD,GAAAzgJ,KAAAqiJ,kBAMAzB,EAAA9hJ,UAAAqlJ,sBAAA,WACA,IAAAK,EAAA,GACAxkJ,KAAAqiJ,gBACAmC,EAAA1jJ,KAAAd,KAAAqiJ,gBAEAriJ,KAAAwiJ,aACAgC,EAAA1jJ,KAAAd,KAAAwiJ,aAEAxiJ,KAAAsiJ,cACAkC,EAAA1jJ,KAAAd,KAAAsiJ,cAEA,IAAAmC,EAAAzkJ,KAAA4iJ,SAAAp2F,YACAi4F,EAAArkJ,OAAA,GACAqkJ,EAAAvrE,YAAAsrE,IAKA5D,EAAA9hJ,UAAAkkJ,aAAA,WACA,IAAA/1I,EAAAjN,KAAAqwD,SACAoG,EAAAz2D,KAAA0tD,YACAzgD,GAAAwpD,GACAz2D,KAAAwjJ,gBAEAxjJ,KAAA4iJ,SAAA34F,OAAAwM,EAAAxpD,EAAA,OAEA2zI,EA/tBQ,CAguBN3oF,IC94BEysF,GAAyB,WAC7B,IAAAr0I,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8C7Bi0I,GAAA,CAMAC,cAAA,iBAOAC,GAAA,SAAAh0I,GAKA,SAAAg0I,EAAA3mI,GACA,IAAAlN,EAAAH,EAAAxT,KAAA2C,KAAA2kJ,GAAAC,gBAAA5kJ,KAOA,OADAgR,EAAAkN,SACAlN,EAEA,OAdI0zI,GAASG,EAAAh0I,GAcbg0I,EAfA,CAgBExwI,GAsUF,SAAAywI,KACA,IAAAvpI,EAAgBi6E,KAChB,gBAAAhqC,EAAA3qC,GACA,OAAAtF,EAAqByH,GAAYC,QAOjC,SAAA8hI,GAAAC,GACA,gBAAA17H,GACA,OAAetL,GAAc,CAAAgnI,EAAA17H,KAQ7B,SAAA27H,GAAAC,EAAAC,GACA,OAAAD,EAAA,IAAAC,EAAA,GACA,SAAA77H,GACA,OAAmBtL,GAAc,CAAAknI,EAAA,CAAA57H,EAAA,GAAA67H,EAAA,OAGjCD,EAAA,IAAAC,EAAA,GACA,SAAA77H,GACA,OAAmBtL,GAAc,CAAAknI,EAAA,CAAAC,EAAA,GAAA77H,EAAA,OAIjC,KAee,IAAA87H,GA3WL,SAAAv0I,GAKV,SAAAw0I,EAAArsI,GACA,IA4SAuC,EA5SAvK,EAAAhR,KACAiZ,EAAAD,GAAA,GAyEA,OAxEAhI,EAAAH,EAAAxT,KAAA2C,KAA4E,IAAAA,MAM5EinB,QAAA,KAMAjW,EAAAs0I,gBAAA,KAMAt0I,EAAAu0I,qBAAA3yI,IAAAqG,EAAAusI,eACAvsI,EAAAusI,eAAA,GAMAx0I,EAAAy0I,kBAAA,EAMAz0I,EAAA00I,eAAA,KAMA10I,EAAA20I,eAAA,KACA3sI,IACAA,EAAA,IAOAhI,EAAA40I,eAAA,IAAmCzP,GAAW,CAC9C7oI,OAAA,IAAwB4gG,GAAY,CACpCW,iBAAA,EACAhL,QAAA7qF,EAAA6qF,QAEAtoF,MAAAvC,EAAA6sI,SAAA7sI,EAAA6sI,UAuPAtqI,EAAgBi6E,KAChB,SAAAhqC,EAAA3qC,GACA,OAAAtF,EAAqByH,GAAYI,WAxPjC4tH,sBAAA,EACAE,wBAAA,IAOAlgI,EAAA80I,eAAA,IAAmC3P,GAAW,CAC9C7oI,OAAA,IAAwB4gG,GAAY,CACpCW,iBAAA,EACAhL,QAAA7qF,EAAA6qF,QAEAtoF,MAAAvC,EAAA+sI,aAAA/sI,EAAA+sI,aAAAjB,KACA9T,sBAAA,EACAE,wBAAA,IAEAl4H,EAAAkF,QACAlN,EAAA0X,UAAA1P,EAAAkF,QAEAlN,EA0NA,OAzSI0zI,GAASW,EAAAx0I,GAuFbw0I,EAAAvmJ,UAAAknJ,cAAA,SAAAt5I,EAAAO,GACA,IAAAg5I,EAAAh5I,EAAAmyB,uBAAA1yB,GAKAwR,EAAAle,KAAAgoB,YACA,GAAA9J,EAAA,CAEA,IAAAgoI,EAkQA,SAAAhoI,GACA,OACA,EAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,KACA,EAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,KACA,EAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,KACA,EAAAA,EAAA,GAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,MAvQAioI,CAAAjoI,GACAgoI,EAAAtjJ,KARA,SAAAzD,EAAAyH,GACA,OAAmB+vC,GAAwBsvG,EAAA9mJ,GAC3Bw3C,GAAwBsvG,EAAAr/I,KAOxC,IAAAw/I,EAAAF,EAAA,GACAG,EAA0BrxG,GAAgBixG,EAAAG,GAC1CE,EAAAr5I,EAAAy/C,uBAAA25F,GAEA,GAAgB3vG,GAAkBhqC,EAAA45I,IAAAtmJ,KAAAulJ,gBAAA,CAElC,IAAAgB,EAAAt5I,EAAAy/C,uBAAA05F,EAAA,IACAI,EAAAv5I,EAAAy/C,uBAAA05F,EAAA,IACAK,EAAmClwG,GAAyB+vG,EAAAC,GAC5DG,EAAmCnwG,GAAyB+vG,EAAAE,GAC5DG,EAAAtnJ,KAAAK,KAAAL,KAAAQ,IAAA4mJ,EAAAC,IAMA,OALA1mJ,KAAAylJ,iBAAAkB,GAAA3mJ,KAAAulJ,gBACAvlJ,KAAAylJ,mBACAY,EAAAI,EAAAC,EACAN,EAAA,GAAAA,EAAA,IAEAC,GAGA,aAMAhB,EAAAvmJ,UAAAqvC,mBAAA,SAAAmf,GACA,IAAA5gD,EAAA4gD,EAAA5gD,MACAO,EAAAqgD,EAAArgD,IACAo5I,EAAArmJ,KAAAgmJ,cAAAt5I,EAAAO,GACAo5I,IACAA,EAAAp5I,EAAAmyB,uBAAA1yB,IAEA1M,KAAA4mJ,8BAAAP,IAOAhB,EAAAvmJ,UAAA+nJ,6BAAA,SAAA3oI,GACA,IAAA4oI,EAAA9mJ,KAAA0lJ,eAmBA,OAlBAoB,EAWA5oI,EAIA4oI,EAAA7rI,YAA0Cqe,GAAiBpb,IAH3D4oI,EAAA7rI,iBAAArI,IAPAk0I,EAAA,IAAoCxsI,EAJpC4D,EAI4Cob,GAAiBpb,GAHlB,IAK3Cle,KAAA0lJ,eAAAoB,EACA9mJ,KAAA4lJ,eAAAp5F,YAAA+iD,WAAAu3C,IAUAA,GAOAzB,EAAAvmJ,UAAA8nJ,8BAAA,SAAAP,GACA,IAAAU,EAAA/mJ,KAAA2lJ,eACAoB,EAM4CA,EAAAzrI,cAC5CuW,eAAAw0H,IANAU,EAAA,IAAgCzsI,EAAO,IAAKgb,GAAK+wH,IACjDrmJ,KAAA2lJ,eAAAoB,EACA/mJ,KAAA8lJ,eAAAt5F,YAAA+iD,WAAAw3C,IAMA,OAAAA,GAKA1B,EAAAvmJ,UAAA6uD,YAAA,SAAAL,GACA,OAAyE,iBAIzEA,EAAAlqD,MAAoC88B,GAAmBG,aAAArgC,KAAAw4D,wBACvDx4D,KAAAmuC,mBAAAmf,GAGAz8C,EAAA/R,UAAA6uD,YAAAtwD,KAAA2C,KAAAstD,IAEA,IAKA+3F,EAAAvmJ,UAAAq5D,gBAAA,SAAA7K,GACA,IAAA5gD,EAAA4gD,EAAA5gD,MACAO,EAAAqgD,EAAArgD,IACAiR,EAAAle,KAAAgoB,YACAq+H,EAAArmJ,KAAAgmJ,cAAAt5I,EAAAO,GAEA+5I,EAAA,SAAA19H,GACA,IAAA29H,EAAA,KACAC,EAAA,KAaA,OAZA59H,EAAA,IAAApL,EAAA,GACA+oI,EAAA/oI,EAAA,GAEAoL,EAAA,IAAApL,EAAA,KACA+oI,EAAA/oI,EAAA,IAEAoL,EAAA,IAAApL,EAAA,GACAgpI,EAAAhpI,EAAA,GAEAoL,EAAA,IAAApL,EAAA,KACAgpI,EAAAhpI,EAAA,IAEA,OAAA+oI,GAAA,OAAAC,EACA,CAAAD,EAAAC,GAEA,MAEA,GAAAb,GAAAnoI,EAAA,CACA,IAAApe,EAAAumJ,EAAA,IAAAnoI,EAAA,IAAAmoI,EAAA,IAAAnoI,EAAA,GAAAmoI,EAAA,QACA7nI,EAAA6nI,EAAA,IAAAnoI,EAAA,IAAAmoI,EAAA,IAAAnoI,EAAA,GAAAmoI,EAAA,QAEA,OAAAvmJ,GAAA,OAAA0e,EACAxe,KAAAslJ,gBAAAP,GAAAiC,EAAAX,IAGA,OAAAvmJ,EACAE,KAAAslJ,gBAAAL,GAAA+B,EAAA,CAAAlnJ,EAAAoe,EAAA,KAAA8oI,EAAA,CAAAlnJ,EAAAoe,EAAA,MAEA,OAAAM,IACAxe,KAAAslJ,gBAAAL,GAAA+B,EAAA,CAAA9oI,EAAA,GAAAM,IAAAwoI,EAAA,CAAA9oI,EAAA,GAAAM,WAKA6nI,EAAAp5I,EAAAmyB,uBAAA1yB,GACA1M,KAAA0oB,UAAA,CAAA29H,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACArmJ,KAAAslJ,gBAAAP,GAAAsB,GAEA,UAKAhB,EAAAvmJ,UAAAs5D,gBAAA,SAAA9K,GACA,GAAAttD,KAAAslJ,gBAAA,CACA,IAAAW,EAAA34F,EAAA1uC,WACA5e,KAAA0oB,UAAA1oB,KAAAslJ,gBAAAW,IACAjmJ,KAAA4mJ,8BAAAX,GAEA,UAKAZ,EAAAvmJ,UAAAw5D,cAAA,SAAAhL,GACAttD,KAAAslJ,gBAAA,KAEA,IAAApnI,EAAAle,KAAAgoB,YAIA,OAHA9J,GAA8B,IAAPiC,GAAOjC,IAC9Ble,KAAA0oB,UAAA,OAEA,GAKA28H,EAAAvmJ,UAAAmrD,OAAA,SAAAh9C,GACAjN,KAAA4lJ,eAAA37F,OAAAh9C,GACAjN,KAAA8lJ,eAAA77F,OAAAh9C,GACA4D,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,IAQAo4I,EAAAvmJ,UAAAkpB,UAAA,WACA,OAAAhoB,KAAAinB,SAQAo+H,EAAAvmJ,UAAA4pB,UAAA,SAAAxK,GAEAle,KAAAinB,QAAA/I,GAAA,KACAle,KAAA6mJ,6BAAA3oI,GACAle,KAAA+U,cAAA,IAAA8vI,GAAA7kJ,KAAAinB,WAEAo+H,EA1SU,CA2SRptF,IChYEkvF,GAAyB,WAC7B,IAAA92I,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA+C7B02I,GAAA,EAIAC,GAMA,cANAA,GAYA,YA8CAC,GAAA,SAAAz2I,GASA,SAAAy2I,EAAAlkJ,EAAAmoD,EAAAg8F,GACA,IAAAv2I,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAaA,OAPAgR,EAAAu6C,WAMAv6C,EAAAs8C,gBAAAi6F,EACAv2I,EAEA,OAxBIm2I,GAASG,EAAAz2I,GAwBby2I,EAzBA,CA0BEjzI,GAi9BF,SAAAmzI,GAAAroJ,EAAAyH,GACA,OAAAzH,EAAAoQ,MAAA3I,EAAA2I,MAWA,SAAAk4I,GAAAC,EAAAC,GACA,IAAA3sI,EAAA2sI,EAAA3sI,SACA,GAAAA,EAAAwV,YAA+BxN,GAAYS,OAAA,CAC3C,IAAA8/C,EAA4E,EAC5E,GAAAokF,EAAAp4I,QAAA63I,GAAA,CACA,IAAAQ,EAA0CrxG,GAAyBgtB,EAAA/iD,YAAAknI,GACnEG,EAAAxoJ,KAAAK,KAAAkoJ,GAAArkF,EAAAxpC,YACA,OAAA8tH,KAGA,OAAWlxG,GAAwB+wG,EAAAC,EAAA1yG,SAWnC,SAAA6yG,GAAAJ,EAAAC,GACA,IAAA3sI,EAAA2sI,EAAA3sI,SACA,OAAAA,EAAAwV,YAA+BxN,GAAYS,QAC3CkkI,EAAAp4I,QAAA63I,GACApsI,EAAA6U,gBAAA63H,GAEW1yG,GAAgB0yG,EAAAC,EAAA1yG,SAWZ,IAAA8yG,GAl/BL,SAAAl3I,GAKV,SAAAm3I,EAAA/uI,GACA,IAu+BAsC,EA/2BAgwC,EAxHAv6C,EAAAH,EAAAxT,KAAA2C,KAAgF,IAAAA,KAkIhF,GA7HAgR,EAAAyoD,WAAAxgD,EAAAygD,UAAAzgD,EAAAygD,UAAmE7B,GAMnE7mD,EAAAi3I,wBAAA,SAAA36F,GACA,OAAmByJ,GAAUzJ,IAAqBiK,GAAWjK,IAM7Dt8C,EAAAk3I,iBAAAjvI,EAAAkvI,gBACAlvI,EAAAkvI,gBAAAn3I,EAAAi3I,wBAKAj3I,EAAAo3I,uBAAAnvI,EAAAovI,sBACApvI,EAAAovI,sBAA4ClxF,GAM5CnmD,EAAA20I,eAAA,KAMA30I,EAAAs3I,gBAAA,KAKAt3I,EAAAu3I,WAAA,MAOAv3I,EAAAw3I,wBAAA,EAKAx3I,EAAAy3I,WAAA,EAMAz3I,EAAA03I,OAAA,IAA2Bv7C,GAK3Bn8F,EAAAu0I,qBAAA3yI,IAAAqG,EAAAusI,eACAvsI,EAAAusI,eAAA,GAKAx0I,EAAAy0I,kBAAA,EAOAz0I,EAAA23I,kBAAA,EAKA33I,EAAA43I,cAAA,GAMA53I,EAAA4xI,SAAA,IAA6BzM,GAAW,CACxC7oI,OAAA,IAAwB4gG,GAAY,CACpCW,iBAAA,EACAhL,QAAA5qF,EAAA4qF,QAEAtoF,MAAAtC,EAAAsC,MAAAtC,EAAAsC,OAy4BAA,EAAgBi6E,KAChB,SAAAhqC,EAAA3qC,GACA,OAAAtF,EAAqByH,GAAYC,SAz4BjC+tH,sBAAA,EACAE,wBAAA,IAOAlgI,EAAA63I,iBAAA,CACAtzH,MAAAvkB,EAAA83I,oBACAlyB,WAAA5lH,EAAA+3I,yBACA7zH,WAAAlkB,EAAA+3I,yBACA9wH,QAAAjnB,EAAAg4I,sBACA7wB,WAAAnnH,EAAAi4I,yBACA3xB,gBAAAtmH,EAAAk4I,8BACAzwB,aAAAznH,EAAAm4I,2BACAvkB,OAAA5zH,EAAAo4I,qBACAv0B,mBAAA7jH,EAAAq4I,kCAMAr4I,EAAAuuI,QAAA,KAEAtmI,EAAA3L,QACA0D,EAAAuuI,QAAAtmI,EAAA3L,OACAi+C,EAAA,IAA2B1yC,EAAU7H,EAAAuuI,QAAAzuC,eACzB39F,EAAMnC,EAAAuuI,QAAgBxyC,GAAeC,WAAAh8F,EAAAs4I,iBAAAt4I,GACrCmC,EAAMnC,EAAAuuI,QAAgBxyC,GAAeG,cAAAl8F,EAAAu4I,oBAAAv4I,IAGjDu6C,EAAAtyC,EAAAsyC,UAEAA,EACA,UAAA1kD,MAAA,wDAeA,OATAmK,EAAA+9G,UAAAxjE,EACAv6C,EAAA+9G,UAAAt1G,QAAAzI,EAAAw4I,YAAA9qJ,KAAAsS,IACQmC,EAAMnC,EAAA+9G,UAAkB59G,EAAmBC,IAAAJ,EAAAy4I,kBAAAz4I,GAC3CmC,EAAMnC,EAAA+9G,UAAkB59G,EAAmBE,OAAAL,EAAA04I,qBAAA14I,GAKnDA,EAAA24I,kBAAA,KACA34I,EAiyBA,OAx7BIm2I,GAASa,EAAAn3I,GA6Jbm3I,EAAAlpJ,UAAA0qJ,YAAA,SAAAh+F,GACA,IAAAxwC,EAAAwwC,EAAAlwC,cACAN,KAAAwV,YAAAxwB,KAAA6oJ,kBACA7oJ,KAAA6oJ,iBAAA7tI,EAAAwV,WAAAnzB,KAAA2C,KAAAwrD,EAAAxwC,GAEA,IAAA/N,EAAAjN,KAAAqwD,SACApjD,KAAAwhD,cAAAzuD,KAAA0tD,aACA1tD,KAAA4pJ,sBAAA5pJ,KAAAuoJ,WAAAt7I,GAEQkG,EAAMq4C,EAAUp2C,EAASC,OAAArV,KAAA4vG,qBAAA5vG,OAMjCgoJ,EAAAlpJ,UAAA+qJ,oBAAA,SAAAv2I,GACAtT,KAAAyoJ,YACAzoJ,KAAAyoJ,WAAA,EACAzoJ,KAAA+U,cAAA,IAAAuyI,GAAAD,GAAArnJ,KAAA+uH,UAAAz7G,MAOA00I,EAAAlpJ,UAAAgrJ,eAAA,SAAAt+F,GACAxrD,KAAA+pJ,0BAAAv+F,GAGAxrD,KAAA2lJ,gBAAA,IAAA3lJ,KAAA+uH,UAAAx1G,cACAvZ,KAAA4iJ,SAAAp2F,YAAA4jD,cAAApwG,KAAA2lJ,gBACA3lJ,KAAA2lJ,eAAA,MAEQjyI,EAAQ83C,EAAUp2C,EAASC,OAAArV,KAAA4vG,qBAAA5vG,OAMnCgoJ,EAAAlpJ,UAAAirJ,0BAAA,SAAAv+F,GACA,IAAAw+F,EAAAhqJ,KAAA0oJ,OAC0CuB,EAAA,GAC1CD,EAAAvwI,QAIA,SAAAipC,GACA8I,IAAA9I,EAAA8I,SACAy+F,EAAAnpJ,KAAA4hD,KAGA,QAAAxlD,EAAA+sJ,EAAAlqJ,OAAA,EAA8C7C,GAAA,IAAQA,EAAA,CAEtD,IADA,IAAAgtJ,EAAAD,EAAA/sJ,GACAsP,EAAAxM,KAAA4oJ,cAAA7oJ,OAAA,EAAuDyM,GAAA,IAAQA,EAC/DxM,KAAA4oJ,cAAAp8I,GAAA,KAAA09I,GACAlqJ,KAAA4oJ,cAAAhnJ,OAAA4K,EAAA,GAGAw9I,EAAAroJ,OAAAuoJ,KAMAlC,EAAAlpJ,UAAA03D,UAAA,SAAAC,GACAz2D,KAAA2lJ,iBAAAlvF,IACAz2D,KAAA4iJ,SAAAp2F,YAAA4jD,cAAApwG,KAAA2lJ,gBACA3lJ,KAAA2lJ,eAAA,MAEA90I,EAAA/R,UAAA03D,UAAAn5D,KAAA2C,KAAAy2D,IAKAuxF,EAAAlpJ,UAAAmrD,OAAA,SAAAh9C,GACAjN,KAAA4iJ,SAAA34F,OAAAh9C,GACA4D,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,IAOA+6I,EAAAlpJ,UAAAmkJ,WAAA,WACA,OAAAjjJ,KAAA4iJ,UAMAoF,EAAAlpJ,UAAAwqJ,iBAAA,SAAA95I,GACAA,EAAAg8C,SACAxrD,KAAA+uH,UAAAjuH,KAAA0O,EAAAg8C,UAOAw8F,EAAAlpJ,UAAAyqJ,oBAAA,SAAA/5I,GACAA,EAAAg8C,SACAxrD,KAAA+uH,UAAAptH,OAAA6N,EAAAg8C,UAOAw8F,EAAAlpJ,UAAA2qJ,kBAAA,SAAAn2I,GACAtT,KAAAwpJ,YAA4Cl2I,EAAA,UAM5C00I,EAAAlpJ,UAAA8wG,qBAAA,SAAAt8F,GACA,IAAAtT,KAAA2oJ,iBAAA,CACA,IAAAn9F,EAA6Cl4C,EAAA,OAC7CtT,KAAA8pJ,eAAAt+F,GACAxrD,KAAAwpJ,YAAAh+F,KAOAw8F,EAAAlpJ,UAAA4qJ,qBAAA,SAAAp2I,GACA,IAAAk4C,EAAyCl4C,EAAA,QACzCtT,KAAA8pJ,eAAAt+F,IAOAw8F,EAAAlpJ,UAAAgqJ,oBAAA,SAAAt9F,EAAAxwC,GACA,IAAAiD,EAAAjD,EAAAoW,iBACAu2H,EAAiD,CACjDn8F,UACAxwC,WACAi6B,QAAA,CAAAh3B,MAEAje,KAAA0oJ,OAAApnJ,OAAA0Z,EAAAgN,YAAA2/H,IAOAK,EAAAlpJ,UAAAmqJ,yBAAA,SAAAz9F,EAAAxwC,GAEA,IADA,IAAAwzE,EAAAxzE,EAAAoW,iBACAl0B,EAAA,EAAA0U,EAAA48E,EAAAzuF,OAA2C7C,EAAA0U,IAAQ1U,EAAA,CACnD,IAAA+gB,EAAAuwE,EAAAtxF,GACAyqJ,EAAqD,CACrDn8F,UACAxwC,WACAmvI,MAAA,CAAAjtJ,GACAqS,MAAArS,EACA+3C,QAAA,CAAAh3B,MAEAje,KAAA0oJ,OAAApnJ,OAAA0Z,EAAAgN,YAAA2/H,KAQAK,EAAAlpJ,UAAAiqJ,yBAAA,SAAAv9F,EAAAxwC,GAEA,IADA,IAAAiD,EAAAjD,EAAAoW,iBACAl0B,EAAA,EAAA0U,EAAAqM,EAAAle,OAAA,EAAoD7C,EAAA0U,IAAQ1U,EAAA,CAC5D,IAAA+3C,EAAAh3B,EAAAzc,MAAAtE,IAAA,GACAyqJ,EAAqD,CACrDn8F,UACAxwC,WACAzL,MAAArS,EACA+3C,WAEAj1C,KAAA0oJ,OAAApnJ,OAA+B0c,GAAci3B,GAAA0yG,KAQ7CK,EAAAlpJ,UAAAoqJ,8BAAA,SAAA19F,EAAAxwC,GAEA,IADA,IAAAlO,EAAAkO,EAAAoW,iBACA5kB,EAAA,EAAA8C,EAAAxC,EAAA/M,OAA0CyM,EAAA8C,IAAQ9C,EAElD,IADA,IAAAyR,EAAAnR,EAAAN,GACAtP,EAAA,EAAA0U,EAAAqM,EAAAle,OAAA,EAAwD7C,EAAA0U,IAAQ1U,EAAA,CAChE,IAAA+3C,EAAAh3B,EAAAzc,MAAAtE,IAAA,GACAyqJ,EAAyD,CACzDn8F,UACAxwC,WACAmvI,MAAA,CAAA39I,GACA+C,MAAArS,EACA+3C,WAEAj1C,KAAA0oJ,OAAApnJ,OAAmC0c,GAAci3B,GAAA0yG,KASjDK,EAAAlpJ,UAAAkqJ,sBAAA,SAAAx9F,EAAAxwC,GAEA,IADA,IAAAovI,EAAApvI,EAAAoW,iBACA5kB,EAAA,EAAA8C,EAAA86I,EAAArqJ,OAA0CyM,EAAA8C,IAAQ9C,EAElD,IADA,IAAAyR,EAAAmsI,EAAA59I,GACAtP,EAAA,EAAA0U,EAAAqM,EAAAle,OAAA,EAAwD7C,EAAA0U,IAAQ1U,EAAA,CAChE,IAAA+3C,EAAAh3B,EAAAzc,MAAAtE,IAAA,GACAyqJ,EAAyD,CACzDn8F,UACAxwC,WACAmvI,MAAA,CAAA39I,GACA+C,MAAArS,EACA+3C,WAEAj1C,KAAA0oJ,OAAApnJ,OAAmC0c,GAAci3B,GAAA0yG,KASjDK,EAAAlpJ,UAAAqqJ,2BAAA,SAAA39F,EAAAxwC,GAEA,IADA,IAAA89G,EAAA99G,EAAAoW,iBACAjN,EAAA,EAAAkmI,EAAAvxB,EAAA/4H,OAA6CokB,EAAAkmI,IAAQlmI,EAErD,IADA,IAAAimI,EAAAtxB,EAAA30G,GACA3X,EAAA,EAAA8C,EAAA86I,EAAArqJ,OAA8CyM,EAAA8C,IAAQ9C,EAEtD,IADA,IAAAyR,EAAAmsI,EAAA59I,GACAtP,EAAA,EAAA0U,EAAAqM,EAAAle,OAAA,EAA4D7C,EAAA0U,IAAQ1U,EAAA,CACpE,IAAA+3C,EAAAh3B,EAAAzc,MAAAtE,IAAA,GACAyqJ,EAA6D,CAC7Dn8F,UACAxwC,WACAmvI,MAAA,CAAA39I,EAAA2X,GACA5U,MAAArS,EACA+3C,WAEAj1C,KAAA0oJ,OAAApnJ,OAAuC0c,GAAci3B,GAAA0yG,KAgBrDK,EAAAlpJ,UAAAsqJ,qBAAA,SAAA59F,EAAAxwC,GACA,IAAAiD,EAAAjD,EAAAwF,YACA8pI,EAAuD,CACvD9+F,UACAxwC,WACAzL,MAvhBA,EAwhBA0lC,QAAA,CAAAh3B,MAEAssI,EAA8D,CAC9D/+F,UACAxwC,WACAzL,MAAA63I,GACAnyG,QAAA,CAAAh3B,MAEAusI,EAAA,CAAAF,EAAAC,GACAD,EAAAE,gBAAAD,EAAAC,kBACAxqJ,KAAA0oJ,OAAApnJ,OAA2B+d,GAA4BpB,GAAAqsI,GACvDtqJ,KAAA0oJ,OAAApnJ,OAAA0Z,EAAAgN,YAAAuiI,IAOAvC,EAAAlpJ,UAAAuqJ,iCAAA,SAAA79F,EAAAxwC,GAEA,IADA,IAAAiyD,EAAAjyD,EAAAkyD,qBACAhwE,EAAA,EAAuBA,EAAA+vE,EAAAltE,SAAuB7C,EAC9C8C,KAAA6oJ,iBAAA57E,EAAA/vE,GAAAszB,WAAAnzB,KAAA2C,KAAAwrD,EAAAyhB,EAAA/vE,KAQA8qJ,EAAAlpJ,UAAA2rJ,6BAAA,SAAAxsI,GACA,IAAA8oI,EAAA/mJ,KAAA2lJ,eACAoB,EAM4CA,EAAAzrI,cAC5CuW,eAAA5T,IANA8oI,EAAA,IAAgCzsI,EAAO,IAAKgb,GAAKrX,IACjDje,KAAA2lJ,eAAAoB,EACA/mJ,KAAA4iJ,SAAAp2F,YAAA+iD,WAAAw3C,IAMA,OAAAA,GAMAiB,EAAAlpJ,UAAA6uD,YAAA,SAAAL,GACA,OAAyE,iBAGzEttD,KAAA2pJ,kBAAAr8F,EAEAA,EAAArgD,IAAA6/C,UAAA1Q,kBACAkR,EAAAlqD,MAAoC88B,GAAmBG,aACvDrgC,KAAAw4D,wBACAx4D,KAAAmuC,mBAAAmf,GAEAttD,KAAA2lJ,gBAAA3lJ,KAAAkoJ,iBAAA56F,KAKAuL,IAJAvL,EAAAlqD,MAAwC88B,GAAmBC,cAAAngC,KAAAwoJ,yBAC3DxoJ,KAAA0qJ,eAMAp9F,EAAAlqD,MAAoC88B,GAAmBC,cACvDngC,KAAAwoJ,wBAAA,GAEA33I,EAAA/R,UAAA6uD,YAAAtwD,KAAA2C,KAAAstD,KAAAuL,GAjBA,IAAAA,GAsBAmvF,EAAAlpJ,UAAAs5D,gBAAA,SAAA9kD,GACAtT,KAAAwoJ,wBAAA,EACAxoJ,KAAA6pJ,oBAAAv2I,GAEA,IADA,IAAA+yI,EAAA/yI,EAAAsL,WACA1hB,EAAA,EAAA0U,EAAA5R,KAAA4oJ,cAAA7oJ,OAAuD7C,EAAA0U,IAAQ1U,EAAA,CAQ/D,IAPA,IAAAytJ,EAAA3qJ,KAAA4oJ,cAAA1rJ,GACAyqJ,EAAAgD,EAAA,GACAR,EAAAxC,EAAAwC,MACAnvI,EAAA2sI,EAAA3sI,SACAiD,OAAA,EACAg3B,EAAA0yG,EAAA1yG,QACA1lC,EAAAo7I,EAAA,GACAtE,EAAAtmJ,OAAAib,EAAA2W,aACA00H,EAAAvlJ,KAAAm0C,EAAA1lC,GAAA82I,EAAAtmJ,SAEA,OAAAib,EAAAwV,WACA,KAAqBxN,GAAYC,MACjChF,EAAAooI,EACApxG,EAAA,GAAAA,EAAA,GAAAoxG,EACA,MACA,KAAqBrjI,GAAYK,aACjCpF,EAAAjD,EAAAoW,kBACAu2H,EAAAp4I,OAAA82I,EACApxG,EAAA,GAAAA,EAAA,GAAAoxG,EACA,MACA,KAAqBrjI,GAAYE,aACjCjF,EAAAjD,EAAAoW,kBACAu2H,EAAAp4I,SAAA82I,EACApxG,EAAA1lC,GAAA82I,EACA,MACA,KAAqBrjI,GAAYM,kBAKjC,KAAqBN,GAAYI,SACjCnF,EAAAjD,EAAAoW,kBACA+4H,EAAA,IAAAxC,EAAAp4I,SAAA82I,EACApxG,EAAA1lC,GAAA82I,EACA,MACA,KAAqBrjI,GAAYO,eACjCtF,EAAAjD,EAAAoW,kBACA+4H,EAAA,IAAAA,EAAA,IAAAxC,EAAAp4I,SAAA82I,EACApxG,EAAA1lC,GAAA82I,EACA,MACA,KAAqBrjI,GAAYS,OACjCwxB,EAAA,GAAAA,EAAA,GAAAoxG,EA/oBA,IAgpBAsB,EAAAp4I,OACAvP,KAAA2oJ,kBAAA,EACA3tI,EAAA6/B,UAAAwrG,GACArmJ,KAAA2oJ,kBAAA,IAGA3oJ,KAAA2oJ,kBAAA,EACA3tI,EAAA60E,UAA2Cn5C,GAAkB17B,EAAAwF,YAAA6lI,IAC7DrmJ,KAAA2oJ,kBAAA,GAMA1qI,GACAje,KAAA4qJ,wBAAA5vI,EAAAiD,GAGAje,KAAAyqJ,6BAAApE,IAKA2B,EAAAlpJ,UAAAq5D,gBAAA,SAAA7kD,GACA,IAAAtT,KAAAy5D,WAAAnmD,GACA,SAEAtT,KAAA4pJ,sBAAAt2I,EAAA5G,MAAA4G,EAAArG,KACA,IAAAg5I,EAAA3yI,EAAArG,IAAAmyB,uBAAA9rB,EAAA5G,OACA1M,KAAA4oJ,cAAA7oJ,OAAA,EACAC,KAAAyoJ,WAAA,EACA,IAAA1B,EAAA/mJ,KAAA2lJ,eACA,GAAAoB,EAAA,CACA,IAAA8D,EAAA,GAEAxE,EAD4CU,EAAAzrI,cAC5C8V,iBACA05H,EAA+B9sI,GAAc,CAAAqoI,IAC7C0E,EAAA/qJ,KAAA0oJ,OAAA/6C,YAAAm9C,GACAE,EAAA,GACAD,EAAAnoJ,KAAA4kJ,IACA,QAAAtqJ,EAAA,EAAA0U,EAAAm5I,EAAAhrJ,OAA2D7C,EAAA0U,IAAQ1U,EAAA,CACnE,IAAA+tJ,EAAAF,EAAA7tJ,GACA+3C,EAAAg2G,EAAAh2G,QACAiyD,EAA0B/2F,EAAM86I,EAAAz/F,SAChC2+F,EAAAc,EAAAd,MAOA,GANAA,IACAjjD,GAAA,IAAAijD,EAAAn7H,KAAA,MAEAg8H,EAAA9jD,KACA8jD,EAAA9jD,GAAA,IAAA96F,MAAA,IAEA6+I,EAAAjwI,SAAAwV,YAA4DxN,GAAYS,QACxEwnI,EAAA17I,QAAA63I,GAEwBpxG,GADxB8xG,GAAA7B,EAAAgF,GACwC5E,KAAA2E,EAAA9jD,GAAA,KACxClnG,KAAA4oJ,cAAA9nJ,KAAA,CAAAmqJ,EAAA,IACAD,EAAA9jD,GAAA,GAAA+jD,QAGA,GAAyBj1G,GAAgBf,EAAA,GAAAoxG,KACzC2E,EAAA9jD,GAAA,GACAlnG,KAAA4oJ,cAAA9nJ,KAAA,CAAAmqJ,EAAA,IACAD,EAAA9jD,GAAA,GAAA+jD,OAEA,GAAyBj1G,GAAgBf,EAAA,GAAAoxG,KACzC2E,EAAA9jD,GAAA,IAEA,IAAA+jD,EAAAjwI,SAAAwV,YACwBxN,GAAYE,aACpC+nI,EAAAjwI,SAAAwV,YAC4BxN,GAAYM,oBACxC0nI,EAAA9jD,GAAA,IACA,IAAA8jD,EAAA9jD,GAAA,GAAA33F,MACA,SAEAvP,KAAA4oJ,cAAA9nJ,KAAA,CAAAmqJ,EAAA,IACAD,EAAA9jD,GAAA,GAAA+jD,OAEyB96I,EAAM8kC,KAAAj1C,KAAAsoJ,kBAC/B0C,EAAA9jD,GAAA,KAAA8jD,EAAA9jD,GAAA,IACAlnG,KAAAooJ,uBAAA90I,IACAu3I,EAAA/pJ,KAAA,CAAAmqJ,EAAA5E,IAGAwE,EAAA9qJ,QACAC,KAAA6pJ,oBAAAv2I,GAEA,QAAA9G,EAAAq+I,EAAA9qJ,OAAA,EAAmDyM,GAAA,IAAQA,EAC3DxM,KAAAkrJ,cAAAhpJ,MAAAlC,KAAA6qJ,EAAAr+I,IAGA,QAAAxM,KAAA2lJ,gBAKAqC,EAAAlpJ,UAAAw5D,cAAA,SAAAhlD,GACA,QAAApW,EAAA8C,KAAA4oJ,cAAA7oJ,OAAA,EAAmD7C,GAAA,IAAQA,EAAA,CAC3D,IAAAyqJ,EAAA3nJ,KAAA4oJ,cAAA1rJ,GAAA,GACA8d,EAAA2sI,EAAA3sI,SACA,GAAAA,EAAAwV,YAAuCxN,GAAYS,OAAA,CAEnD,IAAAxF,EAAAjD,EAAAwF,YACA8pI,EAAA3C,EAAA6C,gBAAA,GACAD,EAAA5C,EAAA6C,gBAAA,GACAF,EAAAr1G,QAAA,GAAAq1G,EAAAr1G,QAAA,GAAAh3B,EACAssI,EAAAt1G,QAAA,GAAAs1G,EAAAt1G,QAAA,GAAAh3B,EACAje,KAAA0oJ,OAAAzqH,OAAmC5e,GAA4BpB,GAAAqsI,GAC/DtqJ,KAAA0oJ,OAAAzqH,OAAAjjB,EAAAgN,YAAAuiI,QAGAvqJ,KAAA0oJ,OAAAzqH,OAAmCjgB,GAAc2pI,EAAA1yG,SAAA0yG,GAOjD,OAJA3nJ,KAAAyoJ,YACAzoJ,KAAA+U,cAAA,IAAAuyI,GAAAD,GAAArnJ,KAAA+uH,UAAAz7G,IACAtT,KAAAyoJ,WAAA,IAEA,GAMAT,EAAAlpJ,UAAAqvC,mBAAA,SAAA76B,GACAtT,KAAAuoJ,WAAAj1I,EAAA5G,MACA1M,KAAA4pJ,sBAAAt2I,EAAA5G,MAAA4G,EAAArG,MAOA+6I,EAAAlpJ,UAAA8qJ,sBAAA,SAAAl9I,EAAAO,GACA,IAAAg5I,EAAAh5I,EAAAmyB,uBAAA1yB,GAKAqqE,EAAkB14D,GAAOgB,GAA4B4mI,GAAAh5I,EAAA6/C,UAAAzR,gBAAAr7C,KAAAulJ,iBAErD4F,EADAnrJ,KAAA0oJ,OACA/6C,YAAA52B,GACA,GAAAo0E,EAAAprJ,OAAA,GACAorJ,EAAAvoJ,KARA,SAAAzD,EAAAyH,GACA,OAAA6gJ,GAAAxB,EAAA9mJ,GACAsoJ,GAAAxB,EAAAr/I,KAOA,IAAA87C,EAAAyoG,EAAA,GACA/E,EAAA1jG,EAAAzN,QACAoxG,EAAAyB,GAAA7B,EAAAvjG,GACA4jG,EAAAr5I,EAAAy/C,uBAAA25F,GACAM,EAAuBjwG,GAAkBhqC,EAAA45I,GACzC,GAAAK,GAAA3mJ,KAAAulJ,gBAAA,CAEA,IAAA6F,EAAA,GACA,GAAA1oG,EAAA1nC,SAAAwV,YAAgDxN,GAAYS,QAC5Di/B,EAAAnzC,QAAA63I,GACApnJ,KAAAylJ,kBAAA,EACAzlJ,KAAAyqJ,6BAAApE,OAEA,CACA,IAAAE,EAAAt5I,EAAAy/C,uBAAA05F,EAAA,IACAI,EAAAv5I,EAAAy/C,uBAAA05F,EAAA,IACAK,EAAuClwG,GAAyB+vG,EAAAC,GAChEG,EAAuCnwG,GAAyB+vG,EAAAE,GAChEG,EAAAtnJ,KAAAK,KAAAL,KAAAQ,IAAA4mJ,EAAAC,IACA1mJ,KAAAylJ,iBAAAkB,GAAA3mJ,KAAAulJ,gBACAvlJ,KAAAylJ,mBACAY,EAAAI,EAAAC,EAAAN,EAAA,GAAAA,EAAA,IAEApmJ,KAAAyqJ,6BAAApE,GACA,QAAAnpJ,EAAA,EAAA0U,EAAAu5I,EAAAprJ,OAAsD7C,EAAA0U,IAAQ1U,EAAA,CAC9D,IAAA+3C,EAAAk2G,EAAAjuJ,GAAA+3C,QACA,KAA6Be,GAAgBowG,EAAA,GAAAnxG,EAAA,KACjBe,GAAgBowG,EAAA,GAAAnxG,EAAA,KACfe,GAAgBowG,EAAA,GAAAnxG,EAAA,KACbe,GAAgBowG,EAAA,GAAAnxG,EAAA,KAIhD,MAHAm2G,EAA2Cj7I,EAAM8kC,KAAA,GASjD,OAFAm2G,EAA+Bj7I,EAAMi2I,KAAA,OACrCpmJ,KAAAsoJ,gBAAA8C,IAIAprJ,KAAA2lJ,iBACA3lJ,KAAA4iJ,SAAAp2F,YAAA4jD,cAAApwG,KAAA2lJ,gBACA3lJ,KAAA2lJ,eAAA,OAQAqC,EAAAlpJ,UAAAosJ,cAAA,SAAAvD,EAAAtB,GAOA,IANA,IAKApoI,EALAg3B,EAAA0yG,EAAA1yG,QACAuW,EAAAm8F,EAAAn8F,QACAxwC,EAAA2sI,EAAA3sI,SACAmvI,EAAAxC,EAAAwC,MACA56I,EAAsCo4I,EAAA,MAEtCtB,EAAAtmJ,OAAAib,EAAA2W,aACA00H,EAAAvlJ,KAAA,GAEA,OAAAka,EAAAwV,WACA,KAAiBxN,GAAYM,kBAI7B,KAAiBN,GAAYI,SAC7BnF,EAAAjD,EAAAoW,kBACA+4H,EAAA,IAAAvoJ,OAAA2N,EAAA,IAAA82I,GACA,MACA,KAAiBrjI,GAAYO,eAC7BtF,EAAAjD,EAAAoW,kBACA+4H,EAAA,IAAAA,EAAA,IAAAvoJ,OAAA2N,EAAA,IAAA82I,GACA,MACA,KAAiBrjI,GAAYE,aAC7BjF,EAAAjD,EAAAoW,kBACAxvB,OAAA2N,EAAA,IAAA82I,GACA,MACA,QACA,OAEArmJ,KAAA4qJ,wBAAA5vI,EAAAiD,GACA,IAAAotI,EAAArrJ,KAAA0oJ,OACA2C,EAAA1pJ,OAAAgmJ,GACA3nJ,KAAAsrJ,sBAAAtwI,EAAAzL,EAAA46I,EAAA,GACA,IAAAoB,EAAoD,CACpDt2G,QAAA,CAAAA,EAAA,GAAAoxG,GACA76F,UACAxwC,WACAmvI,QACA56I,SAEA87I,EAAA/pJ,OAAqB0c,GAAcutI,EAAAt2G,SAAAs2G,GACnCvrJ,KAAA4oJ,cAAA9nJ,KAAA,CAAAyqJ,EAAA,IACA,IAAAC,EAAqD,CACrDv2G,QAAA,CAAAoxG,EAAApxG,EAAA,IACAuW,UACAxwC,WACAmvI,QACA56I,QAAA,GAEA87I,EAAA/pJ,OAAqB0c,GAAcwtI,EAAAv2G,SAAAu2G,GACnCxrJ,KAAA4oJ,cAAA9nJ,KAAA,CAAA0qJ,EAAA,IACAxrJ,KAAAwoJ,wBAAA,GAOAR,EAAAlpJ,UAAA4rJ,YAAA,WACA,GAAA1qJ,KAAA2pJ,mBAAA3pJ,KAAA2pJ,kBAAAvmJ,MAAqE88B,GAAmBE,YAAA,CACxF,IAAA9sB,EAAAtT,KAAA2pJ,kBACA3pJ,KAAA6pJ,oBAAAv2I,GACA,IAAA8+F,EAAApyG,KAAAyrJ,gBAGA,OAFAzrJ,KAAA+U,cAAA,IAAAuyI,GAAAD,GAAArnJ,KAAA+uH,UAAAz7G,IACAtT,KAAAyoJ,WAAA,EACAr2C,EAEA,UAOA41C,EAAAlpJ,UAAA2sJ,cAAA,WACA,IAGAC,EAAAztI,EAAA0sI,EAAA3vI,EAAA9d,EAAAqS,EAAAy8C,EACA2/F,EAAAh0H,EAAAgwH,EAAAzgD,EAJA0kD,EAAA5rJ,KAAA4oJ,cACAiD,EAAA,GACAC,GAAA,EAGA,IAAA5uJ,EAAA0uJ,EAAA7rJ,OAAA,EAAyC7C,GAAA,IAAQA,EAGjDgqG,EAAkB/2F,GADlBw3I,GADAgD,EAAAiB,EAAA1uJ,IACA,IACwBsuD,SACxBm8F,EAAAwC,QAEAjjD,GAAA,IAAAygD,EAAAwC,MAAAn7H,KAAA,MAEAk4E,KAAA2kD,IACAA,EAAA3kD,GAAA,IAEA,IAAAyjD,EAAA,IACAkB,EAAA3kD,GAAAvvE,MAAAgwH,EACAkE,EAAA3kD,GAAA33F,MAAAo4I,EAAAp4I,OAEA,GAAAo7I,EAAA,KACAkB,EAAA3kD,GAAAl7C,KAAA27F,EACAkE,EAAA3kD,GAAA33F,MAAAo4I,EAAAp4I,MAAA,GAGA,IAAA23F,KAAA2kD,EAAA,CAkBA,OAjBAl0H,EAAAk0H,EAAA3kD,GAAAvvE,MACAq0B,EAAA6/F,EAAA3kD,GAAAl7C,MAEA2/F,GADAp8I,EAAAs8I,EAAA3kD,GAAA33F,OACA,GAOA,IACAo8I,EAAA,GAIAD,EADAztI,GADAjD,GARA2sI,OADA/0I,IAAAo5C,EACAA,EAGAr0B,GAKA3c,UACAoW,iBAEA06H,GAAA,EACA9wI,EAAAwV,WACA,KAAqBxN,GAAYM,kBACjCrF,EAAA0pI,EAAAwC,MAAA,IAAApqJ,OAAA,IACAke,EAAA0pI,EAAAwC,MAAA,IAAAvoJ,OAAA2N,EAAA,GACAu8I,GAAA,GAEA,MACA,KAAqB9oI,GAAYE,YACjCjF,EAAAle,OAAA,IACAke,EAAArc,OAAA2N,EAAA,GACAu8I,GAAA,GAEA,MACA,KAAqB9oI,GAAYO,cACjCmoI,IAAA/D,EAAAwC,MAAA,IAEA,KAAqBnnI,GAAYI,SACjCsoI,IAAA/D,EAAAwC,MAAA,KACApqJ,OAAA,IACAwP,GAAAm8I,EAAA3rJ,OAAA,IACAwP,EAAA,GAEAm8I,EAAA9pJ,OAAA2N,EAAA,GACAu8I,GAAA,EACA,IAAAv8I,IAEAm8I,EAAA7qJ,MACA6qJ,EAAA5qJ,KAAA4qJ,EAAA,IACAC,EAAAD,EAAA3rJ,OAAA,IAOA,GAAA+rJ,EAAA,CACA9rJ,KAAA4qJ,wBAAA5vI,EAAAiD,GACA,IAAAioI,EAAA,GASA,QARAtzI,IAAAo5C,IACAhsD,KAAA0oJ,OAAA/mJ,OAAAqqD,GACAk6F,EAAAplJ,KAAAkrD,EAAA/W,QAAA,UAEAriC,IAAA+kB,IACA33B,KAAA0oJ,OAAA/mJ,OAAAg2B,GACAuuH,EAAAplJ,KAAA62B,EAAAsd,QAAA,UAEAriC,IAAAo5C,QAAAp5C,IAAA+kB,EAAA,CACA,IAAA4zH,EAAgE,CAChEpB,MAAAxC,EAAAwC,MACA3+F,QAAAm8F,EAAAn8F,QACAxwC,SAAA2sI,EAAA3sI,SACAzL,MAAAo8I,EACA12G,QAAAixG,GAEAlmJ,KAAA0oJ,OAAApnJ,OAAuC0c,GAAcutI,EAAAt2G,SAAAs2G,GAErDvrJ,KAAAsrJ,sBAAAtwI,EAAAzL,EAAAo4I,EAAAwC,OAAA,GACAnqJ,KAAA2lJ,iBACA3lJ,KAAA4iJ,SAAAp2F,YAAA4jD,cAAApwG,KAAA2lJ,gBACA3lJ,KAAA2lJ,eAAA,MAEAiG,EAAA7rJ,OAAA,GAGA,OAAA+rJ,GAOA9D,EAAAlpJ,UAAA8rJ,wBAAA,SAAA5vI,EAAAiD,GACAje,KAAA2oJ,kBAAA,EACA3tI,EAAA6W,eAAA5T,GACAje,KAAA2oJ,kBAAA,GASAX,EAAAlpJ,UAAAwsJ,sBAAA,SAAAtwI,EAAAzL,EAAA46I,EAAAp1G,GACA/0C,KAAA0oJ,OAAA76C,gBAAA7yF,EAAAgN,YAAA,SAAAijI,GACAA,EAAAjwI,oBACApI,IAAAu3I,QAAAv3I,IAAAq4I,EAAAd,OACoBvtI,GAAMquI,EAAAd,WAC1Bc,EAAA17I,UACA07I,EAAA17I,OAAAwlC,MAIAizG,EAz7BU,CA07BR/vF,ICllCE8zF,GAAyB,WAC7B,IAAA17I,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgC7Bs7I,GAAA,CAMAC,OAAA,UAqEAC,GAAA,SAAAr7I,GASA,SAAAq7I,EAAA9oJ,EAAA+oJ,EAAAC,EAAA9+F,GACA,IAAAt8C,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAmBA,OAbAgR,EAAAm7I,WAMAn7I,EAAAo7I,aAMAp7I,EAAAs8C,kBACAt8C,EAEA,OA9BI+6I,GAASG,EAAAr7I,GA8Bbq7I,EA/BA,CAgCE73I,GA2NF,SAASg4I,GAAW/+F,GACpB,IAAAttD,KAAAy5D,WAAAnM,GACA,SAEA,IAAAkH,EAAAx0D,KAAAssJ,cAAAh/F,GACA3rD,EAAA3B,KAAAusJ,iBAAAj/F,GACA0G,EAAAh0D,KAAAwsJ,iBAAAl/F,GACA3kD,GAAA6rD,IAAA7yD,IAAAqyD,EACA/mD,EAAAqgD,EAAArgD,IACAs+C,EAAAvrD,KAAA8wG,cACAs7C,EAAA,GACAD,EAAA,GACA,GAAAxjJ,EAAA,CAIQvI,EAAKJ,KAAAysJ,0BACbx/I,EAAAi+C,sBAAAoC,EAAA5gD,MAAA,SAMA8+C,EAAAvH,GACA,GAAAjkD,KAAA0sJ,QAAAlhG,EAAAvH,GAGA,OAFAkoG,EAAArrJ,KAAA0qD,GACAxrD,KAAA2sJ,4BAAAnhG,EAAAvH,IACAjkD,KAAA4sJ,QAESluJ,KAAAsB,MAAA,CACTorD,YAAAprD,KAAA6sJ,aACA1hG,aAAAnrD,KAAA8sJ,gBAEA,QAAA5vJ,EAAAquD,EAAAhyC,YAAA,EAA8Crc,GAAA,IAAQA,EAAA,CACtD,IAAAsuD,EAAAD,EAAA5xC,KAAAzc,GACAqS,EAAA48I,EAAA9rJ,QAAAmrD,GACAj8C,GAAA,EAEA48I,EAAAvqJ,OAAA2N,EAAA,IAGAg8C,EAAA5pD,OAAA6pD,GACA4gG,EAAAtrJ,KAAA0qD,IAGA,IAAA2gG,EAAApsJ,QACAwrD,EAAA/xC,OAAA2yI,OAGA,CAEAl/I,EAAAi+C,sBAAAoC,EAAA5gD,MAAA,SAMA8+C,EAAAvH,GACA,GAAAjkD,KAAA0sJ,QAAAlhG,EAAAvH,GASA,OARAuQ,IAAAR,GAAwC73C,EAAQovC,EAAA7xC,WAAA8xC,IAIhD7pD,GAAAqyD,IAA+C73C,EAAQovC,EAAA7xC,WAAA8xC,KACvD4gG,EAAAtrJ,KAAA0qD,GACAxrD,KAAA+sJ,+BAAAvhG,KALA2gG,EAAArrJ,KAAA0qD,GACAxrD,KAAA2sJ,4BAAAnhG,EAAAvH,KAMAjkD,KAAA4sJ,QAESluJ,KAAAsB,MAAA,CACTorD,YAAAprD,KAAA6sJ,aACA1hG,aAAAnrD,KAAA8sJ,gBAEA,QAAAtgJ,EAAA4/I,EAAArsJ,OAAA,EAA2CyM,GAAA,IAAQA,EACnD++C,EAAA5pD,OAAAyqJ,EAAA5/I,IAEA++C,EAAA/xC,OAAA2yI,GAKA,OAHAA,EAAApsJ,OAAA,GAAAqsJ,EAAArsJ,OAAA,IACAC,KAAA+U,cAAA,IAAAm3I,GAAAF,GAAAC,OAAAE,EAAAC,EAAA9+F,IAEWgK,GAAWhK,GAKtB,SAAS0/F,KACT,IAAAv3D,EAAiBD,KAGjB,OAFIh8E,EAAMi8E,EAAQzyE,GAAYI,SAAAqyE,EAAkBzyE,GAAYE,cACxD1J,EAAMi8E,EAAQzyE,GAAYQ,qBAAAiyE,EAA8BzyE,GAAYE,cACxE,SAAAsoC,EAAA3qC,GACA,OAAA2qC,EAAAlwC,cAGAm6E,EAAAjqC,EAAAlwC,cAAAkV,WAFA,MAKe,IAAAy8H,GA5SL,SAAAp8I,GAKV,SAAAq8I,EAAAl0I,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA2tD,YAAyB0+F,MAChBrsJ,KACTiZ,EAAAD,GAAA,GAKAhI,EAAAyoD,WAAAxgD,EAAAygD,UAAAzgD,EAAAygD,UAAmEnC,GAKnEvmD,EAAAs7I,cAAArzI,EAAAk0I,aAAAl0I,EAAAk0I,aAA4E91F,GAK5ErmD,EAAAu7I,iBAAAtzI,EAAAm0I,gBAAAn0I,EAAAm0I,gBAAqF/1F,GAKrFrmD,EAAAw7I,iBAAAvzI,EAAAo0I,gBAAAp0I,EAAAo0I,gBAAqF51F,GAKrFzmD,EAAA47I,SAAA3zI,EAAAq0I,OAAAr0I,EAAAq0I,MAKAt8I,EAAA07I,QAAAzzI,EAAAikC,OAAAjkC,EAAAikC,OAA0DjpC,EAK1DjD,EAAA87I,cAAA7zI,EAAAkyC,aAAAlyC,EAAAkyC,aAAA,EACA,IAiBAC,EAjBAmiG,EAAA,IAAiCpX,GAAW,CAC5C7oI,OAAA,IAAwB4gG,GAAY,CACpCW,iBAAA,EACAtjD,SAAAtyC,EAAAsyC,SACAs4C,MAAA5qF,EAAA4qF,QAEAtoF,MAAAtC,EAAAsC,MAAAtC,EAAAsC,MACgByxI,KAChBhc,sBAAA,EACAE,wBAAA,IASA,GAHAlgI,EAAAw8I,gBAAAD,EAGAt0I,EAAAwsC,OACA,sBAAAxsC,EAAAwsC,OACA2F,EAAAnyC,EAAAwsC,WAEA,CACA,IAAAgoG,EAAAx0I,EAAAwsC,OACA2F,EAAA,SAAAnH,GACA,OAA2B9nC,EAAQsxI,EAAAxpG,SAKnCmH,EAA0Bn3C,EAM1BjD,EAAA67I,aAAAzhG,EAOAp6C,EAAAy7I,yBAAA,GACA,IAAAlhG,EAAAv6C,EAAA8/F,cAGA,OAFQ39F,EAAMo4C,EAAWp6C,EAAmBC,IAAAJ,EAAAw4I,YAAAx4I,GACpCmC,EAAMo4C,EAAWp6C,EAAmBE,OAAAL,EAAA84I,eAAA94I,GAC5CA,EAsGA,OAjMI+6I,GAASmB,EAAAr8I,GAkGbq8I,EAAApuJ,UAAA6tJ,4BAAA,SAAAnhG,EAAAvH,GACAjkD,KAAAysJ,yBAAsCt8I,EAAMq7C,IAAAvH,GAO5CipG,EAAApuJ,UAAAgyG,YAAA,WACA,OAAA9wG,KAAAwtJ,gBAAAhhG,YAAAqkD,yBAOAq8C,EAAApuJ,UAAA4uJ,gBAAA,WACA,OAAA1tJ,KAAA8sJ,eAWAI,EAAApuJ,UAAA8hH,SAAA,SAAAp1D,GACA,OAC+BxrD,KAAAysJ,yBAAmCt8I,EAAMq7C,KAOxE0hG,EAAApuJ,UAAAmkJ,WAAA,WACA,OAAAjjJ,KAAAwtJ,iBAQAN,EAAApuJ,UAAA6uJ,gBAAA,SAAAxiG,GACAnrD,KAAA8sJ,cAAA3hG,GASA+hG,EAAApuJ,UAAAmrD,OAAA,SAAAh9C,GACA,IAAA2gJ,EAAA5tJ,KAAAqwD,SACAw9F,EAAA7tJ,KAAA8wG,cACA88C,GACAC,EAAAp0I,QAAAm0I,EAAA79F,cAAArxD,KAAAkvJ,IAEA/8I,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,GACAjN,KAAAwtJ,gBAAAvjG,OAAAh9C,GACAA,GACA4gJ,EAAAp0I,QAAAxM,EAAA2iD,YAAAlxD,KAAAuO,KAOAigJ,EAAApuJ,UAAA0qJ,YAAA,SAAAl2I,GACA,IAAArG,EAAAjN,KAAAqwD,SACApjD,GACAA,EAAA2iD,YAAuEt8C,EAAA,UAOvE45I,EAAApuJ,UAAAgrJ,eAAA,SAAAx2I,GACA,IAAArG,EAAAjN,KAAAqwD,SACApjD,GACAA,EAAA8iD,cAAyEz8C,EAAA,UAOzE45I,EAAApuJ,UAAAiuJ,+BAAA,SAAAvhG,UACAxrD,KAAAysJ,yBAA6Ct8I,EAAMq7C,KAEnD0hG,EAlMU,CAmMR52F,IC9VEw3F,GAAyB,WAC7B,IAAAz9I,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqD7B,SAAAq9I,GAAAz6I,GACA,OAAoE,EAAAk4C,QACM,EAAAA,QAEN,EAAA5yC,QACkD,eADtH,EAqgBe,IAAAo1I,GA5eP,SAAAn9I,GAKR,SAAAo9I,EAAAj1I,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAimD,EAAuE,EA4FvE,OA3FAA,EAAA9G,kBACA8G,EAAA9G,gBAA6ClkD,GAE7CgrD,EAAA1G,WACA0G,EAAA1G,SAAsCrkD,IAEtClD,EAAAH,EAAAxT,KAAA2C,KAAAi/D,IAAAj/D,MAKAu/I,QAAAtmI,EAAA3L,OAAA2L,EAAA3L,OAAA,KAKA0D,EAAAk9I,aAAAt7I,IAAAqG,EAAAotI,QAAAptI,EAAAotI,OAKAr1I,EAAAm9I,WAAAv7I,IAAAqG,EAAAue,MAAAve,EAAAue,KAKAxmB,EAAA+9G,UAAA91G,EAAAsyC,SAAAtyC,EAAAsyC,SAAA,KAKAv6C,EAAAo9I,sBAAA,GAKAp9I,EAAAq9I,2BAAA,GAOAr9I,EAAAs9I,wBAAA,GAQAt9I,EAAAu9I,iBAAA,GAMAv9I,EAAAw9I,iBAAA,KAKAx9I,EAAAu0I,qBAAA3yI,IAAAqG,EAAAusI,eACAvsI,EAAAusI,eAAA,GAKAx0I,EAAAy9I,gBA0ZA,SAAuBtvJ,EAAAyH,GACvB,IAAA8nJ,EAAiB/3G,GAAwB32C,KAAAwuJ,iBAAArvJ,EAAA81C,SACzC05G,EAAiBh4G,GAAwB32C,KAAAwuJ,iBAAA5nJ,EAAAquC,SACzC,OAAAy5G,EAAAC,GA7Z8CjwJ,KAAAsS,GAM9CA,EAAA03I,OAAA,IAA2Bv7C,GAM3Bn8F,EAAA63I,iBAAA,CACAtzH,MAAAvkB,EAAA83I,oBACAlyB,WAAA5lH,EAAA+3I,yBACA7zH,WAAAlkB,EAAA+3I,yBACA9wH,QAAAjnB,EAAAg4I,sBACA7wB,WAAAnnH,EAAAi4I,yBACA3xB,gBAAAtmH,EAAAk4I,8BACAzwB,aAAAznH,EAAAm4I,2BACAt0B,mBAAA7jH,EAAAq4I,iCACAzkB,OAAA5zH,EAAAo4I,sBAEAp4I,EA0XA,OA7dI88I,GAASG,EAAAp9I,GA4Gbo9I,EAAAnvJ,UAAAywG,WAAA,SAAA/jD,EAAAojG,GACA,IAAAC,OAAAj8I,IAAAg8I,KACAE,EAA0B3+I,EAAMq7C,GAChCxwC,EAAAwwC,EAAAlwC,cACA,GAAAN,EAAA,CACA,IAAA+zI,EAAA/uJ,KAAA6oJ,iBAAA7tI,EAAAwV,WACAu+H,IACA/uJ,KAAAsuJ,wBAAAQ,GAAA9zI,EAAAgN,U/OVA,CAAAhd,SAAA,W+OWA+jJ,EAAA1xJ,KAAA2C,KAAAwrD,EAAAxwC,IAGA6zI,IACA7uJ,KAAAquJ,2BAAAS,GAA2D37I,EAAMq4C,EAAUp2C,EAASC,OAAArV,KAAA4vG,qBAAA5vG,QAOpFiuJ,EAAAnvJ,UAAAkwJ,mBAAA,SAAAxjG,GACAxrD,KAAAuvG,WAAA/jD,IAMAyiG,EAAAnvJ,UAAAmwJ,sBAAA,SAAAzjG,GACAxrD,KAAAowG,cAAA5kD,IAMAyiG,EAAAnvJ,UAAAowJ,aAAA,WACA,IAAA3jG,EAOA,OANAvrD,KAAA+uH,UACAxjE,EAAAvrD,KAAA+uH,UAEA/uH,KAAAu/I,UACAh0F,EAAAvrD,KAAAu/I,QAAAzuC,eAEAvlD,GAKA0iG,EAAAnvJ,UAAA6uD,YAAA,SAAAr6C,GACA,IAAAtN,EAAAhG,KAAAmvJ,OAAA77I,EAAA5G,MAAA4G,EAAAsL,WAAAtL,EAAArG,KAKA,OAJAjH,EAAAopJ,UACA97I,EAAAsL,WAAA5Y,EAAAqgJ,OAAA7kJ,MAAA,KACA8R,EAAA5G,MAAA1G,EAAAsgJ,aAEAz1I,EAAA/R,UAAA6uD,YAAAtwD,KAAA2C,KAAAsT,IAMA26I,EAAAnvJ,UAAA2qJ,kBAAA,SAAAn2I,GACA,IAAAk4C,EAAAuiG,GAAAz6I,GACAtT,KAAAuvG,WAAA/jD,IAMAyiG,EAAAnvJ,UAAA4qJ,qBAAA,SAAAp2I,GACA,IAAAk4C,EAAAuiG,GAAAz6I,GACAtT,KAAAowG,cAAA5kD,IAMAyiG,EAAAnvJ,UAAA8wG,qBAAA,SAAAt8F,GACA,IAAAk4C,EAAiEl4C,EAAA,OACjE,GAAAtT,KAAAw4D,uBAAA,CACA,IAAA0uC,EAAsB/2F,EAAMq7C,GAC5B07C,KAAAlnG,KAAAuuJ,mBACAvuJ,KAAAuuJ,iBAAArnD,GAAA17C,QAIAxrD,KAAAqvJ,eAAA7jG,IAMAyiG,EAAAnvJ,UAAAw5D,cAAA,SAAAhlD,GACA,IAAAg8I,EAA+Bx9I,EAAS9R,KAAAuuJ,kBAKxC,OAJAe,EAAAvvJ,SACAuvJ,EAAA71I,QAAAzZ,KAAAqvJ,eAAA3wJ,KAAAsB,OACAA,KAAAuuJ,iBAAA,KAEA,GASAN,EAAAnvJ,UAAAsxG,cAAA,SAAA5kD,EAAA+jG,GACA,IAAAC,OAAA58I,IAAA28I,KACAT,EAA0B3+I,EAAMq7C,GAChCttC,EAAAle,KAAAsuJ,wBAAAQ,GACA,GAAA5wI,EAAA,CACA,IAAA8rI,EAAAhqJ,KAAA0oJ,OACA+G,EAAA,GACAzF,EAAAn8C,gBAAA3vF,EAAA,SAAAwkC,GACA8I,IAAA9I,EAAA8I,SACAikG,EAAA3uJ,KAAA4hD,KAGA,QAAAxlD,EAAAuyJ,EAAA1vJ,OAAA,EAAoD7C,GAAA,IAAQA,EAC5D8sJ,EAAAroJ,OAAA8tJ,EAAAvyJ,IAGAsyJ,IACYj8I,EAAavT,KAAAquJ,2BAAAS,WACzB9uJ,KAAAquJ,2BAAAS,KAMAb,EAAAnvJ,UAAAmrD,OAAA,SAAAh9C,GACA,IAAA2gJ,EAAA5tJ,KAAAqwD,SACAtjD,EAAA/M,KAAAouJ,sBACA7iG,EAAyEvrD,KAAAkvJ,eACzEtB,IACA7gJ,EAAA0M,QAAyBlG,GACzBxG,EAAAhN,OAAA,EACAwrD,EAAA9xC,QAAAzZ,KAAAivJ,sBAAAvwJ,KAAAsB,QAEA6Q,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,GACAA,IACAjN,KAAA+uH,UACAhiH,EAAAjM,KAA0BqS,EAAMnT,KAAA+uH,UAAiB59G,EAAmBC,IAAApR,KAAAypJ,kBAAAzpJ,MAAqCmT,EAAMnT,KAAA+uH,UAAiB59G,EAAmBE,OAAArR,KAAA0pJ,qBAAA1pJ,OAEnJA,KAAAu/I,SACAxyI,EAAAjM,KAA0BqS,EAAMnT,KAAAu/I,QAAexyC,GAAeC,WAAAhtG,KAAAypJ,kBAAAzpJ,MAA4CmT,EAAMnT,KAAAu/I,QAAexyC,GAAeG,cAAAltG,KAAA0pJ,qBAAA1pJ,OAE9IurD,EAAA9xC,QAAAzZ,KAAAgvJ,mBAAAtwJ,KAAAsB,SASAiuJ,EAAAnvJ,UAAAqwJ,OAAA,SAAAziJ,EAAAu5I,EAAAh5I,GACA,IAEA8pE,EAAkB/4D,GAAc,CAFhC/Q,EAAAmyB,uBAAA,CAAA1yB,EAAA,GAAA1M,KAAAulJ,gBAAA74I,EAAA,GAAA1M,KAAAulJ,kBACAt4I,EAAAmyB,uBAAA,CAAA1yB,EAAA,GAAA1M,KAAAulJ,gBAAA74I,EAAA,GAAA1M,KAAAulJ,oBAEAW,EAAAlmJ,KAAA0oJ,OAAA/6C,YAAA52B,GAEA/2E,KAAAkuJ,UAAAluJ,KAAAmuJ,QACAjI,IAAAhpG,OAAA,SAAAjI,GACA,OAAAA,EAAAuW,QAAAlwC,cAAAkV,YACoBxN,GAAYS,UAGhC,IAIA8iI,EAAAC,EAAAC,EAAAC,EAHA0I,GAAA,EACA/I,EAAA,KACAC,EAAA,KAEA,GAAAJ,EAAAnmJ,OAAA,GACAC,KAAAwuJ,iBAAAvI,EACAC,EAAAtjJ,KAAA5C,KAAAyuJ,iBACA,IAAArI,EAAAF,EAAA,GAAAjxG,QACAy6G,EAAAxJ,EAAA,GAAA16F,QAAAlwC,cAAAkV,YACgBxN,GAAYS,OAC5BzjB,KAAAkuJ,UAAAluJ,KAAAmuJ,OACA5H,EAAAt5I,EAAAy/C,uBAAA05F,EAAA,IACAI,EAAAv5I,EAAAy/C,uBAAA05F,EAAA,IACAK,EAA+BlwG,GAAyB7pC,EAAA65I,GACxDG,EAA+BnwG,GAAyB7pC,EAAA85I,GACxDnnJ,KAAAK,KAAAL,KAAAQ,IAAA4mJ,EAAAC,KACA1mJ,KAAAulJ,kBAEA6J,GAAA,EACA/I,EAAAI,EAAAC,EAAAN,EAAA,GAAAA,EAAA,GACAE,EAAAr5I,EAAAy/C,uBAAA25F,KAGArmJ,KAAAmuJ,QAEA9H,EADAqJ,EpL/UO,SAAA9wI,EAAA4a,GACP,IAAAx7B,EAAAw7B,EAAAO,YACAnZ,EAAA4Y,EAAAhZ,YACAgB,EAAAZ,EAAA,GACAgB,EAAAhB,EAAA,GAGAnC,EAFAG,EAAA,GAEA4C,EACA9C,EAFAE,EAAA,GAEAgD,EACA,IAAAnD,GAAA,IAAAC,IACAD,EAAA,GAEA,IAAAjhB,EAAA6B,KAAAK,KAAA+e,IAAAC,KAGA,OAFA8C,EAAAxjB,EAAAygB,EAAAjhB,EACAokB,EAAA5jB,EAAA0gB,EAAAlhB,GoLkU6BmyJ,CAAe1J,EACuBC,EAAA,GAAA16F,QAAAlwC,eAGtC05B,GAAgBixG,EAAAG,GAGzB1vG,GAAkBhqC,EADtC45I,EAAAr5I,EAAAy/C,uBAAA25F,KACsCrmJ,KAAAulJ,kBACtC6J,GAAA,EACApvJ,KAAAkuJ,UAAAwB,IACAnJ,EAAAt5I,EAAAy/C,uBAAA05F,EAAA,IACAI,EAAAv5I,EAAAy/C,uBAAA05F,EAAA,IACAK,EAAuClwG,GAAyB+vG,EAAAC,GAChEG,EAAuCnwG,GAAyB+vG,EAAAE,GAChEnnJ,KAAAK,KAAAL,KAAAQ,IAAA4mJ,EAAAC,KACA1mJ,KAAAulJ,kBAEAc,EAAAI,EAAAC,EAAAN,EAAA,GAAAA,EAAA,GACAE,EAAAr5I,EAAAy/C,uBAAA25F,OAKA+I,IACA9I,EAAA,CAAAjnJ,KAAAw1B,MAAAyxH,EAAA,IAAAjnJ,KAAAw1B,MAAAyxH,EAAA,MAGA,OACA8I,UACA/I,SACAC,gBAOA2H,EAAAnvJ,UAAAuwJ,eAAA,SAAA7jG,GACAxrD,KAAAowG,cAAA5kD,GAAA,GACAxrD,KAAAuvG,WAAA/jD,GAAA,IAOAyiG,EAAAnvJ,UAAAsqJ,qBAAA,SAAA59F,EAAAxwC,GAGA,IAFA,IACAiD,EADsBsb,GAAUve,GAChCoW,iBAAA,GACAl0B,EAAA,EAAA0U,EAAAqM,EAAAle,OAAA,EAAoD7C,EAAA0U,IAAQ1U,EAAA,CAC5D,IAAA+3C,EAAAh3B,EAAAzc,MAAAtE,IAAA,GACAyqJ,EAAA,CACAn8F,UACAvW,WAEAj1C,KAAA0oJ,OAAApnJ,OAA+B0c,GAAci3B,GAAA0yG,KAQ7CsG,EAAAnvJ,UAAAuqJ,iCAAA,SAAA79F,EAAAxwC,GAEA,IADA,IAAAiyD,EAAAjyD,EAAAkyD,qBACAhwE,EAAA,EAAuBA,EAAA+vE,EAAAltE,SAAuB7C,EAAA,CAC9C,IAAA6xJ,EAAA/uJ,KAAA6oJ,iBAAA57E,EAAA/vE,GAAAszB,WACAu+H,GACAA,EAAA1xJ,KAAA2C,KAAAwrD,EAAAyhB,EAAA/vE,MASA+wJ,EAAAnvJ,UAAAiqJ,yBAAA,SAAAv9F,EAAAxwC,GAEA,IADA,IAAAiD,EAAAjD,EAAAoW,iBACAl0B,EAAA,EAAA0U,EAAAqM,EAAAle,OAAA,EAAoD7C,EAAA0U,IAAQ1U,EAAA,CAC5D,IAAA+3C,EAAAh3B,EAAAzc,MAAAtE,IAAA,GACAyqJ,EAAA,CACAn8F,UACAvW,WAEAj1C,KAAA0oJ,OAAApnJ,OAA+B0c,GAAci3B,GAAA0yG,KAQ7CsG,EAAAnvJ,UAAAoqJ,8BAAA,SAAA19F,EAAAxwC,GAEA,IADA,IAAAlO,EAAAkO,EAAAoW,iBACA5kB,EAAA,EAAA8C,EAAAxC,EAAA/M,OAA0CyM,EAAA8C,IAAQ9C,EAElD,IADA,IAAAyR,EAAAnR,EAAAN,GACAtP,EAAA,EAAA0U,EAAAqM,EAAAle,OAAA,EAAwD7C,EAAA0U,IAAQ1U,EAAA,CAChE,IAAA+3C,EAAAh3B,EAAAzc,MAAAtE,IAAA,GACAyqJ,EAAA,CACAn8F,UACAvW,WAEAj1C,KAAA0oJ,OAAApnJ,OAAmC0c,GAAci3B,GAAA0yG,KASjDsG,EAAAnvJ,UAAAmqJ,yBAAA,SAAAz9F,EAAAxwC,GAEA,IADA,IAAAwzE,EAAAxzE,EAAAoW,iBACAl0B,EAAA,EAAA0U,EAAA48E,EAAAzuF,OAA2C7C,EAAA0U,IAAQ1U,EAAA,CACnD,IAAA+gB,EAAAuwE,EAAAtxF,GACAyqJ,EAAA,CACAn8F,UACAvW,QAAA,CAAAh3B,MAEAje,KAAA0oJ,OAAApnJ,OAAA0Z,EAAAgN,YAAA2/H,KAQAsG,EAAAnvJ,UAAAqqJ,2BAAA,SAAA39F,EAAAxwC,GAEA,IADA,IAAA89G,EAAA99G,EAAAoW,iBACAjN,EAAA,EAAAkmI,EAAAvxB,EAAA/4H,OAA6CokB,EAAAkmI,IAAQlmI,EAErD,IADA,IAAAimI,EAAAtxB,EAAA30G,GACA3X,EAAA,EAAA8C,EAAA86I,EAAArqJ,OAA8CyM,EAAA8C,IAAQ9C,EAEtD,IADA,IAAAyR,EAAAmsI,EAAA59I,GACAtP,EAAA,EAAA0U,EAAAqM,EAAAle,OAAA,EAA4D7C,EAAA0U,IAAQ1U,EAAA,CACpE,IAAA+3C,EAAAh3B,EAAAzc,MAAAtE,IAAA,GACAyqJ,EAAA,CACAn8F,UACAvW,WAEAj1C,KAAA0oJ,OAAApnJ,OAAuC0c,GAAci3B,GAAA0yG,KAUrDsG,EAAAnvJ,UAAAgqJ,oBAAA,SAAAt9F,EAAAxwC,GACA,IAAAiD,EAAAjD,EAAAoW,iBACAu2H,EAAA,CACAn8F,UACAvW,QAAA,CAAAh3B,MAEAje,KAAA0oJ,OAAApnJ,OAAA0Z,EAAAgN,YAAA2/H,IAOAsG,EAAAnvJ,UAAAkqJ,sBAAA,SAAAx9F,EAAAxwC,GAEA,IADA,IAAAovI,EAAApvI,EAAAoW,iBACA5kB,EAAA,EAAA8C,EAAA86I,EAAArqJ,OAA0CyM,EAAA8C,IAAQ9C,EAElD,IADA,IAAAyR,EAAAmsI,EAAA59I,GACAtP,EAAA,EAAA0U,EAAAqM,EAAAle,OAAA,EAAwD7C,EAAA0U,IAAQ1U,EAAA,CAChE,IAAA+3C,EAAAh3B,EAAAzc,MAAAtE,IAAA,GACAyqJ,EAAA,CACAn8F,UACAvW,WAEAj1C,KAAA0oJ,OAAApnJ,OAAmC0c,GAAci3B,GAAA0yG,KAIjDsG,EA9dQ,CA+dNh2F,ICjjBE23F,GAAyB,WAC7B,IAAAv/I,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2B7Bm/I,GAMA,iBANAA,GAYA,cAZAA,GAkBA,eAmBAC,GAAA,SAAAj/I,GAOA,SAAAi/I,EAAA1sJ,EAAAmoD,EAAA3sC,GACA,IAAA5N,EAAAH,EAAAxT,KAAA2C,KAAAoD,IAAApD,KAcA,OARAgR,EAAAu6C,WAOAv6C,EAAA4N,aACA5N,EAEA,OAvBI4+I,GAASE,EAAAj/I,GAuBbi/I,EAxBA,CAyBEz7I,GA8La07I,GArLF,SAAAl/I,GAKb,SAAAm/I,EAAAh3I,GACA,IAeAoyC,EAfAp6C,EAAAhR,KACAiZ,EAAAD,GAAA,GAeA,IAdAhI,EAAAH,EAAAxT,KAAA2C,KAA4E,IAAAA,MAM5EiwJ,gBAAA,KAKAj/I,EAAA+9G,eAAAn8G,IAAAqG,EAAAsyC,SAAAtyC,EAAAsyC,SAAA,KAGAtyC,EAAAwsC,OACA,sBAAAxsC,EAAAwsC,OACA2F,EAAAnyC,EAAAwsC,WAEA,CACA,IAAAgoG,EAAAx0I,EAAAwsC,OACA2F,EAAA,SAAAnH,GACA,OAA2B9nC,EAAQsxI,EAAAxpG,SAKnCmH,EAA0Bn3C,EAkB1B,OAZAjD,EAAA67I,aAAAzhG,EAKAp6C,EAAA87I,cAAA7zI,EAAAkyC,aAAAlyC,EAAAkyC,aAAA,EAKAn6C,EAAAk/I,aAAA,KACQ/8I,EAAMnC,EAAQkH,EAAmBg+C,GAAmBC,QAAAnlD,EAAAm/I,qBAAAn/I,GAC5DA,EA+HA,OAlLI4+I,GAASI,EAAAn/I,GAwDbm/I,EAAAlxJ,UAAAq5D,gBAAA,SAAA3oD,GAEA,GADAxP,KAAAkwJ,aAAAlwJ,KAAAowJ,iBAAA5gJ,EAAA9C,MAAA8C,EAAAvC,MACAjN,KAAAiwJ,iBAAAjwJ,KAAAkwJ,aAAA,CACAlwJ,KAAAiwJ,gBAAAzgJ,EAAAoP,WACA5e,KAAAq4D,gBAAA7oD,GACA,IAAA+7C,EAAAvrD,KAAA+uH,WAAA,IAAiDl2G,EAAU,CAAA7Y,KAAAkwJ,eAE3D,OADAlwJ,KAAA+U,cAAA,IAAA+6I,GAAAD,GAAAtkG,EAAA/7C,EAAAoP,cACA,EAEA,UAKAoxI,EAAAlxJ,UAAAw5D,cAAA,SAAA9oD,GACA,GAAAxP,KAAAiwJ,gBAAA,CACAjwJ,KAAAiwJ,gBAAA,KACAjwJ,KAAAq4D,gBAAA7oD,GACA,IAAA+7C,EAAAvrD,KAAA+uH,WAAA,IAAiDl2G,EAAU,CAAA7Y,KAAAkwJ,eAE3D,OADAlwJ,KAAA+U,cAAA,IAAA+6I,GAAAD,GAAAtkG,EAAA/7C,EAAAoP,cACA,EAEA,UAKAoxI,EAAAlxJ,UAAAs5D,gBAAA,SAAA5oD,GACA,GAAAxP,KAAAiwJ,gBAAA,CACA,IAAAI,EAAA7gJ,EAAAoP,WACA0xI,EAAAD,EAAA,GAAArwJ,KAAAiwJ,gBAAA,GACAM,EAAAF,EAAA,GAAArwJ,KAAAiwJ,gBAAA,GACA1kG,EAAAvrD,KAAA+uH,WAAA,IAAiDl2G,EAAU,CAAA7Y,KAAAkwJ,eAC3D3kG,EAAA9xC,QAAA,SAAA+xC,GACA,IAAA4uF,EAAA5uF,EAAAlwC,cACA8+H,EAAA1pH,UAAA4/H,EAAAC,GACA/kG,EAAAvwC,YAAAm/H,KAEAp6I,KAAAiwJ,gBAAAI,EACArwJ,KAAA+U,cAAA,IAAA+6I,GAAAD,GAAAtkG,EAAA8kG,MAMAL,EAAAlxJ,UAAAu5D,gBAAA,SAAA7oD,GACA,IAAAqK,EAAArK,EAAAvC,IAAAogC,cAGArtC,KAAAowJ,iBAAA5gJ,EAAA9C,MAAA8C,EAAAvC,MACA4M,EAAAk6C,UAAApyD,OAAA3B,KAAAiwJ,gBAAA,yBACAp2I,EAAAk6C,UAAAS,IAAAx0D,KAAAiwJ,gBAAA,0BAGAp2I,EAAAk6C,UAAApyD,OAAA,0BAYAquJ,EAAAlxJ,UAAAsxJ,iBAAA,SAAA1jJ,EAAAO,GACA,OAAAA,EAAAi+C,sBAAAx+C,EAAA,SAAA8+C,GACA,IAAAxrD,KAAA+uH,WAAmC5yG,EAAQnc,KAAA+uH,UAAAr1G,WAAA8xC,GAC3C,OAAAA,GAES9sD,KAAAsB,MAAA,CACTorD,YAAAprD,KAAA6sJ,aACA1hG,aAAAnrD,KAAA8sJ,iBAQAkD,EAAAlxJ,UAAA4uJ,gBAAA,WACA,OAAA1tJ,KAAA8sJ,eAQAkD,EAAAlxJ,UAAA6uJ,gBAAA,SAAAxiG,GACAnrD,KAAA8sJ,cAAA3hG,GAKA6kG,EAAAlxJ,UAAAmrD,OAAA,SAAAh9C,GACA,IAAAujJ,EAAAxwJ,KAAAqwD,SACAx/C,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,GACAjN,KAAAgjJ,aAAAwN,IAKAR,EAAAlxJ,UAAAqxJ,qBAAA,WACAnwJ,KAAAgjJ,aAAA,OAMAgN,EAAAlxJ,UAAAkkJ,aAAA,SAAAwN,GACA,IAAAvjJ,EAAAjN,KAAAqwD,SACAoG,EAAAz2D,KAAA0tD,YACAzgD,GAAAwpD,IACAxpD,KAAAujJ,IAEAvjJ,EAAAogC,cACA0mB,UAAApyD,OAAA,0BAIAquJ,EAnLa,CAoLX/3F,ICtREw4F,GAAyB,WAC7B,IAAApgJ,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAyD7BggJ,GAAA,GACAA,GAAiB1tI,GAAYC,OAqQ7B,SAA0BrkB,GAC1B,IAAA0qB,EAEAA,OADA1W,IAAAhU,EAAAtB,QAAAsV,IAAAhU,EAAAq6C,EACA,IAAoB3jB,GAAK,CAAA12B,EAAAkB,EAAAlB,EAAA4f,EAAA5f,EAAAq6C,EAAAr6C,EAAAtB,GAA2CqlB,GAAcI,WAElFnQ,IAAAhU,EAAAq6C,EACA,IAAoB3jB,GAAK,CAAA12B,EAAAkB,EAAAlB,EAAA4f,EAAA5f,EAAAq6C,GAAiCt2B,GAAcE,UAExEjQ,IAAAhU,EAAAtB,EACA,IAAoBg4B,GAAK,CAAA12B,EAAAkB,EAAAlB,EAAA4f,EAAA5f,EAAAtB,GAAiCqlB,GAAcG,KAGxE,IAAoBwS,GAAK,CAAA12B,EAAAkB,EAAAlB,EAAA4f,IAEzB,OAAA8K,GAlRAonI,GAAiB1tI,GAAYE,aAwR7B,SAA+BtkB,GAC/B,IAAAqyB,EAAA0/H,GAAA/xJ,GACA,WAAe+3H,GAAU/3H,EAAAgyJ,MAAA,GAAA3/H,IAzRzBy/H,GAAiB1tI,GAAYI,SAwU7B,SAA4BxkB,GAC5B,IAAAqyB,EAAA0/H,GAAA/xJ,GACA,WAAes6B,GAAOt6B,EAAAwrJ,MAAAn5H,IAzUtBy/H,GAAiB1tI,GAAYK,aAuT7B,SAA+BzkB,GAC/B,IAAAqyB,EAAA0/H,GAAA/xJ,GACA,WAAes5H,GAAUt5H,EAAA4vF,OAAAv9D,IAxTzBy/H,GAAiB1tI,GAAYM,mBA6R7B,SAAoC1kB,GACpC,IAAAqyB,EAAA0/H,GAAA/xJ,GACA,WAAey4H,GAAez4H,EAAAgyJ,MAAA3/H,IA9R9By/H,GAAiB1tI,GAAYO,eA6T7B,SAAiC3kB,GACjC,IAAAqyB,EAAA0/H,GAAA/xJ,GACA,WAAe45H,GAAY55H,EAAAwrJ,MAAAn5H,IA1T3B,IAAA4/H,GAAA,GAkKA,SAASC,GAAYlyJ,EAAAoa,GACrB,IAAApa,EACA,YAGA,IAAAwE,EACA,oBAAAxE,EAAA,oBAAAA,EAAA,EACAwE,EAAe4f,GAAYC,WAE3B,GAAArkB,EAAA,OACAwE,EAAe4f,GAAYK,iBAE3B,GAAAzkB,EAAA,OAGAwE,EADA,IAD2D,EAC3DwtJ,MAAA7wJ,OACmBijB,GAAYE,YAGZF,GAAYM,uBAG/B,GAAA1kB,EAAA,OACA,IAAAmyJ,EAAyD,EACzD9/H,EAAA0/H,GAAAI,GACA3G,EAsBA,SAAAA,EAAAn5H,GACA,IAGA/zB,EAAA0U,EAHAo/I,EAAA,GACAC,EAAA,GACAC,EAAA,GAEA,IAAAh0J,EAAA,EAAA0U,EAAAw4I,EAAArqJ,OAAkC7C,EAAA0U,IAAQ1U,EAAA,CAC1C8zJ,EAAAjxJ,OAAA,EACQszB,GAAkB29H,EAAA,EAAA5G,EAAAltJ,GAAA+zB,EAAAlxB,QAE1B,IAAAoxJ,EAAwB55H,GAAqBy5H,EAAA,EAAAA,EAAAjxJ,OAAAkxB,EAAAlxB,QAC7CoxJ,EACAF,EAAAnwJ,KAAA,CAAAspJ,EAAAltJ,KAGAg0J,EAAApwJ,KAAAspJ,EAAAltJ,IAGA,KAAAg0J,EAAAnxJ,QAAA,CACA,IAAAqxJ,EAAAF,EAAAhiJ,QACAmiJ,GAAA,EAEA,IAAAn0J,EAAA+zJ,EAAAlxJ,OAAA,EAAuC7C,GAAA,EAAQA,IAAA,CAC/C,IAAAo0J,EAAAL,EAAA/zJ,GAAA,GACAq0J,EAA+BzyI,GAAc,IAAKmW,GAAUq8H,GAAAtpI,YAAA,IAA6BiN,GAAUm8H,GAAAppI,aACnG,GAAAupI,EAAA,CAEAN,EAAA/zJ,GAAA4D,KAAAswJ,GACAC,GAAA,EACA,OAGAA,GAGAJ,EAAAnwJ,KAAA,CAAAswJ,EAAAv9C,YAGA,OAAAo9C,EA3DAO,CAAAT,EAAA3G,MAAAn5H,GACA,IAAAm5H,EAAArqJ,QACAqD,EAAmB4f,GAAYI,QAC/BxkB,EAAA,MAAAwrJ,EAAA,KAGAhnJ,EAAmB4f,GAAYO,cAC/B3kB,EAAA,MAAAwrJ,GAIA,OAAW32B,IAA4Bg+B,EADvCf,GAAAttJ,IACuCxE,IAAA,EAAAoa,GA0FvC,SAAA23I,GAAA/xJ,GACA,IAAAqyB,EAAiBtO,GAAcC,GAU/B,OATA,IAAAhkB,EAAA8yJ,OAAA,IAAA9yJ,EAAA+yJ,KACA1gI,EAAiBtO,GAAcI,MAE/B,IAAAnkB,EAAA8yJ,KACAzgI,EAAiBtO,GAAcE,KAE/B,IAAAjkB,EAAA+yJ,OACA1gI,EAAiBtO,GAAcG,KAE/BmO,EAyEA,SAAA2gI,GAAA52I,GACA,IAAAiW,EAAAjW,EAAAwW,YACA,OACAkgI,KAAAzgI,IAA0BtO,GAAcE,KACxCoO,IAAuBtO,GAAcI,KACrC4uI,KAAA1gI,IAA0BtO,GAAcG,KACxCmO,IAAuBtO,GAAcI,MAmFrC,SAAS8uI,GAAa72I,EAAAhC,GAEtB,OAAA84I,EADAjB,GAAA71I,EAAAwV,YAC0BijG,GAA4Bz4G,GAAA,EAAAhC,MA7ctD63I,GAAiB7tI,GAAYC,OAwU7B,SAA2BjI,EAAAhC,GAC3B,IAEA+4I,EAFA9zI,EAAAjD,EAAAoW,iBAGAH,EAAAjW,EAAAwW,YACAP,IAAmBtO,GAAcE,IACjCkvI,EAAA,CACAjyJ,EAAAme,EAAA,GACAO,EAAAP,EAAA,GACAg7B,EAAAh7B,EAAA,IAGAgT,IAAwBtO,GAAcG,IACtCivI,EAAA,CACAjyJ,EAAAme,EAAA,GACAO,EAAAP,EAAA,GACA3gB,EAAA2gB,EAAA,IAGAgT,IAAwBtO,GAAcI,KACtCgvI,EAAA,CACAjyJ,EAAAme,EAAA,GACAO,EAAAP,EAAA,GACAg7B,EAAAh7B,EAAA,GACA3gB,EAAA2gB,EAAA,IAGAgT,IAAwBtO,GAAcC,GACtCmvI,EAAA,CACAjyJ,EAAAme,EAAA,GACAO,EAAAP,EAAA,IAIQ/D,GAAM,MAEd,OAAA63I,GA3WAlB,GAAiB7tI,GAAYE,aA+X7B,SAAgCs0G,EAAAx+G,GAChC,IAAAg5I,EAAAJ,GAAAp6B,GACA,OACAk6B,KAAAM,EAAAN,KACAC,KAAAK,EAAAL,KACAf,MAAA,CAC+Cp5B,EAAApmG,oBApY/Cy/H,GAAiB7tI,GAAYI,SA6Y7B,SAA6ByW,EAAA7gB,GAE7B,IAAAg5I,EAAAJ,GAAA/3H,GACA,OACA63H,KAAAM,EAAAN,KACAC,KAAAK,EAAAL,KACAvH,MAAyDvwH,EAAAzI,gBAAA,KAlZzDy/H,GAAiB7tI,GAAYK,aAua7B,SAAgC4uI,EAAAj5I,GAChC,IAAAg5I,EAAAJ,GAAAK,GACA,OACAP,KAAAM,EAAAN,KACAC,KAAAK,EAAAL,KACAnjE,OAAmDyjE,EAAA7gI,mBA3anDy/H,GAAiB7tI,GAAYM,mBAyZ7B,SAAqC4uI,EAAAl5I,GACrC,IAAAg5I,EAAAJ,GAAAM,GACA,OACAR,KAAAM,EAAAN,KACAC,KAAAK,EAAAL,KACAf,MAAyDsB,EAAA9gI,mBA7ZzDy/H,GAAiB7tI,GAAYO,eAkb7B,SAAkCvI,EAAAhC,GAIlC,IAHA,IAAAg5I,EAAAJ,GAAA52I,GACAiD,EAAAjD,EAAAoW,gBAAA,GACAxlB,EAAA,GACA1O,EAAA,EAAmBA,EAAA+gB,EAAAle,OAAwB7C,IAC3C,QAAA4C,EAAAme,EAAA/gB,GAAA6C,OAAA,EAA+CD,GAAA,EAAQA,IACvD8L,EAAA9K,KAAAmd,EAAA/gB,GAAA4C,IAGA,OACA4xJ,KAAAM,EAAAN,KACAC,KAAAK,EAAAL,KACAvH,MAAyD,IAY1C,IAAA+H,GA/bH,SAAAthJ,GAKZ,SAAAuhJ,EAAAp5I,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GAQA,OAPAhI,EAAAH,EAAAxT,KAAA2C,aAMA0a,cAAAzB,EAAAiiH,aACAlqH,EA2HA,OAzIIy/I,GAAS2B,EAAAvhJ,GAmBbuhJ,EAAAtzJ,UAAAo1H,sBAAA,SAAAt1H,EAAAoa,GACA,IAAAq5I,EAAyD,EACzDr3I,EAAuB81I,GAAYuB,EAAAr3I,SAAAhC,GACnCwyC,EAAA,IAA0BlxC,EAY1B,OAXAta,KAAA0a,eACA8wC,EAAApwC,gBAAApb,KAAA0a,eAEA8wC,EAAAvwC,YAAAD,GACAhC,KAAAs5I,SACAD,EAAAE,WAAAv5I,EAAAs5I,UACA9mG,EAAAxvC,MAA4Cq2I,EAAAE,WAAAv5I,EAAAs5I,UAE5CD,EAAAE,YACA/mG,EAAA3zC,cAAAw6I,EAAAE,YAAA,GAEA/mG,GAKA4mG,EAAAtzJ,UAAAq1H,uBAAA,SAAAv1H,EAAAoa,GACA,IAAAC,EAAAD,GAAA,GACA,GAAApa,EAAA,UACA,IAEA2sD,EAAA,GACAinG,EAHmE,EAGnEjnG,SACAtyC,EAAAq5I,QAAA1zJ,EAAA6zJ,kBACA,QAAAv1J,EAAA,EAAA0U,EAAA4gJ,EAAAzyJ,OAAyD7C,EAAA0U,IAAQ1U,EACjEquD,EAAAzqD,KAAAd,KAAAk0H,sBAAAs+B,EAAAt1J,GAAA+b,IAEA,OAAAsyC,EAGA,OAAAvrD,KAAAk0H,sBAAAt1H,EAAAqa,KAMAm5I,EAAAtzJ,UAAAs1H,uBAAA,SAAAx1H,EAAAoa,GACA,OAAe83I,GAAyC,EAAA93I,IAKxDo5I,EAAAtzJ,UAAAu1H,yBAAA,SAAAz1H,GACA,OAAAA,EAAA,uBAAAgU,IAAAhU,EAAA,sBAGmB0sB,GAAa,QAF2C1sB,EAAA,iBAC3E8zJ,MAIA,MAYAN,EAAAtzJ,UAAA01H,oBAAA,SAAAx5G,EAAAhC,GACA,OAAe64I,GAAa72I,EAAAhb,KAAAmzH,aAAAn6G,KAW5Bo5I,EAAAtzJ,UAAAw1H,mBAAA,SAAA9oE,EAAAxyC,GACAA,EAAAhZ,KAAAmzH,aAAAn6G,GACA,IAAApa,EAAA,GACAoc,EAAAwwC,EAAAlwC,cACAN,IACApc,EAAA,SAAiCizJ,GAAa72I,EAAAhC,GAC9CA,KAAA4/D,oBACAh6E,EAAA,0BAAiG,CACjG8zJ,KAAAnoH,OAAiCjf,GAAatS,EAAA4/D,mBAAA7wD,UAAA7W,MAAA,KAAArQ,UAI9C,IAAAqa,EAAAswC,EAAAzzC,gBAQA,cAPAmD,EAAAswC,EAAAnwC,mBACarJ,EAAOkJ,GAIpBtc,EAAA,cAHAA,EAAA,WAAAsc,EAKAtc,GAWAwzJ,EAAAtzJ,UAAAy1H,oBAAA,SAAAhpE,EAAAvyC,GACAA,EAAAhZ,KAAAmzH,aAAAn6G,GAEA,IADA,IAAAwiH,EAAA,GACAt+H,EAAA,EAAA0U,EAAA25C,EAAAxrD,OAA6C7C,EAAA0U,IAAQ1U,EACrDs+H,EAAA16H,KAAAd,KAAAs0H,mBAAA/oE,EAAAruD,GAAA8b,IAEA,OACAuyC,SAAAiwE,IAGA42B,EA1IY,CA2IVp+B,IChOE2+B,GAAyB,WAC7B,IAAAtiJ,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6QdkiJ,GAhPD,SAAA/hJ,GAEd,SAAAgiJ,IACA,IAAA7hJ,EAAAH,EAAAxT,KAAA2C,YAMA,OADAgR,EAAA8hJ,eAAA,IAAAC,cACA/hJ,EAqOA,OA7OI2hJ,GAASE,EAAAhiJ,GAabgiJ,EAAA/zJ,UAAA0xB,QAAA,WACA,OAAe+mD,GAAUI,KAUzBk7E,EAAA/zJ,UAAAs0H,YAAA,SAAA9lH,EAAA0L,GACA,GAAA1L,EAGA,qBAAAA,EAAA,CACA,IAAA0lJ,EAAsB9zE,GAAK5xE,GAC3B,OAAAtN,KAAAizJ,wBAAAD,EAAAh6I,GAEA,OAAiBimE,GAAU3xE,GAC3BtN,KAAAizJ,wBAAoE,EAAAj6I,GAGpEhZ,KAAAkzJ,oBAA4D,EAAAl6I,GAV5D,aAkBA65I,EAAA/zJ,UAAAm0J,wBAAA,SAAAD,EAAAh6I,GACA,IAAAuyC,EAAAvrD,KAAAmzJ,yBAAAH,EAAAh6I,GACA,OAAAuyC,EAAAxrD,OAAA,EACAwrD,EAAA,GAGA,MAQAsnG,EAAA/zJ,UAAAo0J,oBAAA,SAAAxwG,EAAA1pC,GACA,aAUA65I,EAAA/zJ,UAAA65E,aAAA,SAAArrE,EAAA0L,GACA,GAAA1L,EAGA,qBAAAA,EAAA,CACA,IAAA0lJ,EAAsB9zE,GAAK5xE,GAC3B,OAAAtN,KAAAmzJ,yBAAAH,EAAAh6I,GAEA,OAAiBimE,GAAU3xE,GAC3BtN,KAAAmzJ,yBACgC,EAAAn6I,GAGhChZ,KAAAozJ,qBAA6D,EAAAp6I,GAX7D,UAoBA65I,EAAA/zJ,UAAAq0J,yBAAA,SAAAH,EAAAh6I,GAGA,IADA,IAAAuyC,EAAA,GACA5sD,EAAqCq0J,EAAA,WAAqBr0J,EAAGA,IAAAqgF,YAC7DrgF,EAAAggF,UAAAC,KAAAy0E,cACgB75I,EAAM+xC,EAAAvrD,KAAAozJ,qBAAAz0J,EAAAqa,IAGtB,OAAAuyC,GASAsnG,EAAA/zJ,UAAAs0J,qBAAA,SAAA1wG,EAAA1pC,GACA,OAAe/I,KAKf4iJ,EAAA/zJ,UAAAu0H,aAAA,SAAA/lH,EAAA0L,GACA,GAAA1L,EAGA,qBAAAA,EAAA,CACA,IAAA0lJ,EAAsB9zE,GAAK5xE,GAC3B,OAAAtN,KAAAszJ,yBAAAN,EAAAh6I,GAEA,OAAiBimE,GAAU3xE,GAC3BtN,KAAAszJ,yBACgC,EAAAt6I,GAGhChZ,KAAAuzJ,qBAA6D,EAAAv6I,GAX7D,aAoBA65I,EAAA/zJ,UAAAw0J,yBAAA,SAAAN,EAAAh6I,GACA,aAQA65I,EAAA/zJ,UAAAy0J,qBAAA,SAAA7wG,EAAA1pC,GACA,aASA65I,EAAA/zJ,UAAA+5E,eAAA,SAAAvrE,GACA,GAAAA,EAGA,qBAAAA,EAAA,CACA,IAAA0lJ,EAAsB9zE,GAAK5xE,GAC3B,OAAAtN,KAAAwzJ,2BAAAR,GAEA,OAAiB/zE,GAAU3xE,GAC3BtN,KAAAwzJ,2BAAuE,GAGvExzJ,KAAAyzJ,uBAA+D,GAV/D,aAkBAZ,EAAA/zJ,UAAA00J,2BAAA,SAAAR,GACA,OAAAhzJ,KAAAi5E,gBAOA45E,EAAA/zJ,UAAA20J,uBAAA,SAAA/wG,GACA,OAAA1iD,KAAAi5E,gBAKA45E,EAAA/zJ,UAAAw0H,aAAA,SAAA9nE,EAAAxyC,GACA,IAAA0pC,EAAA1iD,KAAA0zJ,iBAAAloG,EAAAxyC,GACA,OAAAhZ,KAAA8yJ,eAAAa,kBAAAjxG,IAQAmwG,EAAA/zJ,UAAA40J,iBAAA,SAAAloG,EAAAxyC,GACA,aAUA65I,EAAA/zJ,UAAAy0H,cAAA,SAAAhoE,EAAAvyC,GACA,IAAA0pC,EAAA1iD,KAAA4zJ,kBAAAroG,EAAAvyC,GACA,OAAAhZ,KAAA8yJ,eAAAa,kBAAAjxG,IAOAmwG,EAAA/zJ,UAAA80J,kBAAA,SAAAroG,EAAAvyC,GACA,aAKA65I,EAAA/zJ,UAAA00H,cAAA,SAAAx4G,EAAAhC,GACA,IAAA0pC,EAAA1iD,KAAA6zJ,kBAAA74I,EAAAhC,GACA,OAAAhZ,KAAA8yJ,eAAAa,kBAAAjxG,IAOAmwG,EAAA/zJ,UAAA+0J,kBAAA,SAAA74I,EAAAhC,GACA,aAEA65I,EA9Oc,CA+OZ9/B,IC5QE+gC,GAAyB,WAC7B,IAAAzjJ,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAsCtBqjJ,GAAA,6BAYPC,GAAA,cA0CIC,GAAO,SAAApjJ,GAKX,SAAAqjJ,EAAAl7I,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAyCD,GAAA,GA6BzC,OAxBAhI,EAAAmjJ,YAAAl7I,EAAAk7I,YAKAnjJ,EAAAojJ,UAAAn7I,EAAAm7I,UAKApjJ,EAAAqjJ,QAAAp7I,EAAAo7I,QAKArjJ,EAAAsjJ,eAAA,GAIAtjJ,EAAAujJ,2BAAA,GACAvjJ,EAAAujJ,2BAAAvjJ,EAAAwjJ,WAAA,CACAC,cAA6Bl1E,GAAevuE,EAAA0jJ,sBAC5CC,eAA8Bn1E,GAAYxuE,EAAA0jJ,uBAE1C1jJ,EAmWA,OAtYI8iJ,GAASI,EAAArjJ,GA0CbqjJ,EAAAp1J,UAAA41J,qBAAA,SAAAhyG,EAAA48B,GACA,IAAAK,EAAAj9B,EAAAi9B,UACAp0B,EAAA,KACA,wBAAAo0B,EACAp0B,EAAuBi2B,GAAe,GAAAxhF,KAAAu0J,2BAAA7xG,EAAA48B,EAAAt/E,WAEtC,qBAAA2/E,GAAA,iBAAAA,EAAA,CACA,IAAAhwE,EAAA2vE,EAAA,GACA60E,EAAAxkJ,EAAA,YACAykJ,EAAAzkJ,EAAA,UAGA,IAAAwkJ,GAAAzxG,EAAA6wB,WAAA,CACA4gF,EAAA,GAAAC,EAAA,GACA,QAAAl3J,EAAA,EAAA0U,EAAA8wC,EAAA6wB,WAAAxzE,OAA4D7C,EAAA0U,IAAQ1U,EAAA,CACpE,IAAA03J,EAAAlyG,EAAA6wB,WAAAr2E,GACA,OAAA03J,EAAAj2E,SAAA,CACA,IAAAk2E,EAAAD,EAAAp0E,SAAAtvE,MAAA,KAAArQ,MACA,QAAAszJ,EAAA9zJ,QAAAw0J,GAAA,CACA,IAAAp2J,EAAA,GACA6qC,EAAA,EACAoxE,EAAAk6C,EAAAv2E,aACA,QAAAy2E,KAAAV,EAAA,CACA,GAAAA,EAAAU,KAAAp6C,EAAA,CACAj8G,EAAAq2J,EACA,QAEAxrH,EAEA7qC,IAEA21J,EADA31J,EApBA,IAoBA6qC,GACAoxE,GAEAy5C,EAAArzJ,KAAArC,EAAA,IAAAo2J,KAIA,iBAAAl1E,IAEAhwE,EAAA,YAAAwkJ,EACAxkJ,EAAA,UAAAykJ,GAGA,oBAAAA,EAAA,CACA,IAAA71J,EAAA61J,GACAA,EAAA,IACA,GAAA71J,EAGA,IAAA4iF,EAAA,GACA4zE,EAAA3oJ,MAAA+K,QAAAg9I,KAAA,CAAAA,GACA,QAAAn1J,KAAAo1J,EAAA,CAEA,IAAA9yE,EAAA,GACA,IAAApkF,EAAA,EAAA0U,EAAAmjJ,EAAAh1J,OAAyD7C,EAAA0U,IAAQ1U,EAAA,GACjE,IAAA63J,EAAA73J,GAAAmD,QAAA,KA5CA,KA6CA00J,EAAA73J,GAAAgU,MAAA,WACAlS,IACAsiF,EAAAyzE,EAAA73J,GAAAgU,MAAA,KAAArQ,OACA,kBAAA8+E,EACgCJ,GAAev/E,KAAAg1J,mBAAAh1J,MACfw/E,GAAYx/E,KAAAg1J,mBAAAh1J,OAG5CmhF,EAAAizE,EAAAp1J,IAAAsiF,EAGA/1B,EAA2Bi2B,GAD3B,iBAAA7B,OAC0C/sE,EAGA,GAHAuuE,EAAAz+B,EAAA48B,GAS1C,OAHA,OAAA/zB,IACAA,EAAA,IAEAA,GAOA2oG,EAAAp1J,UAAAm2J,oBAAA,SAAAvyG,EAAA48B,GACA,IAAA3vE,EAAwC2vE,EAAA,GACxC3vE,EAAA,QAAA+yC,EAAA0+B,kBAAA8zE,aAAA,WACAvlJ,EAAA,aAAA+yC,EAAA0+B,kBAAA8zE,aAAA,gBACA,IAAAl6I,EAAuBwmE,GAAe,KAAAxhF,KAAAm1J,iBAAAzyG,EAAA48B,EAAAt/E,MACtC,OAAAgb,EACA5O,MAAA+K,QAAA6D,GACuB64G,GAAoE,EAAAlkH,GAGpE8jH,GAA8E,KAAA9jH,QAIrG,GASAukJ,EAAAp1J,UAAAs2J,2BAAA,SAAA1yG,EAAA48B,EAAA+1E,GAGA,IAFA,IAAAn6B,EACAnpH,EAAA,GACApT,EAAA+jD,EAAA0+B,kBAA4CziF,EAAGA,IAAA0iF,mBAAA,CAC/C,IAAAljF,OAAA,EACAwhF,EAAAhhF,EAAAghF,UAEA,IAAAhhF,EAAA40E,WAAAxzE,QACA,IAAApB,EAAA40E,WAAAxzE,SAAA,IAAApB,EAAAw0E,WAAAwL,UAAA,IAAAhgF,EAAAw0E,WAAAwL,WACAxgF,EAAwBogF,GAAiB5/E,GAAA,GACzCq1J,GAAAj9C,KAAA54G,KACAA,OAAAyU,KAIAyiJ,IAEAl3J,EAAA6B,KAAAi1J,oBAAAt2J,EAAA2gF,IAEAnhF,EAGA,cAAAwhF,IAEAu7C,EAAAv7C,GAJAxhF,EAAA6B,KAAAo1J,2BAAAz2J,EAAA2gF,GAAA,IAOAvtE,EAAA4tE,IACA5tE,EAAA4tE,aAAAvzE,QACA2F,EAAA4tE,GAAA,CAAA5tE,EAAA4tE,KAEA5tE,EAAA4tE,GAAA7+E,KAAA3C,IAGA4T,EAAA4tE,GAAAxhF,EAEA,IAAA+F,EAAAvF,EAAA4zJ,WAAAxyJ,OACA,GAAAmE,EAAA,GACA6N,EAAA4tE,GAAA,CAAqC21E,UAAAvjJ,EAAA4tE,IACrC,QAAAziF,EAAA,EAA+BA,EAAAgH,EAAShH,IAAA,CACxC,IAAAq4J,EAAA52J,EAAA4zJ,WAAAr1J,GAAAO,KACAsU,EAAA4tE,GAAA41E,GAAA52J,EAAA4zJ,WAAAr1J,GAAAiB,QAIA,GAAAk3J,EAGA,CACA,IAAA7pG,EAAA,IAA8BlxC,EAAOvI,GACrCmpH,GACA1vE,EAAApwC,gBAAA8/G,GAEA,IAAAs6B,EAAA9yG,EAAAwyG,aAAA,Q/H/MO,SAAAxyG,EAAA27B,EAAA5gF,GACP,OAAAilD,EAAA+yG,eAAAp3E,EAAA5gF,IAAA,G+H+MgBg4J,CAAc/yG,EAAA1iD,KAAAw0J,UAAA,MAI9B,OAHAgB,GACAhqG,EAAAxvC,MAAAw5I,GAEAhqG,EAZA,OAAAz5C,GAoBAmiJ,EAAAp1J,UAAAk2J,mBAAA,SAAAtyG,EAAA48B,GACA,OAAAt/E,KAAAo1J,2BAAA1yG,EAAA48B,GAAA,IAOA40E,EAAAp1J,UAAA42J,UAAA,SAAAhzG,EAAA48B,GACA,IAAA//D,EAAAvf,KAAA21J,6BAAAjzG,EAAA48B,GACA,GAAA//D,EACA,WAAuB+V,GAAK/V,EAAkBoD,GAAcE,MAQ5DqxI,EAAAp1J,UAAA82J,eAAA,SAAAlzG,EAAA48B,GAEA,IAAArhE,EAA0BujE,GAAe,GAAAxhF,KAAA61J,oBAAAnzG,EAAA48B,EAAAt/E,MACzC,OAAAie,EACA,IAAuBi6G,GAAUj6G,QAGjC,GAQAi2I,EAAAp1J,UAAAg3J,oBAAA,SAAApzG,EAAA48B,GAEA,IAAAi4C,EAA0B/1C,GAAe,GAAAxhF,KAAA+1J,yBAAArzG,EAAA48B,EAAAt/E,MACzC,GAAAu3H,EACA,WAAuBF,GAAeE,IAQtC28B,EAAAp1J,UAAAk3J,iBAAA,SAAAtzG,EAAA48B,GAEA,IAAAw5C,EAAuBt3C,GAAe,GAAAxhF,KAAAi2J,sBAAAvzG,EAAA48B,EAAAt/E,MACtC,GAAA84H,EACA,WAAuBN,GAAYM,IAQnCo7B,EAAAp1J,UAAAo3J,mBAAA,SAAAxzG,EAAA48B,GACQ4B,GAASlhF,KAAAm2J,qBAAAzzG,EAAA48B,EAAAt/E,OAOjBk0J,EAAAp1J,UAAAs3J,wBAAA,SAAA1zG,EAAA48B,GACQ4B,GAASlhF,KAAAq2J,0BAAA3zG,EAAA48B,EAAAt/E,OAOjBk0J,EAAAp1J,UAAAw3J,qBAAA,SAAA5zG,EAAA48B,GACQ4B,GAASlhF,KAAAu2J,uBAAA7zG,EAAA48B,EAAAt/E,OAOjBk0J,EAAAp1J,UAAA03J,eAAA,SAAA9zG,EAAA48B,GACA,IAAA//D,EAAAvf,KAAA21J,6BAAAjzG,EAAA48B,GACA,OAAA//D,EACA,IAAiCo3G,GAAUp3G,EAAkBoD,GAAcE,UAI3E,GASAqxI,EAAAp1J,UAAA23J,oBAAA,SAAA/zG,EAAA48B,GACA,IAAA+kE,EAAmB7iE,GAAe,KAAAxhF,KAAA02J,kCAAAh0G,EAAA48B,EAAAt/E,MAClC,OAAAqkJ,QAIA,GAQA6P,EAAAp1J,UAAA63J,eAAA,SAAAj0G,EAAA48B,GACA,IAAA//D,EAAAvf,KAAA21J,6BAAAjzG,EAAA48B,GACA,GAAA//D,EACA,WAAuB0V,GAAU1V,EAAkBoD,GAAcE,MAQjEqxI,EAAAp1J,UAAA83J,YAAA,SAAAl0G,EAAA48B,GAEA,IAAAu3E,EAA8Br1E,GAAe,OAAAxhF,KAAA82J,0BAAAp0G,EAAA48B,EAAAt/E,MAC7C,GAAA62J,KAAA,IACA,IAEAjlJ,EAFA2N,EAAAs3I,EAAA,GACAvkI,EAAA,CAAA/S,EAAAxf,QACA7C,OAAA,EACA,IAAAA,EAAA,EAAA0U,EAAAilJ,EAAA92J,OAAoD7C,EAAA0U,IAAQ1U,EAC5Csc,EAAM+F,EAAAs3I,EAAA35J,IACtBo1B,EAAAxxB,KAAAye,EAAAxf,QAEA,WAAuBm5B,GAAO3Z,EAAkBoD,GAAcE,IAAAyP,KAY9D4hI,EAAAp1J,UAAA62J,6BAAA,SAAAjzG,EAAA48B,GACA,OAAekC,GAAe,KAAAxhF,KAAA02J,kCAAAh0G,EAAA48B,EAAAt/E,OAK9Bk0J,EAAAp1J,UAAAy0J,qBAAA,SAAA7wG,EAAA1pC,GACA,IAAAgC,EAAAhb,KAAAi1J,oBAAAvyG,EAAA,CAAA1iD,KAAAkzH,eAAAxwE,EAAA1pC,GAAA,MACA,OAAAgC,GAAA,MAKAk5I,EAAAp1J,UAAAs0J,qBAAA,SAAA1wG,EAAA1pC,GACA,IAAAC,EAAA,CACAk7I,YAAAn0J,KAAAm0J,YACAC,UAAAp0J,KAAAo0J,WAMA,OAJAp7I,GACYzH,EAAM0H,EAAAjZ,KAAAkzH,eAAAxwE,EAAA1pC,IAElBhZ,KAAA00J,qBAAAhyG,EAAA,CAAAzpC,KACA,IAKAi7I,EAAAp1J,UAAA20J,uBAAA,SAAA/wG,GACA,OAAep3B,GAAatrB,KAAAq0J,QAAAr0J,KAAAq0J,QAAA3xG,EAAA0+B,kBAAA8zE,aAAA,aAE5BhB,EAvYW,CAwYTtB,IACFqB,GAAOn1J,UAAA01J,UAAAT,GAMPE,GAAOn1J,UAAAg4J,0BAAA,CACPC,6BAAA,IAOA9C,GAAOn1J,UAAA43J,kCAAA,CACPK,6BAAA,IAOA9C,GAAOn1J,UAAAq2J,iBAAA,CACP4B,6BAAA,IAOA9C,GAAOn1J,UAAA+2J,oBAAA,CACPkB,6BAAA,CACAC,YAAuBz3E,GAAgB00E,GAAOn1J,UAAAo3J,oBAC9Ce,aAAwB13E,GAAgB00E,GAAOn1J,UAAAo3J,sBAQ/CjC,GAAOn1J,UAAAi3J,yBAAA,CACPgB,6BAAA,CACAG,iBAA4B33E,GAAgB00E,GAAOn1J,UAAAs3J,yBACnDe,kBAA6B53E,GAAgB00E,GAAOn1J,UAAAs3J,2BAQpDnC,GAAOn1J,UAAAm3J,sBAAA,CACPc,6BAAA,CACAK,cAAyB73E,GAAgB00E,GAAOn1J,UAAAw3J,sBAChDe,eAA0B93E,GAAgB00E,GAAOn1J,UAAAw3J,wBAQjDrC,GAAOn1J,UAAAq3J,qBAAA,CACPY,6BAAA,CACAxhI,MAAiBgqD,GAAgB00E,GAAOn1J,UAAA62J,gCAQxC1B,GAAOn1J,UAAAu3J,0BAAA,CACPU,6BAAA,CACAngC,WAAsBr3C,GAAgB00E,GAAOn1J,UAAA03J,kBAQ7CvC,GAAOn1J,UAAAy3J,uBAAA,CACPQ,6BAAA,CACA9+H,QAAmBsnD,GAAgB00E,GAAOn1J,UAAA83J,eAQ1C3C,GAAOn1J,UAAAw4J,aAAA,CACPP,6BAAA,CACA7hI,WAAsBsqD,GAAay0E,GAAOn1J,UAAA23J,uBAG3B,IAAAc,GAAA,GC9jBR,SAAArwJ,GAAAw7C,GAEP,OAAA80G,GADYj5E,GAAiB77B,GAAA,IAOtB,SAAA80G,GAAAC,GACP,IAAAn6J,EAAA,6BAAAskE,KAAA61F,GACA,OAAAn6J,OACAsV,IAAAtV,EAAA,YAGA,EAOO,SAAAo6J,GAAAh1G,GACP,IAAAzjD,EAAYs/E,GAAiB77B,GAAA,GAC7Bi1G,EAAAz5H,KAAAghD,MAAAjgF,GACA,OAAAkM,MAAAwsJ,QAAA/kJ,EAAA+kJ,EAAA,IAMO,SAAAC,GAAAl1G,GAEP,OAAAm1G,GADYt5E,GAAiB77B,GAAA,IAOtB,SAAAm1G,GAAAJ,GAEP,IAAAn6J,EAAA,4CAAAskE,KAAA61F,GACA,OAAAn6J,EACAwyD,WAAAxyD,EAAA,SAGA,EAOO,SAAAw6J,GAAAp1G,GAEP,OAAAq1G,GADYx5E,GAAiB77B,GAAA,IAOtB,SAAAq1G,GAAAN,GACP,IAAAn6J,EAAA,gBAAAskE,KAAA61F,GACA,OAAAn6J,EACAs3C,SAAAt3C,EAAA,YAGA,EAOO,SAAA8J,GAAAs7C,GACP,OAAW67B,GAAiB77B,GAAA,GAAAs1G,OAMrB,SAAAC,GAAAv1G,EAAAw1G,GACPC,GAAAz1G,EAAA,WA2BO,SAAA01G,GAAA11G,EAAArO,GACP,IAAAojH,EAAApjH,EAAAgkH,cACA31G,EAAA+F,YAAqBu1B,GAAQxoB,eAAAiiG,IAMtB,SAAAa,GAAA51G,EAAA61G,GACP,IAAAd,EAAAc,EAAArrJ,WACAw1C,EAAA+F,YAAqBu1B,GAAQxoB,eAAAiiG,IAMtB,SAAAU,GAAAz1G,EAAA+0G,GACP/0G,EAAA+F,YAAqBu1B,GAAQxoB,eAAAiiG,ICtI7B,IAAIe,GAAyB,WAC7B,IAAAnoJ,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAkCzB+nJ,GAAiB1E,GACrB,8EAMA2E,GAAA,CACAphC,gBAAA,mBACAqhC,WAAA,cACAlgC,aAAA,gBACAmgC,aAAA,iBAUIC,GAAI,SAAAhoJ,GAKR,SAAAioJ,EAAA9/I,GACA,IAAAhI,EAAAhR,KACAiZ,EAAgED,GAAA,GAmChE,OAlCAhI,EAAAH,EAAAxT,KAAA2C,KAAAiZ,IAAAjZ,MAKA+4J,cAAAnmJ,IAAAqG,EAAA+/I,SAAA//I,EAAA+/I,QAKAhoJ,EAAAioJ,YAAArmJ,IAAAqG,EAAAigJ,OAAAjgJ,EAAAigJ,MAKAloJ,EAAAmoJ,iBAAAvmJ,IAAAqG,EAAAmgJ,YACAngJ,EAAAmgJ,WAKApoJ,EAAAqoJ,mBAAAzmJ,IAAAqG,EAAAqgJ,cACArgJ,EAAAqgJ,aAIAtoJ,EAAAsjJ,eAAAr7I,EAAAq7I,eACAr7I,EAAAq7I,eAAqCmE,GAKrCznJ,EAAA0gJ,UAAA9+I,IAAAqG,EAAAy4I,MACAz4I,EAAAy4I,KACA1gJ,EA6tBA,OAtwBIwnJ,GAASM,EAAAjoJ,GAiDbioJ,EAAAh6J,UAAAy6J,gBAAA,SAAA72G,EAAA48B,GAEA,IAAAi4C,EAA0B/1C,GAAe,GAAAxhF,KAAAw5J,oBAAA92G,EAAA48B,EAAAt/E,MACzC,OAAAu3H,EACA,IAAsCF,GAAeE,QAIrD,GASAuhC,EAAAh6J,UAAA26J,kBAAA,SAAA/2G,EAAA48B,GAEA,IAAAw5C,EAAuBt3C,GAAe,GAAAxhF,KAAA05J,sBAAAh3G,EAAA48B,EAAAt/E,MACtC,GAAA84H,EACA,WAAuBN,GAAYM,IAQnCggC,EAAAh6J,UAAA66J,mBAAA,SAAAj3G,EAAA48B,GACQ4B,GAASlhF,KAAA45J,qBAAAl3G,EAAA48B,EAAAt/E,OAOjB84J,EAAAh6J,UAAA+6J,qBAAA,SAAAn3G,EAAA48B,GACQ4B,GAASlhF,KAAA85J,uBAAAp3G,EAAA48B,EAAAt/E,OAQjB84J,EAAAh6J,UAAAi7J,WAAA,SAAAr3G,EAAA48B,GACA,OAAekC,GAAe,OAAAxhF,KAAAg6J,iBAAAt3G,EAAA48B,EAAAt/E,OAQ9B84J,EAAAh6J,UAAAm7J,aAAA,SAAAv3G,EAAA48B,GACA,OAAekC,GAAe,OAAAxhF,KAAAk6J,kBAAAx3G,EAAA48B,EAAAt/E,OAQ9B84J,EAAAh6J,UAAAq7J,kBAAA,SAAAz3G,EAAA48B,GACA,OAAekC,GAAe,OAAAxhF,KAAA82J,0BAAAp0G,EAAA48B,EAAAt/E,OAQ9B84J,EAAAh6J,UAAAs7J,uBAAA,SAAA13G,EAAA48B,GACA,OAAekC,GAAe,OAAAxhF,KAAA02J,kCAAAh0G,EAAA48B,EAAAt/E,OAO9B84J,EAAAh6J,UAAAu7J,gBAAA,SAAA33G,EAAA48B,GAEA,IAAAg7E,EAA6B94E,QAAe5uE,EAAA5S,KAAAs3J,aAAA50G,EAAA48B,EAAAt/E,MAC5Cs6J,GACkEh7E,IAAAv/E,OAAA,GAClEe,KAAAw5J,IAQAxB,EAAAh6J,UAAAy7J,gBAAA,SAAA73G,EAAA48B,GAEA,IAAAg7E,EAA6B94E,QAAe5uE,EAAA5S,KAAAs3J,aAAA50G,EAAA48B,EAAAt/E,MAC5Cs6J,IACkEh7E,IAAAv/E,OAAA,GAClE,GAAAu6J,IASAxB,EAAAh6J,UAAA07J,aAAA,SAAA93G,EAAA48B,GAEA,IAAAu3E,EAA8Br1E,GAAe,OAAAxhF,KAAAy6J,iBAAA/3G,EAAA48B,EAAAt/E,MAC7C,GAAA62J,KAAA,IACA,IAEAjlJ,EAFA2N,EAAAs3I,EAAA,GACAvkI,EAAA,CAAA/S,EAAAxf,QACA7C,OAAA,EACA,IAAAA,EAAA,EAAA0U,EAAAilJ,EAAA92J,OAAoD7C,EAAA0U,IAAQ1U,EAC5Csc,EAAM+F,EAAAs3I,EAAA35J,IACtBo1B,EAAAxxB,KAAAye,EAAAxf,QAEA,WAAuBm5B,GAAO3Z,EAAkBoD,GAAcE,IAAAyP,KAY9DwmI,EAAAh6J,UAAA47J,WAAA,SAAAh4G,EAAA48B,GAEA,IAAA//D,EAA8BiiE,GAAe,OAAAxhF,KAAA26J,eAAAj4G,EAAA48B,EAAAt/E,MAC7C,OAAAuf,EACA,IAAiCo3G,GAAUp3G,EAAkBoD,GAAcE,UAI3E,GASAi2I,EAAAh6J,UAAA87J,cAAA,SAAAl4G,EAAA48B,GAEA,IAAA//D,EAA8BiiE,GAAe,OAAAxhF,KAAA66J,kBAAAn4G,EAAA48B,EAAAt/E,MAC7C,OAAemf,GAAcI,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAQ7Bu5I,EAAAh6J,UAAAg8J,aAAA,SAAAp4G,EAAA48B,GAMA,IALA,IAIAhiF,EAJA2B,EAAgBs/E,GAAiB77B,GAAA,GACjCq4G,EAAA,6CAEAx7I,EAAA,GAEAjiB,EAAAy9J,EAAAn5F,KAAA3iE,IACAsgB,EAAAze,KAAAgvD,WAAAxyD,EAAA,KACA2B,IAAAgjE,OAAA3kE,EAAA,GAAAyC,QAEA,QAAAd,EAAA,CAGA,IACA+7J,EADA17E,EAAA,GACA,QACAj4D,EAAA,MACA,GAAA2zI,EAEA3zI,EADuBiE,GAAa0vI,GACpC5yI,qBAEA,WAAAf,EAAA,CACA,IAAAzV,EAAA1U,OAAA,EACA,IAAAA,EAAA,EAAA0U,EAAA2N,EAAAxf,OAAoD7C,EAAA0U,EAAQ1U,GAAA,GAC5D,IAAAshB,EAAAe,EAAAriB,GACA4C,EAAAyf,EAAAriB,EAAA,GACAqiB,EAAAriB,GAAA4C,EACAyf,EAAAriB,EAAA,GAAAshB,GAGA,IAAAta,EAAAqb,EAAAxf,OAIA,GAHA,GAAAmE,GACAqb,EAAAze,KAAA,GAEA,IAAAoD,EAGA,OAAAqb,IAQAu5I,EAAAh6J,UAAAm8J,iBAAA,SAAAv4G,EAAA48B,GACA,IAAArgF,EAAgBs/E,GAAiB77B,GAAA,GAAA3M,QAAA,iBACjCpmC,EAAA2vE,EAAA,GACA07E,EAAArrJ,EAAA,QACAurJ,EAAAvrJ,EAAA,aACA0X,EAAA,MACA2zI,IAEA3zI,EADuBiE,GAAa0vI,GACpC5yI,sBAEA,IAgBAtoB,EAAA0e,EAAAy6B,EAhBA3c,EAAAr9B,EAAAiS,MAAA,OAEAiqJ,EAAA,EACAz4G,EAAAwyG,aAAA,gBACAiG,EAAkBpD,GAA4Br1G,EAAAwyG,aAAA,iBAE9CxyG,EAAAwyG,aAAA,aACAiG,EAAkBpD,GAA4Br1G,EAAAwyG,aAAA,cAETxyG,EAAA,WAAAwyG,aAAA,gBACrCiG,EAAkBpD,GACar1G,EAAA,WAAAwyG,aAAA,iBAE/BgG,IACAC,EAAkBpD,GAA4BmD,IAI9C,IADA,IAAA37I,EAAA,GACAriB,EAAA,EAAA0U,EAAA0qB,EAAAv8B,OAA2C7C,EAAA0U,EAAQ1U,GAAAi+J,EACnDr7J,EAAAgwD,WAAAxzB,EAAAp/B,IACAshB,EAAAsxC,WAAAxzB,EAAAp/B,EAAA,IACA+7C,EAAA,IAAAkiH,EAAArrG,WAAAxzB,EAAAp/B,EAAA,MACA,OAAAmqB,EAAA46C,OAAA,KACA1iD,EAAAze,KAAAhB,EAAA0e,EAAAy6B,GAGA15B,EAAAze,KAAA0d,EAAA1e,EAAAm5C,GAGA,OAAA15B,GAQAu5I,EAAAh6J,UAAAs8J,UAAA,SAAA14G,EAAAvkD,EAAAmhF,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0rJ,EAAA3J,EAAA,QACAhvG,EAAA8L,aAAA,eAAA6sG,GACA,IAAAhH,EAAA1kJ,EAAA,QACA0X,EAAA,MACAgtI,IACAhtI,EAA8BiE,GAAa+oI,GAAAjsI,sBAE3C,IACAkU,EADAhT,EAAAnrB,EAAAizB,kBAIAkL,EADA,OAAAjV,EAAA46C,OAAA,KACA34C,EAAA,OAAAA,EAAA,GAGAA,EAAA,OAAAA,EAAA,GAEAooI,KAGAp1H,GAAA,KADAhT,EAAA,QAGQ6uI,GAAmBz1G,EAAApmB,IAS3Bw8H,EAAAh6J,UAAAw8J,WAAA,SAAAhyI,EAAAiyI,EAAAC,GACA,IAAAn0I,EAAA,MACAk0I,IACAl0I,EAA8BiE,GAAaiwI,GAAAnzI,sBAE3C,IAAAkU,EAAA,OAAAjV,EAAA46C,OAAA,KACA34C,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACAkyI,IAGAl/H,GAAA,KADAhT,EAAA,QAGA,OAAAgT,GAQAw8H,EAAAh6J,UAAA28J,cAAA,SAAA/4G,EAAAvkD,EAAAmhF,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0rJ,EAAA3J,EAAA,QACAhvG,EAAA8L,aAAA,eAAA6sG,GAOA,IANA,IAKA/xI,EALA+qI,EAAA1kJ,EAAA,QAEA6+E,EAAArwF,EAAAizB,iBACAltB,EAAAsqF,EAAAzuF,OACAisI,EAAA,IAAA5/H,MAAAlI,GAEAhH,EAAA,EAAuBA,EAAAgH,IAAShH,EAChCosB,EAAAklE,EAAAtxF,GACA8uI,EAAA9uI,GAAA8C,KAAAs7J,WAAAhyI,EAAA+qI,EAAA3C,GAEQyG,GAAmBz1G,EAAAspF,EAAAh9G,KAAA,OAQ3B8pI,EAAAh6J,UAAA48J,YAAA,SAAAh5G,EAAA1nC,EAAAskE,GACA,IACA+0E,EADA/0E,IAAAv/E,OAAA,GACA,QACAs0J,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IAAAlxJ,EAAkBi7E,GAAe17B,EAAA27B,aAAA,OACjC37B,EAAA+F,YAAAtlD,GACAnD,KAAAo7J,UAAAj4J,EAAA6X,EAAAskE,IAOAw5E,EAAAh6J,UAAA68J,cAAA,SAAAj5G,EAAAxkC,EAAAohE,GACA,IACA+0E,EADA/0E,IAAAv/E,OAAA,GACA,QACAs0J,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IACAtiJ,EAAA,CAAAmM,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,IACQwjE,GAAiE,CAAMh/B,QAAa1iD,KAAA47J,sBAA+Bn7E,GAA4B1uE,EAAAutE,EAFvJ,8BAEuJt/E,OAQvJ84J,EAAAh6J,UAAA+8J,iBAAA,SAAAn5G,EAAA1nC,EAAAskE,GACA,IACA+0E,EADA/0E,IAAAv/E,OAAA,GACA,QACAs0J,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IAAAyH,EAAsB19E,GAAe17B,EAAA27B,aAAA,WACrC37B,EAAA+F,YAAAqzG,GACA97J,KAAAy7J,cAAAK,EAAA9gJ,EAAAskE,IASAw5E,EAAAh6J,UAAAi9J,mBAAA,SAAA59J,EAAAmhF,EAAAe,GACA,IAAA1wE,EAAA2vE,IAAAv/E,OAAA,GACAwiD,EAAA5yC,EAAA+yC,KACAs5G,EAAArsJ,EAAA,gBAIA,YAHAiD,IAAAopJ,IACArsJ,EAAA,oBAEeyuE,GAAe77B,EAAA87B,kBAAAzrE,IAAAopJ,EAAA,wBAQ9BlD,EAAAh6J,UAAAm9J,uBAAA,SAAAv5G,EAAA1nC,EAAAskE,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0kJ,EAAA1kJ,EAAA,QAIA,GAHA,iBAAA+yC,EAAA89B,UAAA6zE,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,YAAA3xG,EAAA89B,UAAA,iBAAA99B,EAAA89B,SAAA,CACA,IAAA4pE,EAAApvI,EAAAge,iBACY0oD,GAAmB,CAAEh/B,OAAAgvG,OAAA2C,WAA2Cr0J,KAAAk8J,kBAAAl8J,KAAA+7J,mBAAA3R,EAAA9qE,OAAA1sE,EAAA5S,WAE5E,eAAA0iD,EAAA89B,SAAA,CACA,IAAA27E,EAA0B/9E,GAAe17B,EAAA27B,aAAA,WACzC37B,EAAA+F,YAAA0zG,GACAn8J,KAAAo8J,qBAAAD,EAAAnhJ,EAAAskE,KASAw5E,EAAAh6J,UAAAu9J,wBAAA,SAAA35G,EAAA1nC,EAAAskE,GACA,IACA+0E,EADA/0E,IAAAv/E,OAAA,GACA,QAIA,GAHA,sBAAA2iD,EAAA89B,UAAA6zE,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,eAAA3xG,EAAA89B,UACA,sBAAA99B,EAAA89B,SAAA,CACA,IAAAs7E,EAA0B19E,GAAe17B,EAAA27B,aAAA,WACzC37B,EAAA+F,YAAAqzG,GACA97J,KAAAy7J,cAAAK,EAAA9gJ,EAAAskE,QAEA,aAAA58B,EAAA89B,SAAA,CACA,IAAA0lE,EAA2B9nE,GAAe17B,EAAA27B,aAAA,YAC1C37B,EAAA+F,YAAAy9F,GACAlmJ,KAAAs8J,oBAAApW,EAAAlrI,EAAAskE,KASAw5E,EAAAh6J,UAAAy9J,4BAAA,SAAA75G,EAAA1nC,EAAAskE,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0kJ,EAAA1kJ,EAAA,QACAqpJ,EAAArpJ,EAAA,QACA0kJ,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IAAAv7B,EAAA99G,EAAA2+G,cACQj4C,GAAmB,CAAEh/B,OAAAgvG,OAAA2C,UAAA2E,WAA6Dh5J,KAAAw8J,oCAAAx8J,KAAAy8J,mCAAA3jC,EAAAx5C,OAAA1sE,EAAA5S,OAQ1F84J,EAAAh6J,UAAA49J,iBAAA,SAAAh6G,EAAA1nC,EAAAskE,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACAs0J,EAAA1kJ,EAAA,QACA+hJ,EAAA/hJ,EAAA,KACA0kJ,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IAAA7lE,EAAAxzE,EAAAi0E,YACQvN,GAAmB,CAAEh/B,OAAAgvG,OAAA2C,WAA2Cr0J,KAAA28J,yBAAiCx8E,GAAqB,eAAAqO,EAAAlP,OAAA1sE,EAAA5S,OAQ9H84J,EAAAh6J,UAAA89J,6BAAA,SAAAl6G,EAAA1nC,EAAAskE,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0kJ,EAAA1kJ,EAAA,QACAupJ,EAAAvpJ,EAAA,MACA0kJ,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IAAAvnJ,EAAAkO,EAAA88G,iBACQp2C,GAAmB,CAAEh/B,OAAAgvG,OAAA2C,UAAA6E,SAAyDl5J,KAAA68J,qCAAA78J,KAAAy8J,mCAAA3vJ,EAAAwyE,OAAA1sE,EAAA5S,OAQtF84J,EAAAh6J,UAAAg+J,WAAA,SAAAp6G,EAAA2hG,EAAA/kE,GACA,IAAA9mD,EAAyB4lD,GAAe17B,EAAA27B,aAAA,cACxC37B,EAAA+F,YAAAjwB,GACAx4B,KAAA67J,iBAAArjI,EAAA6rH,EAAA/kE,IAQAw5E,EAAAh6J,UAAAi+J,6BAAA,SAAAr6G,EAAA7oB,EAAAylD,GACA,IAAAs1E,EAAA50J,KAAAg9J,uBAAAnjI,EAAAylD,GACAs1E,IACAlyG,EAAA+F,YAAAmsG,GACA50J,KAAAi8J,uBAAArH,EAAA/6H,EAAAylD,KASAw5E,EAAAh6J,UAAAm+J,kBAAA,SAAAv6G,EAAAp5B,EAAAg2D,GACA,IAAAs1E,EAAoBx2E,GAAe17B,EAAA27B,aAAA,SACnC37B,EAAA+F,YAAAmsG,GACA50J,KAAA07J,YAAA9G,EAAAtrI,EAAAg2D,IAQAw5E,EAAAh6J,UAAAo+J,8BAAA,SAAAx6G,EAAAy6G,EAAA79E,GACA,IAAAs1E,EAAA50J,KAAAg9J,uBAAAG,EAAA79E,GACAs1E,IACAlyG,EAAA+F,YAAAmsG,GACA50J,KAAAq8J,wBAAAzH,EAAAuI,EAAA79E,KASAw5E,EAAAh6J,UAAAs9J,qBAAA,SAAA15G,EAAA7oB,EAAAylD,GACA,IAAAs1E,EAAoBx2E,GAAe17B,EAAA27B,aAAA,gBACnC37B,EAAA+F,YAAAmsG,GACA50J,KAAAi8J,uBAAArH,EAAA/6H,EAAAylD,IAQAw5E,EAAAh6J,UAAAw9J,oBAAA,SAAA55G,EAAAy6G,EAAA79E,GACA,IAAAs1E,EAAoBx2E,GAAe17B,EAAA27B,aAAA,qBACnC37B,EAAA+F,YAAAmsG,GACA50J,KAAAq8J,wBAAAzH,EAAAuI,EAAA79E,IAOAw5E,EAAAh6J,UAAAs+J,qBAAA,SAAA16G,EAAA1nC,EAAAskE,GACA,IAGAnhF,EAHAwR,EAAqE2vE,IAAAv/E,OAAA,GACrE4Z,EAAmBpI,EAAM,GAAG5B,GAC5BgK,EAAA,KAAA+oC,EAGAvkD,EADAiO,MAAA+K,QAAA6D,GACoB64G,GAAoE,EAAAlkH,GAGpE8jH,GAA8E,KAAA9jH,GAE1F+xE,GAAiE,EAAA1hF,KAAAq9J,sBAAAr9J,KAAAg9J,uBAAA,CAAA7+J,GAAAmhF,OAAA1sE,EAAA5S,OAOzE84J,EAAAh6J,UAAAw+J,oBAAA,SAAA56G,EAAA8I,EAAA8zB,GACA,IAAAk2E,EAAAhqG,EAAA9vC,QACA85I,GACA9yG,EAAA8L,aAAA,MAAuD,GAEvD,IAAA7+C,EAAwC2vE,IAAAv/E,OAAA,GACxCq0J,EAAAzkJ,EAAA,UACAurH,EAAA1vE,EAAAnwC,kBACA1L,EAAAuwE,cACAvwE,EAAAuwE,YAAA,GACAvwE,EAAAuwE,YAAAk0E,GAAA,IAEA,IAAAl5I,EAAAswC,EAAAzzC,gBACAhL,EAAA,GACAgF,EAAA,GACA,QAAAtT,KAAAyc,EAAA,CACA,IAAA/c,EAAA+c,EAAAzc,GACA,OAAAN,IACA4O,EAAAjM,KAAArC,GACAsT,EAAAjR,KAAA3C,GACAM,GAAAy8H,GAA+D,qBAAAngH,sBAC/Dtc,KAAAkR,EAAAuwE,YAAAk0E,KACAzkJ,EAAAuwE,YAAAk0E,GAAA31J,GAA8DohF,GAAiB7/E,KAAAo9J,qBAAAp9J,OAI/EvB,KAAAkR,EAAAuwE,YAAAk0E,KACAzkJ,EAAAuwE,YAAAk0E,GAAA31J,GAA8DohF,GAAkBs4E,MAKhF,IAAAx+I,EAAmBpI,EAAM,GAAG5B,GAC5BgK,EAAA+oC,OACQg/B,GAAiE,EAAA/xE,EAAAuwE,YAAiCC,QAAqBvtE,EAAAwhJ,GAAAriJ,EAAAutE,EAAAvyE,IAQ/H+rJ,EAAAh6J,UAAAy+J,qBAAA,SAAA76G,EAAA6I,EAAA+zB,GACA,IAAA3vE,EAAwC2vE,IAAAv/E,OAAA,GACxCo0J,EAAAxkJ,EAAA,YACAykJ,EAAAzkJ,EAAA,UAEAuwE,EAAA,GACAA,EAAAk0E,GAAA,GACAl0E,EAAAk0E,GAAAD,GAA8Ct0E,GAAiB7/E,KAAAs9J,oBAAAt9J,MAC/D,IAAA2Z,EAAmBpI,EAAM,GAAG5B,GAC5BgK,EAAA+oC,OACQg/B,GAAiE,EAAAxB,EAAyBC,GAAqBg0E,EAAAC,GAAA7oG,EAAA+zB,IAUvHw5E,EAAAh6J,UAAA29J,mCAAA,SAAAt+J,EAAAmhF,EAAAe,GACA,IAAA99B,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACA,OAAe07B,GAAep+E,KAAAw0J,UAAAkE,GAAAn2G,EAAAi+B,YAU9Bs4E,EAAAh6J,UAAAk+J,uBAAA,SAAA7+J,EAAAmhF,EAAAe,GACA,IAKAG,EALA7wE,EAAA2vE,IAAAv/E,OAAA,GACAu5J,EAAA3pJ,EAAA,aACAqpJ,EAAArpJ,EAAA,QACAupJ,EAAAvpJ,EAAA,MACAypJ,EAAAzpJ,EAAA,WAoBA,OAlBAvD,MAAA+K,QAAAhZ,GAgBAqiF,EAAA,WAdA,kBADAA,EAAwE,EAAAhwD,aACxE,IAAA8oI,EACA94E,EAAA,eAEA,YAAAA,IAAA,IAAAw4E,EACAx4E,EAAA,UAEA,eAAAA,IAAA,IAAA04E,EACA14E,EAAA,QAEA,oBAAAA,IAAA,IAAA44E,IACA54E,EAAA,cAMepC,GAAep+E,KAAAw0J,UAAAh0E,IAW9Bs4E,EAAAh6J,UAAA+0J,kBAAA,SAAA74I,EAAAhC,GACAA,EAAAhZ,KAAAmzH,aAAAn6G,GACA,IAAAohI,EAAmBh8D,GAAep+E,KAAAw0J,UAAA,QAClC7kJ,EAAA,CAAuB+yC,KAAA03F,EAAAsX,KAAA1xJ,KAAA0xJ,KAAA2C,QAAAr0J,KAAAq0J,QACvB6E,MAAAl5J,KAAAi5J,OAAAD,QAAAh5J,KAAA+4J,SACAO,aAAAt5J,KAAAq5J,cAAAD,WAAAp5J,KAAAm5J,aAKA,OAJAngJ,GACYzH,EAAM5B,EAAAqJ,GAElBhZ,KAAAo9J,qBAAAhjB,EAAAp/H,EAAA,CAAArL,IACAyqI,GAWA0e,EAAAh6J,UAAA80J,kBAAA,SAAAroG,EAAAvyC,GACAA,EAAAhZ,KAAAmzH,aAAAn6G,GACA,IAAA0pC,EAAmB07B,GAAep+E,KAAAw0J,UAAA,kBAClC9xG,EAAA86G,eAA4Br/E,GAAuB,qBAAAn+E,KAAAs0J,gBACnD,IAAA3kJ,EAAA,CACA0kJ,QAAAr0J,KAAAq0J,QACA3C,KAAA1xJ,KAAA0xJ,KACAwH,MAAAl5J,KAAAi5J,OACAD,QAAAh5J,KAAA+4J,SACAO,aAAAt5J,KAAAq5J,cACAD,WAAAp5J,KAAAm5J,YACA/E,UAAAp0J,KAAAo0J,UACAD,YAAAn0J,KAAAm0J,aAMA,OAJAn7I,GACYzH,EAAM5B,EAAAqJ,GAElBhZ,KAAAu9J,qBAAA76G,EAAA6I,EAAA,CAAA57C,IACA+yC,GAEAo2G,EAvwBQ,CAwwBNvB,IAMFsB,GAAI/5J,UAAA43J,kCAAA,CACJK,6BAAA,CACA5zJ,IAAeq8E,GAAaq5E,GAAI/5J,UAAAg8J,cAChCgB,QAAmBt8E,GAAaq5E,GAAI/5J,UAAAm8J,oBAQpCpC,GAAI/5J,UAAAg4J,0BAAA,CACJC,6BAAA,CACA0G,SAAoB5E,GAAI/5J,UAAAu7J,gBACxBqD,SAAoB7E,GAAI/5J,UAAAy7J,kBAQxB1B,GAAI/5J,UAAAq2J,iBAAA,CACJ4B,6BAAA,CACAxhI,MAAiBiqD,GAAa+3E,GAAOz4J,UAAA42J,WACrCv9B,WAAsB34C,GAAa+3E,GAAOz4J,UAAA82J,gBAC1Ch/B,WAAsBp3C,GAAa+3E,GAAOz4J,UAAA03J,gBAC1Cl/B,gBAA2B93C,GAAa+3E,GAAOz4J,UAAAg3J,qBAC/C5gI,WAAsBsqD,GAAa+3E,GAAOz4J,UAAA63J,gBAC1C1+H,QAAmBunD,GAAa+3E,GAAOz4J,UAAA83J,aACvCn+B,aAAwBj5C,GAAa+3E,GAAOz4J,UAAAk3J,kBAC5C2H,QAAmBn+E,GAAaq5E,GAAI/5J,UAAA07J,cACpC5B,aAAwBp5E,GAAaq5E,GAAI/5J,UAAA26J,mBACzCmE,MAAiBp+E,GAAaq5E,GAAI/5J,UAAA47J,YAClC/B,WAAsBn5E,GAAaq5E,GAAI/5J,UAAAy6J,iBACvCsE,SAAoBr+E,GAAaq5E,GAAI/5J,UAAA87J,iBAQrC/B,GAAI/5J,UAAA06J,oBAAA,CACJzC,6BAAA,CACA+G,YAAuBv+E,GAAgBs5E,GAAI/5J,UAAA66J,oBAC3CoE,aAAwBx+E,GAAgBs5E,GAAI/5J,UAAA66J,sBAQ5Cd,GAAI/5J,UAAA46J,sBAAA,CACJ3C,6BAAA,CACAiH,cAAyBz+E,GAAgBs5E,GAAI/5J,UAAA+6J,sBAC7CoE,eAA0B1+E,GAAgBs5E,GAAI/5J,UAAA+6J,wBAQ9ChB,GAAI/5J,UAAA86J,qBAAA,CACJ7C,6BAAA,CACAngC,WAAsBr3C,GAAgBg4E,GAAOz4J,UAAA03J,gBAC7CoH,MAAiBr+E,GAAgBs5E,GAAI/5J,UAAA47J,cAQrC7B,GAAI/5J,UAAAg7J,uBAAA,CACJ/C,6BAAA,CACA9+H,QAAmBsnD,GAAgBg4E,GAAOz4J,UAAA83J,aAC1C+G,QAAmBp+E,GAAgBs5E,GAAI/5J,UAAA07J,gBAQvC3B,GAAI/5J,UAAA27J,iBAAA,CACJ1D,6BAAA,CACAoF,QAAmB38E,GAAaq5E,GAAI/5J,UAAAi7J,cAQpClB,GAAI/5J,UAAA67J,eAAA,CACJ5D,6BAAA,CACA7Q,SAAoB1mE,GAAaq5E,GAAI/5J,UAAAm7J,gBAQrCpB,GAAI/5J,UAAA+7J,kBAAA,CACJ9D,6BAAA,CACAmH,YAAuB3+E,GAAgBs5E,GAAI/5J,UAAAm8J,kBAC3CkD,YAAuB5+E,GAAgBs5E,GAAI/5J,UAAAm8J,oBAQ3CpC,GAAI/5J,UAAAk7J,iBAAA,CACJjD,6BAAA,CACAqH,aAAwB5+E,GAAaq5E,GAAI/5J,UAAAq7J,qBAQzCtB,GAAI/5J,UAAAo7J,kBAAA,CACJnD,6BAAA,CACAsH,kBAA6B7+E,GAAaq5E,GAAI/5J,UAAAs7J,0BAY9CvB,GAAI/5J,UAAAy0H,cAKJslC,GAAI/5J,UAAAo9J,kBAAA,CACJnF,6BAAA,CACA2G,SAAoB79E,GAAkBg5E,GAAI/5J,UAAAg+J,YAC1CW,SAAoB59E,GAAkBg5E,GAAI/5J,UAAAg+J,cAO1CjE,GAAI/5J,UAAA88J,sBAAA,CACJ7E,6BAAA,CACAmH,YAAuBr+E,GAAkBs4E,IACzCgG,YAAuBt+E,GAAkBs4E,MAOzCU,GAAI/5J,UAAA09J,oCAAA,CACJzF,6BAAA,CACAiH,cAAyBn+E,GAAkBg5E,GAAI/5J,UAAAi+J,8BAC/C3F,cAAyBv3E,GAAkBg5E,GAAI/5J,UAAAi+J,gCAO/ClE,GAAI/5J,UAAA69J,yBAAA,CACJ5F,6BAAA,CACAC,YAAuBn3E,GAAkBg5E,GAAI/5J,UAAAm+J,qBAO7CpE,GAAI/5J,UAAA+9J,qCAAA,CACJ9F,6BAAA,CACAG,iBAA4Br3E,GAAkBg5E,GAAI/5J,UAAAo+J,+BAClDY,YAAuBj+E,GAAkBg5E,GAAI/5J,UAAAo+J,iCAO7CrE,GAAI/5J,UAAAu+J,sBAAA,CACJtG,6BAAA,CACA6G,MAAiB/9E,GAAkBg5E,GAAI/5J,UAAAu9J,yBACvC1D,WAAsB94E,GAAkBg5E,GAAI/5J,UAAA89J,8BAC5CrnI,MAAiBsqD,GAAkBg5E,GAAI/5J,UAAA48J,aACvCvjC,WAAsBt4C,GAAkBg5E,GAAI/5J,UAAA49J,kBAC5C9lC,WAAsB/2C,GAAkBg5E,GAAI/5J,UAAAu9J,yBAC5C/kC,gBAA2Bz3C,GAAkBg5E,GAAI/5J,UAAA89J,8BACjD1nI,WAAsB2qD,GAAkBg5E,GAAI/5J,UAAA+8J,kBAC5C5jI,QAAmB4nD,GAAkBg5E,GAAI/5J,UAAAm9J,wBACzCxjC,aAAwB54C,GAAkBg5E,GAAI/5J,UAAAy9J,6BAC9CoB,QAAmB99E,GAAkBg5E,GAAI/5J,UAAAm9J,wBACzCrD,aAAwB/4E,GAAkBg5E,GAAI/5J,UAAAy9J,6BAC9CsB,SAAoBh+E,GAAkBg5E,GAAI/5J,UAAA68J,iBAG3B,IAAA2C,GAAA,GC3gCfC,GAAUD,GAUVC,GAAAz/J,UAAAy0H,cAUAgrC,GAAAz/J,UAAA80J,kBACe,IAAA4K,GAAA,GCnCXC,GAAyB,WAC7B,IAAApuJ,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2BzBguJ,GAAiB3K,GAAK,oDAKtB4K,GAAgC,CACpCrnC,gBAAA,mBACAqhC,WAAA,cACAlgC,aAAA,gBACAmgC,aAAA,iBASIgG,GAAI,SAAA/tJ,GAKR,SAAAguJ,EAAA7lJ,GACA,IAAAhI,EAAAhR,KACAiZ,EAAgED,GAAA,GAShE,OARAhI,EAAAH,EAAAxT,KAAA2C,KAAAiZ,IAAAjZ,MACAu0J,2BAAyCR,IAAK,cAClCx0E,GAAevuE,EAAA0jJ,sBAI3B1jJ,EAAAsjJ,eAAAr7I,EAAAq7I,eACAr7I,EAAAq7I,eAAqCoK,GACrC1tJ,EA8cA,OA7dIytJ,GAASI,EAAAhuJ,GAuBbguJ,EAAA//J,UAAAggK,qBAAA,SAAAp8G,EAAA48B,GACA,IAAArgF,EAAgBs/E,GAAiB77B,GAAA,GAAA3M,QAAA,iBAEjCilH,EADmE17E,EAAA,GACnE,QACAj4D,EAAA,MACA,GAAA2zI,EAAA,CACA,IAAApyD,EAAuBt9E,GAAa0vI,GACpCpyD,IACAvhF,EAAAuhF,EAAAxgF,sBAKA,IAFA,IAAA22I,EAAA9/J,EAAA+4J,OAAA9mJ,MAAA,OACAqO,EAAA,GACAriB,EAAA,EAAA0U,EAAAmtJ,EAAAh/J,OAAiD7C,EAAA0U,EAAQ1U,IAAA,CACzD,IAAAo/B,EAAAyiI,EAAA7hK,GAAAgU,MAAA,MACApR,EAAAgwD,WAAAxzB,EAAA,IACA9d,EAAAsxC,WAAAxzB,EAAA,IACA2c,EAAA,IAAA3c,EAAAv8B,OAAA+vD,WAAAxzB,EAAA,MACA,OAAAjV,EAAA46C,OAAA,KACA1iD,EAAAze,KAAAhB,EAAA0e,EAAAy6B,GAGA15B,EAAAze,KAAA0d,EAAA1e,EAAAm5C,GAGA,OAAA15B,GAQAs/I,EAAA//J,UAAAkgK,SAAA,SAAAt8G,EAAA48B,GAEA,IAAA//D,EAA8BiiE,GAAe,OAAAxhF,KAAAi/J,aAAAv8G,EAAA48B,EAAAt/E,MAC7C,OAAemf,GAAcI,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAO7Bs/I,EAAA//J,UAAAogK,uBAAA,SAAAx8G,EAAA48B,GAEA,IAAAg7E,EAA6B94E,QAAe5uE,EAAA5S,KAAAs3J,aAAA50G,EAAA48B,EAAAt/E,MAC5Cs6J,GACkEh7E,IAAAv/E,OAAA,GAClEe,KAAAw5J,IAQAuE,EAAA//J,UAAAqgK,uBAAA,SAAAz8G,EAAA48B,GAEA,IAAAg7E,EAA6B94E,QAAe5uE,EAAA5S,KAAAs3J,aAAA50G,EAAA48B,EAAAt/E,MAC5Cs6J,IACkEh7E,IAAAv/E,OAAA,GAClE,GAAAu6J,IAWAuE,EAAA//J,UAAAk+J,uBAAA,SAAA7+J,EAAAmhF,EAAAe,GACA,IAIAG,EAJA7wE,EAAA2vE,IAAAv/E,OAAA,GACAu5J,EAAA3pJ,EAAA,aACAqpJ,EAAArpJ,EAAA,QACAypJ,EAAAzpJ,EAAA,WAiBA,OAfAvD,MAAA+K,QAAAhZ,GAaAqiF,EAAA,WAXA,kBADAA,EAAwE,EAAAhwD,aACxE,IAAA8oI,EACA94E,EAAA,eAEA,YAAAA,IAAA,IAAAw4E,EACAx4E,EAAA,UAEA,oBAAAA,IAAA,IAAA44E,IACA54E,EAAA,cAMepC,GAAe,6BAAAoC,IAO9Bq+E,EAAA//J,UAAAw+J,oBAAA,SAAA56G,EAAA8I,EAAA8zB,GACA,IAAAk2E,EAAAhqG,EAAA9vC,QACA85I,GACA9yG,EAAA8L,aAAA,MAAuD,GAEvD,IAAA7+C,EAAwC2vE,IAAAv/E,OAAA,GACxCq0J,EAAAzkJ,EAAA,UACAurH,EAAA1vE,EAAAnwC,kBACA1L,EAAAuwE,cACAvwE,EAAAuwE,YAAA,GACAvwE,EAAAuwE,YAAAk0E,GAAA,IAEA,IAAAl5I,EAAAswC,EAAAzzC,gBACAhL,EAAA,GACAgF,EAAA,GACA,QAAAtT,KAAAyc,EAAA,CACA,IAAA/c,EAAA+c,EAAAzc,GACA,OAAAN,IACA4O,EAAAjM,KAAArC,GACAsT,EAAAjR,KAAA3C,GACAM,GAAAy8H,GAA+D,qBAAAngH,sBAC/Dtc,KAAAkR,EAAAuwE,YAAAk0E,KACAzkJ,EAAAuwE,YAAAk0E,GAAA31J,GAA8DohF,GAAiB7/E,KAAAo9J,qBAAAp9J,OAI/EvB,KAAAkR,EAAAuwE,YAAAk0E,KACAzkJ,EAAAuwE,YAAAk0E,GAAA31J,GAA8DohF,GAAkBs4E,MAKhF,IAAAx+I,EAAmBpI,EAAM,GAAG5B,GAC5BgK,EAAA+oC,OACQg/B,GAAiE,EAAA/xE,EAAAuwE,YAAiCC,QAAqBvtE,EAAAwhJ,GAAAriJ,EAAAutE,EAAAvyE,IAQ/H8xJ,EAAA//J,UAAAu9J,wBAAA,SAAA35G,EAAA1nC,EAAAskE,GACA,IACA+0E,EADA/0E,IAAAv/E,OAAA,GACA,QAIA,GAHA,sBAAA2iD,EAAA89B,UAAA6zE,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,eAAA3xG,EAAA89B,UACA,sBAAA99B,EAAA89B,SAAA,CACA,IAAAviE,EAAAje,KAAAo/J,uBAAA18G,EAAA27B,cACA37B,EAAA+F,YAAAxqC,GACAje,KAAAq/J,kBAAAphJ,EAAAjD,EAAAskE,QAEA,aAAA58B,EAAA89B,SAAA,CACA,IAAA0lE,EAA2B9nE,GAAe17B,EAAA27B,aAAA,YAC1C37B,EAAA+F,YAAAy9F,GACAlmJ,KAAAs8J,oBAAApW,EAAAlrI,EAAAskE,KASAu/E,EAAA//J,UAAAo+J,8BAAA,SAAAx6G,EAAAy6G,EAAA79E,GACA,IAAAs1E,EAAA50J,KAAAg9J,uBAAAG,EAAA79E,GACAs1E,IACAlyG,EAAA+F,YAAAmsG,GACA50J,KAAAq8J,wBAAAzH,EAAAuI,EAAA79E,KASAu/E,EAAA//J,UAAA89J,6BAAA,SAAAl6G,EAAA1nC,EAAAskE,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0kJ,EAAA1kJ,EAAA,QACAupJ,EAAAvpJ,EAAA,MACA0kJ,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IAAAvnJ,EAAAkO,EAAA88G,iBACQp2C,GAAmB,CAAEh/B,OAAAgvG,OAAA2C,UAAA6E,SAAyDl5J,KAAA68J,qCAAA78J,KAAAy8J,mCAAA3vJ,EAAAwyE,OAAA1sE,EAAA5S,OAOtF6+J,EAAA//J,UAAAs+J,qBAAA,SAAA16G,EAAA1nC,EAAAskE,GACA,IAGAnhF,EAHAwR,EAAqE2vE,IAAAv/E,OAAA,GACrE4Z,EAAmBpI,EAAM,GAAG5B,GAC5BgK,EAAA,KAAA+oC,EAGAvkD,EADAiO,MAAA+K,QAAA6D,GACoB64G,GAAoE,EAAAlkH,GAGpE8jH,GAA8E,KAAA9jH,GAE1F+xE,GAAiE,EAAA1hF,KAAAq9J,sBAAAr9J,KAAAg9J,uBAAA,CAAA7+J,GAAAmhF,OAAA1sE,EAAA5S,OAOzE6+J,EAAA//J,UAAAsgK,uBAAA,SAAA/gF,GACA,IAAApgE,EAA0BmgE,GAAeC,EAAA,eAIzC,OAHApgE,EAAAuwC,aAAA,eACAvwC,EAAAuwC,aAAA,UACAvwC,EAAAuwC,aAAA,UACAvwC,GAQA4gJ,EAAA//J,UAAAugK,kBAAA,SAAA38G,EAAAvkD,EAAAmhF,GAQA,IAPA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0kJ,EAAA1kJ,EAAA,QAEA6+E,EAAArwF,EAAAizB,iBACAltB,EAAAsqF,EAAAzuF,OACAisI,EAAA,IAAA5/H,MAAAlI,GACAhH,EAAA,EAAuBA,EAAAgH,IAAShH,EAAA,CAChC,IAAAosB,EAAAklE,EAAAtxF,GACA8uI,EAAA9uI,GAAA8C,KAAAs7J,WAAAhyI,EAAA+qI,EAAA3C,GAEQyG,GAAmBz1G,EAAAspF,EAAAh9G,KAAA,OAQ3B6vI,EAAA//J,UAAAw9J,oBAAA,SAAA55G,EAAAy6G,EAAA79E,GACA,IAAAs1E,EAAoBx2E,GAAe17B,EAAA27B,aAAA,qBACnC37B,EAAA+F,YAAAmsG,GACA50J,KAAAq8J,wBAAAzH,EAAAuI,EAAA79E,IAQAu/E,EAAA//J,UAAAm9J,uBAAA,SAAAv5G,EAAA1nC,EAAAskE,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0kJ,EAAA1kJ,EAAA,QAIA,GAHA,iBAAA+yC,EAAA89B,UAAA6zE,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,YAAA3xG,EAAA89B,UAAA,iBAAA99B,EAAA89B,SAAA,CACA,IAAA4pE,EAAApvI,EAAAge,iBACY0oD,GAAmB,CAAEh/B,OAAAgvG,OAAA2C,WAA2Cr0J,KAAAk8J,kBAAAl8J,KAAA+7J,mBAAA3R,EAAA9qE,OAAA1sE,EAAA5S,WAE5E,eAAA0iD,EAAA89B,SAAA,CACA,IAAA27E,EAA0B/9E,GAAe17B,EAAA27B,aAAA,WACzC37B,EAAA+F,YAAA0zG,GACAn8J,KAAAo8J,qBAAAD,EAAAnhJ,EAAAskE,KAUAu/E,EAAA//J,UAAAi9J,mBAAA,SAAA59J,EAAAmhF,EAAAe,GACA,IAAA1wE,EAAA2vE,IAAAv/E,OAAA,GACAwiD,EAAA5yC,EAAA+yC,KACAs5G,EAAArsJ,EAAA,gBAIA,YAHAiD,IAAAopJ,IACArsJ,EAAA,oBAEeyuE,GAAe77B,EAAA87B,kBAAAzrE,IAAAopJ,EAAA,sCAQ9B6C,EAAA//J,UAAAs9J,qBAAA,SAAA15G,EAAA7oB,EAAAylD,GACA,IAAAs1E,EAAoBx2E,GAAe17B,EAAA27B,aAAA,gBACnC37B,EAAA+F,YAAAmsG,GACA50J,KAAAi8J,uBAAArH,EAAA/6H,EAAAylD,IAQAu/E,EAAA//J,UAAAg+J,WAAA,SAAAp6G,EAAA2hG,EAAA/kE,GACA,IAAA9mD,EAAyB4lD,GAAe17B,EAAA27B,aAAA,cACxC37B,EAAA+F,YAAAjwB,GACAx4B,KAAA67J,iBAAArjI,EAAA6rH,EAAA/kE,IASAu/E,EAAA//J,UAAAw8J,WAAA,SAAAhyI,EAAAiyI,EAAAC,GACA,IAAAn0I,EAAA,MACAk0I,IACAl0I,EAA8BiE,GAAaiwI,GAAAnzI,sBAE3C,IAAAkU,EAAA,OAAAjV,EAAA46C,OAAA,KACA34C,EAAA,OAAAA,EAAA,GACAA,EAAA,OAAAA,EAAA,GACAkyI,IAGAl/H,GAAA,KADAhT,EAAA,QAGA,OAAAgT,GAQAuiI,EAAA//J,UAAA48J,YAAA,SAAAh5G,EAAA1nC,EAAAskE,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0kJ,EAAA1kJ,EAAA,QACA0kJ,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IAAAp2I,EAAAje,KAAAo/J,uBAAA18G,EAAA27B,cACA37B,EAAA+F,YAAAxqC,GACA,IAAAqL,EAAAtO,EAAAoW,iBAEQ+mI,GAAmBl6I,EAD3Bje,KAAAs7J,WAAAhyI,EAAA+qI,EAAA3C,KASAmN,EAAA//J,UAAA49J,iBAAA,SAAAh6G,EAAA1nC,EAAAskE,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0kJ,EAAA1kJ,EAAA,QACA0kJ,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IAAA7lE,EAAAxzE,EAAAi0E,YACQvN,GAAmB,CAAEh/B,OAAAgvG,OAAA2C,WAA2Cr0J,KAAA28J,yBAAiCx8E,GAAqB,eAAAqO,EAAAlP,OAAA1sE,EAAA5S,OAQ9H6+J,EAAA//J,UAAAm+J,kBAAA,SAAAv6G,EAAAp5B,EAAAg2D,GACA,IAAAs1E,EAAoBx2E,GAAe17B,EAAA27B,aAAA,SACnC37B,EAAA+F,YAAAmsG,GACA50J,KAAA07J,YAAA9G,EAAAtrI,EAAAg2D,IAQAu/E,EAAA//J,UAAA+8J,iBAAA,SAAAn5G,EAAA1nC,EAAAskE,GACA,IACA+0E,EADA/0E,IAAAv/E,OAAA,GACA,QACAs0J,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IAAAp2I,EAAAje,KAAAo/J,uBAAA18G,EAAA27B,cACA37B,EAAA+F,YAAAxqC,GACAje,KAAAq/J,kBAAAphJ,EAAAjD,EAAAskE,IAQAu/E,EAAA//J,UAAAy9J,4BAAA,SAAA75G,EAAA1nC,EAAAskE,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACA2xJ,EAAA/hJ,EAAA,KACA0kJ,EAAA1kJ,EAAA,QACAqpJ,EAAArpJ,EAAA,QACA0kJ,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IAAAv7B,EAAA99G,EAAA2+G,cACQj4C,GAAmB,CAAEh/B,OAAAgvG,OAAA2C,UAAA2E,WAA6Dh5J,KAAAw8J,oCAAAx8J,KAAAy8J,mCAAA3jC,EAAAx5C,OAAA1sE,EAAA5S,OAQ1F6+J,EAAA//J,UAAAi+J,6BAAA,SAAAr6G,EAAA7oB,EAAAylD,GACA,IAAAs1E,EAAA50J,KAAAg9J,uBAAAnjI,EAAAylD,GACAs1E,IACAlyG,EAAA+F,YAAAmsG,GACA50J,KAAAi8J,uBAAArH,EAAA/6H,EAAAylD,KASAu/E,EAAA//J,UAAA68J,cAAA,SAAAj5G,EAAAxkC,EAAAohE,GACA,IACA+0E,EADA/0E,IAAAv/E,OAAA,GACA,QACAs0J,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEA,IACAtiJ,EAAA,CAAAmM,EAAA,OAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,IACQwjE,GAAiE,CAAMh/B,QAAa1iD,KAAA47J,sBAA+Bn7E,GAA4B1uE,EAAAutE,EAFvJ,8BAEuJt/E,OAUvJ6+J,EAAA//J,UAAA29J,mCAAA,SAAAt+J,EAAAmhF,EAAAe,GACA,IAAA99B,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACA,OAAe07B,GAAe,6BAA+BugF,GAAgCp8G,EAAAi+B,YAE7Fq+E,EA9dQ,CA+dNtH,IAMFqH,GAAI9/J,UAAA43J,kCAAA,CACJK,6BAAA,CACA94I,YAAuBuhE,GAAao/E,GAAI9/J,UAAAggK,wBAQxCF,GAAI9/J,UAAAg4J,0BAAA,CACJC,6BAAA,CACAuI,gBAA2BV,GAAI9/J,UAAAogK,uBAC/BK,gBAA2BX,GAAI9/J,UAAAqgK,yBAQ/BP,GAAI9/J,UAAAmgK,aAAA,CACJlI,6BAAA,CACA94I,YAAuBshE,GAAgBq/E,GAAI9/J,UAAAggK,wBAQ3CF,GAAI9/J,UAAAq2J,iBAAA,CACJ4B,6BAAA,CACAxhI,MAAiBiqD,GAAa+3E,GAAOz4J,UAAA42J,WACrCv9B,WAAsB34C,GAAa+3E,GAAOz4J,UAAA82J,gBAC1Ch/B,WAAsBp3C,GAAa+3E,GAAOz4J,UAAA03J,gBAC1Cl/B,gBAA2B93C,GAAa+3E,GAAOz4J,UAAAg3J,qBAC/C5gI,WAAsBsqD,GAAa+3E,GAAOz4J,UAAA63J,gBAC1C1+H,QAAmBunD,GAAa+3E,GAAOz4J,UAAA83J,aACvCn+B,aAAwBj5C,GAAa+3E,GAAOz4J,UAAAk3J,kBAC5C77F,IAAeqlB,GAAao/E,GAAI9/J,UAAAkgK,YAQhCJ,GAAI9/J,UAAAu+J,sBAAA,CACJtG,6BAAA,CACA6G,MAAiB/9E,GAAkB++E,GAAI9/J,UAAAu9J,yBACvC1D,WAAsB94E,GAAkB++E,GAAI9/J,UAAA89J,8BAC5CrnI,MAAiBsqD,GAAkB++E,GAAI9/J,UAAA48J,aACvCvjC,WAAsBt4C,GAAkB++E,GAAI9/J,UAAA49J,kBAC5C9lC,WAAsB/2C,GAAkB++E,GAAI9/J,UAAAu9J,yBAC5C/kC,gBAA2Bz3C,GAAkB++E,GAAI9/J,UAAA89J,8BACjD1nI,WAAsB2qD,GAAkB++E,GAAI9/J,UAAA+8J,kBAC5C5jI,QAAmB4nD,GAAkB++E,GAAI9/J,UAAAm9J,wBACzCxjC,aAAwB54C,GAAkB++E,GAAI9/J,UAAAy9J,6BAC9CoB,QAAmB99E,GAAkB++E,GAAI9/J,UAAAm9J,wBACzCrD,aAAwB/4E,GAAkB++E,GAAI9/J,UAAAy9J,6BAC9CsB,SAAoBh+E,GAAkB++E,GAAI9/J,UAAA68J,iBAO1CiD,GAAI9/J,UAAA+9J,qCAAA,CACJ9F,6BAAA,CACAG,iBAA4Br3E,GAAkB++E,GAAI9/J,UAAAo+J,+BAClDY,YAAuBj+E,GAAkB++E,GAAI9/J,UAAAo+J,iCAO7C0B,GAAI9/J,UAAAo9J,kBAAA,CACJnF,6BAAA,CACAwI,gBAA2B1/E,GAAkB++E,GAAI9/J,UAAAg+J,YACjDwC,gBAA2Bz/E,GAAkB++E,GAAI9/J,UAAAg+J,cAOjD8B,GAAI9/J,UAAA69J,yBAAA,CACJ5F,6BAAA,CACAC,YAAuBn3E,GAAkB++E,GAAI9/J,UAAAm+J,qBAQ7C2B,GAAI9/J,UAAA09J,oCAAA,CACJzF,6BAAA,CACAiH,cAAyBn+E,GAAkB++E,GAAI9/J,UAAAi+J,8BAC/C3F,cAAyBv3E,GAAkB++E,GAAI9/J,UAAAi+J,gCAO/C6B,GAAI9/J,UAAA88J,sBAAA,CACJ7E,6BAAA,CACAmH,YAAuBr+E,GAAkBs4E,IACzCgG,YAAuBt+E,GAAkBs4E,MAG1B,IAAAqH,GAAA,GCpoBXC,GAAyB,WAC7B,IAAApvJ,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAyB7BgvJ,GAAA,SAAA7uJ,GAKA,SAAA6uJ,EAAA1mJ,GACA,IAAAhI,EAAAhR,KACAiZ,EAAgED,GAAA,GAOhE,OANAhI,EAAAH,EAAAxT,KAAA2C,KAAAiZ,IAAAjZ,MAIAs0J,eAAAr7I,EAAAq7I,eACAr7I,EAAAq7I,eAAAtjJ,EAAAwjJ,UAAA,gDACAxjJ,EAEA,OAfIyuJ,GAASC,EAAA7uJ,GAeb6uJ,EAhBA,CAiBEpB,IACFoB,GAAA5gK,UAAA01J,UAAA,iCAMAkL,GAAA5gK,UAAA43J,kCAAA,CACAiJ,iCAAA,CACAx8J,IAAeq8E,GAAa8+E,GAAIx/J,UAAAg8J,cAChCgB,QAAmBt8E,GAAa8+E,GAAIx/J,UAAAm8J,oBAQpCyE,GAAA5gK,UAAAg4J,0BAAA,CACA6I,iCAAA,CACAlC,SAAoBa,GAAIx/J,UAAAu7J,gBACxBqD,SAAoBY,GAAIx/J,UAAAy7J,kBAQxBmF,GAAA5gK,UAAAq2J,iBAAA,CACAwK,iCAAA,CACApqI,MAAiBiqD,GAAa+3E,GAAOz4J,UAAA42J,WACrCv9B,WAAsB34C,GAAa+3E,GAAOz4J,UAAA82J,gBAC1Ch/B,WAAsBp3C,GAAa+3E,GAAOz4J,UAAA03J,gBAC1Cl/B,gBAA2B93C,GAAa+3E,GAAOz4J,UAAAg3J,qBAC/C5gI,WAAsBsqD,GAAa+3E,GAAOz4J,UAAA63J,gBAC1C1+H,QAAmBunD,GAAa+3E,GAAOz4J,UAAA83J,aACvCn+B,aAAwBj5C,GAAa+3E,GAAOz4J,UAAAk3J,kBAC5C2H,QAAmBn+E,GAAYkgF,GAAA5gK,UAAA07J,cAC/B5B,aAAwBp5E,GAAa8+E,GAAIx/J,UAAA26J,mBACzCmE,MAAiBp+E,GAAYkgF,GAAA5gK,UAAA47J,YAC7B/B,WAAsBn5E,GAAa8+E,GAAIx/J,UAAAy6J,iBACvCsE,SAAoBr+E,GAAYkgF,GAAA5gK,UAAA87J,iBAQhC8E,GAAA5gK,UAAA06J,oBAAA,CACAmG,iCAAA,CACA7B,YAAuBv+E,GAAgB++E,GAAIx/J,UAAA66J,oBAC3CoE,aAAwBx+E,GAAgB++E,GAAIx/J,UAAA66J,sBAQ5C+F,GAAA5gK,UAAA46J,sBAAA,CACAiG,iCAAA,CACA3B,cAAyBz+E,GAAgB++E,GAAIx/J,UAAA+6J,sBAC7CoE,eAA0B1+E,GAAgB++E,GAAIx/J,UAAA+6J,wBAQ9C6F,GAAA5gK,UAAA86J,qBAAA,CACA+F,iCAAA,CACA/oC,WAAsBr3C,GAAgBg4E,GAAOz4J,UAAA03J,gBAC7CoH,MAAiBr+E,GAAgB++E,GAAIx/J,UAAA47J,cAQrCgF,GAAA5gK,UAAAg7J,uBAAA,CACA6F,iCAAA,CACA1nI,QAAmBsnD,GAAgBg4E,GAAOz4J,UAAA83J,aAC1C+G,QAAmBp+E,GAAgB++E,GAAIx/J,UAAA07J,gBAQvCkF,GAAA5gK,UAAA27J,iBAAA,CACAkF,iCAAA,CACAxD,QAAmB38E,GAAa8+E,GAAIx/J,UAAAi7J,cAQpC2F,GAAA5gK,UAAA67J,eAAA,CACAgF,iCAAA,CACAzZ,SAAoB1mE,GAAa8+E,GAAIx/J,UAAAm7J,gBAQrCyF,GAAA5gK,UAAA+7J,kBAAA,CACA8E,iCAAA,CACAzB,YAAuB3+E,GAAgB++E,GAAIx/J,UAAAm8J,kBAC3CkD,YAAuB5+E,GAAgB++E,GAAIx/J,UAAAm8J,oBAQ3CyE,GAAA5gK,UAAAk7J,iBAAA,CACA2F,iCAAA,CACAvB,aAAwB5+E,GAAa8+E,GAAIx/J,UAAAq7J,qBAQzCuF,GAAA5gK,UAAAo7J,kBAAA,CACAyF,iCAAA,CACAtB,kBAA6B7+E,GAAa8+E,GAAIx/J,UAAAs7J,0BAQ9CsF,GAAA5gK,UAAA+2J,oBAAA,CACA8J,iCAAA,CACA3I,YAAuBz3E,GAAgBg4E,GAAOz4J,UAAAo3J,oBAC9Ce,aAAwB13E,GAAgBg4E,GAAOz4J,UAAAo3J,sBAQ/CwJ,GAAA5gK,UAAAi3J,yBAAA,CACA4J,iCAAA,CACAzI,iBAA4B33E,GAAgBg4E,GAAOz4J,UAAAs3J,yBACnDe,kBAA6B53E,GAAgBg4E,GAAOz4J,UAAAs3J,2BAQpDsJ,GAAA5gK,UAAAm3J,sBAAA,CACA0J,iCAAA,CACAvI,cAAyB73E,GAAgBg4E,GAAOz4J,UAAAw3J,sBAChDe,eAA0B93E,GAAgBg4E,GAAOz4J,UAAAw3J,wBAQjDoJ,GAAA5gK,UAAAq3J,qBAAA,CACAwJ,iCAAA,CACApqI,MAAiBgqD,GAAgBg4E,GAAOz4J,UAAA62J,gCAQxC+J,GAAA5gK,UAAAu3J,0BAAA,CACAsJ,iCAAA,CACA/oC,WAAsBr3C,GAAgBg4E,GAAOz4J,UAAA03J,kBAQ7CkJ,GAAA5gK,UAAAy3J,uBAAA,CACAoJ,iCAAA,CACA1nI,QAAmBsnD,GAAgBg4E,GAAOz4J,UAAA83J,eAQ1C8I,GAAA5gK,UAAAw4J,aAAA,CACAqI,iCAAA,CACAzqI,WAAsBsqD,GAAa+3E,GAAOz4J,UAAA23J,uBAO1CiJ,GAAA5gK,UAAAo9J,kBAAA,CACAyD,iCAAA,CACAjC,SAAoB79E,GAAkBy+E,GAAIx/J,UAAAg+J,YAC1CW,SAAoB59E,GAAkBy+E,GAAIx/J,UAAAg+J,cAO1C4C,GAAA5gK,UAAA88J,sBAAA,CACA+D,iCAAA,CACAzB,YAAuBr+E,GAAkBs4E,IACzCgG,YAAuBt+E,GAAkBs4E,MAOzCuH,GAAA5gK,UAAA09J,oCAAA,CACAmD,iCAAA,CACA3B,cAAyBn+E,GAAkBy+E,GAAIx/J,UAAAi+J,8BAC/C3F,cAAyBv3E,GAAkBy+E,GAAIx/J,UAAAi+J,gCAO/C2C,GAAA5gK,UAAA69J,yBAAA,CACAgD,iCAAA,CACA3I,YAAuBn3E,GAAkBy+E,GAAIx/J,UAAAm+J,qBAO7CyC,GAAA5gK,UAAA+9J,qCAAA,CACA8C,iCAAA,CACAzI,iBAA4Br3E,GAAkBy+E,GAAIx/J,UAAAo+J,+BAClDY,YAAuBj+E,GAAkBy+E,GAAIx/J,UAAAo+J,iCAO7CwC,GAAA5gK,UAAAu+J,sBAAA,CACAsC,iCAAA,CACA/B,MAAiB/9E,GAAkBy+E,GAAIx/J,UAAAu9J,yBACvC1D,WAAsB94E,GAAkBy+E,GAAIx/J,UAAA89J,8BAC5CrnI,MAAiBsqD,GAAiB6/E,GAAA5gK,UAAA48J,aAClCvjC,WAAsBt4C,GAAkBy+E,GAAIx/J,UAAA49J,kBAC5C9lC,WAAsB/2C,GAAkBy+E,GAAIx/J,UAAAu9J,yBAC5C/kC,gBAA2Bz3C,GAAkBy+E,GAAIx/J,UAAA89J,8BACjD1nI,WAAsB2qD,GAAkBy+E,GAAIx/J,UAAA+8J,kBAC5C5jI,QAAmB4nD,GAAkBy+E,GAAIx/J,UAAAm9J,wBACzCxjC,aAAwB54C,GAAkBy+E,GAAIx/J,UAAAy9J,6BAC9CoB,QAAmB99E,GAAkBy+E,GAAIx/J,UAAAm9J,wBACzCrD,aAAwB/4E,GAAkBy+E,GAAIx/J,UAAAy9J,6BAC9CsB,SAAoBh+E,GAAkBy+E,GAAIx/J,UAAA68J,iBAG3B,IAAAiE,GAAA,GCpUXC,GAAyB,WAC7B,IAAAxvJ,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgC7BovJ,GAAA,CACA,KACA,oCACA,qCAYAC,GAAA,CACAC,IAAAC,GACAC,IAAAC,GACAC,IAAAC,IAMAC,GAAkBz/E,GAAei/E,GAAA,CACjCE,IAAWzgF,GAAe0gF,IAC1BC,IAAW3gF,GAAe4gF,IAC1BC,IAAW7gF,GAAe8gF,MAM1BE,GAAmB1/E,GAAei/E,GAAA,CAClCv4F,KAAYqY,GAAyBx4E,GAAU,YAC/ChE,KAAYw8E,GAAyBx4E,GAAU,cAM/Co5J,GAAsB3/E,GAAei/E,GAAA,CACrCE,IAAWngF,GA2lBX,SAAAn9B,EAAA8I,EAAA8zB,GACA,IAAArmE,EAAiEqmE,EAAA,GACjEpkE,EAAAswC,EAAAzzC,gBACApI,EAAA,CAAmB+yC,QACnB/yC,EAAA,WAAAuL,EACA,IAAAF,EAAAwwC,EAAAlwC,cACA,GAAAN,EAAAwV,WAA8BxN,GAAYE,YAAA,CAC1C,IAAAs0G,EAAoD/D,GAA4Bz4G,GAAA,EAAA/B,GAChFtJ,EAAA,eAAA6nH,EAAAhmG,YACAtW,EAAA,MAAAs8G,EAAApmG,iBAEA,IAAAmxB,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACAi+B,EAAA8/E,GAAAl+G,EAAA87B,cACAtsE,EAAiB2uE,GAAYxlE,EAAAylE,GACzBe,GAAmB/xE,EAAA+wJ,GAA2BjgF,GAA4B1uE,EAAAutE,EAAAqB,KAxmB9Eu/E,IAAWrgF,GA+mBX,SAAAn9B,EAAA8I,EAAA8zB,GACA,IAAArmE,EAAiEqmE,EAAA,GACjEpkE,EAAAswC,EAAAzzC,gBAEApI,EAAA,CAAmB+yC,QACnB/yC,EAAA,WAAAuL,EACA,IAAAF,EAAAwwC,EAAAlwC,cACA,GAAAN,EAAAwV,WAA8BxN,GAAYM,kBAAA,CAC1C,IAAA4uI,EAA8Dz+B,GAA4Bz4G,GAAA,EAAA/B,GAC1FiC,EAAA,OAAAg3I,EAAAp6B,iBAEA,IAAAv1E,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACAi+B,EAAAggF,GAAAp+G,EAAA87B,cACAtsE,EAAiB2uE,GAAYxlE,EAAAylE,GACzBe,GAAmB/xE,EAAAixJ,GAA2BngF,GAA4B1uE,EAAAutE,EAAAqB,KA5nB9Ey/E,IAAWvgF,GA+oBX,SAAAn9B,EAAA8I,EAAA8zB,GACA,IAAArmE,EAAiEqmE,EAAA,GACjE3vE,EAAA2vE,IAAAv/E,OAAA,GACA4P,EAAA,WAAA67C,EAAAzzC,gBACA,IAAAiD,EAAAwwC,EAAAlwC,cACA,GAAAN,EAAAwV,WAA8BxN,GAAYC,MAAA,CAC1C,IAAAqG,EAA0CmqG,GAA4Bz4G,GAAA,EAAA/B,GACtEtJ,EAAA,eAAA2Z,EAAAkI,YACAqvI,GAAAn+G,EAAAp5B,EAAA8H,iBAAAkuD,QAvnBIwhF,GAAG,SAAAjwJ,GAKP,SAAAkwJ,EAAA/nJ,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAUA,OANAhI,EAAAioE,eAA+B3tD,GAAa,aAK5Cta,EAAAgwJ,gBAAA/nJ,EAAAgoJ,eACAjwJ,EAgFA,OAhGI6uJ,GAASkB,EAAAlwJ,GAsBbkwJ,EAAAjiK,UAAAoiK,sBAAA,SAAA31G,GACAA,IACAA,EAAA,IAEA,QAAAruD,EAAA,EAAA0U,EAAA25C,EAAAxrD,OAA6C7C,EAAA0U,IAAQ1U,EAAA,CACrD,IAAAsuD,EAAAD,EAAAruD,GACA,GAAA8C,KAAAghK,gBAAA,CACA,IAAAG,EAAA31G,EAAAztD,IAAA,yBACAiC,KAAAghK,gBAAAx1G,EAAA21G,GAEA31G,EAAA7iD,IAAA,uBAAAiK,KAMAmuJ,EAAAjiK,UAAAo0J,oBAAA,SAAAxwG,EAAA1pC,GACA,IAAamD,EAAQ2jJ,GAAAp9G,EAAA27B,cACrB,YAEA,IAAA+iF,EAAArB,GAAAr9G,EAAAi9B,WACA,IAAAyhF,EACA,YAEA,IAAA51G,EAAA41G,EAAA1+G,EAAA,CAAA1iD,KAAAkzH,eAAAxwE,EAAA1pC,KACA,OAAAwyC,GAGAxrD,KAAAkhK,sBAAA,CAAA11G,IACAA,GAHA,MAQAu1G,EAAAjiK,UAAAs0J,qBAAA,SAAA1wG,EAAA1pC,GACA,IAAamD,EAAQ2jJ,GAAAp9G,EAAA27B,cACrB,SAEA,UAAA37B,EAAAi9B,UAAA,CAEA,IAAAp0B,EAA2Bi2B,GAAe,GAAA8+E,GAAA59G,EAAA,CAAA1iD,KAAAkzH,eAAAxwE,EAAA1pC,KAC1C,OAAAuyC,GACAvrD,KAAAkhK,sBAAA31G,GACAA,GAGA,GAGA,UAaAw1G,EAAAjiK,UAAA80J,kBAAA,SAAAroG,EAAAvyC,GACAA,EAAAhZ,KAAAmzH,aAAAn6G,GAEA,IAAAqoJ,EAAkBjjF,GAAe,2CAOjC,OALAijF,EAAA7D,eADA,gCACA,YAAkDr/E,IAClDkjF,EAAA7D,eAA2Br/E,GAAuB,qBA9JlD,+EA+JAkjF,EAAA7yG,aAAA,iBACA6yG,EAAA7yG,aAAA,wBACQkzB,GAAiE,CAAMh/B,KAAA2+G,GAAYb,GAAAc,GAAA/1G,EAAA,CAAAvyC,IAC3FqoJ,GAEAN,EAjGO,CAkGLnO,IAKF2O,GAAkB1gF,GAAei/E,GAAA,CACjCriK,KAAYmiF,GAAyBx4E,IACrCo6J,IAAW5hF,GAAyBx4E,IACpCq6J,KAAY7hF,GAAyBx4E,IACrCw7D,IAAWgd,GAAyBx4E,IACpCs6J,KAAAC,GACA1tH,OAAc2rC,GAAyBk4E,IACvC8J,WAAAC,GACAz+J,KAAYw8E,GAAyBx4E,IACrC06J,MAoSA,SAAAp/G,EAAA48B,GACA,IAAAvtE,EAAiByvE,GAAe,GAAGugF,GAAAr/G,EAAA48B,GACnC,GAAAvtE,EAAA,CACA,IAAAiwJ,EAA2C1iF,IAAAv/E,OAAA,GAC3Cwf,EAAuDyiJ,EAAA,gBACvDC,EAAqDD,EAAA,cACrDjrC,GAAAx3G,EAAA0iJ,EAAAv/G,EAAA3wC,OApSAgwJ,GAAoBlhF,GAAei/E,GAAA,CACnCoC,IAAWtiF,GAAyBg4E,IACpC3pG,KAAY2xB,GAAyB83E,MAMrCyK,GAAkBthF,GAAei/E,GAAA,CACjCriK,KAAYmiF,GAAyBx4E,IACrCo6J,IAAW5hF,GAAyBx4E,IACpCq6J,KAAY7hF,GAAyBx4E,IACrCw7D,IAAWgd,GAAyBx4E,IACpCs6J,KAAAC,GACA1tH,OAAc2rC,GAAyBk4E,IACvC10J,KAAYw8E,GAAyBx4E,IACrCw6J,WAAAC,GACAO,OAuSA,SAAA1/G,EAAA48B,GACA,IAAAvtE,EAAmCutE,IAAAv/E,OAAA,GAC/BmhF,GAASmhF,GAAA3/G,EAAA48B,GACb,IAAA//D,EAAmDxN,EAAA,gBACXA,EAAA,KACxCjR,KAAAye,EAAAxf,WAtSAsiK,GAAqBxhF,GAAei/E,GAAA,CACpCwC,MAmRA,SAAA5/G,EAAA48B,GACA,IAAAvtE,EAAiByvE,GAAe,GAAG+gF,GAAA7/G,EAAA48B,GACnC,GAAAvtE,EAAA,CACA,IAAAywJ,EAA2CljF,IAAAv/E,OAAA,GAC3Cwf,EAAuDijJ,EAAA,gBACvDP,EAAqDO,EAAA,cACrDzrC,GAAAx3G,EAAA0iJ,EAAAv/G,EAAA3wC,OAnRAwwJ,GAAoB1hF,GAAei/E,GAAA,CACnCoC,IAAWtiF,GAAyBg4E,IACpC3pG,KAAY2xB,GAAyB83E,MAMrC+K,GAAkB5hF,GAAei/E,GAAA,CACjCoC,IAAWtiF,GAAyBg4E,IACpC3pG,KAAY2xB,GAAyB83E,IACrCgL,OAAc9iF,GAAyBg4E,IACvC+K,YAAmB/iF,GAAyBg4E,IAC5Cn6J,KAAYmiF,GAAyBx4E,IACrCo6J,IAAW5hF,GAAyBx4E,IACpCq6J,KAAY7hF,GAAyBx4E,IACrCw7D,IAAWgd,GAAyBx4E,IACpCs6J,KAAAC,GACAiB,IAAWhjF,GAAyBx4E,IACpChE,KAAYw8E,GAAyBx4E,IACrCy7J,IAAWjjF,GAAyBx4E,IACpC07J,IAAWljF,GAAyBk4E,IACpCiL,KAAYnjF,GAAyBg4E,IACrCoL,KAAYpjF,GAAyBg4E,IACrCqL,KAAYrjF,GAAyBg4E,IACrCsL,cAAqBtjF,GAAyBg4E,IAC9CuL,OAAcvjF,GAAyBk4E,IACvC8J,WAAAC,KAMAuB,GAAA,gBAKAC,GAAuBxiF,GAAei/E,GAAA,CACtCv4F,KAAYsY,GAAkBs4E,IAC9B/0J,KAAYy8E,GAAkBs4E,MAM9BsI,GAAmB5/E,GAAei/E,GAAA,CAClC,2DAMAY,GAAsB7/E,GAAei/E,GAAA,CACrCriK,KAAYoiF,GAAkBs4E,IAC9BqJ,IAAW3hF,GAAkBs4E,IAC7BsJ,KAAY5hF,GAAkBs4E,IAC9Bv1F,IAAWid,GAAkBs4E,IAC7BuJ,KAAY7hF,GAAiByjF,IAC7BrvH,OAAc4rC,GAAkBy4E,IAChCl1J,KAAYy8E,GAAkBs4E,IAC9B2J,MAAa/hF,GAAoBF,GAAiBghF,OAMlD0C,GAA0B1iF,GAAei/E,GAAA,CACzC,eAMAa,GAAmB9/E,GAAei/E,GAAA,CAClC,4DAMAc,GAAsB//E,GAAei/E,GAAA,CACrCriK,KAAYoiF,GAAkBs4E,IAC9BqJ,IAAW3hF,GAAkBs4E,IAC7BsJ,KAAY5hF,GAAkBs4E,IAC9Bv1F,IAAWid,GAAkBs4E,IAC7BuJ,KAAY7hF,GAAiByjF,IAC7BrvH,OAAc4rC,GAAkBy4E,IAChCl1J,KAAYy8E,GAAkBs4E,IAC9BiK,OAAcriF,GAAoBF,GAsXlC,SAAAn9B,EAAA80E,EAAAl4C,GAEA,IAAA3vE,EAAA,CAAmB+yC,QACnB/yC,EAAA,eAAA6nH,EAAAhmG,YACA7hB,EAAA,cACI+xE,GAAmB/xE,EAAA6zJ,GAAAC,GAAAjsC,EAAApmG,iBAAAkuD,QArXvBmkF,GAA0BtjF,GAAqB,SAK/CqjF,GAAyB3iF,GAAei/E,GAAA,CACxCwC,MAAaziF,GAAiBghF,MAM9B6C,GAAwB7iF,GAAei/E,GAAA,CACvC,8DACA,qDACA,2BAMA6D,GAA2B9iF,GAAei/E,GAAA,CAC1CoC,IAAWriF,GAAkBu4E,IAC7BnqG,KAAY4xB,GL/QL,SAAAn9B,EAAAi1G,GACP,IAAAiM,EAAA,IAAA1lI,KAAA,IAAAy5H,GACAF,EAAAmM,EAAAC,iBAAA,IACQ7vH,GAAS4vH,EAAAE,cAAA,SACT9vH,GAAS4vH,EAAAG,aAAA,OACT/vH,GAAS4vH,EAAAI,cAAA,OACThwH,GAAS4vH,EAAAK,gBAAA,OACTjwH,GAAS4vH,EAAAM,gBAAA,OACjBxhH,EAAA+F,YAAqBu1B,GAAQxoB,eAAAiiG,MKwQ7BiL,OAAc7iF,GAAkBu4E,IAChCuK,YAAmB9iF,GAAkBu4E,IACrC36J,KAAYoiF,GAAkBs4E,IAC9BqJ,IAAW3hF,GAAkBs4E,IAC7BsJ,KAAY5hF,GAAkBs4E,IAC9Bv1F,IAAWid,GAAkBs4E,IAC7BuJ,KAAY7hF,GAAiByjF,IAC7BV,IAAW/iF,GAAkBs4E,IAC7B/0J,KAAYy8E,GAAkBs4E,IAC9B0K,IAAWhjF,GAAkBs4E,IAC7B2K,IAAWjjF,GAAkBy4E,IAC7ByK,KAAYljF,GAAkBu4E,IAC9B4K,KAAYnjF,GAAkBu4E,IAC9B6K,KAAYpjF,GAAkBu4E,IAC9B8K,cAAqBrjF,GAAkBu4E,IACvC+K,OAActjF,GAAkBy4E,MAMhC6L,GAAA,CACA5uI,MAAA,MACAqhG,WAAA,MACAU,gBAAA,OAQA,SAAAgqC,GAAAnjK,EAAAmhF,EAAAe,GACA,IAAArlE,EAAsC,EAAAM,cACtC,GAAAN,EAAA,CACA,IAAAwlE,EAAA2jF,GAAAnpJ,EAAAwV,WACA,GAAAgwD,EAEA,OAAmBpC,GADnBkB,IAAAv/E,OAAA,GAAA2iD,KACkC27B,aAAAmC,IAWlC,SAAAu2C,GAAAx3G,EAAA0iJ,EAAAv/G,EAAA3wC,GAkBA,OAjBAwN,EAAAze,KAAAgvD,WAAApN,EAAAwyG,aAAA,QAAAplG,WAAApN,EAAAwyG,aAAA,SACA,QAAAnjJ,GACAwN,EAAAze,KAA+CiR,EAAA,YAC/CA,EAAA,IACAkwJ,EAAAvQ,MAAA,GAGAnyI,EAAAze,KAAA,GAEA,SAAAiR,GACAwN,EAAAze,KAA+CiR,EAAA,aAC/CA,EAAA,KACAkwJ,EAAAtQ,MAAA,GAGApyI,EAAAze,KAAA,GAEAye,EAWA,SAAA6kJ,GAAAnC,EAAA1iJ,EAAA+S,GACA,IAAArB,EAAiBtO,GAAcC,GAC/BpD,EAAA,EAaA,GAZAyiJ,EAAAvQ,MAAAuQ,EAAAtQ,MACA1gI,EAAiBtO,GAAcI,KAC/BvD,EAAA,GAEAyiJ,EAAAvQ,MACAzgI,EAAiBtO,GAAcE,IAC/BrD,EAAA,GAEAyiJ,EAAAtQ,OACA1gI,EAAiBtO,GAAcG,IAC/BtD,EAAA,GAEA,IAAAA,EAAA,CACA,QAAAtiB,EAAA,EAAA0U,EAAA2N,EAAAxf,OAAA,EAAwD7C,EAAA0U,EAAQ1U,IAChEqiB,EAAAriB,EAAAsiB,GAAAD,EAAA,EAAAriB,GACAqiB,EAAAriB,EAAAsiB,EAAA,GAAAD,EAAA,EAAAriB,EAAA,GACA+kK,EAAAvQ,OACAnyI,EAAAriB,EAAAsiB,EAAA,GAAAD,EAAA,EAAAriB,EAAA,IAEA+kK,EAAAtQ,OACApyI,EAAAriB,EAAAsiB,EAAA,GAAAD,EAAA,EAAAriB,EAAA,IAIA,GADAqiB,EAAAxf,OAAAwf,EAAAxf,OAAA,EAAAyf,EACA8S,EACA,IAAAp1B,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAA6C7C,EAAA0U,EAAQ1U,IACrDo1B,EAAAp1B,GAAAo1B,EAAAp1B,GAAA,EAAAsiB,EAIA,OAAAyR,EAMA,SAAA0wI,GAAAj/G,EAAA48B,GACA,IAAAvtE,EAAmCutE,IAAAv/E,OAAA,GACnCskK,EAAA3hH,EAAAwyG,aAAA,QACA,OAAAmP,IACAtyJ,EAAA,KAAAsyJ,GAEInjF,GAASq/E,GAAA79G,EAAA48B,GAMb,SAAAuiF,GAAAn/G,EAAA48B,GACmCA,IAAAv/E,OAAA,GACnC,gBAAA2iD,EA4CA,SAAAu9G,GAAAv9G,EAAA48B,GACA,IAAArmE,EAAgEqmE,EAAA,GAChEvtE,EAAiByvE,GAAe,CAChCjiE,gBAAA,GACA0iJ,cAAA,IACKV,GAAA7+G,EAAA48B,GACL,GAAAvtE,EAAA,CAGA,IAAAwN,EAAmDxN,EAAA,uBACnDA,EAAA,gBACA,IAAAkwJ,EAAiDlwJ,EAAA,qBACjDA,EAAA,cACA,IAAAkf,EAAAmzI,GAAAnC,EAAA1iJ,GACAvE,EAAA,IAAuB27G,GAAUp3G,EAAA0R,GAC7BwiG,GAA4Bz4G,GAAA,EAAA/B,GAChC,IAAAuyC,EAAA,IAAsBlxC,EAAOU,GAE7B,OADAwwC,EAAA3zC,cAAA9F,GAAA,GACAy5C,GAOA,SAAA20G,GAAAz9G,EAAA48B,GACA,IAAArmE,EAAgEqmE,EAAA,GAChEvtE,EAAiByvE,GAAe,CAChCjiE,gBAAA,GACA+S,KAAA,GACA2vI,cAAA,IACKE,GAAAz/G,EAAA48B,GACL,GAAAvtE,EAAA,CAGA,IAAAwN,EAAmDxN,EAAA,uBACnDA,EAAA,gBACA,IAAAugB,EAAwCvgB,EAAA,YACxCA,EAAA,KACA,IAAAkwJ,EAAiDlwJ,EAAA,qBACjDA,EAAA,cACA,IAAAkf,EAAAmzI,GAAAnC,EAAA1iJ,EAAA+S,GACAtX,EAAA,IAAuBq8G,GAAe93G,EAAA0R,EAAAqB,GAClCmhG,GAA4Bz4G,GAAA,EAAA/B,GAChC,IAAAuyC,EAAA,IAAsBlxC,EAAOU,GAE7B,OADAwwC,EAAA3zC,cAAA9F,GAAA,GACAy5C,GAOA,SAAA60G,GAAA39G,EAAA48B,GACA,IAAArmE,EAAgEqmE,EAAA,GAChEvtE,EAAiByvE,GAAe,GAAGihF,GAAA//G,EAAA48B,GACnC,GAAAvtE,EAAA,CAGA,IAAAkwJ,EAAiD,GACjDhkJ,EAAA84G,GAAA,GAAAkrC,EAAAv/G,EAAA3wC,GACAkf,EAAAmzI,GAAAnC,EAAAhkJ,GACAjD,EAAA,IAAuBsa,GAAKrX,EAAAgT,GACxBwiG,GAA4Bz4G,GAAA,EAAA/B,GAChC,IAAAuyC,EAAA,IAAsBlxC,EAAOU,GAE7B,OADAwwC,EAAA3zC,cAAA9F,GAAA,GACAy5C,GAOA,SAAA83G,GAAA5gH,EAAAvkD,EAAAmhF,GACA58B,EAAA8L,aAAA,OAAArwD,GACA,IACA+c,EADAokE,IAAAv/E,OAAA,GACA,WACA2hK,EAAA,CACAxmJ,EAAA,SACAA,EAAA,UAEIwmE,GAAiE,CAAMh/B,QAAa2gH,GAAqB5iF,GAA4BihF,EAAApiF,EAAA8jF,IAOzI,SAAAvC,GAAAn+G,EAAA9jC,EAAA0gE,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GAEAs+E,EADA1uE,EAAA+yC,KACA27B,aACAnjE,EAAAvL,EAAA,WAKA,OAHA+yC,EAAA86G,eAAA,WAAA71J,OAAAiX,EAAA,KACA8jC,EAAA86G,eAAA,WAAA71J,OAAAiX,EAAA,KACAjP,EAAA,gBAEA,KAAagT,GAAcI,KAC3B,IAAAnE,EAAA,KACA1D,EAAA,KAAA0D,EAAA,IAGA,KAAa+D,GAAcE,IAC3B,IAAAjE,EAAA,KACA1D,EAAA,IAAA0D,EAAA,IAEA,MACA,KAAa+D,GAAcG,IAC3B,IAAAlE,EAAA,KACA1D,EAAA,KAAA0D,EAAA,IAMA,IAAA+hE,EAAA,SAAAj+B,EAAA89B,SACA+iF,GAAAllF,GACAqlF,GAAArlF,GACAtsE,EAAiB2uE,GAAYxlE,EAAAylE,GACzBe,GAAiE,CAAMh/B,OAAAxnC,cAAuCyoJ,GAAyBljF,GAA4B1uE,EAAAutE,EAAAqB,GAwExJ,IAAA2jF,GAAA,GCtuBXC,GAAyB,WAC7B,IAAAl0J,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4L7B,SAAAq8D,GAAAz/D,GACA,uBAAAA,EACAA,EAGA,GAGe,ICpCfk3J,GAeAC,GAIAC,GAIAC,GAIAC,GAIAC,GAIAC,GDCeC,GAzKA,SAAAl0J,GAEf,SAAAm0J,IACA,OAAAn0J,EAAAxT,KAAA2C,YAwJA,OA1JIukK,GAASS,EAAAn0J,GAObm0J,EAAAlmK,UAAA0xB,QAAA,WACA,OAAe+mD,GAAUG,MAUzBstF,EAAAlmK,UAAAs0H,YAAA,SAAA9lH,EAAA0L,GACA,OAAAhZ,KAAAilK,oBAAAl4F,GAAAz/D,GAAAtN,KAAAmzH,aAAAn6G,KASAgsJ,EAAAlmK,UAAAmmK,oBAAA,SAAA19F,EAAAvuD,GACA,OAAe/I,KAUf+0J,EAAAlmK,UAAA65E,aAAA,SAAArrE,EAAA0L,GACA,OAAAhZ,KAAAklK,qBAAAn4F,GAAAz/D,GAAAtN,KAAAmzH,aAAAn6G,KASAgsJ,EAAAlmK,UAAAomK,qBAAA,SAAA39F,EAAAvuD,GACA,OAAe/I,KAUf+0J,EAAAlmK,UAAAu0H,aAAA,SAAA/lH,EAAA0L,GACA,OAAAhZ,KAAAmlK,qBAAAp4F,GAAAz/D,GAAAtN,KAAAmzH,aAAAn6G,KASAgsJ,EAAAlmK,UAAAqmK,qBAAA,SAAA59F,EAAAvuD,GACA,OAAe/I,KASf+0J,EAAAlmK,UAAA+5E,eAAA,SAAAvrE,GACA,OAAAtN,KAAAolK,uBAAAr4F,GAAAz/D,KAOA03J,EAAAlmK,UAAAsmK,uBAAA,SAAA79F,GACA,OAAAvnE,KAAAi5E,gBAUA+rF,EAAAlmK,UAAAw0H,aAAA,SAAA9nE,EAAAxyC,GACA,OAAAhZ,KAAAqlK,iBAAA75G,EAAAxrD,KAAAmzH,aAAAn6G,KASAgsJ,EAAAlmK,UAAAumK,iBAAA,SAAA75G,EAAAxyC,GACA,OAAe/I,KAUf+0J,EAAAlmK,UAAAy0H,cAAA,SAAAhoE,EAAAvyC,GACA,OAAAhZ,KAAAslK,kBAAA/5G,EAAAvrD,KAAAmzH,aAAAn6G,KASAgsJ,EAAAlmK,UAAAwmK,kBAAA,SAAA/5G,EAAAvyC,GACA,OAAe/I,KAUf+0J,EAAAlmK,UAAA00H,cAAA,SAAAx4G,EAAAhC,GACA,OAAAhZ,KAAAulK,kBAAAvqJ,EAAAhb,KAAAmzH,aAAAn6G,KASAgsJ,EAAAlmK,UAAAymK,kBAAA,SAAAvqJ,EAAAhC,GACA,OAAe/I,KAEf+0J,EA3Je,CA4JbjyC,IEvLEyyC,GAAyB,WAC7B,IAAAn1J,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0B7B+0J,GAAA,CACAC,WAAA,aACAC,IAAA,MACAC,KAAA,QAMAC,GAAA,sFAKAC,GAAA,wBAKAC,GAAA,8BAOAC,GAAA,aA+HeC,GA/GR,SAAAp1J,GAKP,SAAAq1J,EAAAltJ,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAUA,OANAhI,EAAAioE,eAA+B3tD,GAAa,aAK5Cta,EAAAm1J,cAAAltJ,EAAAmtJ,aAAAntJ,EAAAmtJ,aAAAX,GAAAG,KACA50J,EA4FA,OA5GIw0J,GAASU,EAAAr1J,GAqBbq1J,EAAApnK,UAAAmmK,oBAAA,SAAA19F,EAAAvuD,GACA,IASA9b,EAAA0U,EATAw0J,EAAApmK,KAAAmmK,cACAr5J,EAAAy6D,EAAAr2D,MAAA80J,IAEA9qJ,EAAA,GACAqE,EAAA,GACA8mJ,EAAA,IACAC,EAAA,EACAC,EAAA,EACAC,GAAA,EAEA,IAAAtpK,EAAA,EAAA0U,EAAA9E,EAAA/M,OAAsC7C,EAAA0U,IAAQ1U,EAAA,CAC9C,IAAAigK,EAAArwJ,EAAA5P,GACAI,OAAA,EACA,QAAA6/J,EAAAvnH,OAAA,IAEA,GADAt4C,EAAAuoK,GAAAjkG,KAAAu7F,GACA,CACA,IAAAsJ,EAAA7xH,SAAAt3C,EAAA,OACAopK,EAAA9xH,SAAAt3C,EAAA,OACAqpK,EAAA/xH,SAAAt3C,EAAA,OACAkhB,EAAAo2B,SAAAt3C,EAAA,OAAAs3C,SAAAt3C,EAAA,WACA,KAAAA,EAAA,KACAkhB,MAEA,IAAA1e,EAAA80C,SAAAt3C,EAAA,OAAAs3C,SAAAt3C,EAAA,WAKA,GAJA,KAAAA,EAAA,KACAwC,MAEAyf,EAAAze,KAAAhB,EAAA0e,GACA4nJ,GAAAX,GAAAG,KAAA,CACA,IAAA3sH,OAAA,EAEAA,EADAmtH,GAAAX,GAAAE,IACA/wH,SAAAt3C,EAAA,QAEA8oK,GAAAX,GAAAC,WACA9wH,SAAAt3C,EAAA,QAGA,EAEAiiB,EAAAze,KAAAm4C,GAEA,IAAA0+G,EAAAz5H,KAAA0oI,IAAAP,EAAAC,EAAAC,EAAAE,EAAAC,EAAAC,GAEAhP,EAAA6O,IACA7O,EAAAz5H,KAAA0oI,IAAAP,EAAAC,EAAAC,EAAA,EAAAE,EAAAC,EAAAC,IAEApnJ,EAAAze,KAAA62J,EAAA,KACA6O,EAAA7O,OAGA,KAAAwF,EAAAvnH,OAAA,MACAt4C,EAAAyoK,GAAAnkG,KAAAu7F,KAEAoJ,EAAA3xH,SAAAt3C,EAAA,OACAgpK,EAAA1xH,SAAAt3C,EAAA,SACA+oK,EAAA,IAAAzxH,SAAAt3C,EAAA,SAGAA,EAAAwoK,GAAAlkG,KAAAu7F,MAEAjiJ,EAAA5d,EAAA,IAAAA,EAAA,GAAA06J,SAKA,OAAAz4I,EAAAxf,OACA,YAEA,IAAAkxB,EAAAm1I,GAAAX,GAAAG,KAAiDjjJ,GAAcG,IAAOH,GAAcI,KACpFy0G,EAAA,IAA6Bb,GAAUp3G,EAAA0R,GACvCu6B,EAAA,IAA0BlxC,EAAQm5G,GAA4B+D,GAAA,EAAAx+G,IAE9D,OADAwyC,EAAA3zC,cAAAqD,GAAA,GACAswC,GAKA06G,EAAApnK,UAAAomK,qBAAA,SAAA39F,EAAAvuD,GACA,IAAAwyC,EAAAxrD,KAAAilK,oBAAA19F,EAAAvuD,GACA,OAAAwyC,EACA,CAAAA,GAGA,IAGA06G,EA7GO,CA8GLnB,IDlLE8B,GAAyB,WAC7B,IAAAx2J,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2D7Bo2J,GAAA,CACA,qCAMIC,GAAc,CAClB,KACA,kCACA,kCACA,kCACA,kCAWAC,GAAA,CACAtqH,SAAgBwzC,GAAeC,SAC/B5jF,OAAc2jF,GAAe1pE,OAC7BygJ,YAAmB/2E,GAAe1pE,QAMlC0gJ,GAAwBrmF,GAAgBkmF,GAAc,CACtDI,aAAAC,GACAC,OAAAC,GACAC,cAAqB3nF,GAAwB4nF,GAAA,YAC7C5wC,WAAkBh3C,GAAwB42E,GAAA,YAC1CthI,WAAkB0qD,GAAwB+2E,GAAA,YAC1CphI,MAAaqqD,GAAwB81E,GAAA,YACrCz9H,QAAe2nD,GAAwBg3E,GAAA,YACvC9hE,MAAalV,GAAwB6nF,IACrCC,SAkgDA,SAAAhlH,EAAA48B,GACA,IAAAqoF,EAAAC,GAAAllH,EAAA48B,GACA,IAAAqoF,EACA,OAEA,IAAAE,EAAAvoF,IAAAv/E,OAAA,GACAqM,MAAA+K,QAAAwwJ,GACAE,EAAA,MAAAF,EAEA,iBAAAA,EACAE,EAAA,SAAAF,EAGQztJ,GAAM,OA9gDd4tJ,QAAeloF,GAAyBx4E,IACxC2gK,YAAmBnoF,GAAyBx4E,IAC5C3J,KAAYmiF,GAAyBx4E,IACrC+wE,KAAYyH,GAAyB14E,IACrC8gK,YAAmBpoF,GAAyBx4E,IAC5C6gK,SAAgBroF,GAAwBsoF,IACxCC,WAAkBvoF,GAAyB14E,KACxC25E,GAAeimF,GAAA,CAClBsB,WAAkBxoF,GAumClB,SAAAl9B,EAAA48B,GACA,IAAAi4C,EAAsB/1C,GAAe,GAAA6mF,GAAA3lH,EAAA48B,GACrC,IAAAi4C,EACA,OAEA,WAAeF,GAAeE,IA5mCY,YAC1C+wC,MAAa1oF,GAAwB2oF,GAAA,eAMrCC,GAA2B3nF,GAAgBkmF,GAAc,CACzDI,aAAAC,GACAC,OAAAC,GACAmB,KA8nDA,SAAA/lH,EAAA48B,GACI4B,GAAUwnF,GAAYhmH,EAAA48B,IA9nD1BwoF,QAAeloF,GAAyBx4E,IACxC2gK,YAAmBnoF,GAAyBx4E,IAC5C3J,KAAYmiF,GAAyBx4E,IACrC+wE,KAAYyH,GAAyB14E,IACrC8gK,YAAmBpoF,GAAyBx4E,IAC5C+gK,WAAkBvoF,GAAyB14E,MAMvCwhK,GAAe7nF,GAAgBkmF,GAAc,CACjD1C,KAAYzkF,GAAwBsoF,MAMpCS,GAAqB9nF,GAAgBkmF,GAAc,CACnD6B,aAshDA,SAAAlmH,EAAA48B,GACA,IAAA1gF,EAAiB4iF,GAAe,GAAGqnF,GAAAnmH,EAAA48B,GACnC,IAAA1gF,EACA,OAEA,IAAAkqK,EAAyCxpF,IAAAv/E,OAAA,GACzCme,EAAA,CACA4xC,WAAAlxD,EAAA,MACAkxD,WAAAlxD,EAAA,OACAkxD,WAAAlxD,EAAA,MACAkxD,WAAAlxD,EAAA,QAEAkqK,EAAA,OAAA5qJ,EACA4qJ,EAAA,aAAAlqK,EAAA,aACAkqK,EAAA,YAAAh5G,WAAAlxD,EAAA,aACAkqK,EAAA,YAAAh5G,WAAAlxD,EAAA,cApiDAmqK,IAojDA,SAAArmH,EAAA48B,GACA,IAAA1gF,EAAiB4iF,GAAe,GAAGwnF,GAAAtmH,EAAA48B,GACnC,IAAA1gF,EACA,OAEA,IAAAqqK,EAAsC3pF,IAAAv/E,OAAA,GACtCkpK,EAAA,aAAAn5G,WAAAlxD,EAAA,cACAqqK,EAAA,aAAAn5G,WAAAlxD,EAAA,cACAqqK,EAAA,cAAAn5G,WAAAlxD,EAAA,eACAqqK,EAAA,cAAAn5G,WAAAlxD,EAAA,kBAvjDAsqK,GAAmBroF,GAAgBkmF,GAAc,CACjD,yBAMAoC,GAAsBtoF,GAAgBkmF,GAAc,CACpDqC,SAAgBvpF,GAiuDhB,SAAAn9B,EAAA6I,EAAA+zB,GAEIoC,GADiD,CAAeh/B,QAC7C2mH,GAAAC,GAAA/9G,EAAA+zB,OAAA1sE,EAAA5S,QAluDvBupK,UAAiB1pF,GAAiB2pF,MASlCC,GAAA,KAmCA,IAWAC,GAXAC,GAAA,KAeA,IAWAC,GAXIC,GAAoB,KAexB,IAAAC,GAAA,KAWA,IAAAC,GAAA,KAWA,IAAAC,GAAA,KA+EA,IAAIC,GAAG,SAAAp5J,GAKP,SAAAq5J,EAAAlxJ,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAqCA,OApCAgxJ,KA7EAP,GAAA,IAA6B35E,GAAI,CACjCvuB,MAFAijG,GAAA,kBAIAC,GAAA,OACAC,GAAyCx0E,GAAe1pE,OACxDm+I,GAAyCz0E,GAAe1pE,OACxDo+I,GAAA,QACAC,GACA,+DACAC,GAAA,GACA6E,GAAA,IAA8B52E,GAAI,CAClC/uE,OAAAygJ,GACAtxE,aAAsBN,GAAUx1E,YAChCg2E,aAAAqxE,GACAnxE,aAAAoxE,GACA9hG,YAAA,YACA/hD,SAAA,EACAoP,MAAA40I,GACA/jJ,KAAA6jJ,GACAhiG,IAAAiiG,KAEA6E,GAAA,WACIG,GAAoB,IAAO51E,GAAM,CACrC1yB,MAAAijG,GACA74J,MAAA,IAEAi+J,GAAA,IAAoC31E,GAAM,CAC1C1yB,MAAA,aACA51D,MAAA,IAEAm+J,GAAA,IAA6B9zE,GAAI,CACjCnlC,KAAA,sBACA6b,KAAA+8F,GACA98F,OAAAi9F,GACA15I,MAAA,KAEA65I,GAAA,IAAwBn0E,GAAK,CAC7BlpB,KAAA+8F,GACAzgG,MAAA2gG,GACApiG,KAAAuiG,GACAn9F,OAAgBk9F,GAChBnmH,OAAA,IAEAsmH,GAAA,CAAAD,KAwCA/4J,EAAAioE,eAA+B3tD,GAAa,aAK5Cta,EAAAm5J,cAAAlxJ,EAAAmxJ,aACAnxJ,EAAAmxJ,aAAAJ,GAKAh5J,EAAAq5J,oBAAAz3J,IAAAqG,EAAAqxJ,eACArxJ,EAAAqxJ,cAKAt5J,EAAAu5J,kBAAA33J,IAAAqG,EAAAuxJ,aACAvxJ,EAAAuxJ,YAKAx5J,EAAAy5J,cAAA,GAKAz5J,EAAA05J,qBAAA93J,IAAAqG,EAAA0xJ,gBACA1xJ,EAAA0xJ,eACA35J,EAkYA,OA7aI61J,GAASqD,EAAAr5J,GAmDbq5J,EAAAprK,UAAA8rK,sBAAA,SAAAloH,EAAA48B,GAEA,IAQA/zB,EAAuBi2B,GAAe,GARdX,GAAgBkmF,GAAc,CACtDqC,SAAwBhqF,GAAiBp/E,KAAA4qK,sBAAA5qK,MACzC6qK,OAAsBzrF,GAAiBp/E,KAAA4qK,sBAAA5qK,MACvCupK,UAAyBhqF,GAAev/E,KAAA8qK,eAAA9qK,MACxC80F,MAAA90F,KAAA+qK,iBAAArsK,KAAAsB,MACA0nK,SAAA1nK,KAAAgrK,oBAAAtsK,KAAAsB,QAGsC0iD,EAAA48B,EAAAt/E,MACtC,OAAAurD,QAIA,GASA2+G,EAAAprK,UAAAgsK,eAAA,SAAApoH,EAAA48B,GACA,IAAA1gF,EAAqB4iF,GAAe,CAAExmE,SAAA,MAAmBksJ,GAAAxkH,EAAA48B,GACzD,GAAA1gF,EAAA,CAGA,IAAA4sD,EAAA,IAA0BlxC,EAC1B2B,EAAAymC,EAAAwyG,aAAA,MACA,OAAAj5I,GACAuvC,EAAAxvC,MAAAC,GAEA,IAAAhD,EAAoEqmE,EAAA,GACpEtkE,EAAApc,EAAA,SAMA,GALAoc,GACYy4G,GAA4Bz4G,GAAA,EAAA/B,GAExCuyC,EAAAvwC,YAAAD,UACApc,EAAA,SACAoB,KAAAqqK,eAAA,CACA,IAEA34B,EAqYA,SAAAn2H,EAAA0sJ,EAAAmC,EAAAa,EAAAN,GACA,gBAMAn/G,EAAA3qC,GACA,IAEAqqJ,EAFAC,EAAAR,EAGAltK,EAAA,GACA,GAAA0tK,EAAA,CACA,IAAAnwJ,EAAAwwC,EAAAlwC,cACAN,IACAmwJ,EAAAnwJ,EAAAwV,YAAkDxN,GAAYC,OAO9D,GAJAkoJ,IACA1tK,EAAqC+tD,EAAAztD,IAAA,QACrCotK,OAAA1tK,GAEA8d,EACA,OAAA4vJ,GACAD,EAAAE,GAAA7vJ,EAAA,GAAA9d,GACA8d,EAAApO,OAAA+9J,IAEA3vJ,EAEA,GAAA0sJ,EAAA,CACA,IAAAoD,EAqBA,SAAAC,EAAAC,EAAAnB,EAAAa,GACA,OAAA7+J,MAAA+K,QAAAo0J,GACAA,EAEA,iBAAAA,KAIAA,KAAAN,IAAA,IAAAM,KAAAN,IACAM,EAAA,IAAAA,GAEAD,EAAAL,EAAAM,GAAAnB,EAAAa,IAGAb,EAnCAkB,CAAArD,EAAAmC,EAAAa,GACA,OAAAE,GACAD,EAAAE,GAAAC,EAAA,GAAA5tK,GACA4tK,EAAAl+J,OAAA+9J,IAEAG,EAEA,OAAAF,GACAD,EAAAE,GAAAhB,EAAA,GAAA3sK,GACA2sK,EAAAj9J,OAAA+9J,IAEAd,GA9aAoB,CAFA5sK,EAAA,MACAA,EAAA,SACAoB,KAAAmqK,cAAAnqK,KAAAyqK,cAAAzqK,KAAA0qK,iBACAl/G,EAAA/vC,SAAAi2H,GAMA,cAJA9yI,EAAA,MAGA4sD,EAAA3zC,cAAAjZ,GAAA,GACA4sD,IAOA0+G,EAAAprK,UAAAisK,iBAAA,SAAAroH,EAAA48B,GACA,IAAArjE,EAAAymC,EAAAwyG,aAAA,MACA,UAAAj5I,EAAA,CACA,IAAAV,EAAAksJ,GAAA/kH,EAAA48B,GACA,GAAA/jE,EAAA,CACA,IAAAkwJ,OAAA,EACAC,EAAAhpH,EAAAgpH,QAIA,GAHAA,GAAA,eAAAA,IACAA,EAAA5uK,OAAAioF,SAAAs/E,MAEAqH,EAEAD,EADA,IAAAl+J,IAAA,IAAA0O,EAAAyvJ,GACArH,UAGAoH,EAAA,IAAAxvJ,EAEAjc,KAAAyqK,cAAAgB,GAAAlwJ,KASA2uJ,EAAAprK,UAAAksK,oBAAA,SAAAtoH,EAAA48B,GACA,IAAArjE,EAAAymC,EAAAwyG,aAAA,MACA,UAAAj5I,EAAA,CAGA,IAAA0rJ,EAAAC,GAAAllH,EAAA48B,GACA,GAAAqoF,EAAA,CAGA,IAAA8D,EACAC,EAAAhpH,EAAAgpH,QAIA,GAHAA,GAAA,eAAAA,IACAA,EAAA5uK,OAAAioF,SAAAs/E,MAEAqH,EAEAD,EADA,IAAAl+J,IAAA,IAAA0O,EAAAyvJ,GACArH,UAGAoH,EAAA,IAAAxvJ,EAEAjc,KAAAyqK,cAAAgB,GAAA9D,KAKAuC,EAAAprK,UAAAo0J,oBAAA,SAAAxwG,EAAA1pC,GACA,IAAamD,EAAS4qJ,GAAcrkH,EAAA27B,cACpC,YAEA,IAAA7yB,EAAAxrD,KAAA8qK,eAAApoH,EAAA,CAAA1iD,KAAAkzH,eAAAxwE,EAAA1pC,KACA,OAAAwyC,GAIA,MAMA0+G,EAAAprK,UAAAs0J,qBAAA,SAAA1wG,EAAA1pC,GACA,IAAamD,EAAS4qJ,GAAcrkH,EAAA27B,cACpC,SAEA,IAAA9yB,EACAo0B,EAAAj9B,EAAAi9B,UACA,eAAAA,GAAA,UAAAA,EAEA,OADAp0B,EAAAvrD,KAAA4qK,sBAAAloH,EAAA,CAAA1iD,KAAAkzH,eAAAxwE,EAAA1pC,OAKA,GAGA,gBAAA2mE,EAAA,CACA,IAAAn0B,EAAAxrD,KAAA8qK,eAAApoH,EAAA,CAAA1iD,KAAAkzH,eAAAxwE,EAAA1pC,KACA,OAAAwyC,EACA,CAAAA,GAGA,GAGA,UAAAm0B,EAAA,CACAp0B,EAAA,GACA,QAAA5sD,EAAA+jD,EAAA0+B,kBAAgDziF,EAAGA,IAAA0iF,mBAAA,CACnD,IAAAsqF,EAAA3rK,KAAAozJ,qBAAAz0J,EAAAqa,GACA2yJ,GACoBnyJ,EAAM+xC,EAAAogH,GAG1B,OAAApgH,EAGA,UAUA2+G,EAAAprK,UAAA8sK,SAAA,SAAAt+J,GACA,GAAAA,EAGA,qBAAAA,EAAA,CACA,IAAA0lJ,EAAsB9zE,GAAK5xE,GAC3B,OAAAtN,KAAA6rK,qBAAA7Y,GAEA,OAAiB/zE,GAAU3xE,GAC3BtN,KAAA6rK,qBAAiE,GAGjE7rK,KAAA8rK,iBAA4D,KAO5D5B,EAAAprK,UAAA+sK,qBAAA,SAAA7Y,GACA,QAAAr0J,EAAqCq0J,EAAA,WAAqBr0J,EAAGA,IAAAqgF,YAC7D,GAAArgF,EAAAggF,UAAAC,KAAAy0E,aAAA,CACA,IAAAjqE,EAAAppF,KAAA8rK,iBAAsE,GACtE,GAAA1iF,EACA,OAAAA,IAUA8gF,EAAAprK,UAAAgtK,iBAAA,SAAAppH,GACA,QAAA/jD,EAAA+jD,EAAA0+B,kBAA4CziF,EAAGA,IAAA0iF,mBAC/C,GAAgBllE,EAAS4qJ,GAAcpoK,EAAA0/E,eACvC,QAAA1/E,EAAAghF,UACA,OAAuBv4E,GAAUzI,GAGjC,IAAAA,EAAA+jD,EAAA0+B,kBAA4CziF,EAAGA,IAAA0iF,mBAAA,CAC/C,IAAA1B,EAAAhhF,EAAAghF,UACA,GAAgBxjE,EAAS4qJ,GAAcpoK,EAAA0/E,gBACvC,YAAAsB,GACA,UAAAA,GACA,aAAAA,GACA,OAAAA,GAAA,CACA,IAAAosF,EAAA/rK,KAAA8rK,iBAAAntK,GACA,GAAAotK,EACA,OAAAA,KAaA7B,EAAAprK,UAAAktK,iBAAA,SAAA1+J,GACA,IAAA2+J,EAAA,GACA,oBAAA3+J,EAAA,CACA,IAAA0lJ,EAAsB9zE,GAAK5xE,GACfkM,EAAMyyJ,EAAAjsK,KAAAksK,6BAAAlZ,SAED/zE,GAAU3xE,GACfkM,EAAMyyJ,EAAAjsK,KAAAksK,6BACc,IAGpB1yJ,EAAMyyJ,EAAAjsK,KAAAmsK,yBACa,IAE/B,OAAAF,GAMA/B,EAAAprK,UAAAotK,6BAAA,SAAAlZ,GAEA,IADA,IAAAiZ,EAAA,GACAttK,EAAqCq0J,EAAA,WAAqBr0J,EAAGA,IAAAqgF,YAC7DrgF,EAAAggF,UAAAC,KAAAy0E,cACgB75I,EAAMyyJ,EAAAjsK,KAAAmsK,yBAAgE,IAGtF,OAAAF,GAMA/B,EAAAprK,UAAAqtK,yBAAA,SAAAzpH,GAEA,IADA,IAAAupH,EAAA,GACAttK,EAAA+jD,EAAA0+B,kBAA4CziF,EAAGA,IAAA0iF,mBAC/C,GAAgBllE,EAAS4qJ,GAAcpoK,EAAA0/E,eACvC,eAAA1/E,EAAAghF,UAAA,CACA,IAAAl2E,EAA0B+3E,GAAe,GAAGgnF,GAAA7pK,EAAA,IAC5CstK,EAAAnrK,KAAA2I,GAGA,IAAA9K,EAAA+jD,EAAA0+B,kBAA4CziF,EAAGA,IAAA0iF,mBAAA,CAC/C,IAAA1B,EAAAhhF,EAAAghF,WACgBxjE,EAAS4qJ,GAAcpoK,EAAA0/E,eACvC,YAAAsB,GACA,UAAAA,GACA,OAAAA,GACgBnmE,EAAMyyJ,EAAAjsK,KAAAmsK,yBAAAxtK,IAGtB,OAAAstK,GASA/B,EAAAprK,UAAAstK,WAAA,SAAA9+J,GACA,IAAA++J,EAAA,GACA,oBAAA/+J,EAAA,CACA,IAAA0lJ,EAAsB9zE,GAAK5xE,GACfkM,EAAM6yJ,EAAArsK,KAAAssK,uBAAAtZ,SAED/zE,GAAU3xE,GACfkM,EAAM6yJ,EAAArsK,KAAAssK,uBACc,IAGpB9yJ,EAAM6yJ,EAAArsK,KAAAusK,mBACa,IAE/B,OAAAF,GAMAnC,EAAAprK,UAAAwtK,uBAAA,SAAAtZ,GAEA,IADA,IAAAqZ,EAAA,GACA1tK,EAAqCq0J,EAAA,WAAqBr0J,EAAGA,IAAAqgF,YAC7DrgF,EAAAggF,UAAAC,KAAAy0E,cACgB75I,EAAM6yJ,EAAArsK,KAAAusK,mBAAqD,IAG3E,OAAAF,GAOAnC,EAAAprK,UAAAytK,mBAAA,SAAA7pH,GAEA,IADA,IAAA2pH,EAAA,GACA1tK,EAAA+jD,EAAA0+B,kBAA4CziF,EAAGA,IAAA0iF,mBAC/C,GAAgBllE,EAAS4qJ,GAAcpoK,EAAA0/E,eACvC,UAAA1/E,EAAAghF,UAAA,CACA,IAAAl2E,EAA0B+3E,GAAe,GAAGmnF,GAAAhqK,EAAA,IAC5C0tK,EAAAvrK,KAAA2I,GAGA,IAAA9K,EAAA+jD,EAAA0+B,kBAA4CziF,EAAGA,IAAA0iF,mBAAA,CAC/C,IAAA1B,EAAAhhF,EAAAghF,WACgBxjE,EAAS4qJ,GAAcpoK,EAAA0/E,eACvC,YAAAsB,GACA,UAAAA,GACA,OAAAA,GACgBnmE,EAAM6yJ,EAAArsK,KAAAusK,mBAAA5tK,IAGtB,OAAA0tK,GAYAnC,EAAAprK,UAAA80J,kBAAA,SAAAroG,EAAAvyC,GACAA,EAAAhZ,KAAAmzH,aAAAn6G,GACA,IAAAwzJ,EAAkBpuF,GAAgB2oF,GAAc,UAChD0F,EAAA,gCACAD,EAAAhP,eAAAiP,EAAA,WAAA3F,GAAA,IACA0F,EAAAhP,eAAAiP,EAAA,YAAkDtuF,IAClDquF,EAAAhP,eAA2Br/E,GAAuB,qBA5pB/B,uFA6pBnB,IAAyDxuE,EAAA,CAAe+yC,KAAA8pH,GAExEtxJ,EAAA,GACAqwC,EAAAxrD,OAAA,EACAmb,EAAA,SAAAqwC,EAEA,GAAAA,EAAAxrD,SACAmb,EAAA,UAAAqwC,EAAA,IAEA,IAAAo1B,EAAAuoF,GAAAsD,EAAAnuF,cACAtsE,EAAqB2uE,GAAYxlE,EAAAylE,GAEjC,OADQe,GAAmB/xE,EAAAw5J,GAA2B1oF,GAA4B1uE,EAAA,CAAAiH,GAAA2nE,EAAA3gF,MAClFwsK,GAEAtC,EA9aO,CA+aLtX,IAMF,SAAAwY,GAAAC,EAAA5tK,GACA,IAAAsnE,EAAA,KACA2nG,EAAA,MACAj+F,EAAA,QACA,GAAA48F,EAAAv+F,WAAA,CACA,IAAAgD,EAAAu7F,EAAAv+F,WAAA+gB,eAIA,GAHA,OAAA/d,IACAA,EAAA80F,IAEA,GAAA90F,EAAA/vE,OAAA,CACA,IAAA4sK,EAAAtB,EAAAv+F,WAAAkD,WAGA08F,EAAA,GAAAC,EAAA78F,EAAA,KACA48F,EAAA,IAAAC,EAAA78F,EAAA,KACArB,EAAA,QAGA,UAAA48F,EAAAt+F,UAAA,CAGA,IAAA6/F,EAAAvB,EAAAt+F,WACAhI,EAAA6nG,EAAAzxJ,SACAq8E,QAAAo1E,EAAAh8F,WAAAk5F,GAAAl5F,WACA7L,EAAAipB,SAAA4+E,EAAA58F,YAAA85F,GAAA95F,YACAjL,EAAAowB,QAAAy3E,EAAAhgG,WAAAk9F,GAAAl9F,WACA7H,EAAAqwB,UAAAw3E,EAAA//F,aAAA+8F,SAGA7kG,EAAA+kG,GAAA3uJ,QASA,OAPA4pD,EAAAswB,QAAA53F,GACAsnE,EAAA2yB,WAAAg1E,EAAA,IACA3nG,EAAA4yB,WAAA+0E,EAAA,IACA3nG,EAAA8yB,aAAAppB,GACA,IAAwBmnB,GAAK,CAC7BruB,KAAAxC,IAoFA,SAAA8nG,GAAAnqH,GACA,IAAAzjD,EAAYs/E,GAAiB77B,GAAA,GAG7BplD,EAAA,gCAAqCskE,KAAA3iE,GACrC,GAAA3B,EAAA,CACA,IAAAwvK,EAAAxvK,EAAA,GACA,OACAs3C,SAAAk4H,EAAA7qG,OAAA,SACArtB,SAAAk4H,EAAA7qG,OAAA,SACArtB,SAAAk4H,EAAA7qG,OAAA,SACArtB,SAAAk4H,EAAA7qG,OAAA,eAWO,SAAA8qG,GAAArqH,GAOP,IANA,IAKAplD,EALA2B,EAAYs/E,GAAiB77B,GAAA,GAC7BnjC,EAAA,GAGAw7I,EAAA,8HAEAz9J,EAAAy9J,EAAAn5F,KAAA3iE,IAAA,CACA,IAAAa,EAAAgwD,WAAAxyD,EAAA,IACAkhB,EAAAsxC,WAAAxyD,EAAA,IACA27C,EAAA37C,EAAA,GAAAwyD,WAAAxyD,EAAA,MACAiiB,EAAAze,KAAAhB,EAAA0e,EAAAy6B,GACAh6C,IAAAgjE,OAAA3kE,EAAA,GAAAyC,QAEA,QAAAd,EAGA,OAAAsgB,EAMA,SAAA2oJ,GAAAxlH,GACA,IAAAzjD,EAAYs/E,GAAiB77B,GAAA,GAAAs1G,OAC7B0T,EAAAhpH,EAAAgpH,QAIA,OAHAA,GAAA,eAAAA,IACAA,EAAA5uK,OAAAioF,SAAAs/E,MAEAqH,EACA,IAAAn+J,IAAAtO,EAAAysK,GACArH,KAGAplK,EAuCA,SAAA+tK,GAAAtqH,GACA,OAAWk1G,GAAWl1G,GAMtB,IAAAuqH,GAAwBpsF,GAAgBkmF,GAAc,CACtDmG,KAmnBA,SAAAxqH,EAAA48B,GACA,IAAA6tF,EAAqB3rF,GAAe,GAAG4rF,GAAA1qH,EAAA48B,GACvC,IAAA6tF,EACA,OAEA,IAAA1uK,EAA0C0uK,EAAA,IAC1C,GAAA1uK,GAAA,UAAAA,EAAA,CACA,IAAAwpK,EAAmDkF,EAAA,SACnDlF,IACA3oF,IAAAv/E,OAAA,GAAAkoK,GAEA,IAAA1sJ,EAAqC4xJ,EAAA,MACrC5xJ,IACA+jE,IAAAv/E,OAAA,GAAAwb,OAznBA,SAAAqsJ,GAAAllH,EAAA48B,GACA,OAAWkC,QAAe5uE,EAAAq6J,GAAAvqH,EAAA48B,GAM1B,IAAA+tF,GAAyBxsF,GAAgBkmF,GAAc,CACvD/zE,KAAYpT,GA6RZ,SAAAl9B,EAAA48B,GACA,IAAAguF,EAAqB9rF,GAAe,GAAG+rF,GAAA7qH,EAAA48B,GACvC,OAAAguF,GAIA,OAlSA5wI,QAAekjD,GAAyBg4E,IACxC4V,QAAe5tF,GAzDf,SAAAl9B,GACA,IAEA+3B,EAFAgzF,EAAA/qH,EAAAwyG,aAAA,UACAwY,EAAAhrH,EAAAwyG,aAAA,UAkBA,OAdAz6E,EAFA,gBAAAgzF,EACA,gBAAAC,EACqB76E,GAAUx1E,YAGVw1E,GAAUt1E,SAI/B,gBAAAmwJ,EACqB76E,GAAUv1E,aAGVu1E,GAAUr1E,UAG/B,CACA1d,EAAAgwD,WAAApN,EAAAwyG,aAAA,MACAuY,OAAAzG,GAAAyG,GACAjvJ,EAAAsxC,WAAApN,EAAAwyG,aAAA,MACAwY,OAAA1G,GAAA0G,GACAjzF,YAiCAvqD,MAAa0vD,GAAwBotF,MAgGrC,IAAAW,GAA0B9sF,GAAgBkmF,GAAc,CACxDxlG,MAAaqe,GAAwBitF,IACrC38I,MAAa0vD,GAAwBotF,MAyBrC,IAAAY,GAAyB/sF,GAAgBkmF,GAAc,CACvDxlG,MAAaqe,GAAwBitF,IACrClhK,MAAai0E,GAAyBg4E,MA2BtC,IAAAiW,GAAyBhtF,GAAgBkmF,GAAc,CACvDxlG,MAAaqe,GAAwBitF,IACrCngG,KAAYkT,GAAyB14E,IACrC4mK,QAAeluF,GAAyB14E,MA8BxC,IAAA6mK,GAA+BltF,GAAgBkmF,GAAc,CAC7D9oJ,YAAmBuhE,GAAYutF,MAO/B,SAAAiB,GAAAtrH,EAAA48B,GACA,OAAWkC,GAAe,KAAAusF,GAAArrH,EAAA48B,GA0B1B,IAAA+oF,GAAqCxnF,GAAeimF,GAAA,CACpDwB,MAAa/oF,GAAegpF,MAkB5B,IAAA0F,GAAuBptF,GAAgBkmF,GAAc,CACrDmH,KA4hBA,SAAAxrH,EAAA48B,GACA,IACA6uF,EADiD7uF,IAAAv/E,OAAA,GACjDouK,MACAlvK,EAAYs/E,GAAiB77B,GAAA,GAC7BwrH,EAAAhwI,KAAAghD,MAAAjgF,GACAkvK,EAAArtK,KAAAqK,MAAA+iK,GAAA,EAAAA,KAhiBGrtF,GAAeimF,GAAA,CAClBl3I,MA1CA,SAAA8yB,EAAA48B,GACA,IACA//D,EADiD+/D,IAAAv/E,OAAA,GACjDwf,gBACAtgB,EAAYs/E,GAAiB77B,GAAA,GAE7BplD,EADA,8HACAskE,KAAA3iE,GACA,GAAA3B,EAAA,CACA,IAAAwC,EAAAgwD,WAAAxyD,EAAA,IACAkhB,EAAAsxC,WAAAxyD,EAAA,IACA27C,EAAA6W,WAAAxyD,EAAA,IACAiiB,EAAAze,KAAAhB,EAAA0e,EAAAy6B,EAAA,QAGA15B,EAAAze,KAAA,aAoCA,SAAAynK,GAAA7lH,EAAA48B,GACA,IAAA8uF,EAAwB5sF,GACK,CAC7BjiE,gBAAA,GACA4uJ,MAAA,IACKF,GAAAvrH,EAAA48B,GACL,GAAA8uF,EAAA,CAKA,IAFA,IAAA7uJ,EAAA6uJ,EAAA7uJ,gBACA4uJ,EAAAC,EAAAD,MACAjxK,EAAA,EAAA0U,EAAAvS,KAAAQ,IAAA0f,EAAAxf,OAAAouK,EAAApuK,QAAwE7C,EAAA0U,IAAQ1U,EAChFqiB,EAAA,EAAAriB,EAAA,GAAAixK,EAAAjxK,GAEA,WAAey5H,GAAUp3G,EAAkBoD,GAAcI,OAMzD,IAAAwqJ,GAAmB1sF,GAAgBkmF,GAAc,CACjD1C,KAAYzkF,GAAwBsoF,KACjCrnF,GAAeimF,GAAA,CAClBhnK,EAAS8/E,GAAyBg4E,IAClCp5I,EAASohE,GAAyBg4E,IAClCj6G,EAASiiC,GAAyBg4E,IAClCx4J,EAASwgF,GAAyBg4E,OAoBlC,IAAAlB,GAAwC71E,GAAgBkmF,GAAc,CACtE9oJ,YAAmBuhE,GAAYutF,MAO/B,SAAAsB,GAAA3rH,EAAA48B,GACA,OAAWkC,GAAe,KAAAk1E,GAAAh0G,EAAA48B,GAM1B,IAAAgvF,GAAwCztF,GAAgBkmF,GAAc,CACtEwH,QAAe3uF,GAAyB14E,IACxCsnK,WAAkB5uF,GAAyB14E,IAC3Ck/J,aAAoBxmF,GAAyBx4E,MAO7C,SAAAovJ,GAAA9zG,EAAA48B,GACA,IAAApkE,EAAqBsmE,GAAe,GAAG8sF,GAAA5rH,EAAA48B,GACvC//D,EAAA8uJ,GAAA3rH,EAAA48B,GACA,GAAA//D,EAAA,CACA,IAAAi4G,EAAA,IAA6Bb,GAAUp3G,EAAkBoD,GAAcE,KAEvE,OADA20G,EAAA3/G,cAAAqD,GAAA,GACAs8G,GAWA,SAAAm/B,GAAAj0G,EAAA48B,GACA,IAAApkE,EAAqBsmE,GAAe,GAAG8sF,GAAA5rH,EAAA48B,GACvC//D,EAAA8uJ,GAAA3rH,EAAA48B,GACA,GAAA//D,EAAA,CACA,IAAAsa,EAAA,IAA0BX,GAAO3Z,EAAkBoD,GAAcE,IAAA,CAAAtD,EAAAxf,SAEjE,OADA85B,EAAAhiB,cAAAqD,GAAA,GACA2e,GAUA,IAAA40I,GAA6B5tF,GAAgBkmF,GAAc,CAC3DnwC,WAAkBr3C,GAAei3E,IACjCthI,WAAkBqqD,GAAeo3E,IACjC4Q,cAAqBhoF,GAAeioF,IACpCjyI,MAAagqD,GAAem2E,IAC5Bz9H,QAAesnD,GAAeq3E,MAO9B,SAAA4Q,GAAA9kH,EAAA48B,GACA,IAOAovF,EAPAzhG,EAAqBuU,GAAe,GAAAitF,GAAA/rH,EAAA48B,GACpC,IAAArS,EACA,YAEA,OAAAA,EAAAltE,OACA,WAAmB60H,GAAkB3nD,GAMrC,IAHA,IAAA0hG,GAAA,EACAvrK,EAAA6pE,EAAA,GAAAz8C,UAEAtzB,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA2C7C,EAAA0U,IAAQ1U,EAEnD,GADA+vE,EAAA/vE,GACAszB,WAAAptB,EAAA,CACAurK,GAAA,EACA,MAGA,GAAAA,EAAA,CACA,IAAA19I,OAAA,EACA1R,OAAA,EACA,GAAAnc,GAAoB4f,GAAYC,MAAA,CAChC,IAAAqG,EAAA2jD,EAAA,GACAh8C,EAAA3H,EAAAkI,YACAjS,EAAA+J,EAAAgI,qBACA,IAAAp0B,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAAmD7C,EAAA0U,IAAQ1U,EAE3Csc,EAAM+F,EADtB0tD,EAAA/vE,GACsBo0B,sBAGtBs9I,GADAF,EAAA,IAAgCx2C,GAAU34G,EAAA0R,GAC1Cg8C,QAEA7pE,GAAyB4f,GAAYE,YAErC0rJ,GADAF,EAAA,IAAgCr3C,GAAepqD,GAC/CA,GAEA7pE,GAAyB4f,GAAYI,QAErCwrJ,GADAF,EAAA,IAAgCl2C,GAAYvrD,GAC5CA,GAEA7pE,GAAyB4f,GAAYQ,oBACrCkrJ,EAAA,IAAgC95C,GAAkB3nD,GAGtC/yD,GAAM,WAIlBw0J,EAAA,IAA4B95C,GAAkB3nD,GAE9C,SAQA,SAAAyoF,GAAAhzG,EAAA48B,GACA,IAAApkE,EAAqBsmE,GAAe,GAAG8sF,GAAA5rH,EAAA48B,GACvC//D,EAAA8uJ,GAAA3rH,EAAA48B,GACA,GAAA//D,EAAA,CACA,IAAA+J,EAAA,IAAwBgM,GAAK/V,EAAkBoD,GAAcE,KAE7D,OADAyG,EAAAzR,cAAAqD,GAAA,GACAoO,GAUA,IAAAwtI,GAAgCj2E,GAAgBkmF,GAAc,CAC9DzH,gBA6SA,SAAA58G,EAAA48B,GAEA,IAAAg7E,EAAyB94E,QAAe5uE,EAAAi8J,GAAAnsH,EAAA48B,GACxC,GAAAg7E,EAAA,CACA,IAAAzD,EAA8Dv3E,IAAAv/E,OAAA,GAC9D82J,EAAA/1J,KAAAw5J,KAjTAiF,gBA+TA,SAAA78G,EAAA48B,GAEA,IAAAg7E,EAAyB94E,QAAe5uE,EAAAk8J,GAAApsH,EAAA48B,GACxC,GAAAg7E,EAAA,CACA,IAAAzD,EAA8Dv3E,IAAAv/E,OAAA,GAC9D82J,EAAA,GAAAyD,MA7TA,SAAA1D,GAAAl0G,EAAA48B,GACA,IAAApkE,EAAqBsmE,GAA4C,GAAO8sF,GAAA5rH,EAAA48B,GACxEu3E,EAA0Br1E,GAAe,OAAAs1E,GAAAp0G,EAAA48B,GACzC,GAAAu3E,KAAA,IAGA,IAFA,IAAAt3I,EAAAs3I,EAAA,GACAvkI,EAAA,CAAA/S,EAAAxf,QACA7C,EAAA,EAAA0U,EAAAilJ,EAAA92J,OAAoD7C,EAAA0U,IAAQ1U,EAChDsc,EAAM+F,EAAAs3I,EAAA35J,IAClBo1B,EAAAxxB,KAAAye,EAAAxf,QAEA,IAAA85B,EAAA,IAA0BX,GAAO3Z,EAAkBoD,GAAcE,IAAAyP,GAEjE,OADAuH,EAAAhiB,cAAAqD,GAAA,GACA2e,GAUA,IAAAk1I,GAAoBluF,GAAgBkmF,GAAc,CAClDiI,UAldA,SAAAtsH,EAAA48B,GAOA,IAAA1gF,EAAiB4iF,GAAe,GAAG6rF,GAAA3qH,EAAA48B,GACnC,GAAA1gF,EAAA,CAGA,IAGAgkE,EAQA5+C,EAAAqvE,EAAAE,EAXA07E,EAAwC3vF,IAAAv/E,OAAA,GACxCmvK,EAAA,SAAAtwK,IAAA,QACAuwK,IAAA,SAAAvwK,IAAAhB,OAAAmP,KAAAmiK,GAAAnvK,OAAA,EAEAskK,EAA2C6K,EAAA,KAC3C7K,EACAzhG,EAAAyhG,EAEA8K,IACAvsG,EAAAiiG,IAGA,IAkBAt6J,EAlBA4oF,EAAuBN,GAAUx1E,YACjCmwJ,EAA4C5uK,EAAA,QAC5C4uK,GACAxpJ,EAAA,CAAAwpJ,EAAA1tK,EAAA0tK,EAAAhvJ,GACA60E,EAAAm6E,EAAAC,OACAl6E,EAAAi6E,EAAAE,OACAv6E,EAAAq6E,EAAA/yF,QAEA7X,IAAAiiG,IACA7gJ,EAAAygJ,GACApxE,EAAAqxE,GACAnxE,EAAAoxE,IAEA,4CAAA5tD,KAAAn0C,KACA5+C,EAAA,OACAqvE,EAAuBnD,GAAeC,SACtCoD,EAAuBrD,GAAeC,UAGtC,IAKApvE,EALAjhB,EAAwCovK,EAAA,EACxC1wJ,EAAwC0wJ,EAAA,OACxCt8J,IAAA9S,QAAA8S,IAAA4L,IACAjU,EAAA,CAAAzK,EAAA0e,IAGA,IAKAsC,EALA68B,EAAwCuxH,EAAA,EACxC9vK,EAAwC8vK,EAAA,OACxCt8J,IAAA+qC,QAAA/qC,IAAAxT,IACA2hB,EAAA,CAAA48B,EAAAv+C,IAGA,IAAAs9B,EAAoC99B,EAAA,aACpCgU,IAAA8pB,IACA5b,EAAmB8D,GAAS8X,IAE5B,IAAAxM,EAA4CtxB,EAAA,MAC5C,GAAAuwK,EAAA,CACAvsG,GAAAiiG,KACA9jJ,EAAA6jJ,QACAhyJ,IAAAsd,IACAA,EAAA40I,KAGA,IAAAlgG,EAAA,IAA6BmuB,GAAI,CACjC/uE,SACAmvE,eACAE,eACAE,eACA1wB,YAAA,YACAt4D,SACAupF,aAA0BjB,GAAUx1E,YACpCyD,WACAoP,QACAnP,OACA6hD,QAEAqsG,EAAA,WAAArqG,OAIAqqG,EAAA,WAAAvF,KAgYA0F,WAjXA,SAAA1sH,EAAA48B,GAEA,IAAA1gF,EAAiB4iF,GAAe,GAAGmsF,GAAAjrH,EAAA48B,GACnC,GAAA1gF,EAAA,CAGA,IAAAqwK,EAAA3vF,IAAAv/E,OAAA,GACAglE,EAAA,IAAwBixB,GAAI,CAC5BtpB,KAAA,IAAkBojB,GAAI,CACtBvuB,MAA0D,UAAA3iE,IAAA,MAAA4lK,KAE1Dt0I,MAA2CtxB,EAAA,QAE3CqwK,EAAA,UAAAlqG,IAqWAsqG,UAvVA,SAAA3sH,EAAA48B,GAMA,IAAA1gF,EAAiB4iF,GAAe,GAAGosF,GAAAlrH,EAAA48B,GACnC,GAAA1gF,EAAA,CAGA,IAAAqwK,EAAA3vF,IAAAv/E,OAAA,GACA2kE,EAAA,IAA0BuvB,GAAM,CAChC1yB,MAAsD,UAAA3iE,IAAA,MAAA4lK,GACtD74J,MAAiC,UAAA/M,IAAA,UAEjCqwK,EAAA,YAAAvqG,IAyUA4qG,UA1TA,SAAA5sH,EAAA48B,GAEA,IAAA1gF,EAAiB4iF,GAAe,GAAGqsF,GAAAnrH,EAAA48B,GACnC,GAAA1gF,EAAA,CAGA,IAAAqwK,EAAA3vF,IAAAv/E,OAAA,GACA0kE,EAAA,IAAwBqrB,GAAI,CAC5BvuB,MAAsD,UAAA3iE,IAAA,MAAA4lK,KAEtDyK,EAAA,UAAAxqG,EACA,IAAAiI,EAA4C9tE,EAAA,UAC5CgU,IAAA85D,IACAuiG,EAAA,KAAAviG,GAEA,IAAAohG,EAA+ClvK,EAAA,aAC/CgU,IAAAk7J,IACAmB,EAAA,QAAAnB,OAgTA,SAAArG,GAAA/kH,EAAA48B,GACA,IAAA2vF,EAAsBztF,GAAe,GAAGutF,GAAArsH,EAAA48B,GACxC,IAAA2vF,EACA,YAEA,IAMArqG,EANAH,EAAoC,cAAAwqG,EACpCA,EAAA,UAAAxF,GACA/8F,EAA4CuiG,EAAA,UAC5Cr8J,IAAA85D,OACAjI,EAAA,MAGA,eAAAwqG,EACAA,EAAA,YAAAvF,KACA9kG,EAAAqqG,EAAA,YAIArqG,EAAA+kG,GAEA,IAAA5kG,EAAoC,cAAAkqG,EACpCA,EAAA,UAAAnF,GACAplG,EAAwC,gBAAAuqG,EACxCA,EAAA,YAAqCpF,GACrCiE,EAA+CmB,EAAA,QAI/C,YAHAr8J,IAAAk7J,OACAppG,EAAA,MAEA,KAAgBkxB,GAAK,CACrBlpB,KAAAjI,EACAuE,MAAApE,EACA+H,OAAAjI,EACA6C,KAAAxC,EACArhB,YAAA9wC,KASA,SAAAg8J,GAAAF,EAAAzhG,GACA,IAIAsiG,EAAAC,EAAAC,EAJA79J,EAAAq7D,EAAAltE,OACA2vK,EAAA,IAAAtjK,MAAA6gE,EAAAltE,QACA4vK,EAAA,IAAAvjK,MAAA6gE,EAAAltE,QACA6vK,EAAA,IAAAxjK,MAAA6gE,EAAAltE,QAEAwvK,EAAAC,EAAAC,GAAA,EACA,QAAAvyK,EAAA,EAAmBA,EAAA0U,IAAQ1U,EAAA,CAC3B,IAAA8d,EAAAiyD,EAAA/vE,GACAwyK,EAAAxyK,GAAA8d,EAAAjd,IAAA,WACA4xK,EAAAzyK,GAAA8d,EAAAjd,IAAA,cACA6xK,EAAA1yK,GAAA8d,EAAAjd,IAAA,gBACAwxK,UAAA38J,IAAA88J,EAAAxyK,GACAsyK,UAAA58J,IAAA+8J,EAAAzyK,GACAuyK,KAAAG,EAAA1yK,GAEAqyK,GACAb,EAAA/lK,IAAA,UAAA+mK,GAEAF,GACAd,EAAA/lK,IAAA,aAAAgnK,GAEAF,GACAf,EAAA/lK,IAAA,eAAAinK,GAOA,IAAAC,GAAmBhvF,GAAgBkmF,GAAc,CACjD+I,YAAmBlwF,GAAyBx4E,IAC5CjJ,MAAayhF,GAAyBx4E,MAsBtC,IAAA2oK,GAA4BlvF,GAAgBkmF,GAAc,CAC1DiJ,KAjBA,SAAAttH,EAAA48B,GACA,IAAA7hF,EAAAilD,EAAAwyG,aAAA,QACIh0E,GAAS2uF,GAAAntH,EAAA48B,GACb,IAAA2wF,EAA0C3wF,IAAAv/E,OAAA,GAC1C,OAAAtC,EACAwyK,EAAAxyK,GAAAwyK,EAAA9xK,MAEA,OAAA8xK,EAAAH,cACAG,IAAAH,aAAAG,EAAA9xK,cAEA8xK,EAAA,OAQAC,WA6EA,SAAAxtH,EAAA48B,GACI4B,GAASivF,GAAAztH,EAAA48B,MAxEb,SAAA8nF,GAAA1kH,EAAA48B,GACI4B,GAAS6uF,GAAArtH,EAAA48B,GAMb,SAAAgoF,GAAA5kH,EAAA48B,GACI4B,GAASynF,GAAAjmH,EAAA48B,GAMb,IAAA8tF,GAAmBvsF,GAAgBkmF,GAAc,CACjDjyE,MAAalV,GAAwB6nF,IACrChpK,IAAWmhF,GAAyBx4E,IACpC6gK,SAAgBroF,GAAwBsoF,MA+CxC,IAAAiI,GAA0BtvF,GAAgBkmF,GAAc,CACxDqJ,WAaA,SAAA1tH,EAAA48B,GACA,IAAA7hF,EAAAilD,EAAAwyG,aAAA,QACA,UAAAz3J,EAAA,CACA,IAAAwD,EAAmBmG,GAAUs7C,GAC7ButH,EAA8C3wF,IAAAv/E,OAAA,GAC9CkwK,EAAAxyK,GAAAwD,MAOA,IAAA4nK,GAA8BhoF,GAAgBkmF,GAAc,CAC5DX,aAAoBxmF,GAAyBx4E,IAC7CipK,YAAmBzwF,GAAyBg4E,IAC5C0Y,YAAmB1wF,GAAyBg4E,IAC5C2Y,MAAa3wF,GAAyBg4E,IACtC4Y,MAAa5wF,GAAyBg4E,IACtC6Y,KAAY7wF,GAAyBg4E,IACrC8Y,KAAY9wF,GAAyBg4E,MA2BrC,IAAAoR,GAAkBnoF,GAAgBkmF,GAAc,CAChD4J,aAAoB/wF,GAAyBg4E,IAC7CgZ,aAAoBhxF,GAAyBg4E,IAC7CiZ,cAAqBjxF,GAAyBg4E,IAC9CkZ,cAAqBlxF,GAAyBg4E,MAqB9C,IAAAiX,GAAgChuF,GAAgBkmF,GAAc,CAC9D7xI,WAAkBsqD,GAAYwuF,MAkB9B,IAAAc,GAAgCjuF,GAAgBkmF,GAAc,CAC9D7xI,WAAkBsqD,GAAYwuF,MAoC9B,SAAA+C,GAAAruH,EAAA6e,GAKA,IAJA,IAAAyvG,EAAe5uG,GAAOb,GAGtB0vG,EAAA,MAFA,GAAAD,EAAAjxK,OAAAixK,EAAA,MAEAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA9zK,EAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,IAAAg0K,EAAA7xK,KAAAO,MAA+CqxK,EAAA/zK,IAAAgQ,SAAA,IAC/C+jK,EAAA/zK,GAAA,GAAAg0K,EAAAnxK,OAAA,IAAAmxK,IAEI/Y,GAAmBz1G,EAAAuuH,EAAAjiJ,KAAA,KA2CvB,IAAAmiJ,GAAoCtwF,GAAgBkmF,GAAc,CAClEiJ,KAAYnwF,GASZ,SAAAn9B,EAAA0uH,EAAA9xF,GACA58B,EAAA8L,aAAA,OAAA4iH,EAAA3zK,MACA,IAAqDkS,EAAA,CAAe+yC,QACpEvkD,EAAAizK,EAAAjzK,MACA,iBAAAA,GACA,OAAAA,KAAA2xK,aACYpuF,GAAmB/xE,EAAAwhK,GAAyC1wF,GAA4B,CAAAtiF,EAAA2xK,aAAAxwF,EAAA,iBAEpG,OAAAnhF,YACYujF,GAAmB/xE,EAAAwhK,GAAyC1wF,GAA4B,CAAAtiF,SAAAmhF,EAAA,YAI5FoC,GAAmB/xE,EAAAwhK,GAAyC1wF,GAA4B,CAAAtiF,GAAAmhF,EAAA,aArBhGnhF,MAAa0hF,GAmCb,SAAAn9B,EAAAvkD,GACIg6J,GAAmBz1G,EAAAvkD,KAnCvB2xK,YAAmBjwF,GA2BnB,SAAAn9B,EAAAjlD,IPzvDO,SAAAilD,EAAA+0G,GACP/0G,EAAA+F,YAAqBu1B,GAAQqzF,mBAAA5Z,IOyvDzB6Z,CAAiB5uH,EAAAjlD,OAarB,IAAA4rK,GAA2BxoF,GAAgBkmF,GAAc,CACzDwC,UAAiB1pF,GAAiB2pF,MASlCF,GAAA,SAAAnrK,EAAAmhF,EAAAe,GAEA,OAAWjC,GADXkB,IAAAv/E,OAAA,GAAA2iD,KAC0B27B,aAAA,cAiB1B,IAAAkzF,GAAwBpxF,GAAqB,QAmB7C,IAAAqxF,GAAoB3wF,GAAgBkmF,GAAc,CAClD,QACGlmF,GAAeimF,GAAA,CAClB,mBAMA2K,GAAuB5wF,GAAgBkmF,GAAc,CACrD1C,KAAYxkF,GAAkBs4E,KAC3Bt3E,GAAeimF,GAAA,CAClBhnK,EAAS+/E,GAAkBu4E,IAC3B55I,EAASqhE,GAAkBu4E,IAC3Bz6G,EAASkiC,GAAkBu4E,IAC3Bh5J,EAASygF,GAAkBu4E,OAS3BsZ,GAAA,SAAAvzK,EAAAmhF,EAAAe,GACA,OAAWjC,GAAe0oF,GAAA,SAAAzmF,IAsB1B,IAAAsxF,GAA0B9wF,GAAgBkmF,GAAc,CACxD,qCAMA6K,GAA6B/wF,GAAgBkmF,GAAc,CAC3D/zE,KAAYnT,GAvBZ,SAAAn9B,EAAAmvH,EAAAvyF,GACA,IAAqD3vE,EAAA,CAAe+yC,QACpEH,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACAi+B,EAAA6wF,GAAAjvH,EAAA87B,cACAtsE,EAAiB2uE,GAAYmxF,EAAAlxF,GACzBe,GAAmB/xE,EAAA8hK,GAA4BhxF,GAA4B1uE,EAAAutE,EAAAqB,GAG/E5uE,EAAa2uE,GAAYmxF,EAFzBlxF,EACA6wF,GAAA1K,GAAA,KAEIplF,GAAmB/xE,EAAA8hK,GAAAC,GAAA3/J,EAAAutE,EAAAqB,KAevBjkD,QAAemjD,GAAkBu4E,IACjCoV,QAAe3tF,GAqdf,SAAAn9B,EAAAovH,GACApvH,EAAA8L,aAAA,IAAA7mD,OAAAmqK,EAAAhyK,IACA4iD,EAAA8L,aAAA,IAAA7mD,OAAAmqK,EAAAtzJ,IACAkkC,EAAA8L,aAAA,SAAAsjH,EAAArE,QACA/qH,EAAA8L,aAAA,SAAAsjH,EAAApE,UAxdAx9I,MAAa2vD,GAAiBkyF,MAqD9B,IAAAC,GAA2BnxF,GAAgBkmF,GAAc,CACzD,kBAMAkL,GAA8BpxF,GAAgBkmF,GAAc,CAC5DxlG,MAAase,GAAiBkxF,IAC9B7gJ,MAAa2vD,GAAiBkyF,MA2B9B,IAAAG,GAA0BrxF,GAAgBkmF,GAAc,CACxD,kBAMAoL,GAA6BtxF,GAAgBkmF,GAAc,CAC3DxlG,MAAase,GAAiBkxF,IAC9BplK,MAAak0E,GAAkBu4E,MAsB/B,IAAIga,GAAyB,CAC7B78I,MAAA,QACAqhG,WAAA,aACA1hG,WAAA,aACA+C,QAAA,UACAkgG,WAAA,gBACAb,gBAAA,gBACAmB,aAAA,gBACA5D,mBAAA,iBASAw9C,GAAA,SAAAl0K,EAAAmhF,EAAAe,GACA,GAAAliF,EAEA,OAAeigF,GADfkB,IAAAv/E,OAAA,GAAA2iD,KAC8B27B,aAA0B+zF,GAA4E,EAAA5hJ,aAQpI8hJ,GAAyBnyF,GAAqB,SAM9CoyF,GAA+BpyF,GAAqB,cAMpDqyF,GAA+BryF,GAAqB,cAMpDsyF,GAA2BtyF,GAAqB,WAKhDuyF,GAAiC7xF,GAAgBkmF,GAAc,CAC/DnwC,WAAkB/2C,GAAiB8yF,IACnCp9I,MAAasqD,GAAiB8yF,IAC9B16I,QAAe4nD,GAAiB+yF,IAChC/9C,mBAA0Bh1C,GAAiBgzF,MAO3C,SAAAA,GAAAnwH,EAAA1nC,EAAAskE,GAEA,IAGArS,EAEAxwE,EALAkT,EAAA,CAAmB+yC,QACnBt/C,EAAA4X,EAAAwV,UAKAptB,GAAgB4f,GAAYQ,qBAC5BypD,EAAmD,EAAAmoD,gBACnD34H,EAAA41K,IAEAjvK,GAAqB4f,GAAYK,aACjC4pD,EAA2C,EAAAgiB,YAC3CxyF,EAAA61K,IAEAlvK,GAAqB4f,GAAYM,mBACjC2pD,EACA,EAAyC6qD,iBACzCr7H,EAAA81K,IAEAnvK,GAAqB4f,GAAYO,eACjC0pD,EACA,EAAsC0sD,cACtCl9H,EAAAg2K,IAGQv4J,GAAM,MAEVwnE,GAAmB/xE,EAAA+iK,GAAAj2K,EAAAwwE,EAAAqS,GAMvB,IAAAwzF,GAA8BjyF,GAAgBkmF,GAAc,CAC5D7xI,WAAkB2qD,GAAiB8yF,MAOnC,SAAAI,GAAArwH,EAAAlqB,EAAA8mD,GAEIoC,GADiD,CAAeh/B,QAC7CowH,GAAAN,GAAA,CAAAh6I,GAAA8mD,GAMvB,IAAA0zF,GAA4BnyF,GAAgBkmF,GAAc,CAC1DI,aAAoBtnF,GAjTpB,SAAAn9B,EAAAuwH,EAAA3zF,GAKA,IAJA,IAAqD3vE,EAAA,CAAe+yC,QACpEwwH,EAAAD,EAAAC,MACAnhK,EAAAkhK,EAAAlhK,OACAhS,EAAAmzK,EAAAnzK,OACA7C,EAAA,EAAmBA,EAAA6C,EAAY7C,IACvBwkF,GAAmB/xE,EAAAwhK,GAAAI,GAAA,EAA8D9zK,KAAAy1K,EAAAh2K,GAAAiB,MAAA4T,EAAA7U,KAAmCoiF,KA4S5HioF,cAAqB1nF,GAAiBgzF,IACtCj8C,WAAkB/2C,GAAiB8yF,IACnCz9I,WAAkB2qD,GAAiB8yF,IACnCp9I,MAAasqD,GAAiB8yF,IAC9B16I,QAAe4nD,GAAiB+yF,IAChC99E,MAAajV,GAwMb,SAAAn9B,EAAAnnC,EAAA+jE,GACA,IAAqD3vE,EAAA,CAAe+yC,QACpExnC,EAAA,GACAupD,EAAAlpD,EAAAqxD,UACAlI,EAAAnpD,EAAAsxD,YACAjI,EAAArpD,EAAAuxD,WACA/H,EAAAxpD,EAAAwxD,UACAnI,GAA0C,qBAAA6tB,SAC1Cv3E,EAAA,UAAA0pD,GAEAG,IACA7pD,EAAA,WAAA6pD,GAEAL,IACAxpD,EAAA,UAAAwpD,GAEAD,IACAvpD,EAAA,UAAAupD,GAEA,IAAAliB,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACAi+B,EAAAwyF,GAAA5wH,EAAA87B,cACAtsE,EAAiB2uE,GAAYxlE,EAAAylE,GACzBe,GAAmB/xE,EAAAyjK,GAA6B3yF,GAA4B1uE,EAAAutE,EAAAqB,KA7NhFmnF,QAAejoF,GAAkBs4E,IACjC4P,YAAmBloF,GAAkBs4E,IACrC16J,KAAYoiF,GAAkBs4E,IAC9BhgF,KAAY0H,GAAkBo4E,IAC9B+P,YAAmBnoF,GAAkBs4E,IACrC8P,SAAgBpoF,GAAkBs4E,IAClCgQ,WAAkBtoF,GAAkBo4E,MAMpCob,GAAyBxyF,GAAgBkmF,GAAc,CACvD,iEACA,qBAOAuM,GAAgCnzF,GAAqB,gBASrD,SAAAqpF,GAAA9mH,EAAA8I,EAAA8zB,GACA,IAAqD3vE,EAAA,CAAe+yC,QAEpE8I,EAAA9vC,SACAgnC,EAAA8L,aAAA,KAAkDhD,EAAA9vC,SAGlD,IAAAR,EAAAswC,EAAAzzC,gBAEAmlC,EAAA,CAAkB4qH,QAAA,EAAAC,YAAA,EAAAtqK,KAAA,EAAA06E,KAAA,EAClB6vF,YAAA,EAAAC,SAAA,EAAAE,WAAA,GACAjrH,EAAAsO,EAAAnwC,mBAAA,EACA,IAAAtO,EAAAnP,OAAAmP,KAAAmO,GAAA,IAA2CtY,OAAAs6C,OAAA,SAAAz6C,GAC3C,OAAAy6C,EAAAz6C,KAEAivI,EAAAlmF,EAAA7vC,mBACA,GAAA+1H,EAAA,CAGA,IAAAj8C,EAAAi8C,EAAAlmF,EAAA,GACA,GAAAiqC,EAAA,CACA,IAAAl6E,EAAAnP,MAAA+K,QAAAs+E,KAAA,GAAAA,EACAz1F,KAAAuqK,eACArvJ,EAAA,MAAAK,GAEA,IAAAwpD,EAAAxpD,EAAAwxD,UACAhI,IACA7pD,EAAA,KAAA6pD,EAAAgI,YAIA,IAAAxqB,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACAi+B,EAAA0yF,GAAA9wH,EAAA87B,cACAtsE,EAAiB2uE,GAAYxlE,EAAAylE,GAE7B,GADIe,GAAmB/xE,EAAAqjK,GAAiCvyF,GAA4B1uE,EAAAutE,EAAAqB,GACpF5zE,EAAAhN,OAAA,GACA,IAAA6gF,EAAuBF,GAAYxlE,EAAAnO,GAE3B20E,GAAmB/xE,EAAAqjK,GAAAM,GAAA,CAD3B,CAA8BJ,MAAAnmK,EAAAgF,OAAA6uE,IACHtB,GAG3B,IAAArmE,EAAiEqmE,EAAA,GACjEtkE,EAAAwwC,EAAAlwC,cACAN,IACAA,EAAmBy4G,GAA4Bz4G,GAAA,EAAA/B,IAE3CyoE,GAAmB/xE,EAAAqjK,GAAAX,GAAA,CAAAr3J,GAAAskE,GAMvB,IAAAi0F,GAAkC1yF,GAAgBkmF,GAAc,CAChE,sDAMAyM,GAAqC3yF,GAAgBkmF,GAAc,CACnEwH,QAAe1uF,GAAkBo4E,IACjCuW,WAAkB3uF,GAAkBo4E,IACpCmO,aAAoBvmF,GAAkBs4E,IACtCl6I,YAAmB4hE,GAxgBnB,SAAAn9B,EAAAzkC,EAAAqhE,GACA,IAGA31D,EAHAha,EAAA2vE,IAAAv/E,OAAA,GACAkxB,EAAAthB,EAAA,OACA6P,EAAA7P,EAAA,OAEAshB,GAAkBtO,GAAcC,IAChCqO,GAAkBtO,GAAcG,IAChC6G,EAAA,EAEAsH,GAAuBtO,GAAcE,KACrCoO,GAAkBtO,GAAcI,KAChC4G,EAAA,EAGQzP,GAAM,MAEd,IAAAtI,EAAAqM,EAAAle,OACAwnE,EAAA,GACA,GAAA31D,EAAA,GACA21D,GAAAtpD,EAAA,GACA,QAAAzgB,EAAA,EAAuBA,EAAAmsB,IAAensB,EACtC+pE,GAAA,IAAAtpD,EAAAzgB,GAEA,QAAAN,EAAAsiB,EAA4BtiB,EAAA0U,EAAQ1U,GAAAsiB,EAEpC,IADA+nD,GAAA,IAAAtpD,EAAA/gB,GACAM,EAAA,EAA2BA,EAAAmsB,IAAensB,EAC1C+pE,GAAA,IAAAtpD,EAAA/gB,EAAAM,GAII26J,GAAmBz1G,EAAA6kB,OAifvB,SAAAorG,GAAAjwH,EAAA1nC,EAAAskE,GACA,IAAA//D,EAAAvE,EAAAsW,qBACqD3hB,EAAA,CAAe+yC,QACpE/yC,EAAA,OAAAqL,EAAAwW,YACA7hB,EAAA,OAAAqL,EAAA2W,YAEA,IAAAzW,EAAAF,EAAAjD,gBACAmD,EAAA+C,YAAAsB,EACA,IAAAgjC,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACAi+B,EAAA4yF,GAAAhxH,EAAA87B,cACAtsE,EAAiB2uE,GAAYxlE,EAAAylE,GACzBe,GAAmB/xE,EAAA6jK,GAA0C/yF,GAA4B1uE,EAAAutE,EAAAqB,GAM7F,IAAA8yF,GAA0B5yF,GAAgBkmF,GAAc,CACxDxH,gBAAuB1/E,GAAiBkzF,IACxCzT,gBAAuBz/E,GAAiBkzF,MAOxCW,GAAkCvzF,GAAqB,mBAMvDwzF,GAAkCxzF,GAAqB,mBAMvD,SAAAyyF,GAAAlwH,EAAA7oB,EAAAylD,GACA,IAAArmD,EAAAY,EAAAb,iBACAs4H,EAAAr4H,EAAA/pB,QACqDS,EAAA,CAAe+yC,QAEhEg/B,GAAmB/xE,EAAA8jK,GAAAC,GAAAz6I,EAAAqmD,GAEnBoC,GAAmB/xE,EAAA8jK,GAAAE,GAAA,CAAAriB,GAAAhyE,GAMvB,IAAAs0F,GAA6B/yF,GAAgBkmF,GAAc,CAC3DxlG,MAAase,GAAiBkxF,MAO9B8C,GAAyB1zF,GAAqB,SAc9C,SAAA4xF,GAAArvH,EAAAxyB,GAEIkoI,GAAoB11G,EAAArjD,KAAAw1B,MAAA,IAAA3E,GAAA,KAMxB,IAAAijJ,GAAqBtyF,GAAgBkmF,GAAc,CACnD,mDAMAqM,GAAwBvyF,GAAgBkmF,GAAc,CACtDiI,UAAiBnvF,GAvajB,SAAAn9B,EAAAnnC,EAAA+jE,GACA,IAAqD3vE,EAAA,CAAe+yC,QACpExnC,EAAA,GACA0nD,EAAArnD,EAAAk3E,SACA1xE,EAAAxF,EAAAsxC,UACAmnC,EAAAz4E,EAAAsyE,eACAimF,EAAA,CACAzP,KAAAzhG,GAEA,GAAA7hD,EAAA,CACA+yJ,EAAA,EAAA/yJ,EAAA,GACA+yJ,EAAA,EAAA/yJ,EAAA,GACA,IAAAiD,EAAAzI,EAAAm0D,YACA+1C,EAAAlqG,EAAAs0D,YAKA,GAJA41C,GAAAzxB,GAAA,IAAAyxB,EAAA,IAAAA,EAAA,KAAA1kG,EAAA,KACA+yJ,EAAA,EAAAruD,EAAA,GACAquD,EAAA,EAAA9/E,EAAA,IAAAyxB,EAAA,GAAA1kG,EAAA,KAEAiD,MAAA,KAAAjD,EAAA,MAAAiD,EAAA,KAAAjD,EAAA,OACA,IAAgCysJ,EAAA,CAChC1tK,EAAAkkB,EAAA,GACAypJ,OAAwBv9E,GAAe1pE,OACvChI,EAAAuC,EAAA,GAAAiD,EAAA,GACA0pJ,OAAwBx9E,GAAe1pE,QAEvCtL,EAAA,QAAAsyJ,GAGAtyJ,EAAA,KAAA44J,EACA,IAAA5jJ,EAAA3U,EAAAy0D,WACA,IAAA9/C,IACAhV,EAAA,MAAAgV,GAEA,IAAApP,EAAAvF,EAAAggC,cACA,IAAAz6B,IACA5F,EAAA,QAAA4F,GAEA,IAAAyhC,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACAi+B,EAAAgxF,GAAApvH,EAAA87B,cACAtsE,EAAiB2uE,GAAYxlE,EAAAylE,GACzBe,GAAmB/xE,EAAAiiK,GAAkCnxF,GAA4B1uE,EAAAutE,EAAAqB,KAgYrFyuF,WAAkBvvF,GA1WlB,SAAAn9B,EAAAnnC,EAAA+jE,GACA,IAAqD3vE,EAAA,CAAe+yC,QACpExnC,EAAA,GACAwxD,EAAAnxD,EAAAqxD,UACAF,IACAxxD,EAAA,MAAAwxD,EAAAkC,YAEA,IAAA1+C,EAAA3U,EAAAy0D,WACA9/C,GAAA,IAAAA,IACAhV,EAAA,MAAAgV,GAEA,IAAAqyB,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACAi+B,EAAAqxF,GAAAzvH,EAAA87B,cACAtsE,EAAiB2uE,GAAYxlE,EAAAylE,GACzBe,GAAmB/xE,EAAAsiK,GAAmCxxF,GAA4B1uE,EAAAutE,EAAAqB,KA6VtF0uF,UAAiBxvF,GAvUjB,SAAAn9B,EAAAnnC,EAAA+jE,GACA,IAAqD3vE,EAAA,CAAe+yC,QACpExnC,EAAA,CACAqmD,MAAAhmD,EAAAqzD,WACAjjE,MAAA4P,EAAA+E,YAEAiiC,EAAA+8B,IAAAv/E,OAAA,GAAA2iD,KACAi+B,EAAAuxF,GAAA3vH,EAAA87B,cACAtsE,EAAiB2uE,GAAYxlE,EAAAylE,GACzBe,GAAmB/xE,EAAAwiK,GAAkC1xF,GAA4B1uE,EAAAutE,EAAAqB,KA+TrF2uF,UAAiBzvF,GA3BjB,SAAAn9B,EAAAnnC,EAAA+jE,GAEIoC,GADiD,CAAeh/B,QAC7CkxH,GAAAC,GAAA,CAAAt4J,EAAAqzD,YAAA0Q,OAkER,IAAAy0F,GAAA,sBE55EXC,GhPeJ,cgPTIC,GAAa,WASjB,SAAAC,EAAA9wK,EAAAmc,EAAA+S,EAAApX,EAAAe,GAKAjc,KAAAinB,QAKAjnB,KAAAya,IAAAwB,EAKAjc,KAAAohJ,MAAAh+I,EAKApD,KAAAm0K,iBAAA50J,EAKAvf,KAAA64H,oBAAA,KAKA74H,KAAAo0K,eAAA,KAKAp0K,KAAAk4B,MAAA5F,EAKAtyB,KAAAq0K,YAAAn5J,EAiJA,OAzIAg5J,EAAAp1K,UAAAf,IAAA,SAAAU,GACA,OAAAuB,KAAAq0K,YAAA51K,IAOAy1K,EAAAp1K,UAAAkpB,UAAA,WAMA,OALAhoB,KAAAinB,UACAjnB,KAAAinB,QAAAjnB,KAAAohJ,QAA0Cp+H,GAAYC,MACtC5D,GAA4Brf,KAAAm0K,kBAC5B70J,GAAiCtf,KAAAm0K,iBAAA,EAAAn0K,KAAAm0K,iBAAAp0K,OAAA,IAEjDC,KAAAinB,SAKAitJ,EAAAp1K,UAAA65B,qBAAA,WACA,IAAA34B,KAAA64H,oBAAA,CACA,IAAAjgG,EAA6BpY,GAASxgB,KAAAgoB,aACtChoB,KAAA64H,oBAAuCjjG,GAAuB51B,KAAAm0K,iBAAA,EAAoDn0K,KAAA,QAAA44B,EAAA,GAElH,OAAA54B,KAAA64H,qBAKAq7C,EAAAp1K,UAAA6uE,sBAAA,WACA,IAAA3tE,KAAA64H,oBAAA,CACA,IAAAhjG,EAA8ByiG,GAAkBt4H,KAAAm0K,iBAAA,EAA2Dn0K,KAAA,SAC3GA,KAAA64H,oBAAuC1iG,GAA6Bn2B,KAAAm0K,iBAAA,EAA2Dn0K,KAAA,QAAA61B,GAE/H,OAAA71B,KAAA64H,qBAKAq7C,EAAAp1K,UAAAsuE,gBAAA,WAIA,OAHAptE,KAAAo0K,iBACAp0K,KAAAo0K,eAAkC3+C,GAAgBz1H,KAAAm0K,iBAAA,EAAAn0K,KAAAm0K,iBAAAp0K,OAAA,OAElDC,KAAAo0K,gBAKAF,EAAAp1K,UAAAyuE,iBAAA,WACA,IAAAvtE,KAAAo0K,eAAA,CACAp0K,KAAAo0K,eAAA,GAIA,IAHA,IAAA70J,EAAAvf,KAAAm0K,iBACA5pK,EAAA,EACA+nB,EAAgDtyB,KAAA,MAChD9C,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAA6C7C,EAAA0U,IAAQ1U,EAAA,CACrD,IAAA+I,EAAAqsB,EAAAp1B,GACAo3K,EAA+B7+C,GAAgBl2G,EAAAhV,EAAAtE,EAAA,MAC/BuT,EAAMxZ,KAAAo0K,eAAAE,GACtB/pK,EAAAtE,GAGA,OAAAjG,KAAAo0K,gBAQAF,EAAAp1K,UAAA4c,MAAA,WACA,OAAA1b,KAAAya,KAKAy5J,EAAAp1K,UAAA25B,2BAAA,WACA,OAAAz4B,KAAAm0K,kBAQAD,EAAAp1K,UAAAwc,YAAA,WACA,OAAAtb,MAMAk0K,EAAAp1K,UAAAic,sBAAA,SAAAwV,GACA,OAAAvwB,MAOAk0K,EAAAp1K,UAAAiZ,cAAA,WACA,OAAA/X,KAAAq0K,aAKAH,EAAAp1K,UAAA6yB,UAAA,WACA,UAKAuiJ,EAAAp1K,UAAA6c,iBAAA,aAQAu4J,EAAAp1K,UAAA0xB,QAAA,WACA,OAAAxwB,KAAAohJ,OASA8yB,EAAAp1K,UAAA6kB,UAAA,SAAArW,EAAAud,GAEA,IAAAgG,GADAvjB,EAAiBge,GAAahe,IAC9B0a,YACA8I,EAAAxjB,EAAA6a,iBACA+H,EAAoB3P,GAASuQ,GAAoBvQ,GAASsQ,GAClDxC,GAAiB2lJ,GAAYljJ,EAAA,GAAAA,EAAA,GAAAZ,KAAA,OAC7BxM,GAAW1jB,KAAAm0K,iBAAA,EAAAn0K,KAAAm0K,iBAAAp0K,OAAA,EAA4Di0K,GAAYh0K,KAAAm0K,mBAE3FD,EAlMiB,GAuMjBD,GAAan1K,UAAA45B,QACTu7I,GAAan1K,UAAA2uE,SAAA,WACjB,OAAAztE,KAAAk4B,OAKA+7I,GAAan1K,UAAAwyB,mBACT2iJ,GAAan1K,UAAA25B,2BACF,IAAA87I,GAAA,GCjOXC,GAAyB,WAC7B,IAAAnkK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAuQ7B,SAAA+jK,GAAAvuK,EAAAu/C,EAAA/hD,GACA,OAAAwC,EAAA,CACA,IAAA+9C,EAAA,CACAl3C,KAAA,GACAgF,OAAA,GACAw5C,SAAA,IAEAtlD,EAAAvC,EAAAC,aAAAD,EAAAP,IACAO,EAAAoC,WAAA4uK,GAAAzwH,EAAAh+C,GACAg+C,EAAAlkD,OAAAkkD,EAAAsH,SAAAxrD,OACAkkD,EAAAlkD,SACA0lD,EAAAxB,EAAAxmD,MAAAwmD,IAUA,SAAAywH,GAAAxuK,EAAA+9C,EAAAvgD,GACA,QAAAwC,EACA+9C,EAAA6yD,QAAApzG,EAAAC,kBAEA,OAAAuC,EACA+9C,EAAAxmD,KAAAiG,EAAA0D,kBAEA,OAAAlB,EACA+9C,EAAA/lC,OAAAxa,EAAAC,kBAEA,OAAAuC,EACA+9C,EAAAsH,SAAAzqD,KAAA4C,EAAAP,UAEA,OAAA+C,EACA+9C,EAAAl3C,KAAAjM,KAAA4C,EAAA0D,mBAEA,OAAAlB,EAAA,CAGA,IAFA,IAAA/H,EAAA,KACA8H,EAAAvC,EAAAC,aAAAD,EAAAP,IACAO,EAAAP,IAAA8C,GAEA9H,EAAA,KADA+H,EAAAxC,EAAAC,cAAA,GACAD,EAAA0D,aACA,IAAAlB,EAAAxC,EAAA+C,YACA,IAAAP,EAAAxC,EAAAiD,aACA,IAAAT,EAAAxC,EAAAqD,eACA,IAAAb,EAAAxC,EAAAC,aACA,IAAAuC,EAAAxC,EAAAsD,cACA,IAAAd,EAAAxC,EAAAwD,cAAA,KAEA+8C,EAAAlyC,OAAAjR,KAAA3C,IASA,SAAAw2K,GAAAzuK,EAAAslD,EAAA9nD,GACA,MAAAwC,EACAslD,EAAAvvC,GAAAvY,EAAAC,kBAEA,MAAAuC,EAEA,IADA,IAAAD,EAAAvC,EAAAC,aAAAD,EAAAP,IACAO,EAAAP,IAAA8C,GAAA,CACA,IAAAxH,EAAA+sD,EAAAvH,MAAAl3C,KAAArJ,EAAAC,cACAxF,EAAAqtD,EAAAvH,MAAAlyC,OAAArO,EAAAC,cACA6nD,EAAAtwC,WAAAzc,GAAAN,OAGA,GAAA+H,EACAslD,EAAApoD,KAAAM,EAAAC,aAEA,GAAAuC,IACAslD,EAAAxwC,SAAAtX,EAAAP,KAUA,SAAAyxK,GAAAlxK,EAAAugD,EAAA/mD,GACAwG,EAAAP,IAAA8gD,EAAAsH,SAAAruD,GACA,IAAA+I,EAAAvC,EAAAC,aAAAD,EAAAP,IACAqoD,EAAA,CACAvH,QACA7gD,KAAA,EACA8X,WAAA,IAGA,OADAxX,EAAAoC,WAAA6uK,GAAAnpH,EAAAvlD,GACAulD,EA2Be,IAAAqpH,GAhVR,SAAAhkK,GAKP,SAAAikK,EAAA97J,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GA4BA,OAxBAhI,EAAAioE,eAAA,IAAmCpyD,GAAU,CAC7C9V,KAAA,GACAsY,MAAmBzC,GAAKH,cAMxBzV,EAAA+jK,cAAA97J,EAAA+7J,aAAA/7J,EAAA+7J,aAA4ET,GAK5EvjK,EAAA0J,cAAAzB,EAAAiiH,aAKAlqH,EAAAikK,WAAAh8J,EAAAi8J,UAAAj8J,EAAAi8J,UAAA,QAKAlkK,EAAAy2G,QAAAxuG,EAAAwsC,OAAAxsC,EAAAwsC,OAAA,KACAz0C,EA4KA,OA9MIwjK,GAASM,EAAAjkK,GA6CbikK,EAAAh2K,UAAAq2K,iBAAA,SAAAzxK,EAAA8nD,EAAAjsC,EAAA+S,GACA5uB,EAAAP,IAAAqoD,EAAAxwC,SAQA,IAPA,IAAA/U,EAAAvC,EAAAC,aAAAD,EAAAP,IACAiyK,EAAA,EACAr1K,EAAA,EACAD,EAAA,EACA0e,EAAA,EACA62J,EAAA,EACAC,EAAA,EACA5xK,EAAAP,IAAA8C,GAAA,CACA,IAAAlG,EAAA,CACA,IAAAw1K,EAAA7xK,EAAAC,aACAyxK,EAAA,EAAAG,EACAx1K,EAAAw1K,GAAA,EAEAx1K,IACA,IAAAq1K,GAAA,IAAAA,GACAt1K,GAAA4D,EAAAsD,cACAwX,GAAA9a,EAAAsD,cACA,IAAAouK,GACAC,EAAAC,IACAhjJ,EAAAxxB,KAAAu0K,GACAC,EAAAD,GAGA91J,EAAAze,KAAAhB,EAAA0e,GACA62J,GAAA,GAEA,IAAAD,EACAC,EAAAC,IAEA/1J,EAAAze,KAAAye,EAAA+1J,GAAA/1J,EAAA+1J,EAAA,IACAD,GAAA,GAIgBn7J,GAAM,MAGtBm7J,EAAAC,IACAhjJ,EAAAxxB,KAAAu0K,GACAC,EAAAD,IAUAP,EAAAh2K,UAAA02K,eAAA,SAAA9xK,EAAA+xK,EAAAx8J,GACA,IAIAuyC,EAJApoD,EAAAqyK,EAAAryK,KACA,OAAAA,EACA,YAGA,IAAA6Y,EAAAw5J,EAAAx5J,GACAlK,EAAA0jK,EAAAv6J,WACAnJ,EAAA/R,KAAAi1K,YAAAQ,EAAAxxH,MAAAxmD,KACA,IAAA8hB,EAAA,GACA+S,EAAA,GACAtyB,KAAAm1K,iBAAAzxK,EAAA+xK,EAAAl2J,EAAA+S,GACA,IAAAgzG,EAgNA,SAAAliI,EAAAmgI,GAEA,IAAA+B,EACA,IAAAliI,EACAkiI,EAAA,IAAA/B,EACYvgH,GAAYC,MAASD,GAAYK,YAE7C,IAAAjgB,EACAkiI,EAAA,IAAA/B,EACYvgH,GAAYE,YACZF,GAAYM,kBAExB,IAAAlgB,IACAkiI,EAAuBtiH,GAAYI,SAInC,OAAAkiH,EAjOAowC,CAAAtyK,EAAAkvB,EAAAvyB,QACA,GAAAC,KAAA+0K,gBAAmCR,IACnC/oH,EAAA,IAAAxrD,KAAA+0K,cAAAzvC,EAAA/lH,EAAA+S,EAAAvgB,EAAAkK,IACA0H,UAAA1K,EAAAggE,eAAAhgE,EAAA2/D,uBAEA,CACA,IAAAwhE,OAAA,EACA,GAAA9U,GAAgCtiH,GAAYI,QAAA,CAI5C,IAHA,IAAA0Q,EAAA,GACAvpB,EAAA,EACAorK,EAAA,EACAz4K,EAAA,EAAA0U,EAAA0gB,EAAAvyB,OAAiD7C,EAAA0U,IAAQ1U,EAAA,CACzD,IAAA+I,EAAAqsB,EAAAp1B,GACyBq6B,GAAqBhY,EAAAhV,EAAAtE,EAAA,KAC9C6tB,EAAAhzB,KAAAwxB,EAAA9wB,MAAAm0K,EAAAz4K,IACAy4K,EAAAz4K,GAEAqN,EAAAtE,EAGAm0I,EADAtmH,EAAA/zB,OAAA,EACA,IAA+By4H,GAAYj5G,EAAkBoD,GAAcC,GAAAkR,GAG3E,IAA+BoF,GAAO3Z,EAAkBoD,GAAcC,GAAA0P,QAItE8nH,EAAA9U,IAAwCtiH,GAAYC,MAAA,IAAaqS,GAAK/V,EAAkBoD,GAAcC,IACtG0iH,IAAqCtiH,GAAYE,YAAA,IAAmByzG,GAAUp3G,EAAkBoD,GAAcC,IAC9G0iH,IAAyCtiH,GAAYI,QAAA,IAAe8V,GAAO3Z,EAAkBoD,GAAcC,GAAA0P,GAC3GgzG,IAA6CtiH,GAAYK,YAAA,IAAmB60G,GAAU34G,EAAkBoD,GAAcC,IACtH0iH,IAAiDtiH,GAAYM,kBAAA,IAAyB+zG,GAAe93G,EAAkBoD,GAAcC,GAAA0P,GACrI,KAGAk5B,EAAA,IAAAoqH,EADyE51K,KAAA,eAEzEA,KAAA0a,eACA8wC,EAAApwC,gBAAApb,KAAA0a,eAEA,IAAAM,EAA2By4G,GAA4B2mB,GAAA,EAAAnhI,GACvDuyC,EAAAvwC,YAAAD,GACAwwC,EAAAxvC,MAAAC,GACAuvC,EAAA3zC,cAAA9F,GAAA,GAEA,OAAAy5C,GAKAspH,EAAAh2K,UAAA0xB,QAAA,WACA,OAAe+mD,GAAUC,cAUzBs9F,EAAAh2K,UAAA65E,aAAA,SAAArrE,EAAA0L,GACA,IAAAysC,EAAAzlD,KAAAynH,QACAxuG,EAAoEjZ,KAAAmzH,aAAAn6G,GACpEigE,EAA6B3tD,GAAGrS,EAAAggE,gBAChCA,EAAAtwD,eAAA1P,EAAAiF,QACAjF,EAAAggE,iBACA,IAAAv1E,EAAA,IAAsBmyK,GAAA12K,EAA2B,GACjD22K,EAAApyK,EAAAoC,WAAA2uK,GAAA,IACAlpH,EAAA,GACA,QAAA69B,KAAA0sF,EACA,IAAArwH,IAAA,GAAAA,EAAAplD,QAAA+oF,GAAA,CAGA,IAAA2sF,EAAAD,EAAA1sF,GACAlrE,EAAA63J,EAAA,KAAAA,EAAA73J,OAAA63J,EAAA73J,QAAA,KACA+6D,EAAAvwD,UAAAxK,GACA,QAAAhhB,EAAA,EAAA0U,EAAAmkK,EAAAh2K,OAAiD7C,EAAA0U,IAAQ1U,EAAA,CACzD,IAAAu4K,EAAAb,GAAAlxK,EAAAqyK,EAAA74K,GACAquD,EAAAzqD,KAAAd,KAAAw1K,eAAA9xK,EAAA+xK,EAAAx8J,KAGA,OAAAsyC,GAMAupH,EAAAh2K,UAAA+5E,eAAA,SAAAvrE,GACA,OAAAtN,KAAAi5E,gBAOA67F,EAAAh2K,UAAA+mD,UAAA,SAAAJ,GACAzlD,KAAAynH,QAAAhiE,GAEAqvH,EA/MO,CAgNL/hD,ICpQEijD,GAAyB,WAC7B,IAAA3lK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgCzBulK,GAAc,OAKlBC,GAAkBr1F,GAAgBo1F,GAAc,CAChDE,GAyHA,SAAAzzH,EAAA48B,GACmCA,IAAAv/E,OAAA,GACnCq2K,OAAAt1K,KAAA4hD,EAAAwyG,aAAA,SA1HAhvJ,IAAAmwK,KAMAC,GAAcz1F,GAAgBo1F,GAAc,CAC5CvzH,KAyEA,SAAAA,EAAA48B,GACA,IAAArmE,EAAgEqmE,EAAA,GAChEztC,EAAkCytC,IAAAv/E,OAAA,GAClCkc,EAAAymC,EAAAwyG,aAAA,MAEAj3I,EAAA,CACA6xC,WAAApN,EAAAwyG,aAAA,QACAplG,WAAApN,EAAAwyG,aAAA,SAEArjH,EAAAs5G,MAAAlvI,GAAAgC,EACA,IAAAlM,EAAiByvE,GAAe,CAChC+0F,KAAA,IACKC,GAAA9zH,EAAA48B,GACL,IAASttE,EAAOD,EAAAwkK,MAAA,CAChB,IAAAv7J,EAAA,IAA2Bsa,GAAKrX,GACxBw1G,GAA4Bz4G,GAAA,EAAA/B,GACpC,IAAAuyC,EAAA,IAA0BlxC,EAAOU,GACjCwwC,EAAAxvC,MAAAC,GACAuvC,EAAA3zC,cAAA9F,EAAAwkK,MAAA,GACA1kI,EAAA0Z,SAAAzqD,KAAA0qD,KA3FAirH,IAkGA,SAAA/zH,EAAA48B,GACA,IACAvtE,EAAiByvE,GAAe,CAChCvlE,GAFAymC,EAAAwyG,aAAA,MAGAkhB,OAAA,GACAG,KAAA,IACKL,GAAAxzH,EAAA48B,GAC6BA,IAAAv/E,OAAA,GAClC22K,KAAA51K,KAAAiR,MAjGI4kK,GAAM,SAAA9lK,GAEV,SAAA+lK,IACA,IAAA5lK,EAAAH,EAAAxT,KAAA2C,YAKA,OADAgR,EAAAioE,eAA+B3tD,GAAa,aAC5Cta,EA0CA,OAjDIglK,GAASY,EAAA/lK,GAYb+lK,EAAA93K,UAAAs0J,qBAAA,SAAA1wG,EAAA1pC,GACA,IAAAC,EAAAjZ,KAAAkzH,eAAAxwE,EAAA1pC,GACA,UAAA0pC,EAAAi9B,UAAA,CAOA,IANA,IAAA9tC,EAAwB2vC,GAAe,CACvC2pE,MAAA,GACAurB,KAAA,GACAnrH,SAAA,IACa+qH,GAAA5zH,EAAA,CAAAzpC,IAEbzM,EAAA,EAA2BA,EAAAqlC,EAAA6kI,KAAA32K,OAAuByM,IAAA,CAIlD,IAHA,IAAAuF,EAA+C8/B,EAAA6kI,KAAAlqK,GAE/C+S,EAAA,GACAriB,EAAA,EAAA0U,EAAAG,EAAAqkK,OAAAr2K,OAA0D7C,EAAA0U,EAAQ1U,IAAA,CAE9Csc,EAAM+F,EAD1BsyB,EAAAs5G,MAAAp5I,EAAAqkK,OAAAl5K,KAGA,IAAA8d,OAAA,EAQgBy4G,GALhBz4G,EAFAjJ,EAAAqkK,OAAA,IAAArkK,EAAAqkK,OAAArkK,EAAAqkK,OAAAr2K,OAAA,GAEA,IAAmCm5B,GAAO3Z,EAAkBoD,GAAcC,GAAA,CAAArD,EAAAxf,SAG1E,IAAmC42H,GAAUp3G,EAAkBoD,GAAcC,KAEjC,EAAA3J,GAC5C,IAAAuyC,EAAA,IAAkClxC,EAAOU,GACzCwwC,EAAAxvC,MAAAjK,EAAAkK,IACAuvC,EAAA3zC,cAAA9F,EAAAwkK,MAAA,GACA1kI,EAAA0Z,SAAAzqD,KAAA0qD,GAEA,GAAA3Z,EAAA0Z,SACA,OAAA1Z,EAAA0Z,SAGA,UAEAqrH,EAlDU,CAmDRhkB,IAKF4jB,GAAmB31F,GAAgBo1F,GAAc,CACjD/vK,IAAAmwK,KAsDA,SAAAA,GAAA3zH,EAAA48B,GACmCA,IAAAv/E,OAAA,GACnCw2K,KAAA7zH,EAAAwyG,aAAA,MAAAxyG,EAAAwyG,aAAA,KAEe,IAAA2hB,GAAA,GC/JR,SAAAC,GAAAv3J,EAAAhV,EAAAtE,EAAAuZ,EAAAoE,EAAAmzJ,GACP,IAAAlzJ,EAAAmzJ,OACApkK,IAAAgR,GACAC,EAAAD,EACAozJ,OAAApkK,IAAAmkK,IAAA,IAGAlzJ,EAAA,GACAmzJ,EAAA,GAGA,IADA,IAAAxqK,EAAAjC,EACAiC,EAAAvG,GAAA,CACA,IAAAnG,EAAAyf,EAAA/S,KACAqX,EAAAmzJ,KAAAz3J,EAAA/S,KACAqX,EAAAmzJ,KAAAl3K,EACA,QAAAqkB,EAAA,EAAuBA,EAAA3E,IAAY2E,EACnCN,EAAAmzJ,KAAAz3J,EAAA/S,KAIA,OADAqX,EAAA9jB,OAAAi3K,EACAnzJ,EChCA,IAAIozJ,GAAyB,WAC7B,IAAA5mK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6ItB,SAAAwmK,GAAAC,EAAA33J,EAAA43J,GACP,IACA55K,EADA65K,EAAAD,GAAA,IAEAE,EAAA,IAAAlrK,MAAAoT,GACA,IAAAhiB,EAAA,EAAeA,EAAAgiB,IAAYhiB,EAC3B85K,EAAA95K,GAAA,EAEA,QAAAN,EAAA,EAAA0U,EAAAulK,EAAAp3K,OAAwC7C,EAAA0U,GACxC,IAAApU,EAAA,EAAmBA,EAAAgiB,IAAYhiB,IAAAN,EAAA,CAC/B,IAAA+J,EAAAkwK,EAAAj6K,GACA63C,EAAA9tC,EAAAqwK,EAAA95K,GACA85K,EAAA95K,GAAAyJ,EACAkwK,EAAAj6K,GAAA63C,EAGA,OAAAwiI,GAAAJ,EAAAE,GAaO,SAAAG,GAAAC,EAAAj4J,EAAA43J,GACP,IACA55K,EADA65K,EAAAD,GAAA,IAGAE,EAAA,IAAAlrK,MAAAoT,GACA,IAAAhiB,EAAA,EAAeA,EAAAgiB,IAAYhiB,EAC3B85K,EAAA95K,GAAA,EAGA,IADA,IAAA25K,EAAAO,GAAAD,EAAAJ,GACAn6K,EAAA,EAAA0U,EAAAulK,EAAAp3K,OAAwC7C,EAAA0U,GACxC,IAAApU,EAAA,EAAmBA,EAAAgiB,IAAYhiB,IAAAN,EAC/Bo6K,EAAA95K,IAAA25K,EAAAj6K,GACAi6K,EAAAj6K,GAAAo6K,EAAA95K,GAGA,OAAA25K,EAcO,SAAAI,GAAAJ,EAAAC,GAEP,IADA,IAAAC,EAAAD,GAAA,IACAl6K,EAAA,EAAA0U,EAAAulK,EAAAp3K,OAAwC7C,EAAA0U,IAAQ1U,EAChDi6K,EAAAj6K,GAAAmC,KAAAw1B,MAAAsiJ,EAAAj6K,GAAAm6K,GAEA,OA2BO,SAAAF,GACP,QAAAj6K,EAAA,EAAA0U,EAAAulK,EAAAp3K,OAAwC7C,EAAA0U,IAAQ1U,EAAA,CAChD,IAAA+J,EAAAkwK,EAAAj6K,GACAi6K,EAAAj6K,GAAA+J,EAAA,IAAAA,GAAA,GAAAA,GAAA,EAEA,OAsBO,SAAAkwK,GAEP,IADA,IAAAM,EAAA,GACAv6K,EAAA,EAAA0U,EAAAulK,EAAAp3K,OAAwC7C,EAAA0U,IAAQ1U,EAChDu6K,GAAAE,GAAAR,EAAAj6K,IAEA,OAAAu6K,EA3BAG,CAAAT,GAhCAU,CAAAV,GAWO,SAAAO,GAAAD,EAAAL,GAGP,IAFA,IAAAC,EAAAD,GAAA,IACAD,EA2BO,SAAAM,GAEP,IADA,IAAAN,EA0BO,SAAAM,GAIP,IAHA,IAAAN,EAAA,GACAW,EAAA,EACA5oK,EAAA,EACAhS,EAAA,EAAA0U,EAAA6lK,EAAA13K,OAAwC7C,EAAA0U,IAAQ1U,EAAA,CAChD,IAAA0J,EAAA6wK,EAAAtuK,WAAAjM,GAAA,GACA46K,IAAA,GAAAlxK,IAAAsI,EACAtI,EAAA,IACAuwK,EAAAr2K,KAAAg3K,GACAA,EAAA,EACA5oK,EAAA,GAGAA,GAAA,EAGA,OAAAioK,EA1CAY,CAAAN,GACAv6K,EAAA,EAAA0U,EAAAulK,EAAAp3K,OAAwC7C,EAAA0U,IAAQ1U,EAAA,CAChD,IAAA+J,EAAAkwK,EAAAj6K,GACAi6K,EAAAj6K,GAAA,EAAA+J,OAAA,GAAAA,GAAA,EAEA,OAAAkwK,EAjCAa,CAAAP,GACAv6K,EAAA,EAAA0U,EAAAulK,EAAAp3K,OAAwC7C,EAAA0U,IAAQ1U,EAChDi6K,EAAAj6K,IAAAm6K,EAEA,OAAAF,EA0EO,SAAAQ,GAAA1wK,GAEP,IADA,IAAA9I,EAAAs5K,EAAA,GACAxwK,GAAA,IACA9I,EAAA,UAAA8I,GACAwwK,GAAA9vK,OAAAC,aAAAzJ,GACA8I,IAAA,EAIA,OAFA9I,EAAA8I,EAAA,GACAwwK,GAAA9vK,OAAAC,aAAAzJ,GAGe,IAAA85K,GAnQH,SAAApnK,GAKZ,SAAAqnK,EAAAl/J,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAgBA,OAZAhI,EAAAioE,eAA+B3tD,GAAa,aAK5Cta,EAAAmnK,QAAAl/J,EAAAo+J,OAAAp+J,EAAAo+J,OAAA,IAKArmK,EAAAonK,gBAAAn/J,EAAAo/J,eACAp/J,EAAAo/J,eAAqC11J,GAAcC,GACnD5R,EAyDA,OA/EIimK,GAASiB,EAAArnK,GA2BbqnK,EAAAp5K,UAAAmmK,oBAAA,SAAA19F,EAAAvuD,GACA,IAAAgC,EAAAhb,KAAAmlK,qBAAA59F,EAAAvuD,GACA,WAAmBsB,EAAOU,IAK1Bk9J,EAAAp5K,UAAAomK,qBAAA,SAAA39F,EAAAvuD,GAEA,OADAhZ,KAAAilK,oBAAA19F,EAAAvuD,KAMAk/J,EAAAp5K,UAAAqmK,qBAAA,SAAA59F,EAAAvuD,GACA,IAAAwG,EAAqBwR,GAAkBhxB,KAAAo4K,iBACvC74J,EAAAi4J,GAAAjwG,EAAA/nD,EAAAxf,KAAAm4K,SACQrB,GAAMv3J,EAAA,EAAAA,EAAAxf,OAAAyf,EAAAD,GACd,IAAAtB,EAA0BwV,GAAkBlU,EAAA,EAAAA,EAAAxf,OAAAyf,GAE5C,OAAei0G,GADf,IAA6BkD,GAAU14G,EAAAje,KAAAo4K,kBACI,EAAAp4K,KAAAmzH,aAAAn6G,KAK3Ck/J,EAAAp5K,UAAAumK,iBAAA,SAAA75G,EAAAxyC,GACA,IAAAgC,EAAAwwC,EAAAlwC,cACA,OAAAN,EACAhb,KAAAulK,kBAAAvqJ,EAAAhC,IAGYkB,GAAM,MAClB,KAMAg+J,EAAAp5K,UAAAwmK,kBAAA,SAAA/5G,EAAAvyC,GACA,OAAAhZ,KAAAqlK,iBAAA95G,EAAA,GAAAvyC,IAKAk/J,EAAAp5K,UAAAymK,kBAAA,SAAAvqJ,EAAAhC,GAGA,IAAAuG,GAFAvE,EACay4G,GAA4Bz4G,GAAA,EAAAhb,KAAAmzH,aAAAn6G,KACzCsY,qBACA9R,EAAAxE,EAAA2W,YAEA,OADQmlJ,GAAMv3J,EAAA,EAAAA,EAAAxf,OAAAyf,EAAAD,GACd23J,GAAA33J,EAAAC,EAAAxf,KAAAm4K,UAEAD,EAhFY,CAiFVnT,IC/HEuT,GAAyB,WAC7B,IAAAjoK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAkEzB6nK,GAAQ,SAAA1nK,GAKZ,SAAA2nK,EAAAx/J,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAgBA,OAXAhI,EAAAikK,WAAAh8J,EAAAi8J,UAKAlkK,EAAAy2G,QAAAxuG,EAAAwsC,OAAAxsC,EAAAwsC,OAAA,KAIAz0C,EAAAioE,eAA+B3tD,GAAarS,EAAAggE,eAC5ChgE,EAAAggE,eAAA,aACAjoE,EAgDA,OAtEIsnK,GAASE,EAAA3nK,GA2Bb2nK,EAAA15K,UAAAq1H,uBAAA,SAAAv1H,EAAAoa,GACA,eAAApa,EAAAwE,KAAA,CACA,IAAAq1K,EAA+D,EAC/D90J,OAAA,EAAAuM,EAAA,KAAAQ,EAAA,KACA+nJ,EAAA,YAEAvoJ,GADAvM,EAAA80J,EAAA,WACA,MACA/nJ,EAAA/M,EAAA,WAEA,IAAA+0J,EAAAD,EAAA,KACA90J,GAmPA,SAAA+0J,EAAAxoJ,EAAAQ,GACA,QAAAxzB,EAAA,EAAA0U,EAAA8mK,EAAA34K,OAAqC7C,EAAA0U,IAAQ1U,EAC7Cy7K,GAAAD,EAAAx7K,GAAAgzB,EAAAQ,GApPAkoJ,CAAAF,EAAAxoJ,EAAAQ,GAGA,IAAA66B,EAAA,GACAstH,EAAAJ,EAAA,QACA55K,EAAAmB,KAAAi1K,WACAzpH,OAAA,EACA,QAAAstH,KAAAD,EACA74K,KAAAynH,UAAA,GAAAznH,KAAAynH,QAAApnH,QAAAy4K,KAGA,uBAAAD,EAAAC,GAAA11K,MACAooD,EAAoEqtH,EAAAC,GACpEvtH,EAAAzqD,KAAAoB,MAAAqpD,EAAAwtH,GAAAvtH,EAAAktH,EAAAxoJ,EAAAQ,EAAA7xB,EAAAi6K,EAAA9/J,MAGAwyC,EAA0DqtH,EAAAC,GAC1DvtH,EAAAzqD,KAAAk4K,GAAAxtH,EAAAktH,EAAAxoJ,EAAAQ,EAAA7xB,EAAAi6K,EAAA9/J,MAGA,OAAAuyC,EAGA,UAMAitH,EAAA15K,UAAAu1H,yBAAA,SAAAz1H,GACA,OAAAoB,KAAAi5E,gBAEAu/F,EAvEY,CAwEVxkD,IAKEilD,GAAgB,CACpB1jJ,MAiDA,SAA0B32B,EAAAsxB,EAAAQ,GAC1B,IAAAzS,EAAArf,EAAA,YACAsxB,GAAAQ,GACAwoJ,GAAAj7J,EAAAiS,EAAAQ,GAEA,WAAe4E,GAAKrX,IArDpB24G,WA+EA,SAA+Bh4H,EAAA85K,GAC/B,IAAAz6J,EAAAk7J,GAAAv6K,EAAA,KAAA85K,GACA,WAAe/hD,GAAU14G,IAhFzBga,QAuGA,SAA4Br5B,EAAA85K,GAE5B,IADA,IAAAz6J,EAAA,GACA/gB,EAAA,EAAA0U,EAAAhT,EAAA,KAAAmB,OAA+C7C,EAAA0U,IAAQ1U,EACvD+gB,EAAA/gB,GAAAi8K,GAAAv6K,EAAA,KAAA1B,GAAAw7K,GAEA,WAAex/I,GAAOjb,IA3GtBk6G,WA6DA,SAA+Bv5H,EAAAsxB,EAAAQ,GAC/B,IAAAzS,EAAArf,EAAA,YACA,GAAAsxB,GAAAQ,EACA,QAAAxzB,EAAA,EAAA0U,EAAAqM,EAAAle,OAAgD7C,EAAA0U,IAAQ1U,EACxDg8K,GAAAj7J,EAAA/gB,GAAAgzB,EAAAQ,GAGA,WAAewnG,GAAUj6G,IAnEzBq5G,gBAuFA,SAAoC14H,EAAA85K,GAEpC,IADA,IAAAz6J,EAAA,GACA/gB,EAAA,EAAA0U,EAAAhT,EAAA,KAAAmB,OAA+C7C,EAAA0U,IAAQ1U,EACvD+gB,EAAA/gB,GAAAi8K,GAAAv6K,EAAA,KAAA1B,GAAAw7K,GAEA,WAAerhD,GAAep5G,IA3F9Bw6G,aAkHA,SAAiC75H,EAAA85K,GAEjC,IADA,IAAAz6J,EAAA,GACA/gB,EAAA,EAAA0U,EAAAhT,EAAA,KAAAmB,OAA+C7C,EAAA0U,IAAQ1U,EAAA,CAIvD,IAFA,IAAAk8K,EAAAx6K,EAAA,KAAA1B,GACAm8K,EAAA,GACA7sK,EAAA,EAAA8C,EAAA8pK,EAAAr5K,OAA8CyM,EAAA8C,IAAQ9C,EAEtD6sK,EAAA7sK,GAAA2sK,GAAAC,EAAA5sK,GAAAksK,GAEAz6J,EAAA/gB,GAAAm8K,EAEA,WAAe7gD,GAAYv6G,KApH3B,SAAAk7J,GAAAG,EAAAZ,GAIA,IAFA,IACAnpK,EAAAk9D,EADAxuD,EAAA,GAEA/gB,EAAA,EAAA0U,EAAA0nK,EAAAv5K,OAAwC7C,EAAA0U,IAAQ1U,EAChDqS,EAAA+pK,EAAAp8K,GACAA,EAAA,GAEA+gB,EAAApd,MAIA4rE,EAFAl9D,GAAA,EAEAmpK,EAAAnpK,GAIAmpK,GAAAnpK,GAAA/N,QAAAqyG,UAEA51F,EAAAnd,KAAAoB,MAAA+b,EAAAwuD,GAGA,QAAAjgE,EAAA,EAAA8C,EAAA2O,EAAAle,OAA4CyM,EAAA8C,IAAQ9C,EACpDyR,EAAAzR,GAAAyR,EAAAzR,GAAAhL,QAEA,OAAAyc,EA4GA,SAAA86J,GAAAnqE,EAAA8pE,EAAAxoJ,EAAAQ,EAAA7xB,EAAApB,EAAAub,GAGA,IAFA,IAAAi0D,EAAA2hC,EAAA,WACArjD,EAAA,GACAruD,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA2C7C,EAAA0U,IAAQ1U,EACnDquD,EAAAruD,GAAA87K,GAAA/rG,EAAA/vE,GAAAw7K,EAAAxoJ,EAAAQ,EAAA7xB,EAAApB,EAAAub,GAEA,OAAAuyC,EAeA,SAAAytH,GAAAp6K,EAAA85K,EAAAxoJ,EAAAQ,EAAA7xB,EAAApB,EAAAub,GACA,IAAAgC,EACA5X,EAAAxE,EAAAwE,KACAquJ,EAAyBwnB,GAAgB71K,GAEzC4X,EADA,UAAA5X,GAAA,eAAAA,EACAquJ,EAAA7yJ,EAAAsxB,EAAAQ,GAGA+gI,EAAA7yJ,EAAA85K,GAEA,IAAAltH,EAAA,IAAsBlxC,EACtBkxC,EAAAvwC,YAAwBw4G,GAA4Bz4G,GAAA,EAAAhC,SACpDpG,IAAAhU,EAAAqd,IACAuvC,EAAAxvC,MAAApd,EAAAqd,IAEA,IAAAf,EAAAtc,EAAAsc,WAUA,OATArc,IACAqc,IACAA,EAAA,IAEAA,EAAArc,GAAApB,GAEAyd,GACAswC,EAAA3zC,cAAAqD,GAAA,GAEAswC,EAsBA,SAAAmtH,GAAAlsG,EAAAv8C,EAAAQ,GAGA,IAFA,IAAA5wB,EAAA,EACA0e,EAAA,EACAthB,EAAA,EAAA0U,EAAA66D,EAAA1sE,OAAoC7C,EAAA0U,IAAQ1U,EAAA,CAC5C,IAAAmpJ,EAAA55E,EAAAvvE,GACA4C,GAAAumJ,EAAA,GACA7nI,GAAA6nI,EAAA,GACAA,EAAA,GAAAvmJ,EACAumJ,EAAA,GAAA7nI,EACA06J,GAAA7yB,EAAAn2H,EAAAQ,IAWA,SAAAwoJ,GAAA7yB,EAAAn2H,EAAAQ,GACA21H,EAAA,GAAAA,EAAA,GAAAn2H,EAAA,GAAAQ,EAAA,GACA21H,EAAA,GAAAA,EAAA,GAAAn2H,EAAA,GAAAQ,EAAA,GAEe,IAAA6oJ,GAAA,GCjWAC,GApBf,WAIA,SAAAC,EAAA9hH,GAKA33D,KAAA05K,SAAA/hH,EASA,OAHA8hH,EAAA36K,UAAA66K,WAAA,WACA,OAAA35K,KAAA05K,UAEAD,EAlBA,GCVIG,GAAyB,WAC7B,IAAAvpK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0CdmpK,GAjBA,SAAAhpK,GAMf,SAAAipK,EAAAniH,EAAAoiH,GACA,IAAA/oK,EAAAH,EAAAxT,KAAA2C,KAAA23D,IAAA33D,KAMA,OAFAgR,EAAA+oK,aACQ7/J,EAAMlJ,EAAA+oK,WAAAh6K,QAAA,MACdiR,EAEA,OAdI4oK,GAASE,EAAAjpK,GAcbipK,EAfe,CAgBbN,ICzCEQ,GAAyB,WAC7B,IAAA3pK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiCdupK,GAVf,SAAAppK,GAKA,SAAAqpK,EAAAH,GACA,OAAAlpK,EAAAxT,KAAA2C,KAAA,MAAAoM,MAAAtN,UAAA0C,MAAAnE,KAAAwU,aAAA7R,KAEA,OAPIg6K,GAASE,EAAArpK,GAObqpK,EARA,CASEL,IChCEM,GAAyB,WAC7B,IAAA9pK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAkDd0pK,GA1Bf,SAAAvpK,GAQA,SAAAwpK,EAAAn/C,EAAAh9G,EAAAq9I,GACA,IAAAvqJ,EAAAH,EAAAxT,KAAA2C,KAAA,SAAAA,KAaA,OATAgR,EAAAkqH,eAIAlqH,EAAAkN,SAIAlN,EAAAqjJ,QAAAkH,EACAvqJ,EAEA,OAvBImpK,GAASE,EAAAxpK,GAuBbwpK,EAxBA,CAyBEb,ICjDEc,GAAyB,WAC7B,IAAAjqK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoDd6pK,GA3Bf,SAAA1pK,GASA,SAAA2pK,EAAA7iH,EAAAujE,EAAAlgH,EAAAugJ,GACA,IAAAvqJ,EAAAH,EAAAxT,KAAA2C,KAAA23D,IAAA33D,KAaA,OATAgR,EAAAkqH,gBAAA,WAIAlqH,EAAAgK,WAIAhK,EAAAqjJ,QAAAkH,EACAvqJ,EAEA,OAxBIspK,GAASE,EAAA3pK,GAwBb2pK,EAzBA,CA0BEhB,ICnDEiB,GAAyB,WAC7B,IAAApqK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoCdgqK,GAbf,SAAA7pK,GAQA,SAAA8pK,EAAAz/C,EAAAlgH,EAAAugJ,GACA,OAAA1qJ,EAAAxT,KAAA2C,KAAA,WAAAk7H,EAAAlgH,EAAAugJ,IAAAv7J,KAEA,OAVIy6K,GAASE,EAAA9pK,GAUb8pK,EAXA,CAYEJ,ICnCEK,GAAyB,WAC7B,IAAAvqK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAwCdmqK,GAhBf,SAAAhqK,GAMA,SAAAiqK,EAAAnjH,EAAAojH,GACA,IAAA/pK,EAAAH,EAAAxT,KAAA2C,KAAA23D,IAAA33D,KAKA,OADAgR,EAAA+pK,eACA/pK,EAEA,OAbI4pK,GAASE,EAAAjqK,GAabiqK,EAdA,CAeEtB,ICvCEwB,GAAyB,WAC7B,IAAA3qK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2CduqK,GArBf,SAAApqK,GAOA,SAAAqqK,EAAAH,EAAAx+J,EAAAtW,GACA,IAAA+K,EAAAH,EAAAxT,KAAA2C,KAAA,SAAA+6K,IAAA/6K,KASA,OALAgR,EAAAuL,QAIAvL,EAAA/K,MACA+K,EAEA,OAlBIgqK,GAASE,EAAArqK,GAkBbqqK,EAnBA,CAoBEL,IC1CEM,GAAyB,WAC7B,IAAA9qK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8Cd0qK,GAtBf,SAAAvqK,GAQA,SAAAwqK,EAAA1jH,EAAAojH,EAAAO,EAAAC,GACA,IAAAvqK,EAAAH,EAAAxT,KAAA2C,KAAA23D,EAAAojH,IAAA/6K,KASA,OALAgR,EAAAsqK,aAIAtqK,EAAAwqK,UAAAD,EACAvqK,EAEA,OAnBImqK,GAASE,EAAAxqK,GAmBbwqK,EApBA,CAqBER,IC7CEY,GAAyB,WAC7B,IAAAprK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAkCdgrK,GAZf,SAAA7qK,GAOA,SAAA8qK,EAAAZ,EAAAO,EAAAC,GACA,OAAA1qK,EAAAxT,KAAA2C,KAAA,oBAAA+6K,EAAAO,EAAAC,IAAAv7K,KAEA,OATIy7K,GAASE,EAAA9qK,GASb8qK,EAVA,CAWEP,ICjCEQ,GAAyB,WAC7B,IAAAvrK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiCdmrK,GAXf,SAAAhrK,GAMA,SAAAirK,EAAAf,EAAAO,GACA,OAAAzqK,EAAAxT,KAAA2C,KAAA,wBAAA+6K,EAAAO,IAAAt7K,KAEA,OARI47K,GAASE,EAAAjrK,GAQbirK,EATA,CAUEV,IChCEW,GAAyB,WAC7B,IAAA1rK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiCdsrK,GAXf,SAAAnrK,GAMA,SAAAorK,EAAAlB,EAAAO,GACA,OAAAzqK,EAAAxT,KAAA2C,KAAA,iCAAA+6K,EAAAO,IAAAt7K,KAEA,OARI+7K,GAASE,EAAAprK,GAQborK,EATA,CAUEb,IChCEc,GAAyB,WAC7B,IAAA7rK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoCdyrK,GAbf,SAAAtrK,GAQA,SAAAurK,EAAAlhD,EAAAlgH,EAAAugJ,GACA,OAAA1qJ,EAAAxT,KAAA2C,KAAA,aAAAk7H,EAAAlgH,EAAAugJ,IAAAv7J,KAEA,OAVIk8K,GAASE,EAAAvrK,GAUburK,EAXA,CAYE7B,ICnCE8B,GAAyB,WAC7B,IAAAhsK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA2Cd4rK,GArBf,SAAAzrK,GAOA,SAAA0rK,EAAAxB,EAAAyB,EAAAC,GACA,IAAAzrK,EAAAH,EAAAxT,KAAA2C,KAAA,oBAAA+6K,IAAA/6K,KASA,OALAgR,EAAAwrK,gBAIAxrK,EAAAyrK,gBACAzrK,EAEA,OAlBIqrK,GAASE,EAAA1rK,GAkBb0rK,EAnBA,CAoBE1B,IC1CE6B,GAAyB,WAC7B,IAAArsK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8DdisK,GAxCf,SAAA9rK,GAcA,SAAA+rK,EAAA7B,EAAA8B,EAAAC,EAAAC,EAAAC,EAAAzB,GACA,IAAAvqK,EAAAH,EAAAxT,KAAA2C,KAAA,iBAAA+6K,IAAA/6K,KAqBA,OAjBAgR,EAAA6rK,UAIA7rK,EAAAisK,cAAArqK,IAAAkqK,IAAA,IAIA9rK,EAAAksK,gBAAAtqK,IAAAmqK,IAAA,IAIA/rK,EAAAmsK,gBAAAvqK,IAAAoqK,IAAA,IAIAhsK,EAAAwqK,UAAAD,EACAvqK,EAEA,OArCI0rK,GAASE,EAAA/rK,GAqCb+rK,EAtCA,CAuCE/B,IC7DEuC,GAAyB,WAC7B,IAAA/sK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgCd2sK,GAVf,SAAAxsK,GAKA,SAAAysK,EAAAvC,GACA,OAAAlqK,EAAAxT,KAAA2C,KAAA,iBAAA+6K,IAAA/6K,KAEA,OAPIo9K,GAASE,EAAAzsK,GAObysK,EARA,CASEzC,IC/BE0C,GAAyB,WAC7B,IAAAltK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiCd8sK,GAXf,SAAA3sK,GAMA,SAAA4sK,EAAA1C,EAAAO,GACA,OAAAzqK,EAAAxT,KAAA2C,KAAA,qBAAA+6K,EAAAO,IAAAt7K,KAEA,OARIu9K,GAASE,EAAA5sK,GAQb4sK,EATA,CAUErC,IChCEsC,GAAyB,WAC7B,IAAArtK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAiCditK,GAXf,SAAA9sK,GAMA,SAAA+sK,EAAA7C,EAAAO,GACA,OAAAzqK,EAAAxT,KAAA2C,KAAA,8BAAA+6K,EAAAO,IAAAt7K,KAEA,OARI09K,GAASE,EAAA/sK,GAQb+sK,EATA,CAUExC,IChCEyC,GAAyB,WAC7B,IAAAxtK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqCdotK,GAff,SAAAjtK,GAKA,SAAAktK,EAAArkH,GACA,IAAA1oD,EAAAH,EAAAxT,KAAA2C,KAAA,QAAAA,KAKA,OADAgR,EAAA0oD,YACA1oD,EAEA,OAZI6sK,GAASE,EAAAltK,GAYbktK,EAbA,CAcEvE,ICpCEwE,GAAyB,WAC7B,IAAA3tK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAkCdutK,GAZf,SAAAptK,GAOA,SAAAqtK,EAAAnD,EAAAO,EAAAC,GACA,OAAA1qK,EAAAxT,KAAA2C,KAAA,uBAAA+6K,EAAAO,EAAAC,IAAAv7K,KAEA,OATIg+K,GAASE,EAAArtK,GASbqtK,EAVA,CAWE9C,ICjCE+C,GAAyB,WAC7B,IAAA9tK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgCd0tK,GAVf,SAAAvtK,GAKA,SAAAwtK,EAAAtE,GACA,OAAAlpK,EAAAxT,KAAA2C,KAAA,KAAAoM,MAAAtN,UAAA0C,MAAAnE,KAAAwU,aAAA7R,KAEA,OAPIm+K,GAASE,EAAAxtK,GAObwtK,EARA,CASExE,IC/BEyE,GAAyB,WAC7B,IAAAjuK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAoCd6tK,GAbf,SAAA1tK,GAQA,SAAA2tK,EAAAtjD,EAAAlgH,EAAAugJ,GACA,OAAA1qJ,EAAAxT,KAAA2C,KAAA,SAAAk7H,EAAAlgH,EAAAugJ,IAAAv7J,KAEA,OAVIs+K,GAASE,EAAA3tK,GAUb2tK,EAXA,CAYEjE,ICRK,SAAAkE,GAAA1E,GACP,IAAAp/D,EAAA,OAAAxtG,OAAAf,MAAAtN,UAAA0C,MAAAnE,KAAAwU,YACA,WAAA6sK,SAAA5/K,UAAAJ,KAAAwD,MAA8C+3K,GAAGt/D,IAkC1C,SAASgkE,GAAIzjD,EAAAh9G,EAAAq9I,GACpB,WAAe6e,GAAIl/C,EAAAh9G,EAAAq9I,GChEnB,IAAIqjB,GAAyB,WAC7B,IAAAvuK,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8B7B6jJ,GAAA,CACAwC,6BAAA,CACA8nB,UAAqBj/F,GAAyB23E,GAAOz4J,UAAAm2J,oBAAA,YAOrD6pB,GAAA,CACAC,6BAAA,CACAC,cAAyBp/F,GAAyBk4E,IAClDmnB,aAAwBr/F,GAAyBk4E,IACjDonB,aAAwBt/F,GAAyBk4E,MAOjDqnB,GAAA,CACAJ,6BAAA,CACAK,mBAA8Bx/F,GAwb9B,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGs9F,GAAAp8H,EAAA48B,IAzbyB,sBACtD+/F,cAAyBz/F,GA0dzB,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAA89F,GAAA58H,EAAA48B,IA3duB,eAMjDigG,GAAA,CACAR,6BAAA,CACAS,aAAwB3/F,GAAkBs4E,MAM1CsnB,GAAA,CACAV,6BAAA,CACAW,OAAkB7/F,GAkdlB,SAAAn9B,EAAA8I,EAAA8zB,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACAo0J,EAAAxkJ,EAAA,YACAykJ,EAAAzkJ,EAAA,UACAgwK,EAAAhwK,EAAA,WACAilJ,EAAgBx2E,GAAeg2E,EAAAD,GAC/BzxG,EAAA+F,YAAAmsG,GACA,IAAA+qB,EACQngB,GAAI1gK,UAAAw+J,oBAAA1I,EAAAppG,EAAA8zB,GAGJg/E,GAAIx/J,UAAAw+J,oBAAA1I,EAAAppG,EAAA8zB,KA5dZsgG,OAAkB//F,GAmhBlB,SAAAn9B,EAAA8I,EAAA8zB,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACIma,OAAMtH,IAAA44C,EAAA9vC,QAAA,IACV,IAAAy4I,EAAAxkJ,EAAA,YACAkwK,EAAAlwK,EAAA,cACAykJ,EAAAzkJ,EAAA,UACAmwK,EAAAC,GAAAF,EAAA1rB,GACAj5B,EAAA1vE,EAAAnwC,kBACAqnC,EAAA8L,aAAA,WAAAsxH,GACAp9H,EAAA86G,eAAAwiB,GAAA,SAAAH,EAAAzrB,GACA,IAAAoB,EAAAhqG,EAAA9vC,QACA,QAAA9I,IAAA4iJ,EAAA,CAGA,IAFA,IAAAzoJ,EAAAy+C,EAAA1zC,UACA/F,EAAA,GACA7U,EAAA,EAAA0U,EAAA7E,EAAAhN,OAAyC7C,EAAA0U,EAAQ1U,IAAA,CACjD,IAAAiB,EAAAqtD,EAAAztD,IAAAgP,EAAA7P,IACA,QAAA0V,IAAAzU,EAAA,CACA,IAAAirF,EAAAr8E,EAAA7P,GACAiB,GAAiD,qBAAA4c,wBACjDquE,EAAA8xC,GAEAnpH,EAAAjR,KAAA,CAA6BrD,KAAA2rF,EAAAjrF,WAGrBujF,GAAiE,CAAMi+F,WAAAhwK,EAAA,WAAA+yC,OAC/EgvG,KAAA/hJ,EAAA,KAAA0kJ,QAAA1kJ,EAAA,SAAoE8vK,GAA4Bt/F,GAAqB,YAAApuE,EAAAutE,GACrH2gG,GAAAv9H,EAAA8yG,EAAAl2E,MA5iBA4gG,OAAkBrgG,GA+flB,SAAAn9B,EAAA8I,EAAA8zB,GACA,IAAA3vE,EAAA2vE,IAAAv/E,OAAA,GACIma,OAAMtH,IAAA44C,EAAA9vC,QAAA,IACV,IAAAy4I,EAAAxkJ,EAAA,YACAkwK,EAAAlwK,EAAA,cACAykJ,EAAAzkJ,EAAA,UACAmwK,EAAAC,GAAAF,EAAA1rB,GACAzxG,EAAA8L,aAAA,WAAAsxH,GACAp9H,EAAA86G,eAAAwiB,GAAA,SAAAH,EAAAzrB,GACA,IAAAoB,EAAAhqG,EAAA9vC,aACA9I,IAAA4iJ,GACAyqB,GAAAv9H,EAAA8yG,EAAAl2E,KAzgBA9mE,SAAoBqnE,GAmjBpB,SAAAn9B,EAAA0uH,EAAA9xF,GACA,IAAA7hF,EAAe2gF,GAAe+hG,GAAA,QAE9BR,EADArgG,IAAAv/E,OAAA,GACA,WAGA,GAFA2iD,EAAA+F,YAAAhrD,GACI06J,GAAmB16J,EAAA2zK,EAAA3zK,WACvBmV,IAAAw+J,EAAAjzK,OAAA,OAAAizK,EAAAjzK,MAAA,CACA,IAAAA,EAAoBigF,GAAe+hG,GAAA,SACnCz9H,EAAA+F,YAAAtqD,GACAizK,EAAAjzK,OAA8C,mBAAAizK,EAAA,MAAAr2J,sBAC9C,IAAA4kK,EACgBngB,GAAI1gK,UAAAs+J,qBAAAj/J,EAAAizK,EAAAjzK,MAAAmhF,GAGJg/E,GAAIx/J,UAAAs+J,qBAAAj/J,EAAAizK,EAAAjzK,MAAAmhF,GAIR64E,GAAmBh6J,EAAAizK,EAAAjzK,UApkB/BiiL,OAAkBvgG,GA6kBlB,SAAAn9B,EAAA29H,EAAA/gG,GACA+gG,EAAAC,UACA59H,EAAA8L,aAAA,WAAA6xH,EAAAC,eAEA1tK,IAAAytK,EAAAE,cACA79H,EAAA8L,aAAA,eAAA7mD,OAAA04K,EAAAE,oBAEA3tK,IAAAytK,EAAAliL,OACQg6J,GAAmBz1G,EAAA29H,EAAAliL,WAphB3BqiL,GAAA,UAIAR,GAAA,gCAIAS,GAAA,6BAIAN,GAAA,6BAIAO,GAAA,6BAIAC,GAAA,CACAC,QAAA,0EACAC,QAAA,2EAMAC,GAAA,QAUIC,GAAG,SAAAlwK,GAKP,SAAAmwK,EAAAhoK,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAuBA,OAlBAhI,EAAAiwK,aAAAhoK,EAAAk7I,YAKAnjJ,EAAAkwK,WAAAjoK,EAAAm7I,UAKApjJ,EAAAmwK,WAAAloK,EAAAmoK,UACAnoK,EAAAmoK,UAAA,IAAoC9iB,GAKpCttJ,EAAAqwK,gBAAApoK,EAAAq7I,eACAr7I,EAAAq7I,eAAAqsB,GAAAG,IACA9vK,EAuRA,OApTI4tK,GAASoC,EAAAnwK,GAkCbmwK,EAAAliL,UAAAwiL,eAAA,WACA,OAAAthL,KAAAihL,cAKAD,EAAAliL,UAAAyiL,eAAA,SAAAptB,GACAn0J,KAAAihL,aAAA9sB,GAKA6sB,EAAAliL,UAAAs0J,qBAAA,SAAA1wG,EAAA1pC,GAEA,IAAArJ,EAAA,CACA+yC,QAEQnxC,EAAM5B,EAAA,CACdwkJ,YAAAn0J,KAAAihL,aACA7sB,UAAAp0J,KAAAkhL,aAEQ3vK,EAAM5B,EAAA3P,KAAAkzH,eAAAxwE,EAAA1pC,GAAA,KACd,IAAAsmE,EAAA,CAAA3vE,GACA3P,KAAAmhL,WAAA5sB,2BAAmDR,IAAK,cAC5Cx0E,GAAgBg4E,GAAOz4J,UAAA41J,sBACnC,IAAAnpG,EAAuBi2B,GAAe,GAAAxhF,KAAAmhL,WAAA5sB,2BAAA7xG,EAAA48B,EAAAt/E,KAAAmhL,YAItC,OAHA51H,IACAA,EAAA,IAEAA,GASAy1H,EAAAliL,UAAA0iL,wBAAA,SAAAl0K,GACA,GAAAA,EAGA,qBAAAA,EAAA,CACA,IAAA0lJ,EAAsB9zE,GAAK5xE,GAC3B,OAAAtN,KAAAyhL,oCAAAzuB,GAEA,OAAiB/zE,GAAU3xE,GAC3BtN,KAAAyhL,oCACgC,GAGhCzhL,KAAA0hL,gCAA2E,KAW3EV,EAAAliL,UAAA6iL,8BAAA,SAAAr0K,GACA,GAAAA,EAGA,qBAAAA,EAAA,CACA,IAAA0lJ,EAAsB9zE,GAAK5xE,GAC3B,OAAAtN,KAAA4hL,0CAAA5uB,GAEA,OAAiB/zE,GAAU3xE,GAC3BtN,KAAA4hL,0CACgC,GAGhC5hL,KAAA6hL,sCAC+B,KAQ/Bb,EAAAliL,UAAA8iL,0CAAA,SAAA5uB,GACA,QAAAr0J,EAAqCq0J,EAAA,WAAqBr0J,EAAGA,IAAAqgF,YAC7D,GAAArgF,EAAAggF,UAAAC,KAAAy0E,aACA,OAAArzJ,KAAA6hL,sCAAqF,IAUrFb,EAAAliL,UAAA+iL,sCAAA,SAAAn/H,GACA,IAAA18C,EAAA,GACA7H,EAAoB45J,GAA4Br1G,EAAAwyG,aAAA,qBAEhD,OADAlvJ,EAAA,iBAAA7H,EACeqjF,GAC8B,EAAA+yE,GAAA7xG,EAAA,GAAA1iD,KAAAmhL,aAM7CH,EAAAliL,UAAA2iL,oCAAA,SAAAzuB,GACA,QAAAr0J,EAAqCq0J,EAAA,WAAqBr0J,EAAGA,IAAAqgF,YAC7D,GAAArgF,EAAAggF,UAAAC,KAAAy0E,aACA,OAAArzJ,KAAA0hL,gCAA+E,IAS/EV,EAAAliL,UAAA4iL,gCAAA,SAAAh/H,GACA,OAAe8+B,GACwB,GAAO29F,GAAAz8H,EAAA,KAS9Cs+H,EAAAliL,UAAAgjL,gBAAA,SAAA7oK,GACA,IAGAikC,EAHAwF,EAAmB07B,GAAe+hG,GAAA,cAIlC,GAHAz9H,EAAA8L,aAAA,iBACA9L,EAAA8L,aAAA,mBAEAv1C,IACAA,EAAA8oK,QACAr/H,EAAA8L,aAAA,SAAAv1C,EAAA8oK,QAEA9oK,EAAA+oK,cACAt/H,EAAA8L,aAAA,eAAAv1C,EAAA+oK,mBAEApvK,IAAAqG,EAAAgpK,aACAv/H,EAAA8L,aAAA,cAAA7mD,OAAAsR,EAAAgpK,cAEAhpK,EAAAipK,YACAx/H,EAAA8L,aAAA,aAAAv1C,EAAAipK,iBAEAtvK,IAAAqG,EAAAy3B,YACAgS,EAAA8L,aAAA,aAAA7mD,OAAAsR,EAAAy3B,kBAEA99B,IAAAqG,EAAAqwB,OACAoZ,EAAA8L,aAAA,QAAA7mD,OAAAsR,EAAAqwB,aAEA12B,IAAAqG,EAAAkpK,YACAz/H,EAAA8L,aAAA,cAAAv1C,EAAAkpK,YAEAjlI,EAAAjkC,EAAAikC,OACAjkC,EAAAkyF,MAAA,CACgBjxF,EAAMjB,EAAAiiH,aAAA,IACtB,IAAA/vB,EAA2BwzE,GACO1lK,EAAA,aAAAA,EAAAkyF,KAAAlyF,EAAAo7I,SAGlCn3G,EAFAA,EAE6BuhI,GAASvhI,EAAAiuD,GAGtCA,EAIAzoD,EAAA86G,eAA4Br/E,GAAuB,qBAAAn+E,KAAAqhL,iBAEnD,IAAA1xK,EAAA,CACA+yC,QAYA,OAVQnxC,EAAM5B,EAAA,CACd0kJ,QAAAp7I,EAAAo7I,QACAD,UAAAn7I,EAAAm7I,UAAAn7I,EAAAm7I,UAAAp0J,KAAAkhL,WACArB,cAAA5mK,EAAA4mK,cACA3kD,aAAAjiH,EAAAiiH,aACAh+E,SACAklI,cAAAnpK,EAAAmpK,cAAAnpK,EAAAmpK,cAAA,KAEQloK,EAAM9N,MAAA+K,QAAA8B,EAAA87I,cAAA,IA0hBd,SAAAryG,EAAAqyG,EAAAz1E,GACA,IAAA3vE,EAAoC2vE,IAAAv/E,OAAA,GACpC4Z,EAAiEpI,EAAM,GAAG5B,GAC1EgK,EAAA+oC,OACIg/B,GAAmB/nE,EAAA0oK,GAA+BliG,GAAqB,SAAA40E,EAAAz1E,GA7hB3EwiG,CAAAp/H,EAAwDzpC,EAAA,cAAAtJ,IACxD+yC,GAYAs+H,EAAAliL,UAAAwjL,iBAAA,SAAAC,EAAAC,EAAAC,EAAAxpK,GACA,IAMAypK,EAEAj5K,EARA61E,EAAA,GACA58B,EAAmB07B,GAAe+hG,GAAA,eAClCrpE,EAAA79F,EAAA69F,QAAA79F,EAAA69F,QAAAgqE,GACAnB,EAAA,UAAA7oE,EAAA,IACAp0D,EAAA8L,aAAA,iBACA9L,EAAA8L,aAAA,UAAAsoD,GAIA79F,IACAypK,EAAAzpK,EAAA0pK,WAAA1pK,EAAA0pK,WAAA,GACA1pK,EAAA8oK,QACAr/H,EAAA8L,aAAA,SAAAv1C,EAAA8oK,SAGA,IAAAztB,EAAAqsB,GAAA7pE,GACAp0D,EAAA86G,eAA4Br/E,GAAuB,qBAAAm2E,GACnD,IAAAurB,EAAA5mK,EAAA4mK,cAAA5mK,EAAA4mK,cAAAW,GAyBA,OAxBA+B,IACA94K,EAAkB8H,EAAM,CAAEmxC,QAAa,CAAG0xG,UAAAn7I,EAAAm7I,UAC1CD,YAAAl7I,EAAAk7I,YAAA0rB,gBACAF,aAAAjuB,KAAAz4I,EAAAy4I,KAAA2C,QAAAp7I,EAAAo7I,UACY9iJ,EAAM9H,EAAAi5K,GACNhhG,GAAmBj4E,EAAAg2K,GAA+Bt/F,GAAqB,UAAAoiG,EAAAjjG,IAEnFkjG,IACA/4K,EAAkB8H,EAAM,CAAEmxC,QAAa,CAAG0xG,UAAAn7I,EAAAm7I,UAC1CD,YAAAl7I,EAAAk7I,YAAA0rB,gBACAF,aAAAjuB,KAAAz4I,EAAAy4I,KAAA2C,QAAAp7I,EAAAo7I,UACY9iJ,EAAM9H,EAAAi5K,GACNhhG,GAAmBj4E,EAAAg2K,GAA+Bt/F,GAAqB,UAAAqiG,EAAAljG,IAEnFmjG,GACY/gG,GAAmB,CAAEh/B,OAAA0xG,UAAAn7I,EAAAm7I,UACjCD,YAAAl7I,EAAAk7I,YAAA0rB,gBACAF,aAAAtrB,QAAAp7I,EAAAo7I,SAAsEorB,GAA2Bt/F,GAAqB,UAAAsiG,EAAAnjG,GAEtHrmE,EAAA2pK,gBACYlhG,GAAmB,CAAEh/B,OAAA0xG,UAAAn7I,EAAAm7I,UACjCD,YAAAl7I,EAAAk7I,YAAA0rB,gBACAF,aAAAtrB,QAAAp7I,EAAAo7I,SAAsEorB,GAA2Bt/F,GAAqB,UAAAlnE,EAAA2pK,eAAAtjG,GAEtH58B,GAKAs+H,EAAAliL,UAAA00J,2BAAA,SAAAR,GACA,QAAAr0J,EAAqCq0J,EAAA,WAAqBr0J,EAAGA,IAAAqgF,YAC7D,GAAArgF,EAAAggF,UAAAC,KAAAy0E,aACA,OAAArzJ,KAAAyzJ,uBAAA90J,GAGA,aAKAqiL,EAAAliL,UAAA20J,uBAAA,SAAA/wG,GACA,GAAAA,EAAA0+B,mBACA1+B,EAAA0+B,oCAEA,QAAAziF,GADA+jD,IAAA0+B,qCACAA,kBAAgDziF,EAAGA,IAAA0iF,mBACnD,OAAA1iF,EAAA40E,WAAAxzE,SACA,IAAApB,EAAA40E,WAAAxzE,QACA,IAAApB,EAAAw0E,WAAAwL,UAAA,CACA,IAAAW,EAAA,KAEA,OADAt/E,KAAAmhL,WAAAlsB,oBAAAt2J,EAAA2gF,GAC2Bh0D,GAAag0D,EAAAz+E,MAAAwzJ,SAIxC,aAEA2sB,EArTO,CAsTLpuB,IAaF,IAAAiwB,GAAA,CACAC,6BAAA,CACAC,UAAqBxjG,GAAe,SAAA78B,EAAA48B,GACpC,OAAA58B,EAAAwyG,aAAA,WAeA,IAAAoqB,GAAA,CACAP,6BAAA,CACAxkK,QATA,SAAAmoC,EAAA48B,GACI4B,GAAS2hG,GAAAngI,EAAA48B,MA2Cb,SAAA2gG,GAAAv9H,EAAA8yG,EAAAl2E,GACA,IAAApiC,EAAiBkhC,GAAeqiG,GAAA,UAChC7rB,EAAgBx2E,GAAeqiG,GAAA,aAC/BvjI,EAAAuL,YAAAmsG,GACAA,EAAApmG,aAAA,MAAgD,GAChD9L,EAAA+F,YAAAvL,GAOA,SAAA6iI,GAAAF,EAAA1rB,GAEA,IAAA6uB,GADAnD,KAAAW,IACA,IAEA,WAAArsB,EAAA9zJ,QAAA2iL,GACA7uB,EAGA6uB,EAAA7uB,EAsGA,IAAAkuB,GAAA,CACAtD,6BAAA,CACAkE,MAAiBpjG,GA2BjB,SAAAn9B,EAAAyxG,EAAA70E,GACA,IAKAwgG,EALAnwK,EAAoC2vE,IAAAv/E,OAAA,GACpC8/K,EAAAlwK,EAAA,cACAykJ,EAAAzkJ,EAAA,UACAyyK,EAAAzyK,EAAA,cACA0kJ,EAAA1kJ,EAAA,QAIAmwK,EADAD,EACAE,GAAAF,EAAA1rB,GAGAA,EAEAzxG,EAAA8L,aAAA,WAAAsxH,GACAzrB,GACA3xG,EAAA8L,aAAA,UAAA6lG,GAEAD,GACA1xG,EAAA86G,eAAAwiB,GAAA,SAAAH,EAAAzrB,GAEA,IAAAz6I,EAAiEpI,EAAM,GAAG5B,GAC1EgK,EAAA+oC,OACIg/B,GAAmB/nE,EAAA4lK,GAA0Bp/F,GAAqB,gBAAAiiG,EAAA9iG,GACtE,IAAApiC,EAAAvtC,EAAA,OACA,GAAAutC,EAAA,CACA,IAAA03G,EAAoBx2E,GAAeqiG,GAAA,UACnC/9H,EAAA+F,YAAAmsG,GACAsuB,GAAAtuB,EAAA13G,EAAAoiC,OArDAwjG,6BAAA,CACA5H,OAAkBr7F,GAkHlB,SAAAn9B,EAAAxF,EAAAoiC,GACA,IAAA6jG,EAAyB/kG,GAAesiG,GAAA,kBACpCvoB,GAAmBgrB,EAAAjmI,EAAA69H,cACvBr4H,EAAA+F,YAAA06H,GACA,IAAAC,EAAqBhlG,GAAgB21E,GAAK,cAC1CrxG,EAAA+F,YAAA26H,GACA,IAAA7mK,EAAgB6hE,GAAgB21E,GAAK,SACrCqvB,EAAA36H,YAAAlsC,GACA8mK,GAAA9mK,EAAA2gC,EAAA3gC,OACA,IAAAtW,EAAcm4E,GAAgB21E,GAAK,OACnCqvB,EAAA36H,YAAAxiD,GACAo9K,GAAAp9K,EAAAi3C,EAAAj3C,OA5HAi0K,IAAer6F,GAAiByjG,IAChCjF,GAAcx+F,GAAiByjG,IAC/BvF,IAAel+F,GA+If,SAAAn9B,EAAAxF,EAAAoiC,GAEA,IAAA3lE,EAAA,CAAgB+oC,QAChBgX,EAAAxc,EAAAwc,UACIgoB,GAAmB/nE,EAAA0oK,GAA+BliG,GAAqBzmB,EAAAigH,cAAA,CAAAjgH,GAAA4lB,KAlJ3EikG,KAAgB1jG,GAkEhB,SAAAn9B,EAAAxF,EAAAoiC,GACAA,IAAAv/E,OAAA,GACA,QAAAm9C,EAAAm3G,QACAmvB,GAAA9gI,EAAAxF,EAAAg+E,cACIojC,GAAIx/J,UAAAs+J,qBAAA16G,EAAAxF,EAAAh/B,OAAAohE,KArERq7F,SAAoB96F,GA4EpB,SAAAn9B,EAAAxF,EAAAoiC,GACAA,IAAAv/E,OAAA,GACA,QAAAm9C,EAAAm3G,QACAmvB,GAAA9gI,EAAAxF,EAAAg+E,cACIojC,GAAIx/J,UAAAs+J,qBAAA16G,EAAAxF,EAAAliC,SAAAskE,KA/ER88F,WAAsBv8F,GAsFtB,SAAAn9B,EAAAxF,EAAAoiC,GACAA,IAAAv/E,OAAA,GACA,QAAAm9C,EAAAm3G,QACAmvB,GAAA9gI,EAAAxF,EAAAg+E,cACIojC,GAAIx/J,UAAAs+J,qBAAA16G,EAAAxF,EAAAliC,SAAAskE,KAzFRk/F,OAAkB3+F,GAgGlB,SAAAn9B,EAAAxF,EAAAoiC,GACAA,IAAAv/E,OAAA,GACA,QAAAm9C,EAAAm3G,QACAmvB,GAAA9gI,EAAAxF,EAAAg+E,cACIojC,GAAIx/J,UAAAs+J,qBAAA16G,EAAAxF,EAAAliC,SAAAskE,KAnGRmkG,kBAA6B5jG,GAAiB6jG,IAC9CC,qBAAgC9jG,GAAiB6jG,IACjDE,mBAA8B/jG,GAAiB6jG,IAC/CG,4BAAuChkG,GAAiB6jG,IACxDI,sBAAiCjkG,GAAiB6jG,IAClDK,+BAA0ClkG,GAAiB6jG,IAC3DM,eAA0BnkG,GA2J1B,SAAAn9B,EAAAxF,EAAAoiC,GACAkkG,GAAA9gI,EAAAxF,EAAA69H,gBA3JAkJ,kBAA6BpkG,GAkK7B,SAAAn9B,EAAAxF,EAAAoiC,GACAkkG,GAAA9gI,EAAAxF,EAAA69H,cACA,IAAAyB,EAAwBp+F,GAAeqiG,GAAA,iBACvC/9H,EAAA+F,YAAA+zH,GACA0H,GAAA1H,EAAA,GAAAt/H,EAAAs/H,eACA,IAAAC,EAAwBr+F,GAAeqiG,GAAA,iBACvC/9H,EAAA+F,YAAAg0H,GACAyH,GAAAzH,EAAA,GAAAv/H,EAAAu/H,iBAxKA0H,eAA0BtkG,GA+K1B,SAAAn9B,EAAAxF,EAAAoiC,GACA58B,EAAA8L,aAAA,WAAAtR,EAAA+/H,UACAv6H,EAAA8L,aAAA,aAAAtR,EAAAggI,YACAx6H,EAAA8L,aAAA,aAAAtR,EAAAigI,iBACAvqK,IAAAsqC,EAAAs+H,WACA94H,EAAA8L,aAAA,YAAAtR,EAAAs+H,UAAAtuK,YAEAs2K,GAAA9gI,EAAAxF,EAAA69H,cACAmJ,GAAAxhI,EAAA,GAAAxF,EAAA2/H,aA3IA,SAAAqG,GAAAxgI,EAAAxF,EAAAoiC,GAGIoC,GADJ,CAAgBh/B,QACO2/H,GAA+BliG,GAAqBjjC,EAAAy8H,cAAA,CAAAz8H,GAAAoiC,GAqE3E,SAAAgkG,GAAA5gI,EAAAxF,EAAAoiC,GAIA,IAFA,IAAA3lE,EAAA,CAAgB+oC,QAChBq3H,EAAA78H,EAAA68H,WACA78K,EAAA,EAAA0U,EAAAmoK,EAAAh6K,OAA2C7C,EAAA0U,IAAQ1U,EAAA,CACnD,IAAAw8D,EAAAqgH,EAAA78K,GACQwkF,GAAmB/nE,EAAA0oK,GAA+BliG,GAAqBzmB,EAAAigH,cAAA,CAAAjgH,GAAA4lB,IAmB/E,SAAAokG,GAAAhhI,EAAAxF,EAAAoiC,QACA1sE,IAAAsqC,EAAAs+H,WACA94H,EAAA8L,aAAA,YAAAtR,EAAAs+H,UAAAtuK,YAEAs2K,GAAA9gI,EAAAxF,EAAA69H,cACAmJ,GAAAxhI,EAAA,GAAAxF,EAAAo+H,YA4CA,SAAA8I,GAAAzsH,EAAAjV,EAAAvkD,GACA,IAAAU,EAAmBu/E,GAAeqiG,GAAA9oH,GAC9BwgG,GAAmBt5J,EAAAV,GACvBukD,EAAA+F,YAAA5pD,GAMA,SAAA2kL,GAAA9gI,EAAAvkD,GACAimL,GAAA,eAAA1hI,EAAAvkD,GAMA,SAAA+lL,GAAAxhI,EAAAvkD,GACAimL,GAAA,UAAA1hI,EAAAvkD,GAMA,SAAAklL,GAAA3gI,EAAAuL,GACA,IAAAo2H,EAAsBjmG,GAAgB21E,GAAK,eAC3CrxG,EAAA+F,YAAA47H,GACA,IAAAC,EAAuBlmG,GAAgB21E,GAAK,gBAC5CswB,EAAA57H,YAAA67H,GACInsB,GAAmBmsB,EAAAr2H,GAyBR,IAAAs2H,GAAA,GC56BXC,GAAyB,WAC7B,IAAAn0K,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAgC7B+zK,GAAA,CACAxhK,MAAaqS,GACbovJ,WAAkB/tD,GAClBvzG,QAAe8V,GACfyrJ,WAAkBzsD,GAClB0sD,gBAAuBvtD,GACvBwtD,aAAoBrsD,IAiBpBxpF,GAAA,QAKA81I,GAAA,IAKApiL,GAAA,IAUAqiL,GACA,EADAA,GAEA,EAFAA,GAGA,EAHAA,GAIA,EAJAA,GAKA,EALAA,GAMA,EAMAC,GAAA,GACA,QAASC,MAAQjiK,GACjBgiK,GAAoBC,IAAQjiK,GAAaiiK,IAAIC,cAK7C,IAAAC,GAAA,WAIA,SAAAA,EAAAC,GAIAplL,KAAAolL,MAKAplL,KAAAqlL,QAAA,EAgHA,OAzGAF,EAAArmL,UAAAwmL,SAAA,SAAA/nL,GACA,OAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,KASA4nL,EAAArmL,UAAAymL,WAAA,SAAAhoL,EAAAioL,GAEA,OAAAjoL,GAAA,KAAAA,GAAA,UAAAA,UADAqV,IAAA4yK,OAQAL,EAAArmL,UAAA2mL,cAAA,SAAAloL,GACA,WAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAMA4nL,EAAArmL,UAAA4mL,UAAA,WACA,OAAA1lL,KAAAolL,IAAAxvI,SAAA51C,KAAAqlL,SAMAF,EAAArmL,UAAA6mL,UAAA,WACA,IAIAviL,EAJA7F,EAAAyC,KAAA0lL,YACArpJ,EAAAr8B,KAAAqlL,OAEAlnL,EAAAZ,EAEA,QAAAA,EACA6F,EAAA2hL,QAEA,QAAAxnL,EACA6F,EAAA2hL,QAEA,QAAAxnL,EACA6F,EAAA2hL,QAEA,GAAA/kL,KAAAulL,WAAAhoL,IAAA,KAAAA,EACA6F,EAAA2hL,GACA5mL,EAAA6B,KAAA4lL,mBAEA,GAAA5lL,KAAAslL,SAAA/nL,GACA6F,EAAA2hL,GACA5mL,EAAA6B,KAAA6lL,gBAEA,IAAA7lL,KAAAylL,cAAAloL,GACA,OAAAyC,KAAA2lL,YAEA,QAAApoL,EAIA,UAAAsJ,MAAA,yBAAAtJ,GAHA6F,EAAA2hL,GAKA,OAAgB1oJ,WAAAl+B,QAAAiF,SAMhB+hL,EAAArmL,UAAA8mL,YAAA,WACA,IAAAroL,EACAgS,EAAAvP,KAAAqlL,OACAhxI,GAAA,EACAyxI,GAAA,EACA,GACA,KAAAvoL,EACA82C,GAAA,EAEA,KAAA92C,GAAA,KAAAA,IACAuoL,GAAA,GAEAvoL,EAAAyC,KAAA0lL,kBACS1lL,KAAAulL,WAAAhoL,EAAA82C,KAGTyxI,IAAA,KAAAvoL,GAAA,KAAAA,IAGAuoL,IAAA,KAAAvoL,GAAA,KAAAA,IACA,OAAAuyD,WAAA9vD,KAAAolL,IAAAW,UAAAx2K,EAAAvP,KAAAqlL,YAMAF,EAAArmL,UAAA+mL,UAAA,WACA,IAAAtoL,EACAgS,EAAAvP,KAAAqlL,OACA,GACA9nL,EAAAyC,KAAA0lL,kBACS1lL,KAAAslL,SAAA/nL,IACT,OAAAyC,KAAAolL,IAAAW,UAAAx2K,EAAAvP,KAAAqlL,UAAAH,eAEAC,EA7HA,GAkIIa,GAAM,WAIV,SAAAC,EAAAC,GAKAlmL,KAAAmmL,OAAAD,EAKAlmL,KAAAomL,OAKApmL,KAAAqmL,QAAuB1jK,GAAcC,GA6UrC,OAvUAqjK,EAAAnnL,UAAAwnL,SAAA,WACAtmL,KAAAomL,OAAApmL,KAAAmmL,OAAAR,aAOAM,EAAAnnL,UAAAynL,YAAA,SAAAnjL,GAEA,OADApD,KAAAomL,OAAAhjL,SAQA6iL,EAAAnnL,UAAAi6F,MAAA,SAAA31F,GACA,IAAAojL,EAAAxmL,KAAAumL,YAAAnjL,GAIA,OAHAojL,GACAxmL,KAAAsmL,WAEAE,GAMAP,EAAAnnL,UAAAogF,MAAA,WAGA,OAFAl/E,KAAAsmL,WACAtmL,KAAAymL,kBAQAR,EAAAnnL,UAAA4nL,qBAAA,WACA,IAAAz1J,EAAqBtO,GAAcC,GACnC+jK,EAAA3mL,KAAAomL,OACA,GAAApmL,KAAAumL,YAAAxB,IAAA,CACA,IAAA6B,EAAAD,EAAAxoL,MACAyoL,IAAA9B,GACA7zJ,EAAyBtO,GAAcE,IAEvC+jK,IAAAlkL,GACAuuB,EAAyBtO,GAAcG,IAlOvC,OAoOA8jK,IACA31J,EAAyBtO,GAAcI,MAEvCkO,IAA2BtO,GAAcC,IACzC5iB,KAAAsmL,WAGA,OAAAr1J,GAMAg1J,EAAAnnL,UAAA+nL,6BAAA,WACA,GAAA7mL,KAAA+4F,MAAAgsF,IAAA,CACA,IAAA93G,EAAA,GACA,GACAA,EAAAnsE,KAAAd,KAAAymL,wBACazmL,KAAA+4F,MAAAgsF,KACb,GAAA/kL,KAAA+4F,MAAAgsF,IACA,OAAA93G,OAGA,GAAAjtE,KAAA8mL,mBACA,SAEA,UAAAjgL,MAAA7G,KAAA+mL,wBAMAd,EAAAnnL,UAAAkoL,gBAAA,WACA,GAAAhnL,KAAA+4F,MAAAgsF,IAAA,CACA,IAAA9mK,EAAAje,KAAAinL,cACA,GAAAjnL,KAAA+4F,MAAAgsF,IACA,OAAA9mK,OAGA,GAAAje,KAAA8mL,mBACA,YAEA,UAAAjgL,MAAA7G,KAAA+mL,wBAMAd,EAAAnnL,UAAAooL,qBAAA,WACA,GAAAlnL,KAAA+4F,MAAAgsF,IAAA,CACA,IAAA9mK,EAAAje,KAAAmnL,kBACA,GAAAnnL,KAAA+4F,MAAAgsF,IACA,OAAA9mK,OAGA,GAAAje,KAAA8mL,mBACA,SAEA,UAAAjgL,MAAA7G,KAAA+mL,wBAMAd,EAAAnnL,UAAAsoL,kBAAA,WACA,GAAApnL,KAAA+4F,MAAAgsF,IAAA,CACA,IAAA9mK,EAAAje,KAAAqnL,2BACA,GAAArnL,KAAA+4F,MAAAgsF,IACA,OAAA9mK,OAGA,GAAAje,KAAA8mL,mBACA,SAEA,UAAAjgL,MAAA7G,KAAA+mL,wBAMAd,EAAAnnL,UAAAwoL,qBAAA,WACA,GAAAtnL,KAAA+4F,MAAAgsF,IAAA,CACA,IAAA9mK,OAAA,EAOA,GALAA,EADAje,KAAAomL,OAAAhjL,MAAA2hL,GACA/kL,KAAAunL,sBAGAvnL,KAAAmnL,kBAEAnnL,KAAA+4F,MAAAgsF,IACA,OAAA9mK,OAGA,GAAAje,KAAA8mL,mBACA,SAEA,UAAAjgL,MAAA7G,KAAA+mL,wBAOAd,EAAAnnL,UAAA0oL,0BAAA,WACA,GAAAxnL,KAAA+4F,MAAAgsF,IAAA,CACA,IAAA9mK,EAAAje,KAAAqnL,2BACA,GAAArnL,KAAA+4F,MAAAgsF,IACA,OAAA9mK,OAGA,GAAAje,KAAA8mL,mBACA,SAEA,UAAAjgL,MAAA7G,KAAA+mL,wBAMAd,EAAAnnL,UAAA2oL,uBAAA,WACA,GAAAznL,KAAA+4F,MAAAgsF,IAAA,CACA,IAAA9mK,EAAAje,KAAA0nL,wBACA,GAAA1nL,KAAA+4F,MAAAgsF,IACA,OAAA9mK,OAGA,GAAAje,KAAA8mL,mBACA,SAEA,UAAAjgL,MAAA7G,KAAA+mL,wBAMAd,EAAAnnL,UAAAmoL,YAAA,WAGA,IAFA,IAAAhpK,EAAA,GACA6yG,EAAA9wH,KAAAqmL,QAAAtmL,OACA7C,EAAA,EAAuBA,EAAA4zH,IAAgB5zH,EAAA,CACvC,IAAAyqL,EAAA3nL,KAAAomL,OACA,IAAApmL,KAAA+4F,MAAAgsF,IAIA,MAHA9mK,EAAAnd,KAAmD6mL,EAAA,OAMnD,GAAA1pK,EAAAle,QAAA+wH,EACA,OAAA7yG,EAEA,UAAApX,MAAA7G,KAAA+mL,wBAMAd,EAAAnnL,UAAAqoL,gBAAA,WAEA,IADA,IAAAlpK,EAAA,CAAAje,KAAAinL,eACAjnL,KAAA+4F,MAAAgsF,KACA9mK,EAAAnd,KAAAd,KAAAinL,eAEA,OAAAhpK,GAMAgoK,EAAAnnL,UAAAyoL,oBAAA,WAEA,IADA,IAAAtpK,EAAA,CAAAje,KAAAgnL,mBACAhnL,KAAA+4F,MAAAgsF,KACA9mK,EAAAnd,KAAAd,KAAAgnL,mBAEA,OAAA/oK,GAMAgoK,EAAAnnL,UAAAuoL,yBAAA,WAEA,IADA,IAAAppK,EAAA,CAAAje,KAAAknL,wBACAlnL,KAAA+4F,MAAAgsF,KACA9mK,EAAAnd,KAAAd,KAAAknL,wBAEA,OAAAjpK,GAMAgoK,EAAAnnL,UAAA4oL,sBAAA,WAEA,IADA,IAAAzpK,EAAA,CAAAje,KAAAonL,qBACApnL,KAAA+4F,MAAAgsF,KACA9mK,EAAAnd,KAAAd,KAAAonL,qBAEA,OAAAnpK,GAMAgoK,EAAAnnL,UAAAgoL,iBAAA,WACA,IAAA90K,EAAAhS,KAAAumL,YAAAxB,KACA/kL,KAAAomL,OAAAjoL,OAAA6wC,GAIA,OAHAh9B,GACAhS,KAAAsmL,WAEAt0K,GAOAi0K,EAAAnnL,UAAAioL,oBAAA,WACA,qBAAA/mL,KAAAomL,OAAAjoL,MAAA,iBACA6B,KAAAomL,OAAA/pJ,SAAA,QAAAr8B,KAAAmmL,OAAAf,IAAA,KAMAa,EAAAnnL,UAAA2nL,eAAA,WACA,IAAAkB,EAAA3nL,KAAAomL,OACA,GAAApmL,KAAA+4F,MAAAgsF,IAAA,CACA,IAAA6C,EAAAD,EAAAxpL,MAEA,GADA6B,KAAAqmL,QAAArmL,KAAA0mL,uBACA,sBAAAkB,EAAA,CACA,IAAA36G,EAAAjtE,KAAA6mL,+BACA,WAA2BjyD,GAAkB3nD,GAG7C,IAAA2oG,EAAA6O,GAAAmD,GACA,IAAAhS,EACA,UAAA/uK,MAAA,0BAAA+gL,GAEA,IAAA3pK,OAAA,EACA,OAAA2pK,GACA,YACA3pK,EAAAje,KAAAgnL,kBACA,MAEA,iBACA/oK,EAAAje,KAAAknL,uBACA,MAEA,cACAjpK,EAAAje,KAAAonL,oBACA,MAEA,iBACAnpK,EAAAje,KAAAsnL,uBACA,MAEA,sBACArpK,EAAAje,KAAAwnL,4BACA,MAEA,mBACAvpK,EAAAje,KAAAynL,yBACA,MAEA,QACA,UAAA5gL,MAAA,0BAAA+gL,GAWA,OARA3pK,IAEAA,EADA23J,IAAA6O,GAAA,MACA,CAAA15K,SAGA,IAGA,IAAA6qK,EAAA33J,EAAAje,KAAAqmL,SAGA,UAAAx/K,MAAA7G,KAAA+mL,wBAEAd,EAhWU,GAyWN4B,GAAG,SAAAh3K,GAKP,SAAAi3K,EAAA9uK,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAQA,OAFAhI,EAAA+2K,sBAAAn1K,IAAAqG,EAAA+uK,iBACA/uK,EAAA+uK,gBACAh3K,EA0FA,OAxGIwzK,GAASsD,EAAAj3K,GAuBbi3K,EAAAhpL,UAAAmpL,OAAA,SAAA7C,GACA,IAAAc,EAAA,IAAAf,GAAAC,GAEA,OADA,IAAyBY,GAAME,GAC/BhnG,SAKA4oG,EAAAhpL,UAAAmmK,oBAAA,SAAA19F,EAAAvuD,GACA,IAAAohI,EAAAp6I,KAAAmlK,qBAAA59F,EAAAvuD,GACA,GAAAohI,EAAA,CACA,IAAA5uF,EAAA,IAA8BlxC,EAE9B,OADAkxC,EAAAvwC,YAAAm/H,GACA5uF,EAEA,aAKAs8H,EAAAhpL,UAAAomK,qBAAA,SAAA39F,EAAAvuD,GAYA,IAXA,IAAAi0D,EAAA,GACAjyD,EAAAhb,KAAAmlK,qBAAA59F,EAAAvuD,GASAuyC,EAAA,GACAruD,EAAA,EAAA0U,GAPAq7D,EAFAjtE,KAAA+nL,kBACA/sK,EAAAwV,WAAkCxN,GAAYQ,oBAC9C,EACA0pD,qBAGA,CAAAlyD,IAGAjb,OAA+C7C,EAAA0U,IAAQ1U,EAAA,CACvD,IAAAsuD,EAAA,IAA8BlxC,EAC9BkxC,EAAAvwC,YAAAgyD,EAAA/vE,IACAquD,EAAAzqD,KAAA0qD,GAEA,OAAAD,GAKAu8H,EAAAhpL,UAAAqmK,qBAAA,SAAA59F,EAAAvuD,GACA,IAAAgC,EAAAhb,KAAAioL,OAAA1gH,GACA,OAAAvsD,EACmBy4G,GAA4Bz4G,GAAA,EAAAhC,GAG/C,MAMA8uK,EAAAhpL,UAAAumK,iBAAA,SAAA75G,EAAAxyC,GACA,IAAAgC,EAAAwwC,EAAAlwC,cACA,OAAAN,EACAhb,KAAAulK,kBAAAvqJ,EAAAhC,GAEA,IAKA8uK,EAAAhpL,UAAAwmK,kBAAA,SAAA/5G,EAAAvyC,GACA,MAAAuyC,EAAAxrD,OACA,OAAAC,KAAAqlK,iBAAA95G,EAAA,GAAAvyC,GAGA,IADA,IAAAi0D,EAAA,GACA/vE,EAAA,EAAA0U,EAAA25C,EAAAxrD,OAA6C7C,EAAA0U,IAAQ1U,EACrD+vE,EAAAnsE,KAAAyqD,EAAAruD,GAAAoe,eAEA,IAAAszF,EAAA,IAA6BgmB,GAAkB3nD,GAC/C,OAAAjtE,KAAAulK,kBAAA32D,EAAA51F,IAKA8uK,EAAAhpL,UAAAymK,kBAAA,SAAAvqJ,EAAAhC,GACA,OAAAkvK,GAAsBz0D,GAA4Bz4G,GAAA,EAAAhC,KAElD8uK,EAzGO,CA0GL/iB,IAKF,SAAAojB,GAAA/tC,GACA,IAAAn8H,EAAAm8H,EAAAhpH,iBACA,WAAAnT,EAAAle,OACA,GAEAke,EAAA+Q,KAAA,KA8BA,SAAAo5J,GAAAhuC,GAGA,IAFA,IAAAn8H,EAAAm8H,EAAAhpH,iBACA3kB,EAAA,GACAvP,EAAA,EAAA0U,EAAAqM,EAAAle,OAA4C7C,EAAA0U,IAAQ1U,EACpDuP,EAAA3L,KAAAmd,EAAA/gB,GAAA8xB,KAAA,MAEA,OAAAviB,EAAAuiB,KAAA,KAkBA,SAAAq5J,GAAAjuC,GAGA,IAFA,IAAA3tI,EAAA,GACA29I,EAAAhQ,EAAAphH,iBACA97B,EAAA,EAAA0U,EAAAw4I,EAAArqJ,OAAsC7C,EAAA0U,IAAQ1U,EAC9CuP,EAAA3L,KAAA,IAAAsnL,GAAAh+B,EAAAltJ,IAAA,KAEA,OAAAuP,EAAAuiB,KAAA,KAiCA,IAAAs5J,GAAA,CACA/yJ,MAAA4yJ,GACAvxD,WAAAwxD,GACAnwJ,QAAAowJ,GACAlwD,WA3FA,SAAAiiB,GAGA,IAFA,IAAA3tI,EAAA,GACA87K,EAAAnuC,EAAAnrD,YACA/xF,EAAA,EAAA0U,EAAA22K,EAAAxoL,OAA2C7C,EAAA0U,IAAQ1U,EACnDuP,EAAA3L,KAAA,IAAAqnL,GAAAI,EAAArrL,IAAA,KAEA,OAAAuP,EAAAuiB,KAAA,MAsFAsoG,gBAxDA,SAAA8iB,GAGA,IAFA,IAAA3tI,EAAA,GACA87K,EAAAnuC,EAAAtiB,iBACA56H,EAAA,EAAA0U,EAAA22K,EAAAxoL,OAA2C7C,EAAA0U,IAAQ1U,EACnDuP,EAAA3L,KAAA,IAAAsnL,GAAAG,EAAArrL,IAAA,KAEA,OAAAuP,EAAAuiB,KAAA,MAmDAypG,aAjCA,SAAA2hB,GAGA,IAFA,IAAA3tI,EAAA,GACA87K,EAAAnuC,EAAAzgB,cACAz8H,EAAA,EAAA0U,EAAA22K,EAAAxoL,OAA2C7C,EAAA0U,IAAQ1U,EACnDuP,EAAA3L,KAAA,IAAAunL,GAAAE,EAAArrL,IAAA,KAEA,OAAAuP,EAAAuiB,KAAA,MA4BA6lG,mBAlFA,SAAAulB,GAGA,IAFA,IAAA3tI,EAAA,GACA+7K,EAAApuC,EAAAhlB,gBACAl4H,EAAA,EAAA0U,EAAA42K,EAAAzoL,OAAsC7C,EAAA0U,IAAQ1U,EAC9CuP,EAAA3L,KAAAonL,GAAAM,EAAAtrL,KAEA,OAAAuP,EAAAuiB,KAAA,OAmFA,SAAAk5J,GAAA9tC,GACA,IAAAh3I,EAAAg3I,EAAA5pH,UAEAi4J,GAAAC,EADAJ,GAAAllL,IACAg3I,GAEA,GADAh3I,IAAA8hL,cAC4B,qBAAA5zJ,mBAAA,CAC5B,IAAAs1J,EAnCA,SAAAxsC,GACA,IAAAnpH,EAAAmpH,EAAA5oH,YACAo1J,EAAA,GAOA,OANA31J,IAAmBtO,GAAcE,KAAAoO,IAAmBtO,GAAcI,OAClE6jK,GAAA9B,IAEA7zJ,IAAmBtO,GAAcG,KAAAmO,IAAmBtO,GAAcI,OAClE6jK,GAAAlkL,IAEAkkL,EA0BA+B,CAAkG,GAClG/B,EAAA7mL,OAAA,IACAqD,GAAA,IAAAwjL,GAGA,WAAA6B,EAAA1oL,OACAqD,EAAA,IAAA4rC,GAEA5rC,EAAA,IAAAqlL,EAAA,IAEe,IAAAG,GAAA,GCjzBfC,GAAA,+BAKO,SAAAC,GAAApmI,GACP,OAAAA,EAAA+yG,eAAAozB,GAAA,QCHA,IAuCeE,GAvCR,WACP,SAAApxG,KAoCA,OA3BAA,EAAA74E,UAAA4H,KAAA,SAAA4G,GACA,GAAAA,EAGA,qBAAAA,EAAA,CACA,IAAA0lJ,EAAsB9zE,GAAK5xE,GAC3B,OAAAtN,KAAAgpL,iBAAAh2B,GAEA,OAAiB/zE,GAAU3xE,GAC3BtN,KAAAgpL,iBAA6D,GAG7DhpL,KAAAipL,aAAwD,GAVxD,aAkBAtxG,EAAA74E,UAAAkqL,iBAAA,SAAAh2B,KAMAr7E,EAAA74E,UAAAmqL,aAAA,SAAAvmI,KACAi1B,EArCO,GCVHuxG,GAAyB,WAC7B,IAAA74K,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAwBzBy4K,GAAc,CAClB,KACA,8BAMIC,GAAUvoG,GAAgBsoG,GAAc,CAC5C13D,QAAe7xC,GAmRf,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAG6nG,GAAA3mI,EAAA48B,KAnR7BgqG,WAAkB1pG,GA0QlB,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAG+nG,GAAA7mI,EAAA48B,OArQ7BiqG,GAAyB1oG,GAAgBsoG,GAAc,CACvDz3D,QAAe9xC,GAgZf,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGgoG,GAAA9mI,EAAA48B,KAhZ7BmqG,UAAiB7pG,GA0SjB,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAAkoG,GAAAhnI,EAAA48B,KA1S1BnuB,MAAayuB,GAiTb,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGmoG,GAAAjnI,EAAA48B,OA1SzBsqG,GAAe,SAAA/4K,GAEnB,SAAAg5K,IACA,IAAA74K,EAAAH,EAAAxT,KAAA2C,YAKA,OADAgR,EAAA8lG,aAAAlkG,EACA5B,EAuBA,OA9BIk4K,GAASW,EAAAh5K,GAYbg5K,EAAA/qL,UAAAkqL,iBAAA,SAAAh2B,GACA,QAAAr0J,EAAAq0J,EAAA7/E,WAAoCx0E,EAAGA,IAAAqgF,YACvC,GAAArgF,EAAAggF,UAAAC,KAAAy0E,aACA,OAAArzJ,KAAAipL,aAAAtqL,GAGA,aAKAkrL,EAAA/qL,UAAAmqL,aAAA,SAAAvmI,GACA1iD,KAAA82G,QAAAp0D,EAAAwyG,aAAA,WAAA8C,OACA,IAAA8xB,EAAkCtoG,GAAe,CACjDs1B,QAAA92G,KAAA82G,SACWsyE,GAAO1mI,EAAA,IAClB,OAAAonI,GAAA,MAEAD,EA/BmB,CAgCjBd,IAKFM,GAAsBxoG,GAAgBsoG,GAAc,CACpDY,KAAYnqG,GAAyBx4E,IACrC4iL,MAAapqG,GAAyBx4E,IACtC6iL,SAAgBrqG,GAAyBx4E,IACzC8iL,YAAmBtqG,GAAwBuqG,IAC3CC,eAAsBxqG,GAAyBkpG,IAC/CuB,mBAA0BzqG,GA8N1B,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAG8oG,GAAA5nI,EAAA48B,KA9N7BirG,KAAY3qG,GAAyBx4E,IACrCojL,kBAAyB5qG,GAAyBx4E,IAClDqjL,WAAkB7qG,GAAyBk4E,IAC3C4yB,SAAgB9qG,GAAyBk4E,IACzC6yB,UAAiB/qG,GAAyBk4E,MAM1CwyB,GAAkCzpG,GAAgBsoG,GAAc,CAChEyB,qBAA4BhrG,GA0N5B,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGqpG,GAAAnoI,EAAA48B,KA1N7BwrG,gBAAuBlrG,GAAyBx4E,IAChD2jL,eAAsBnrG,GAgOtB,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGwpG,GAAAtoI,EAAA48B,KAhO7B2rG,sBAA6BrrG,GAAyBx4E,IACtD8jL,0BAAiCtrG,GAAyBx4E,IAC1D+jL,6BAAoCvrG,GAAyBx4E,MAM7DyjL,GAA6BhqG,GAAgBsoG,GAAc,CAC3DiC,cAAqBxrG,GAAyBx4E,IAC9CikL,oBAA2BzrG,GAAyBx4E,MAMpD4jL,GAA8BnqG,GAAgBsoG,GAAc,CAC5DmC,YAAmB1rG,GAAyBx4E,IAC5CmkL,QAAe3rG,GAAyBx4E,IACxCokL,KAAY5rG,GAAyBx4E,IACrCqkL,gBAAuB7rG,GAAyBx4E,IAChDskL,SAAgB9rG,GAAyBx4E,IACzCukL,QAAe/rG,GAAyBx4E,MAMxCsiL,GAAwB7oG,GAAgBsoG,GAAc,CACtDv3D,OAAcryC,GAAgBn4E,MAM9BuiL,GAAoB9oG,GAAgBsoG,GAAc,CAClDY,KAAYnqG,GAAyBx4E,IACrC4iL,MAAapqG,GAAyBx4E,IACtC6iL,SAAgBrqG,GAAyBx4E,IACzC8iL,YAAmBtqG,GAAwBuqG,IAC3CyB,IAAWnsG,GAAyBr4E,IACpCykL,yBAAgCjsG,GA+HhC,SAAAl9B,EAAA48B,GACA,IAAAwsG,EAAgCtqG,GAAe,GAAGuqG,GAAArpI,EAAA48B,GAClD,IAAAwsG,EACA,OAEA,IAAAE,EAAyDF,EAAA,mBACzDG,EAAyDH,EAAA,mBACzDI,EAAyDJ,EAAA,mBACzDK,EAAyDL,EAAA,mBACzD,QAAAl5K,IAAAo5K,QAAAp5K,IAAAq5K,QACAr5K,IAAAs5K,QAAAt5K,IAAAu5K,EACA,OAEA,OACAH,EAAAC,EACAC,EAAAC,KA7IAC,YAAmB3sG,GAwGnB,SAAA/8B,EAAA48B,GACA,IAAAphE,EAAA,CACQ25I,GAAiBn1G,EAAAwyG,aAAA,SACjB2C,GAAiBn1G,EAAAwyG,aAAA,SACjB2C,GAAiBn1G,EAAAwyG,aAAA,SACjB2C,GAAiBn1G,EAAAwyG,aAAA,UAEzBp8G,EAAA,CACQ++G,GAAiBn1G,EAAAwyG,aAAA,SACjB2C,GAAiBn1G,EAAAwyG,aAAA,UAEzB,OACA35B,IAAA74E,EAAAwyG,aAAA,OACAh3I,SACAo8D,IAAAxhC,KArHAuzI,UAAiB5sG,GAuQjB,SAAA/8B,EAAA48B,GAWA,MAVA,CACA7hF,KAAAilD,EAAAwyG,aAAA,QACA7rI,MAAAq5B,EAAAwyG,aAAA,SACAo3B,WAAA5pI,EAAAwyG,aAAA,cACAq3B,QAAA7pI,EAAAwyG,aAAA,WACAs3B,eAA0Bh1B,GAAiB90G,EAAAwyG,aAAA,mBAC3Cu3B,aAAwBj1B,GAAiB90G,EAAAwyG,aAAA,iBACzC4iB,QAAmBtgB,GAAiB90G,EAAAwyG,aAAA,YACpCnjJ,OAAkB3K,GAAUs7C,MA/Q5BuP,YAAmB2tB,GA8FnB,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGkrG,GAAAhqI,EAAA48B,KA9F7BqtG,aAAoBltG,GAgVpB,SAAA/8B,EAAA48B,GACA,IAAAstG,EAAAC,GAAAnqI,EAAA48B,GACA,GAAAstG,EAEA,OADAA,EAAA,KAAAlqI,EAAAwyG,aAAA,QACA03B,EAEA,SArVAE,WAAkBrtG,GAAyBr4E,IAC3C2lL,YAAmBttG,GA2VnB,SAAA/8B,EAAA48B,GACA,IAAA0tG,EAAAH,GAAAnqI,EAAA48B,GACA,GAAA0tG,EAEA,OADAA,EAAA,KAAAtqI,EAAAwyG,aAAA,QACA83B,EAEA,SAhWAC,QAAextG,GAAwBotG,IACvCK,eAAsBztG,GAAwBotG,IAC9C/3F,MAAarV,GAqWb,SAAkB/8B,EAAA48B,GAClB,OAAWkC,GAAe,GAAK2rG,GAAazqI,EAAA48B,KArW5C8tG,oBAA2BxtG,GAAyBg4E,IACpDy1B,oBAA2BztG,GAAyBg4E,IACpDzmG,MAAasuB,GAkMb,SAAA/8B,EAAA48B,GACA,IAAAguG,EAA0DhuG,IAAAv/E,OAAA,GAC1DwtL,EAAsB/rG,GAAe,GAAGmoG,GAAAjnI,EAAA48B,GACxC,IAAAiuG,EACA,OAEA,IAAAC,EAAoBh2B,GAAiB90G,EAAAwyG,aAAA,mBACrCtiJ,IAAA46K,IACAA,EAAAF,EAAA,WAEAC,EAAA,eAAA36K,IAAA46K,KACA,IAAAC,EAAmB11B,GAA4Br1G,EAAAwyG,aAAA,kBAC/CtiJ,IAAA66K,IACAA,EAAAH,EAAA,UAEAC,EAAA,SAAAE,EACA,IAAArpF,EAAiBozD,GAAiB90G,EAAAwyG,aAAA,gBAClCtiJ,IAAAwxF,IACAA,EAAAkpF,EAAA,QAEAC,EAAA,YAAA36K,IAAAwxF,KACA,IAAAspF,EAAoBl2B,GAAiB90G,EAAAwyG,aAAA,mBACrCtiJ,IAAA86K,IACAA,EAAAJ,EAAA,WAEAC,EAAA,eAAA36K,IAAA86K,KACA,IAAAC,EAAqB91B,GAAiBn1G,EAAAwyG,aAAA,eACtCy4B,IACAA,EAAAL,EAAA,YAEAC,EAAA,WAAAI,EACA,IAAAC,EAAsB/1B,GAAiBn1G,EAAAwyG,aAAA,gBACvC04B,IACAA,EAAAN,EAAA,aAEAC,EAAA,YAAAK,EAEA,+BACAn0K,QAAA,SAAAhb,GACA,GAAAA,KAAA6uL,EAAA,CACA,IAAAO,EAAAN,EAAA9uL,IAAA,GACA8uL,EAAA9uL,GAAAovL,EAAA1gL,OAAAmgL,EAAA7uL,OAWA,MARA,sDACA,2DACAgb,QAAA,SAAAhb,GACA,KAAAA,KAAA8uL,GAAA,CACA,IAAAO,EAAAR,EAAA7uL,GACA8uL,EAAA9uL,GAAAqvL,KAGAP,MAhPAb,GAA0B7rG,GAAgBsoG,GAAc,CACxDa,MAAapqG,GAAyBx4E,IACtCgjL,eAAsBxqG,GAAyBkpG,IAC/CiF,QAAenuG,GAAwBouG,MAMvCjC,GAAyClrG,GAAgBsoG,GAAc,CACvE6C,mBAA0BpsG,GAAyBg4E,IACnDs0B,mBAA0BtsG,GAAyBg4E,IACnDq0B,mBAA0BrsG,GAAyBg4E,IACnDu0B,mBAA0BvsG,GAAyBg4E,MAMnD4xB,GAAsB3oG,GAAgBsoG,GAAc,CACpD8E,gBAAuBruG,GAAwBsuG,IAC/CC,OAAcvuG,GAAwBsuG,IACtCE,eAAsBxuG,GAAwBsuG,MAM9CG,GAA4BxtG,GAAgBsoG,GAAc,CAC1Dv3D,OAAcnyC,GAAyBr4E,IACvCknL,QAAe7uG,GA2Pf,SAAA/8B,EAAA48B,GACA,OAAWkC,GAAe,GAAG+sG,GAAA7rI,EAAA48B,OAtP7BivG,GAAsB1tG,GAAgBsoG,GAAc,CACpDqF,KAAY5uG,GA4PZ,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGitG,GAAA/rI,EAAA48B,OAvP7BmvG,GAAmB5tG,GAAgBsoG,GAAc,CACjDuF,IAAW9uG,GAAwBitG,IACnC8B,KAAY/uG,GAAwBitG,MAMhCM,GAAgBtsG,GAAgBsoG,GAAc,CAClDY,KAAYnqG,GAAyBx4E,IACrC4iL,MAAapqG,GAAyBx4E,IACtC6iL,SAAgBrqG,GAAyBx4E,IACzCwnL,UAAiBnvG,GAAwBuuG,IACzCa,cAAqBjvG,GAAwBitG,IAC7CiC,SAAgBlvG,GAAwBitG,MAMxCkC,GAAoCluG,GAAgBsoG,GAAc,CAClEv3D,OAAchyC,GAAyBx4E,IACvCgjL,eAAsBxqG,GAAyBkpG,MAM/CkG,GAA0BnuG,GAAgBsoG,GAAc,CACxD8F,QAAe1vG,GAAgBn4E,MAiM/B,SAAAylL,GAAAnqI,EAAA48B,GACA,OAAWkC,GAAe,GAAGutG,GAAArsI,EAAA48B,GA+B7B,SAAA4uG,GAAAxrI,EAAA48B,GACA,OAAWkC,GAAe,GAAG6sG,GAAA3rI,EAAA48B,GAO7B,SAAA0uG,GAAAtrI,EAAA48B,GACA,IAAA4vG,EAAArC,GAAAnqI,EAAA48B,GACA,GAAA4vG,EAAA,CACA,IAAAnuK,EAAA,CACYg3I,GAA4Br1G,EAAAwyG,aAAA,UAC5B6C,GAA4Br1G,EAAAwyG,aAAA,YAGxC,OADAg6B,EAAA,KAAAnuK,EACAmuK,GA2CA,SAAA/E,GAAAznI,EAAA48B,GACA,OAAWkC,GAAe,GAAAwtG,GAAAtsI,EAAA48B,GAEX,IAAA6vG,GAAA,GC/gBXC,GAAyB,WAC7B,IAAA/+K,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA6Id2+K,GAnGM,SAAAx+K,GAKrB,SAAAy+K,EAAAt2K,GACA,IAAAhI,EAAAH,EAAAxT,KAAA2C,YACAiZ,EAAAD,GAAA,GAgBA,OAXAhI,EAAAkwK,WAAA,yCAKAlwK,EAAAmwK,WAAA,IAA+B3hB,GAK/BxuJ,EAAAy2G,QAAAxuG,EAAAwsC,OAAAxsC,EAAAwsC,OAAA,KACAz0C,EA0EA,OAhGIo+K,GAASE,EAAAz+K,GA2Bby+K,EAAAxwL,UAAAinD,UAAA,WACA,OAAA/lD,KAAAynH,SAKA6nE,EAAAxwL,UAAA+mD,UAAA,SAAAJ,GACAzlD,KAAAynH,QAAAhiE,GAQA6pI,EAAAxwL,UAAAywL,cAAA,SAAA7sI,EAAA48B,GACA58B,EAAA8L,aAAA,eAAAxuD,KAAAkhL,YACA,IAAAvhG,EAAAj9B,EAAAi9B,UAEAp0B,EAAA,GACA,OAAA7I,EAAA6wB,WAAAxzE,OACA,OAAAwrD,EAEA,kBAAAo0B,EACA,QAAAziF,EAAA,EAAA0U,EAAA8wC,EAAA6wB,WAAAxzE,OAAwD7C,EAAA0U,EAAQ1U,IAAA,CAChE,IAAA+mD,EAAAvB,EAAA6wB,WAAAr2E,GACA,GAAA+mD,EAAA06B,WAAAC,KAAAy0E,aAAA,CAGA,IAAAm8B,EAAsD,EACtD7/K,EAAA2vE,EAAA,GAEA41F,EAAAsa,EAAA7vG,UAAA5pC,QApEA,SAoEA,IACA,IAAA/1C,KAAAynH,SAAqCtrG,EAAQnc,KAAAynH,QAAAytD,GAA7C,CAGA,IAAA/gB,EAAA+gB,EA7EA,WA+EAvlK,EAAA,YAAAwkJ,EACAxkJ,EAAA,UAAA3P,KAAAkhL,WAEA,IAAA5/F,EAAA,GACAA,EAAA6yE,GAAuC50E,GAAev/E,KAAAmhL,WAAAnsB,mBAAAh1J,KAAAmhL,YACtD,IAAAhgG,EAAgCN,GAAe,CAAAlxE,EAAA,gBAAA2xE,GAC/CkuG,EAAAhhI,aAAA,eAAAxuD,KAAAkhL,YACA,IAAAuO,EAAoCjuG,GAAe,GAAAL,EAAAquG,EAAAlwG,EAAAt/E,KAAAmhL,YACnDsO,GACoBj2K,EAAM+xC,EAAAkkI,KAI1B,wBAAA9vG,EAAA,CACA,IAAA+vG,EAA8BluG,GAAe,GAAAxhF,KAAAmhL,WAAA5sB,2BAAA7xG,EAAA,KAA0D1iD,KAAAmhL,YACvGuO,IACAnkI,EAAAmkI,GAGA,OAAAnkI,GAKA+jI,EAAAxwL,UAAAs0J,qBAAA,SAAA1wG,EAAA1pC,GACA,IAAAC,EAAA,GAIA,OAHAD,GACYzH,EAAM0H,EAAAjZ,KAAAkzH,eAAAxwE,EAAA1pC,IAElBhZ,KAAAuvL,cAAA7sI,EAAA,CAAAzpC,KAEAq2K,EAjGqB,CAkGnB18B,IC5IE+8B,GAAyB,WAC7B,IAAAt/K,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAwBzBk/K,GAAc,wCAKdC,GAAUhvG,GAAgB+uG,GAAc,CAC5CE,sBAA6BlwG,GA4O7B,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGuuG,GAAArtI,EAAA48B,KA5O7B0wG,gBAAuBpwG,GA2PvB,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGyuG,GAAAvtI,EAAA48B,KA3P7B4wG,mBAA0BtwG,GA0N1B,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAG2uG,GAAAztI,EAAA48B,OAzNzB8wG,GAAG,SAAAv/K,GAEP,SAAAw/K,IACA,OAAAx/K,EAAAxT,KAAA2C,YAoBA,OAtBI2vL,GAASU,EAAAx/K,GAObw/K,EAAAvxL,UAAAkqL,iBAAA,SAAAh2B,GACA,QAAAr0J,EAAAq0J,EAAA7/E,WAAoCx0E,EAAGA,IAAAqgF,YACvC,GAAArgF,EAAAggF,UAAAC,KAAAy0E,aACA,OAAArzJ,KAAAipL,aAAAtqL,GAGA,aAKA0xL,EAAAvxL,UAAAmqL,aAAA,SAAAvmI,GACA,IAAA4tI,EAAwB9uG,GAAe,GAAKquG,GAAOntI,EAAA,IACnD,OAAA4tI,GAAA,MAEAD,EAvBO,CAwBLtH,IAKFwH,GAAsB1vG,GAAgB+uG,GAAc,CACpDY,cAAqB5wG,GAAyBx4E,IAC9CokL,KAAY5rG,GAAyBx4E,IACrCqpL,mBAA0B7wG,GAAyBx4E,IACnDspL,WAAkB9wG,GAAyBx4E,IAC3CukL,QAAe/rG,GAAyBx4E,IACxCupL,sBAA6B/wG,GAAyBx4E,MAMtDwpL,GAA6B/vG,GAAgB+uG,GAAc,CAC3DiB,MAAapxG,GAsNb,SAAA/8B,EAAA48B,GACA,OAAWl4E,GAAUs7C,OAjNrBouI,GAAyBjwG,GAAgB+uG,GAAc,CACvDmB,cAAqBnxG,GAiGrB,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGovG,GAAAluI,EAAA48B,OA5F7B0xG,GAA2BnwG,GAAgB+uG,GAAc,CACzDqB,MAAarxG,GAwKb,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAG0vG,GAAAxuI,EAAA48B,KAxK7BisG,QAAe3rG,GAiFf,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAG+uG,GAAA7tI,EAAA48B,OA5E7B6xG,GAAkBtwG,GAAgB+uG,GAAc,CAChDpB,KAAY5uG,GAkIZ,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAK4vG,GAAY1uI,EAAA48B,OA7HvC8xG,GAAevwG,GAAgB+uG,GAAc,CACjDlB,IAAWjvG,GA+GX,SAAA/8B,EAAA48B,GACA,IAAA+kF,EAAeykB,GAAQpmI,GACvB,IAAA2hH,EACA,OAEA,OAAW7iF,GAAe,CAAE6iF,QAAegtB,GAAA3uI,EAAA48B,KAnH3CqvG,UAAA/7K,IAMA0+K,GAAwBzwG,GAAgB+uG,GAAc,CACtD2B,IAAW3xG,GA+FX,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAG2vG,GAAAzuI,EAAA48B,OA1F7B6wG,GAAkCtvG,GAAgB+uG,GAAc,CAChE4B,UAoHA,SAAA9uI,EAAA48B,GACA,IAAA7hF,EAAAilD,EAAAwyG,aAAA,QACA/2J,EAAgBqjF,GAAe,GAAG8vG,GAAA5uI,EAAA48B,GAClC,IAAAnhF,EACA,OAEmCmhF,IAAAv/E,OAAA,GACnCtC,GAAAU,KArHA+yL,GAAoBrwG,GAAgB+uG,GAAc,CAClD6B,MAAa7xG,GAAyBx4E,IACtCsqL,UAAiB9xG,GAAyBx4E,MAM1CiqL,GAA6BxwG,GAAgB+uG,GAAc,CAC3D+B,WAAkBlyG,GAqDlB,SAAA/8B,EAAA48B,GACA,IAAA7hF,EAAAilD,EAAAwyG,aAAA,QACA,IAAAz3J,EACA,OAEA,OAAW+jF,GAAe,CAAE/jF,QAAeqzL,GAAApuI,EAAA48B,OApD3CsyG,GAA8B/wG,GAAgB+uG,GAAc,CAC5DiC,eAAsBjyG,GAAyBx4E,IAC/C0qL,aAAoBlyG,GAAyBx4E,IAC7C2qL,YAAmBnyG,GAwDnB,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGwvG,GAAAtuI,EAAA48B,OAnD7BywG,GAAqClvG,GAAgB+uG,GAAc,CACnE3F,SAAgBrqG,GAAyBx4E,IACzCojL,kBAAyB5qG,GAAyBx4E,IAClDmjL,KAAY3qG,GAAyBx4E,IACrC4iL,MAAapqG,GAAyBx4E,IACtC4qL,mBAA0BpyG,GAAyBx4E,IACnD6qL,YAAmBryG,GAAyBx4E,MAM5C6oL,GAA+BpvG,GAAgB+uG,GAAc,CAC7DsC,aAAoBtyG,GAAyBx4E,IAC7C+qL,aAAoBvyG,GAAyBkpG,IAC7CsJ,eAAsBxyG,GA6GtB,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGowG,GAAAlvI,EAAA48B,OAkBd,IAAA+yG,GAAA,GCrSXC,GAAyB,WAC7B,IAAAjiL,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0BzB6hL,GAAc,CAClB,KACA,mCAMIC,GAAkB,CACtB,KACA,kCAMIC,GAAU5xG,GAAgB0xG,GAAc,CAC5CG,SAAgB9yG,GAyJhB,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAGmxG,GAAAjwI,EAAA48B,OAlJzBszG,GAAgB,SAAA/hL,GAEpB,SAAAgiL,IACA,IAAA7hL,EAAAH,EAAAxT,KAAA2C,YAMA,OADAgR,EAAA8hL,WAAA,IAA+BT,GAC/BrhL,EA0BA,OAlCIshL,GAASO,EAAAhiL,GAabgiL,EAAA/zL,UAAAkqL,iBAAA,SAAAh2B,GACA,QAAAr0J,EAAAq0J,EAAA7/E,WAAoCx0E,EAAGA,IAAAqgF,YACvC,GAAArgF,EAAAggF,UAAAC,KAAAy0E,aACA,OAAArzJ,KAAAipL,aAAAtqL,GAGA,aAKAk0L,EAAA/zL,UAAAmqL,aAAA,SAAAvmI,GACA,IAAAo0D,EAAAp0D,EAAAwyG,aAAA,WAAA8C,OACA+6B,EAAA/yL,KAAA8yL,WAAA7J,aAAAvmI,GACA,OAAAqwI,GAGAA,EAAA,QAAAj8E,GACAi8E,EAA+BvxG,GAAeuxG,EAAuBN,GAAO/vI,EAAA,MAC5E,MAJA,MAMAmwI,EAnCoB,CAoClB9J,IAKF4J,GAAuB9xG,GAAgB0xG,GAAc,CACrDphI,MAAasuB,GA+Gb,SAAkB/8B,EAAA48B,GAClB,OAAWkC,GAAe,GAAKwxG,GAAatwI,EAAA48B,KA/G5C2zG,cAAqBxzG,GAsHrB,SAAA/8B,EAAA48B,GACA,OAAWkC,GAAe,GAAG0xG,GAAAxwI,EAAA48B,OAjHzB0zG,GAAgBnyG,GAAgB0xG,GAAc,CAClDz9F,MAAarV,GAuHb,SAAkB/8B,EAAA48B,GAClB,IAAA/jE,EAAgBimE,GAAe,GAAK2xG,GAAazwI,EAAA48B,GACjD,IAAA/jE,EACA,OAEA,IAAA63K,EAAA,SAAA1wI,EAAAwyG,aAAA,aAEA,OADA35I,EAAA,UAAA63K,EACA73K,IA7HAq2G,OAAcnyC,GAAyBr4E,IACvCisL,kBAAyB5zG,GAmIzB,SAAA/8B,EAAA48B,GACA,OAAWkC,GAAe,GAAG8xG,GAAA5wI,EAAA48B,KAnI7B+sG,UAAiB5sG,GA0IjB,SAAA/8B,EAAA48B,GACA,OAAWkC,GAAe,GAAG+xG,GAAA7wI,EAAA48B,KA1I7Bk0G,YAAmB/zG,GAiJnB,SAAA/8B,EAAA48B,GACA,IAAAxH,EAAAp1B,EAAAwyG,aAAA,UACAp/G,EAAA4M,EAAAwyG,aAAA,YACAu+B,EAAA/wI,EAAAwyG,aAAA,gBACAjrD,EAAA,GACAnyB,IACAmyB,EAAA,OAAAnyB,GAEAhiC,IACAm0D,EAAA,SAAAn0D,GAEA29I,IACAxpF,EAAA,aAAAwpF,GAEA,OAAAxpF,KA9JGppB,GAAgB2xG,GAAkB,CACrCxI,MAAapqG,GAAyBx4E,IACtC6iL,SAAgBrqG,GAAyBx4E,IACzCssL,iBAAwB9zG,GAkKxB,SAAAl9B,EAAA48B,GACA,IAAArhE,EAAsBujE,GAAe,GAAAmyG,GAAAjxI,EAAA48B,GACrC,MAAArhE,EAAAle,OACA,OAEA,OAAWie,GAAcC,KAtKzB6uK,WAAkBltG,GAAyBx4E,OAMvC+rL,GAAgBtyG,GAAgB0xG,GAAc,CAClD3D,UAAiBnvG,GAsKjB,SAAA/8B,EAAA48B,GACA,IAAAs0G,EAAA,GAGA,OAFAA,EAAA,OAAAlxI,EAAAwyG,aAAA,UACA0+B,EAAA,KAAqB9K,GAAQpmI,GAC7BkxI,KAzKG/yG,GAAgB2xG,GAAkB,CACrCxI,MAAapqG,GAAyBx4E,IACtC0lL,WAAkBltG,GAAyBx4E,OAM3CksL,GAAwBzyG,GAAgB0xG,GAAc,CACtDU,cAAqBrzG,GAAyBx4E,IAC9CysL,oBAA2Bj0G,GA+L3B,SAAAl9B,EAAA48B,GACA,OAAWkC,GAAe,GAAAsyG,GAAApxI,EAAA48B,OA1L1Bw0G,GAA8BjzG,GAAgB0xG,GAAc,CAC5DwB,iBAAwBx0G,GAgMxB,SAAA78B,EAAA48B,GACA,OAAWkC,GAAe,GAAGwyG,GAAAtxI,EAAA48B,OA3L7B00G,GAAyBnzG,GAAgB0xG,GAAc,CACvD1gE,WAAkBjyC,GAAyBx4E,IAC3C6sL,WAAkBr0G,GAAyBk4E,IAC3Co8B,WAAkBt0G,GAAyBk4E,IAC3Cq8B,WAAkBv0G,GAAyBk4E,IAC3Cs8B,WAAkBx0G,GAAyBk4E,MAM3Cy7B,GAAwB1yG,GAAgB0xG,GAAc,CACtD1tD,QAAejlD,GAAyBx4E,IACxCypL,MAAapxG,GAAyBr4E,KACnCy5E,GAAgB2xG,GAAkB,CACrC1F,WAAkBltG,GAAyBx4E,OAM3CusL,GAAyB9yG,GAAgB2xG,GAAkB,CAC3D6B,YAAmB90G,GAAe+0G,IAClCC,YAAmBh1G,GAAe+0G,MAMlCpB,GAAkBryG,GAAgB0xG,GAAc,CAChDiC,kBAAyB50G,GAAyBx4E,IAClDyqH,WAAkBpyC,GA2IlB,SAAA/8B,EAAA48B,GACA,OAAWkC,GAAe,GAAGizG,GAAA/xI,EAAA48B,MA3I1BuB,GAAgB2xG,GAAkB,CACrCkC,aAAoB90G,GAAyBx4E,IAC7C0lL,WAAkBltG,GAAyBx4E,OAM3CqtL,GAAiB5zG,GAAgB0xG,GAAc,CAC/CoC,cAAqB/0G,GAAwB00G,IAC7CM,iBAAwBh1G,GAAyBg4E,IACjDi9B,UAAiBj1G,GAAyBk4E,IAC1Cg9B,WAAkBl1G,GAAyBk4E,IAC3Ci9B,YAAmBn1G,GAAyBk4E,IAC5Ck9B,aAAoBp1G,GAAyBk4E,KAC1Cj3E,GAAgB2xG,GAAkB,CACrC1F,WAAkBltG,GAAyBx4E,OAyG3C,SAAAktL,GAAA5xI,EAAA48B,GACA,IAAArhE,EAAsB7W,GAAUs7C,GAAAxxC,MAAA,OAChC,GAAA+M,GAAA,GAAAA,EAAAle,OAAA,CAGA,IAAAD,GAAAme,EAAA,GACAO,GAAAP,EAAA,GACA,IAAA9S,MAAArL,KAAAqL,MAAAqT,GAGA,OAAA1e,EAAA0e,IA0Be,IAAAy2K,GAAA,GC1UXC,GAAyB,WAC7B,IAAA7kL,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAqBzBykL,GAAM,mEAkLV,SAAAC,KACA,IAAAvzH,EAAAjyD,SAAAiyD,KACA,SAAAA,EAAAwzH,yBACAxzH,EAAAyzH,qBAAA1lL,SAAA2lL,qBACA1zH,EAAA2zH,mBAAA5lL,SAAA6lL,mBAKA,SAAAC,KACA,SAAA9lL,SAAA+lL,oBAAA/lL,SAAAgmL,qBAAAhmL,SAAAimL,mBAMA,SAAAC,GAAAl9K,GACAA,EAAA48K,kBACA58K,EAAA48K,oBAEA58K,EAAA08K,oBACA18K,EAAA08K,sBAEA18K,EAAAy8K,yBACAz8K,EAAAy8K,0BA6Be,IAAAU,GAzMD,SAAAllL,GAKd,SAAAmlL,EAAAh9K,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,IACAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA4Y,QAAAhJ,SAAAC,cAAA,OACA4B,OAAAwH,EAAAxH,UACSzR,MAKTi2L,mBAAArjL,IAAAqG,EAAA2qC,UAAA3qC,EAAA2qC,UACA,iBACA,IAAAgP,OAAAhgD,IAAAqG,EAAA25C,MAAA35C,EAAA25C,MAAA,IAKA5hD,EAAAklL,WAAA,iBAAAtjI,EACAhjD,SAAA4lD,eAAA5C,KACA,IAAAujI,OAAAvjL,IAAAqG,EAAAk9K,YAAAl9K,EAAAk9K,YAAA,IAKAnlL,EAAAolL,iBAAA,iBAAAD,EACAvmL,SAAA4lD,eAAA2gI,KAKAnlL,EAAAqlL,QAAAzmL,SAAAC,cAAA,UACA,IAAA2iD,EAAAv5C,EAAAu5C,SAAAv5C,EAAAu5C,SAAA,qBACAxhD,EAAAslL,cAAAtlL,EAAAqlL,QAAAX,MACA1kL,EAAAqlL,QAAA7nI,aAAA,iBACAx9C,EAAAqlL,QAAAtjI,MAAAP,EACAxhD,EAAAqlL,QAAA5tI,YAAAz3C,EAAAklL,YACQ/iL,EAAMnC,EAAAqlL,QAAgBjhL,EAASK,MAAAzE,EAAAgiD,aAAAhiD,GACvC,IAAAiiD,EAAAjiD,EAAAilL,cAAA,IAAqDzlI,GACrD,IAAkBE,GAAa,KAC/B0kI,KAAyD,GAAjB3kI,IACxC73C,EAAA5H,EAAA4H,QAaA,OAZAA,EAAAgrC,UAAAqP,EACAr6C,EAAA6vC,YAAAz3C,EAAAqlL,SAKArlL,EAAAo7G,WAAAx5G,IAAAqG,EAAAlM,MAAAkM,EAAAlM,KAKAiE,EAAAuuI,QAAAtmI,EAAA3L,OACA0D,EAoFA,OA9IIkkL,GAASc,EAAAnlL,GAgEbmlL,EAAAl3L,UAAAk0D,aAAA,SAAAxjD,GACAA,EAAAgF,iBACAxU,KAAAu2L,qBAKAP,EAAAl3L,UAAAy3L,kBAAA,WACA,GAAAnB,KAAA,CAGA,IAAAnoL,EAAAjN,KAAAqwD,SACA,GAAApjD,EAGA,GAAAyoL,KA+GA9lL,SAAA4mL,eACA5mL,SAAA4mL,iBAEA5mL,SAAA6mL,iBACA7mL,SAAA6mL,mBAEA7mL,SAAA8mL,sBACA9mL,SAAA8mL,2BAnHA,CACA,IAAA99K,OAAA,EAEAA,EADA5Y,KAAAu/I,QACA,iBAAAv/I,KAAAu/I,QACA3vI,SAAAo3C,eAAAhnD,KAAAu/I,SACAv/I,KAAAu/I,QAGAtyI,EAAAk/C,mBAEAnsD,KAAAosH,MAsFA,SAAAxzG,GACAA,EAAAy8K,wBACAz8K,EAAAy8K,0BAGAS,GAAAl9K,GA1FA+9K,CAAA/9K,GAGAk9K,GAAAl9K,MAOAo9K,EAAAl3L,UAAA83L,wBAAA,WACA,IAAA3pL,EAAAjN,KAAAqwD,SACAqlI,MACA11L,KAAAs2L,cAAAt2L,KAAAq2L,SAAA,GACYl0I,GAAWniD,KAAAo2L,iBAAAp2L,KAAAk2L,cAGvBl2L,KAAAs2L,cAAAt2L,KAAAq2L,SAAA,GACYl0I,GAAWniD,KAAAk2L,WAAAl2L,KAAAo2L,mBAEvBnpL,GACAA,EAAAqhD,cAQA0nI,EAAAl3L,UAAAw3L,cAAA,SAAA19K,EAAAi+K,GACA,IAAAC,EAAA92L,KAAAi2L,cAAA,QACAc,EAAA/2L,KAAAi2L,cAAA,SACAe,EAAAH,EAAAC,EAAAC,EACAn+K,EAAAm7C,UAAApyD,OAAAm1L,GACAl+K,EAAAm7C,UAAApyD,OAAAo1L,GACAn+K,EAAAm7C,UAAAS,IAAAwiI,IAMAhB,EAAAl3L,UAAAmrD,OAAA,SAAAh9C,GAEA,GADA4D,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,GACAA,EACA,QAAA/P,EAAA,EAAA0U,EAAiCujL,GAAMp1L,OAAQ7C,EAAA0U,IAAQ1U,EACvD8C,KAAAowD,aAAAtvD,KAAuCqS,EAAMvD,SAAWulL,GAAMj4L,GAAA8C,KAAA42L,wBAAA52L,QAI9Dg2L,EA/Ic,CAgJZ/lI,ICnMEgnI,GAAyB,WAC7B,IAAA5mL,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAwB7B+pB,GAAA,aAkNO,SAASy8J,GAAMplI,GACtB,IAAAlzB,EAAAkzB,EAAAlzB,WACAA,EAIA5+B,KAAAm3L,gBAAAv4J,EAAAswB,UAAA9jC,aACAprB,KAAAm3L,eAAAv4J,EAAAswB,UAAA9jC,WACAprB,KAAAm7B,WAAA,MALAn7B,KAAAm3L,eAAA,KASe,IAAAC,GA7LE,SAAAvmL,GAKjB,SAAAwmL,EAAAr+K,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACAJ,EAAAhJ,SAAAC,cAAA,OA4CA,OA3CA+I,EAAAgrC,eAAAhxC,IAAAqG,EAAA2qC,UAAA3qC,EAAA2qC,UAAA,oBAMQzwC,EALRnC,EAAAH,EAAAxT,KAAA2C,KAAA,CACA4Y,UACAw1C,OAAAn1C,EAAAm1C,QAAsC8oI,GACtCzlL,OAAAwH,EAAAxH,UACSzR,KACakY,EAAkBuiB,IAAAzpB,EAAAqqB,yBAAArqB,GACxCiI,EAAAq+K,kBACAtmL,EAAAumL,oBAAAt+K,EAAAq+K,kBAEAr+K,EAAAmS,YACApa,EAAAuqB,cAAAtiB,EAAAmS,YAMApa,EAAAwmL,oBAAA5kL,IAAAqG,EAAAw+K,cAAAx+K,EAAAw+K,cAAA,SAKAzmL,EAAA0mL,oBAAA1mL,EAAAwmL,eAKAxmL,EAAA2mL,cAAA/+K,EAAAi7C,UAKA7iD,EAAAmmL,eAAA,KAKAnmL,EAAAmqB,WAAA,KAKAnqB,EAAA4mL,oBAAA,KACA5mL,EAoHA,OAvKIimL,GAASI,EAAAxmL,GAwDbwmL,EAAAv4L,UAAAu8B,yBAAA,WACAr7B,KAAAm7B,WAAA,MAUAk8J,EAAAv4L,UAAA+4L,oBAAA,WACA,OACyE73L,KAAAjC,IAnGzE,qBA4GAs5L,EAAAv4L,UAAA88B,cAAA,WACA,OACqE57B,KAAAjC,IAAA08B,KAMrE48J,EAAAv4L,UAAAg5L,gBAAA,SAAAtoL,GACA,IAAAvC,EAAAjN,KAAAqwD,SACArwD,KAAA43L,oBAAA3qL,EAAAkyB,cAAA3vB,GACAxP,KAAA+3L,YAAA/3L,KAAA43L,sBAMAP,EAAAv4L,UAAAk5L,eAAA,SAAAxoL,GACAxP,KAAA+3L,YAAA,MACA/3L,KAAA43L,oBAAA,MAMAP,EAAAv4L,UAAAmrD,OAAA,SAAAh9C,GAEA,GADA4D,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,GACAA,EAAA,CACA,IAAAo4E,EAAAp4E,EAAAogC,cACArtC,KAAAowD,aAAAtvD,KAAmCqS,EAAMkyE,EAAWjwE,EAASc,UAAAlW,KAAA83L,gBAAA93L,MAAyCmT,EAAMkyE,EAAWjwE,EAASoB,WAAAxW,KAAA83L,gBAAA93L,OAChIA,KAAA03L,mBACA13L,KAAAowD,aAAAtvD,KAAuCqS,EAAMkyE,EAAWjwE,EAASe,SAAAnW,KAAAg4L,eAAAh4L,MAAuCmT,EAAMkyE,EAAWjwE,EAASsB,SAAA1W,KAAAg4L,eAAAh4L,SAWlIq3L,EAAAv4L,UAAAy4L,oBAAA,SAAAz/G,GACA93E,KAAA2I,IAvJA,mBAuJAmvE,IASAu/G,EAAAv4L,UAAAy8B,cAAA,SAAAnQ,GACAprB,KAAA2I,IAAA8xB,GAA6BnP,GAAaF,KAM1CisK,EAAAv4L,UAAAi5L,YAAA,SAAArrL,GACA,IAAAurL,EAAAj4L,KAAAw3L,eACA,GAAA9qL,GAAA1M,KAAAm3L,eAAA,CACA,IAAAn3L,KAAAm7B,WAAA,CACA,IAAA/P,EAAAprB,KAAA47B,gBAEA57B,KAAAm7B,WADA/P,EACsCO,GAA2B3rB,KAAAm3L,eAAA/rK,GAG3BF,GAGtC,IACAtM,EADA5e,KAAAqwD,SACAjxB,uBAAA1yB,GACA,GAAAkS,EAAA,CACA5e,KAAAm7B,WAAAvc,KACA,IAAA04K,EAAAt3L,KAAA63L,sBAEAI,EADAX,EACAA,EAAA14K,GAGAA,EAAA1R,YAIAlN,KAAA23L,eAAAM,IAAAj4L,KAAA23L,gBACA33L,KAAA4Y,QAAAi7C,UAAAokI,EACAj4L,KAAA23L,cAAAM,IAGAZ,EAxKiB,CAyKfpnI,IClOEioI,GAAyB,WAC7B,IAAA7nL,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA4CzBynL,GAAa,SAAAtnL,GAEjB,SAAAunL,IACA,cAAAvnL,KAAA3O,MAAAlC,KAAA6R,YAAA7R,KAKA,OAPIk4L,GAASE,EAAAvnL,GAIbunL,EAAAt5L,UAAAsqD,eAAA,WACA,WAAmB4pB,GAAoBhzE,OAEvCo4L,EARiB,CASfxxI,IA2bK,SAASyxI,GAAMvmI,GACtB9xD,KAAAs4L,kBACAt4L,KAAAu4L,aAEe,IAAAC,GAraA,SAAA3nL,GAKf,SAAA4nL,EAAAz/K,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,IACAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA4Y,QAAAhJ,SAAAC,cAAA,OACAu+C,OAAAn1C,EAAAm1C,QAAsCiqI,GACtC5mL,OAAAwH,EAAAxH,UACSzR,MAKTmyD,gBAAAv/C,IAAAqG,EAAAm5C,WAAAn5C,EAAAm5C,UAKAphD,EAAAuhD,kBAAA3/C,IAAAqG,EAAAq5C,aACAr5C,EAAAq5C,YACAthD,EAAAuhD,eACAvhD,EAAAmhD,YAAA,GAEA,IAAAvO,OAAAhxC,IAAAqG,EAAA2qC,UAAA3qC,EAAA2qC,UAAA,iBACA4O,OAAA5/C,IAAAqG,EAAAu5C,SAAAv5C,EAAAu5C,SAAA,eACAC,OAAA7/C,IAAAqG,EAAAw5C,cAAAx5C,EAAAw5C,cAAA,IACA,iBAAAA,GAKAzhD,EAAA0hD,eAAA9iD,SAAAC,cAAA,QACAmB,EAAA0hD,eAAAC,YAAAF,GAGAzhD,EAAA0hD,eAAAD,EAEA,IAAAG,OAAAhgD,IAAAqG,EAAA25C,MAAA35C,EAAA25C,MAAA,IACA,iBAAAA,GAKA5hD,EAAA6hD,OAAAjjD,SAAAC,cAAA,QACAmB,EAAA6hD,OAAAF,YAAAC,GAGA5hD,EAAA6hD,OAAAD,EAEA,IAAAE,EAAA9hD,EAAAuhD,eAAAvhD,EAAAmhD,WACAnhD,EAAA0hD,eAAA1hD,EAAA6hD,OACAvwB,EAAA1yB,SAAAC,cAAA,UACAyyB,EAAAksB,aAAA,iBACAlsB,EAAAywB,MAAAP,EACAlwB,EAAAmmB,YAAAqK,GACQ3/C,EAAMmvB,EAASltB,EAASK,MAAAzE,EAAAgiD,aAAAhiD,GAKhCA,EAAA0nL,UAAA9oL,SAAAC,cAAA,OACAmB,EAAA0nL,UAAA90I,UAAA,qBAKA5yC,EAAA2nL,OAAA,IAA2BR,GAAa,CACxCpxJ,KAAA9tB,EAAA8tB,OAEA,IAAA6xJ,EAAA5nL,EAAA2nL,OACA1/K,EAAAwsC,QACkExsC,EAAA,OAAAQ,QAIlE,SAAAwqC,GACA20I,EAAApuI,SAAAvG,IACavlD,KAAAsS,IAEb,IAAA+lE,EAAAnnE,SAAAC,cAAA,OACAknE,EAAAnzB,UAAA,qBACAmzB,EAAAx7D,MAAAs9K,UAAA,aAKA7nL,EAAA8nL,YAAA,IAAgCnkH,GAAO,CACvCt4C,SAAA,MACA05C,YAAyBhC,GAAkB12D,YAC3CzE,QAAAm+D,IAEA/lE,EAAA2nL,OAAAjuI,WAAA15C,EAAA8nL,aACA,IAAA7lI,EAAArP,EAAA,IAA2C4M,GAAkB,IAASE,IACtE1/C,EAAAmhD,YAAAnhD,EAAAuhD,aAAA,IAA4D5B,GAAe,KAC3E3/C,EAAAuhD,aAAA,wBACA35C,EAAA5H,EAAA4H,QACAA,EAAAgrC,UAAAqP,EACAr6C,EAAA6vC,YAAAz3C,EAAA0nL,WACA9/K,EAAA6vC,YAAAnmB,GAEA,IAAAy2J,EAAA/nL,EACA25C,EAAA35C,EAAA8nL,YACAE,EAAAhoL,EAAA8nL,YAAA7iH,aAQA7zC,EAAA,SAAA5yB,GACA,IAPAypL,EAOA58J,EANA,CACAiH,SAFA21J,EAOwCzpL,GALxC8zB,QAAA01J,EAAAp3I,YAAA,EACAre,QAAA01J,EAAA11J,QAAAy1J,EAAAh3I,aAAA,GAKA/jC,EAAA26K,EAAAhtI,mBAAwE,GACxEjB,EAAAqrB,YAAA/3D,IAEAi7K,EAAA,SAAA1pL,GACA,IAAAyO,EAAA26K,EAAAhtI,mBAAAp8C,GACAupL,EAAA1oI,SAAAvD,UAAAjS,UAAA58B,GACAnhB,OAAAkW,oBAAA,YAAAovB,GACAtlC,OAAAkW,oBAAA,UAAAkmL,IAOA,OAJAF,EAAArrL,iBAAA,uBACA7Q,OAAA6Q,iBAAA,YAAAy0B,GACAtlC,OAAA6Q,iBAAA,UAAAurL,KAEAloL,EAuRA,OAxZIknL,GAASO,EAAA5nL,GAuIb4nL,EAAA35L,UAAAmrD,OAAA,SAAAh9C,GACA,IAAAujJ,EAAAxwJ,KAAAqwD,SACA,GAAApjD,IAAAujJ,EAAA,CAGA,GAAAA,EAAA,CACA,IAAA2oC,EAAA3oC,EAAA1jG,UACAqsI,GACAn5L,KAAAo5L,YAAAD,GAEAn5L,KAAA24L,OAAA1tI,UAAA,MAGA,GADAp6C,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,GACAA,EAAA,CACAjN,KAAA24L,OAAA1tI,UAAAjrD,KAAA04L,WACA14L,KAAAowD,aAAAtvD,KAAmCqS,EAAMlG,EAAMqE,EAAetR,KAAAq5L,yBAAAr5L,OAC9D,IAAA+mC,EAAA95B,EAAA6/C,UACA/lB,IACA/mC,KAAAs5L,UAAAvyJ,GACAA,EAAA2U,UACA17C,KAAA24L,OAAArqI,aACAtuD,KAAAu5L,oBAUAd,EAAA35L,UAAAu6L,yBAAA,SAAA7pL,GACA,GAAAA,EAAA/Q,MAA0B6vC,GAAWI,KAAA,CACrC,IAAAyqJ,EAAkE3pL,EAAA,SAClE2pL,GACAn5L,KAAAo5L,YAAAD,GAEA,IAAAK,EAAAx5L,KAAAqwD,SAAAvD,UACA9sD,KAAAs5L,UAAAE,KAQAf,EAAA35L,UAAAw6L,UAAA,SAAAvyJ,GACQ5zB,EAAM4zB,EAAO7uB,EAAmB67B,IAAY/zC,KAAAy5L,uBAAAz5L,OAOpDy4L,EAAA35L,UAAAs6L,YAAA,SAAAryJ,GACQrzB,EAAQqzB,EAAO7uB,EAAmB67B,IAAY/zC,KAAAy5L,uBAAAz5L,OAQtDy4L,EAAA35L,UAAA26L,uBAAA,WACAz5L,KAAA24L,OAAA7rI,UAAAlS,YAAA56C,KAAAqwD,SAAAvD,UAAAvR,gBAaAk9I,EAAA35L,UAAAw5L,gBAAA,WACA,IAAArrL,EAAAjN,KAAAqwD,SACAuoI,EAAA54L,KAAA24L,OACA,GAAA1rL,EAAAwhD,cAAAmqI,EAAAnqI,aAAA,CAGA,IAAAyoB,EAA2DjqE,EAAA4/C,UAE3D3uC,EADAjR,EAAA6/C,UACA/O,gBAAAm5B,GACAwiH,EAA6Dd,EAAA/rI,UAE7D8sI,EADAf,EAAA9rI,UACA/O,gBAAA27I,GACAE,EAAAhB,EAAAlsI,uBAAwDxsC,GAAUhC,IAClE27K,EAAAjB,EAAAlsI,uBAA4D1sC,GAAc9B,IAC1E47K,EAAAz6L,KAAA6L,IAAA0uL,EAAA,GAAAC,EAAA,IACAE,EAAA16L,KAAA6L,IAAA0uL,EAAA,GAAAC,EAAA,IACAG,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAI,EA3QA,GA2QAE,GACAD,EA5QA,GA4QAE,GACAH,EAnRA,IAmRAE,GACAD,EApRA,IAoRAE,EACAj6L,KAAAu5L,eAEkBz6K,GAAc66K,EAAAz7K,IAChCle,KAAAk6L,cAQAzB,EAAA35L,UAAAy6L,aAAA,WAIA,IAAAtsL,EAAAjN,KAAAqwD,SACAuoI,EAAA54L,KAAA24L,OACAzhH,EAA2DjqE,EAAA4/C,UAE3D3uC,EADAjR,EAAA6/C,UACA/O,gBAAAm5B,GACAijH,EAAAvB,EAAA9rI,UAIAstI,EAAA/6L,KAAAC,IAAA+6L,KAAAh7L,KAAA+E,IAEQ+d,GAAejE,EADvB,GAxSA,GAwSA7e,KAAA8C,IAAA,EAAAi4L,EAAA,KAEAD,EAAAj7I,IAAAhhC,IAOAu6K,EAAA35L,UAAAo7L,UAAA,WACA,IAAAjtL,EAAAjN,KAAAqwD,SACAuoI,EAAA54L,KAAA24L,OACA5xJ,EAAA95B,EAAA6/C,UACA8rI,EAAA9rI,UACAjS,UAAA9T,EAAAvmB,cAMAi4K,EAAA35L,UAAAy5L,WAAA,WACA,IAAAtrL,EAAAjN,KAAAqwD,SACAuoI,EAAA54L,KAAA24L,OACA,GAAA1rL,EAAAwhD,cAAAmqI,EAAAnqI,aAAA,CAGA,IAAAyoB,EAA2DjqE,EAAA4/C,UAC3D9lB,EAAA95B,EAAA6/C,UACAqtI,EAAAvB,EAAA9rI,UACAhsC,EAAAimB,EAAAwU,cACAoP,EAAA3qD,KAAA84L,YACA/hH,EAAA/2E,KAAA84L,YAAA7iH,aACA/3D,EAAA6oB,EAAAgX,gBAAAm5B,GACAojH,EAAAH,EAAA9+I,gBACAsmE,EAAyB5hG,GAAa7B,GACtCujG,EAAuBxhG,GAAW/B,GAElCq8K,EAAAv6L,KAAAw6L,2BAAA15K,EAAA6gG,GACAh3D,EAAAqrB,YAAAukH,GAEAxjH,IACAA,EAAAx7D,MAAA5P,MAAAtM,KAAA6L,KAAAy2G,EAAA,GAAAF,EAAA,IAAA64E,GAAA,KACAvjH,EAAAx7D,MAAA3a,OAAAvB,KAAA6L,KAAAu2G,EAAA,GAAAE,EAAA,IAAA24E,GAAA,QASA7B,EAAA35L,UAAA07L,2BAAA,SAAA15K,EAAAlC,GACA,IAAA67K,EAGAr9I,EAFAp9C,KAAAqwD,SACAvD,UACAtsC,YASA,OARA48B,IAKYjH,GAJZskJ,EAAA,CACA77K,EAAA,GAAAw+B,EAAA,GACAx+B,EAAA,GAAAw+B,EAAA,IAE4Bt8B,GAChBg0B,GAAa2lJ,EAAAr9I,IAEzBq9I,GAMAhC,EAAA35L,UAAAk0D,aAAA,SAAAxjD,GACAA,EAAAgF,iBACAxU,KAAA8zD,iBAKA2kI,EAAA35L,UAAAg1D,cAAA,WACA9zD,KAAA4Y,QAAAm7C,UAAAC,OAAsCrD,IACtC3wD,KAAAmyD,WACYhQ,GAAWniD,KAAA0yD,eAAA1yD,KAAA6yD,QAGX1Q,GAAWniD,KAAA6yD,OAAA7yD,KAAA0yD,gBAEvB1yD,KAAAmyD,YAAAnyD,KAAAmyD,WAGA,IAAAymI,EAAA54L,KAAA24L,OACA34L,KAAAmyD,YAAAymI,EAAAnqI,eACAmqI,EAAAtqI,aACAtuD,KAAAu5L,eACY9lL,EAAUmlL,EAAQvqJ,GAAY,SAAA7+B,GAC1CxP,KAAAu4L,cACav4L,QAQby4L,EAAA35L,UAAAm1D,eAAA,WACA,OAAAj0D,KAAAuyD,cAOAkmI,EAAA35L,UAAA60D,eAAA,SAAArB,GACAtyD,KAAAuyD,eAAAD,IAGAtyD,KAAAuyD,aAAAD,EACAtyD,KAAA4Y,QAAAm7C,UAAAC,OAAA,qBACA1B,GAAAtyD,KAAAmyD,YACAnyD,KAAA8zD,kBAUA2kI,EAAA35L,UAAAo1D,aAAA,SAAA9B,GACApyD,KAAAuyD,cAAAvyD,KAAAmyD,aAAAC,GAGApyD,KAAA8zD,iBAOA2kI,EAAA35L,UAAAq1D,aAAA,WACA,OAAAn0D,KAAAmyD,YAOAsmI,EAAA35L,UAAA47L,eAAA,WACA,OAAA16L,KAAA24L,QAEAF,EAzZe,CA0ZbxoI,ICzeE0qI,GAAyB,WAC7B,IAAAtqL,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA0B7BkqL,GAAA,QAMWC,GAAK,CAChBx0K,QAAA,UACAy0K,SAAA,WACAC,SAAA,WACAC,OAAA,SACAC,GAAA,MAMAC,GAAA,QA8WO,SAASC,GAAMrpI,GACtB,IAAAlzB,EAAAkzB,EAAAlzB,WAKA5+B,KAAAo7L,WAJAx8J,EAIAA,EAAAswB,UAHA,KAKAlvD,KAAA+xD,iBAEe,IAAAspI,GA1VF,SAAAxqL,GAKb,SAAAyqL,EAAAtiL,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,GACA4qC,OAAAhxC,IAAAqG,EAAA2qC,UAAA3qC,EAAA2qC,UACA3qC,EAAAsiL,IAAA,+BAwDA,OAvDAvqL,EAAAH,EAAAxT,KAAA2C,KAAA,CACA4Y,QAAAhJ,SAAAC,cAAA,OACAu+C,OAAAn1C,EAAAm1C,QAAsC+sI,GACtC1pL,OAAAwH,EAAAxH,UACSzR,MAKTw7L,cAAA5rL,SAAAC,cAAA,OACAmB,EAAAwqL,cAAA53I,YAAA,SACA5yC,EAAA4H,QAAAgrC,YAAA,IAAoD4M,GACpDx/C,EAAA4H,QAAA6vC,YAAAz3C,EAAAwqL,eAKAxqL,EAAAoqL,WAAA,KAKApqL,EAAAyqL,eAAA7oL,IAAAqG,EAAAyiL,SAAAziL,EAAAyiL,SAAA,GAKA1qL,EAAAmiD,kBAAA,EAKAniD,EAAA2qL,oBAAA/oL,EAKA5B,EAAA2mL,cAAA,GACQxkL,EAAMnC,EAAQkH,EAAkB0iL,IAAA5pL,EAAA4qL,oBAAA5qL,GACxCA,EAAA6qL,SAAwC5iL,EAAA,OAAuB4hL,GAAKG,QAKpEhqL,EAAA8qL,UAAA7iL,EAAAsiL,MAAA,EAKAvqL,EAAA+qL,eAAA9iL,EAAAmhL,OAAA,EAKAppL,EAAAgrL,cAAA/iL,EAAAsuD,OAAA,EACAv2D,EAuQA,OAvUI2pL,GAASW,EAAAzqL,GAyEbyqL,EAAAx8L,UAAAmpB,SAAA,WACA,OAAAjoB,KAAAjC,IAAA68L,KAKAU,EAAAx8L,UAAA88L,oBAAA,WACA57L,KAAA+xD,kBAQAupI,EAAAx8L,UAAA+8L,SAAA,SAAAxyK,GACArpB,KAAA2I,IAAAiyL,GAAAvxK,IAKAiyK,EAAAx8L,UAAAizD,eAAA,WACA,IAAA7C,EAAAlvD,KAAAo7L,WACA,GAAAlsI,EAAA,CAOA,IAAAtuC,EAAAsuC,EAAAtuC,OACAwK,EAAA8jC,EAAA9jC,WACA/B,EAAArpB,KAAAioB,WACAg0K,EAAA5yK,GAA4CwxK,GAAKx0K,QACrCO,GAASP,QACTO,GAASL,OACrBkF,EAA8B/D,GAAkB0D,EAAA8jC,EAAAruC,WAAAD,EAAAq7K,GAChDC,EAAAl8L,KAAAy7L,UAAAhwK,EACA0wK,EAAA,GACA,GAAA9yK,GAAqBwxK,GAAKx0K,QAAA,CAC1B,IAAA+1K,EAAkCz1K,GAAgBC,GAASP,UAC3D61K,GAAAE,GACAA,EAAA,IACAD,EAAA,IACA1wK,GAAA,MAEAywK,EAAAE,GACAD,EAAA,IACA1wK,GAAA,IAGA0wK,EAAA,SAGA9yK,GAA0BwxK,GAAKC,SAC/BoB,EAAA,OACAC,EAAA,KACA1wK,GAAA,OAEAywK,EAAA,UACAC,EAAA,KACA1wK,GAAA,QAGA0wK,EAAA,KACA1wK,GAAA,UAGApC,GAA0BwxK,GAAKE,UAC/BtvK,GAAA,KACA0wK,EAAA,MAEA9yK,GAA0BwxK,GAAKG,OAC/BkB,EAAA,MACAC,EAAA,KACA1wK,GAAA,KAEAywK,EAAA,GACAC,EAAA,KACA1wK,GAAA,KAEAywK,EAAA,IACAC,EAAA,KAGAA,EAAA,KACA1wK,GAAA,KAGApC,GAA0BwxK,GAAKI,GAC/BiB,EAAA,OACAC,EAAA,KACA1wK,GAAA,OAEAywK,EAAA,UACAC,EAAA,KACA1wK,GAAA,YAGA0wK,EAAA,KACA1wK,GAAA,WAIYvR,GAAM,MAIlB,IAFA,IACAovB,EAAA39B,EAAA0wL,EAgBApE,EAjBA/6L,EAAA,EAAAmC,KAAAO,MAAAP,KAAAC,IAAAU,KAAAy7L,UAAAhwK,GAAApsB,KAAAC,IAAA,OAEA,CACA+8L,EAAAh9L,KAAAO,MAAA1C,EAAA,GACA,IAAAm3C,EAAAh1C,KAAA8C,IAAA,GAAAk6L,GAGA,GAFA/yJ,EAAA4xJ,IAAAh+L,EAAA,QAAAm3C,EACA1oC,EAAAtM,KAAAw1B,MAAAyU,EAAA7d,GACAtgB,MAAAQ,GAGA,OAFA3L,KAAA4Y,QAAA2C,MAAAq4C,QAAA,YACA5zD,KAAAmzD,kBAAA,GAGA,GAAAxnD,GAAA3L,KAAAy7L,UACA,QAEAv+L,EAIA+6L,EADAj4L,KAAA87L,UACA97L,KAAAs8L,eAAA3wL,EAAA29B,EAAA6yJ,GAGA7yJ,EAAA8K,QAAAioJ,EAAA,GAAAA,EAAA,OAAAF,EAEAn8L,KAAA23L,eAAAM,IACAj4L,KAAAw7L,cAAA3nI,UAAAokI,EACAj4L,KAAA23L,cAAAM,GAEAj4L,KAAA27L,gBAAAhwL,IACA3L,KAAAw7L,cAAAjgL,MAAA5P,QAAA,KACA3L,KAAA27L,eAAAhwL,GAEA3L,KAAAmzD,mBACAnzD,KAAA4Y,QAAA2C,MAAAq4C,QAAA,GACA5zD,KAAAmzD,kBAAA,QApHAnzD,KAAAmzD,mBACAnzD,KAAA4Y,QAAA2C,MAAAq4C,QAAA,OACA5zD,KAAAmzD,kBAAA,IA4HAmoI,EAAAx8L,UAAAw9L,eAAA,SAAA3wL,EAAAukB,EAAAisK,GAKA,IAJA,IAAAI,EAAA,OAAAl9L,KAAAw1B,MAAA70B,KAAAw8L,yBAAA9kF,iBACA+kF,EAAA,GACAC,EAAA/wL,EAAA3L,KAAA+7L,eACAY,EAAA,UACAz/L,EAAA,EAAuBA,EAAA8C,KAAA+7L,eAAyB7+L,IAChD,IAAAA,GAEAu/L,EAAA37L,KAAAd,KAAA48L,aAAA,WAAA1/L,IAEAu/L,EAAA37L,KAAA,sDAIA47L,EAAA,wBACAC,EAAA,YAGA38L,KAAA48L,aAAA,WAAA1/L,IAEAA,EAAA,UAAA8C,KAAA+7L,eACA/7L,KAAA68L,eAAA3/L,EAAAyO,GAAA,EAAAukB,EAAAisK,GACA,IACA,UACAj/L,IAAA8C,KAAA+7L,eAAA,GAEAU,EAAA37L,KAAAd,KAAA68L,eAAA3/L,EAAA,EAAAyO,GAAA,EAAAukB,EAAAisK,IAIAQ,EADA,YAAAA,EACA,UAGA,UAmBA,MALA,gCAVA38L,KAAAg8L,cACA,4CAEArwL,EAAA,QACA4wL,EACA,SAGA,IAKAE,EAAAztK,KAAA,IACA,UASAssK,EAAAx8L,UAAA89L,aAAA,SAAAvgK,EAAAn/B,GAEA,4DAEAm/B,EAAA,UAHA,aAAAA,EAAA,OAIA,eAYAi/J,EAAAx8L,UAAA+9L,eAAA,SAAA3/L,EAAAyO,EAAAmxL,EAAA5sK,EAAAisK,GACA,IACAY,GADA,IAAA7/L,EAAA,EAAAmC,KAAAw1B,MAAA3E,EAAAlwB,KAAA+7L,eAAA7+L,EAAA,WACA,IAAAA,EAAA,OAAAi/L,GAGA,8DAFA,IAAAj/L,GAAA,EAAAyO,EAAA3L,KAAA+7L,gBAAA,GAKA,mBACA,IAAA7+L,EAAA,kCALA,IAAAA,EAAA,EAAAyO,EAAA3L,KAAA+7L,eAAA,GAMA,aACAe,EAAAnxL,EAAA,oBAEAoxL,EACA,UAMAzB,EAAAx8L,UAAA09L,sBAAA,WACA,IAAA37K,EAAA7gB,KAAAqwD,SAAAvD,UAAAzR,gBAEA2hJ,EAAAh9L,KAAAo7L,WAAAhwK,WAAAlD,mBAEA,OAAA4nC,WAAAjvC,EAAA3T,YAAA8vL,EADA,OAFA,WAKA1B,EAxUa,CAyUXrrI,IClZEgtI,GAAyB,WAC7B,IAAA5sL,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GA8B7BwsL,GAAA,CACAC,SAAA,EACAC,WAAA,GAsSO,SAASC,GAAMvrI,GACtB,GAAAA,EAAAlzB,WAAA,CAGA5+B,KAAAs9L,oBACAt9L,KAAAu9L,cAEA,IAAAjjH,EAAAxoB,EAAAlzB,WAAAswB,UAAAruC,WACA7gB,KAAAw9L,mBAAAljH,EACAt6E,KAAAy9L,kBAAAnjH,IAEe,IAAAojH,GA9RD,SAAA7sL,GAKd,SAAA8sL,EAAA3kL,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,IACAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA4Y,QAAAhJ,SAAAC,cAAA,OACAu+C,OAAAn1C,EAAAm1C,QAAsCivI,MAC7Br9L,MAKTktC,kBAAA,GAOAl8B,EAAAwsL,wBAAA5qL,EAQA5B,EAAA4sL,WAAAV,GAAAC,SAKAnsL,EAAAi8B,UAKAj8B,EAAA6sL,aAAA,EAKA7sL,EAAA8sL,YAAA,EAKA9sL,EAAA+sL,QAKA/sL,EAAAgtL,QAOAhtL,EAAAitL,WAAA,KAMAjtL,EAAAssL,oBAAA,EAKAtsL,EAAA6jD,eAAAjiD,IAAAqG,EAAAqlB,SAAArlB,EAAAqlB,SAAA,IACA,IAAAslB,OAAAhxC,IAAAqG,EAAA2qC,UAAA3qC,EAAA2qC,UAAA,gBACAs6I,EAAAtuL,SAAAC,cAAA,UACAquL,EAAA1vI,aAAA,iBACA0vI,EAAAt6I,YAAA,UAAyD4M,GACzD,IAAA2tI,EAAAntL,EAAA4H,QAaA,OAZAulL,EAAAv6I,YAAA,IAAuD4M,GAAkB,IAASE,GAClFytI,EAAA11I,YAAAy1I,GAKAltL,EAAAotL,SAAA,IAA6BlzJ,GAAmBizJ,GACxChrL,EAAMnC,EAAAotL,SAAiBn9J,GAAgBX,YAAAtvB,EAAAqtL,oBAAArtL,GACvCmC,EAAMnC,EAAAotL,SAAiBn9J,GAAgBZ,YAAArvB,EAAAstL,mBAAAttL,GACvCmC,EAAMnC,EAAAotL,SAAiBn9J,GAAgBV,UAAAvvB,EAAAutL,kBAAAvtL,GACvCmC,EAAMgrL,EAAmB/oL,EAASK,MAAAzE,EAAAwtL,sBAAAxtL,GAClCmC,EAAM+qL,EAAe9oL,EAASK,MAAQrB,GAC9CpD,EA+KA,OA1QIisL,GAASU,EAAA9sL,GAgGb8sL,EAAA7+L,UAAAkV,gBAAA,WACAhU,KAAAo+L,SAAArqL,UACAlD,EAAA/R,UAAAkV,gBAAA3W,KAAA2C,OAKA29L,EAAA7+L,UAAAmrD,OAAA,SAAAh9C,GACA4D,EAAA/R,UAAAmrD,OAAA5sD,KAAA2C,KAAAiN,GACAA,GACAA,EAAAmhD,UAUAuvI,EAAA7+L,UAAAy+L,YAAA,WACA,IAAAjxJ,EAAAtsC,KAAA4Y,QACA6lL,EACAnyJ,EAAAsV,YADA68I,EACAnyJ,EAAA0V,aAEA08I,EAA2CpyJ,EAAA,kBAC3CujB,EAAAnS,iBAAAghJ,GACAC,EAAAD,EAAA98I,YACAkO,WAAAD,EAAA,aACAC,WAAAD,EAAA,YACA+uI,EAAAF,EAAA18I,aACA8N,WAAAD,EAAA,WACAC,WAAAD,EAAA,cACA7vD,KAAAi+L,WAAA,CAAAU,EAAAC,GACAH,KACAz+L,KAAA49L,WAAAV,GAAAE,WACAp9L,KAAA89L,YAAAW,EAAAE,IAGA3+L,KAAA49L,WAAAV,GAAAC,SACAn9L,KAAA69L,aAAAY,EAAAG,GAEA5+L,KAAAs9L,oBAAA,GAMAK,EAAA7+L,UAAA0/L,sBAAA,SAAAhvL,GACA,IAAAu3B,EAAA/mC,KAAAqwD,SAAAvD,UACA+xI,EAAA7+L,KAAA8+L,qBAAAtvL,EAAAo5D,QAAA5oE,KAAAi+L,WAAA,KAAAzuL,EAAAq5D,QAAA7oE,KAAAi+L,WAAA,MACAp9K,EAAA7gB,KAAA++L,0BAAAF,GACA9jJ,EAAAhU,EAAAoa,mBAAApa,EAAAqX,qBAAAv9B,IACAkmB,EAAAyU,QAAA,CACAT,OACAzc,SAAAt+B,KAAA60D,UACA7Y,OAAoBlF,MAQpB6mJ,EAAA7+L,UAAAu/L,oBAAA,SAAA7uL,GACA,IAAAxP,KAAAitC,WAAAz9B,EAAA0vB,cAAAztB,SAAAzR,KAAA4Y,QAAAwoE,kBAAA,CACA,IAAAxoE,EAAiD5Y,KAAA4Y,QAAA,kBAKjD,GAJA5Y,KAAAqwD,SAAAvD,UAAA9L,mBACAhhD,KAAA+9L,QAAAvuL,EAAA8zB,QAAAwsB,WAAAl3C,EAAA2C,MAAAywC,MACAhsD,KAAAg+L,QAAAxuL,EAAA+zB,QAAAusB,WAAAl3C,EAAA2C,MAAA0wC,KACAjsD,KAAAitC,WAAA,EACA,IAAAjtC,KAAAktC,kBAAAntC,OAAA,CACA,IAAAi/L,EAAAh/L,KAAAs+L,mBACAr4L,EAAAjG,KAAAu+L,kBACAv+L,KAAAktC,kBAAApsC,KAA4CqS,EAAMvD,SAAWwF,EAASc,UAAA8oL,EAAAh/L,MAAyBmT,EAAMvD,SAAWqxB,GAAgBZ,YAAA2+J,EAAAh/L,MAA2BmT,EAAMvD,SAAWwF,EAASgB,QAAAnQ,EAAAjG,MAAsBmT,EAAMvD,SAAWqxB,GAAgBV,UAAAt6B,EAAAjG,UAU5O29L,EAAA7+L,UAAAw/L,mBAAA,SAAA9uL,GACA,GAAAxP,KAAAitC,UAAA,CACA,IAAA7qB,EAAA5S,EAAA8zB,QAAAtjC,KAAA+9L,QACA17K,EAAA7S,EAAA+zB,QAAAvjC,KAAAg+L,QACAa,EAAA7+L,KAAA8+L,qBAAA18K,EAAAC,GACAriB,KAAAw9L,mBAAAx9L,KAAA++L,0BAAAF,GACA7+L,KAAAqwD,SAAAvD,UAAAhS,cAAA96C,KAAAw9L,sBAQAG,EAAA7+L,UAAAy/L,kBAAA,SAAA/uL,GACAxP,KAAAitC,YACAjtC,KAAAqwD,SAAAvD,UACA7L,iBACAjhD,KAAAitC,WAAA,EACAjtC,KAAA+9L,aAAAnrL,EACA5S,KAAAg+L,aAAAprL,EACA5S,KAAAktC,kBAAAzzB,QAA2ClG,GAC3CvT,KAAAktC,kBAAAntC,OAAA,IASA49L,EAAA7+L,UAAA2+L,kBAAA,SAAAnjH,GACA,IAAAj+C,EAAAr8B,KAAAi/L,0BAAA3kH,GACAokH,EAA2C1+L,KAAA4Y,QAAA,kBAC3C5Y,KAAA49L,YAAAV,GAAAE,WACAsB,EAAAnjL,MAAAywC,KAAAhsD,KAAA89L,YAAAzhK,EAAA,KAGAqiK,EAAAnjL,MAAA0wC,IAAAjsD,KAAA69L,aAAAxhK,EAAA,MAaAshK,EAAA7+L,UAAAggM,qBAAA,SAAAh/L,EAAA0e,GAQA,OAAe6F,GANfrkB,KAAA49L,aAAAV,GAAAE,WACAt9L,EAAAE,KAAA89L,YAGAt/K,EAAAxe,KAAA69L,aAEoB,MAUpBF,EAAA7+L,UAAAigM,0BAAA,SAAA1iK,GAEA,OADAr8B,KAAAqwD,SAAAvD,UAAAlO,+BACAp1C,CAAA,EAAA6yB,IAWAshK,EAAA7+L,UAAAmgM,0BAAA,SAAA3kH,GAEA,OAAej2D,GAAK,EADpBrkB,KAAAqwD,SAAAvD,UAAAhO,+BACoBt1C,CAAA8wE,GAAA,MAEpBqjH,EA3Qc,CA4QZ1tI,IC/TEivI,GAAyB,WAC7B,IAAA7uL,EAAA,SAAA7S,EAAAoJ,GAIA,OAHAyJ,EAAAzS,OAAA4S,gBACA,CAAcC,UAAA,cAAgBrE,OAAA,SAAA5O,EAAAoJ,GAAsCpJ,EAAAiT,UAAA7J,IACpE,SAAApJ,EAAAoJ,GAA6B,QAAA5H,KAAA4H,IAAA7H,eAAAC,KAAAxB,EAAAwB,GAAA4H,EAAA5H,MAC7BxB,EAAAoJ,IAEA,gBAAApJ,EAAAoJ,GAEA,SAAA8J,IAAuB1Q,KAAA2Q,YAAAnT,EADvB6S,EAAA7S,EAAAoJ,GAEApJ,EAAAsB,UAAA,OAAA8H,EAAAhJ,OAAAY,OAAAoI,IAAA8J,EAAA5R,UAAA8H,EAAA9H,UAAA,IAAA4R,IAV6B,GAwFdyuL,GAlDC,SAAAtuL,GAKhB,SAAAuuL,EAAApmL,GACA,IAAAhI,EAAAhR,KACAiZ,EAAAD,GAAA,IACAhI,EAAAH,EAAAxT,KAAA2C,KAAA,CACA4Y,QAAAhJ,SAAAC,cAAA,OACA4B,OAAAwH,EAAAxH,UACSzR,MAKTke,OAAAjF,EAAAiF,OAAAjF,EAAAiF,OAAA,KACA,IAAA0lC,OAAAhxC,IAAAqG,EAAA2qC,UAAA3qC,EAAA2qC,UAAA,iBACAgP,OAAAhgD,IAAAqG,EAAA25C,MAAA35C,EAAA25C,MAAA,IACAJ,OAAA5/C,IAAAqG,EAAAu5C,SAAAv5C,EAAAu5C,SAAA,gBACAlwB,EAAA1yB,SAAAC,cAAA,UACAyyB,EAAAksB,aAAA,iBACAlsB,EAAAywB,MAAAP,EACAlwB,EAAAmmB,YAAA,iBAAAmK,EAAAhjD,SAAA4lD,eAAA5C,MACQz/C,EAAMmvB,EAASltB,EAASK,MAAAzE,EAAAgiD,aAAAhiD,GAChC,IAAAiiD,EAAArP,EAAA,IAA2C4M,GAAkB,IAASE,GACtE93C,EAAA5H,EAAA4H,QAGA,OAFAA,EAAAgrC,UAAAqP,EACAr6C,EAAA6vC,YAAAnmB,GACAtxB,EAmBA,OA/CIkuL,GAASE,EAAAvuL,GAkCbuuL,EAAAtgM,UAAAk0D,aAAA,SAAAxjD,GACAA,EAAAgF,iBACAxU,KAAAq/L,sBAKAD,EAAAtgM,UAAAugM,mBAAA,WACA,IACAt4J,EADA/mC,KAAAqwD,SACAvD,UACA5uC,EAAAle,KAAAke,OAAAle,KAAAke,OAAA6oB,EAAAnL,gBAAA5T,YACA+e,EAAAmY,IAAAhhC,IAEAkhL,EAhDgB,CAiDdnvI,IC+LFqvI,GAAA,CAEA7yL,MAAA,GACA80D,MAAA,GACAg+H,UAAA,GACAv1I,QAAA,GACAprC,WAAA,GACAo9B,OAAA,GACA/P,OAAA,IACAqzJ,GAAArzJ,OAAAytB,UAAA,GACA4lI,GAAAphL,OAAA,GACAohL,GAAAE,cAAA,GACAF,GAAAxnH,OAAA,GACAwnH,GAAAxnH,OAAA56B,OAAA,GACAoiJ,GAAAllD,KAAA,GACAklD,GAAAG,IAAA,GACAH,GAAAp1I,YAAA,GACAo1I,GAAAr7I,MAAA,GACAq7I,GAAAI,gBAAA,GACAJ,GAAA12F,KAAA,GACA02F,GAAA12F,KAAAxiF,MAAA,GACAk5K,GAAA12F,KAAA+2F,MAAA,GACAL,GAAAlxI,OAAA,GACAkxI,GAAAlxI,OAAA1M,OAAA,GACA49I,GAAAl8H,SAAA,GACAk8H,GAAAl8H,SAAA1hB,OAAA,GACA49I,GAAAl8H,SAAAw8H,MAAA,GACAN,GAAAv+K,KAAA,GACAu+K,GAAAhyL,OAAA,GACAgyL,GAAAO,OAAA,GACAP,GAAA/jL,MAAA,GACA+jL,GAAA/jL,MAAA8mD,eAAA,GACAi9H,GAAA32F,SAAA,GACA22F,GAAAQ,KAAA,GACAR,GAAAM,MAAA,GACAN,GAAAngH,IAAA,GACAmgH,GAAAxmL,WAAgBD,EAChBymL,GAAA/kL,QAAaD,EACbglL,GAAArkK,YAAiBD,GACjBskK,GAAA/hK,QAAaD,GACbgiK,GAAAxrH,IAASD,GACTyrH,GAAA1hM,OAAY0a,EACZgnL,GAAAxoL,WAAgBD,EAChByoL,GAAAxoL,WAAAipL,QhTlMO,SAAAthM,GACP,GAAA2N,MAAA+K,QAAA1Y,GACA,QAAAvB,EAAA,EAAA0U,EAAAnT,EAAAsB,OAAwC7C,EAAA0U,IAAQ1U,EACpCqW,EAAa9U,EAAAvB,SAIjBqW,EAAyD,IgT4LjE+rL,GAAA1qH,QAAaD,GACb2qH,GAAAz4I,aAAkBD,GAClB04I,GAAAxnJ,KAAUD,GACVynJ,GAAA7yL,MAAAuzL,W3S7IO,SAAAz7L,EAAA07L,GACP,IAEA/iM,EAFA6C,EAAAwE,EAAAxE,OACAyc,EAAApQ,MAAA7H,EAAAxE,QAEA,IAAA7C,EAAA,EAAeA,EAAA6C,EAAY7C,IAC3Bsf,EAAAtf,GAAA,CAAkBqS,MAAArS,EAAAiB,MAAAoG,EAAArH,IAKlB,IAHAsf,EAAA5Z,KAAA,SAAAzD,EAAAyH,GACA,OAAAq5L,EAAA9gM,EAAAhB,MAAAyI,EAAAzI,QAAAgB,EAAAoQ,MAAA3I,EAAA2I,QAEArS,EAAA,EAAeA,EAAAqH,EAAAxE,OAAgB7C,IAC/BqH,EAAArH,GAAAsf,EAAAtf,GAAAiB,O2SmIAmhM,GAAA/9H,MAAAa,QAAmBA,GACnBk9H,GAAA/9H,MAAAD,SAAoBA,GACpBg+H,GAAAC,UAAAv8H,YAA2BA,GAC3Bs8H,GAAAt1I,QAAAiI,YAAyBD,GACzBstI,GAAAt1I,QAAAiI,YAAA7D,OAAgCyD,GAChCytI,GAAAt1I,QAAAkG,QAAqBD,GACrBqvI,GAAAt1I,QAAAgsI,WAAwBD,GACxBuJ,GAAAt1I,QAAAqtI,cAA2BD,GAC3BkI,GAAAt1I,QAAAqtI,cAAAjpI,OAAkC8oI,GAClCoI,GAAAt1I,QAAAyuI,YAAyBD,GACzB8G,GAAAt1I,QAAAyuI,YAAArqI,OAAgCiqI,GAChCiH,GAAAt1I,QAAA0K,OAAoBD,GACpB6qI,GAAAt1I,QAAA0K,OAAAtG,OAA2BiG,GAC3BirI,GAAAt1I,QAAAsxI,UAAuBD,GACvBiE,GAAAt1I,QAAAsxI,UAAAltI,OAA8B+sI,GAC9BmE,GAAAt1I,QAAAkL,KAAkBD,GAClBqqI,GAAAt1I,QAAA2zI,WAAwBD,GACxB4B,GAAAt1I,QAAA2zI,WAAAvvI,OAA+BivI,GAC/BiC,GAAAt1I,QAAAo1I,aAA0BD,GAC1BG,GAAAt1I,QAAA6L,SAAsBA,GACtBypI,GAAA1gL,WAAA41C,IAAoB1f,GACpBwqJ,GAAA1gL,WAAAshL,e7OvNO,SAAA5qJ,GACP,gBAKA12B,GACA,OAAAg4B,GAAAh4B,EAAA02B,K6OiNAgqJ,GAAA1gL,WAAAk5D,OAAuBjiC,GACvBypJ,GAAA1gL,WAAAkF,OAAuBqyB,GACvBmpJ,GAAA1gL,WAAAuhL,a7OpBO,SAAAvhL,EAAA02B,GACP,OAAA12B,EACAu2B,GAAA,KAAAv2B,EAAA,GAAA02B,GAAA,IACAH,GAAA,KAAAv2B,EAAA,GAAA02B,GAGA,I6OeAgqJ,GAAA1gL,WAAAg4B,WAA2BA,GAC3B0oJ,GAAAtjJ,OAAAnF,OAAmBA,GACnByoJ,GAAAtjJ,OAAAlF,QAAoBA,GACpBwoJ,GAAAtjJ,OAAAjF,SAAqBA,GACrBuoJ,GAAAtjJ,OAAAhF,OAAmBA,GACnBsoJ,GAAAtjJ,OAAAokJ,U5OrTO,SAAAhiM,GACP,OAAAA,EAAA,GACA24C,GAAA,EAAA34C,GAGA,EAAA24C,GAAA,GAAA34C,EAAA,M4OiTAkhM,GAAArzJ,OAAAytB,UAAA3C,WAAiCA,GACjCuoI,GAAArzJ,OAAAytB,UAAA1C,iBAAuCA,GACvCsoI,GAAArzJ,OAAAytB,UAAAvC,OAA6BA,GAC7BmoI,GAAArzJ,OAAAytB,UAAA2mI,MzNrSO,SAAA/yI,GACP,OAAAA,EAAAlqD,MAAmC88B,GAAmBzqB,OyNqStD6pL,GAAArzJ,OAAAytB,UAAA4mI,YzNjPO,SAAAhzI,GACP,OAAAA,EAAAlqD,MAAmC88B,GAAmBxqB,UyNiPtD4pL,GAAArzJ,OAAAytB,UAAArM,MAA4B4J,GAC5BqoI,GAAArzJ,OAAAytB,UAAA9B,UAAgCA,GAChC0nI,GAAArzJ,OAAAytB,UAAArC,MAA4BA,GAC5BioI,GAAArzJ,OAAAytB,UAAAlC,eAAqCA,GACrC8nI,GAAArzJ,OAAAytB,UAAA6mI,QzNxJO,SAAAjzI,GACP,IAAAkzI,EAA4E,EAAAx/J,aAG5E,OAFI9mB,OAAMtH,IAAA4tL,EAAA,IAEV,QAAAA,EAAAv9J,ayNqJAq8J,GAAArzJ,OAAAytB,UAAA+mI,wBzN7NO,SAAAnzI,GACP,IAAApuB,EAAuEouB,EAAA,cACvE,OAAApuB,EAAAkI,SACSxH,GAAGV,EAAAoI,QAAApI,EAAAiI,WACZjI,EAAAmI,UyN0NAi4J,GAAArzJ,OAAAytB,UAAAx0B,YAAkCoyB,GAClCgoI,GAAArzJ,OAAAytB,UAAA7B,cAAoCA,GACpCynI,GAAArzJ,OAAAytB,UAAAjC,aAAmCA,GACnC6nI,GAAArzJ,OAAAytB,UAAAnC,YAAkCA,GAClC+nI,GAAArzJ,OAAAytB,UAAAhC,kBAAwCA,GACxC4nI,GAAArzJ,OAAAytB,UAAAgnI,UzN5KO,SAAApzI,GACP,IAAAkzI,EAA4E,EAAAx/J,aAG5E,OAFI9mB,OAAMtH,IAAA4tL,EAAA,IAEV,UAAAA,EAAAv9J,ayNyKAq8J,GAAAphL,OAAAoE,eAA2BA,GAC3Bg9K,GAAAphL,OAAAF,eAA2BA,GAC3BshL,GAAAphL,OAAAnW,OAAmBsW,GACnBihL,GAAAphL,OAAAS,mBAA+BA,GAC/B2gL,GAAAphL,OAAAY,eAA2BA,GAC3BwgL,GAAAphL,OAAAW,WAAuBA,GACvBygL,GAAAphL,OAAAC,YAAwBA,GACxBmhL,GAAAphL,OAAAtB,OAAmB8C,GACnB4/K,GAAAphL,OAAA1E,OAAmBmG,GACnB2/K,GAAAphL,OAAAiC,QAAoBA,GACpBm/K,GAAAphL,OAAA6B,cAA0BA,GAC1Bu/K,GAAAphL,OAAA8B,eAA2BA,GAC3Bs/K,GAAAphL,OAAAsC,UAAsBA,GACtB8+K,GAAAphL,OAAAqC,UAAsBA,GACtB++K,GAAAphL,OAAA8D,gBAA4BA,GAC5Bs9K,GAAAphL,OAAA2uC,QxS+KO,SAAA3uC,GACP,OAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KwS/KAohL,GAAAphL,OAAAgC,WAAuBA,GACvBo/K,GAAAphL,OAAA+B,YAAwBA,GACxBq/K,GAAAphL,OAAAoC,SAAqBA,GACrBg/K,GAAAphL,OAAAyY,WAAuBzU,GACvBo9K,GAAAphL,OAAAlM,QAAoBqO,GACpBi/K,GAAAE,cAAAvnH,IAAuBe,GACvBsmH,GAAAxnH,OAAAs6E,SAAqBD,GACrBmtC,GAAAxnH,OAAAv9D,QAAoBw4G,GACpBusE,GAAAxnH,OAAAymF,IAAgBC,GAChB8gC,GAAAxnH,OAAA+mF,KAAiBW,GACjB8/B,GAAAxnH,OAAAghF,KAAiBwF,GACjBghC,GAAAxnH,OAAA4nF,MAAkBE,GAClB0/B,GAAAxnH,OAAAipF,IAAgBuD,GAChBg7B,GAAAxnH,OAAAmjD,QAAoBD,GACpBskE,GAAAxnH,OAAAouF,IAAgBD,GAChBq5B,GAAAxnH,OAAA4+B,SAAqBD,GACrB6oF,GAAAxnH,OAAAoyF,IAAgB6J,GAChBurB,GAAAxnH,OAAAg9F,IAAgBD,GAChByqB,GAAAxnH,OAAA8+F,OAAmBC,GACnByoB,GAAAxnH,OAAAogG,SAAqBD,GACrBqnB,GAAAxnH,OAAAogG,SAAAV,aAAkCA,GAClC8nB,GAAAxnH,OAAAogG,SAAAR,aAAkCA,GAClC4nB,GAAAxnH,OAAAogG,SAAAhB,aAAkCA,GAClCooB,GAAAxnH,OAAAogG,SAAAX,aAAkCA,GAClC+nB,GAAAxnH,OAAA0gG,SAAqBe,GACrB+lB,GAAAxnH,OAAAkpG,IAAgBuD,GAChB+a,GAAAxnH,OAAAkpG,IAAA2f,Yd4fO,SAAAzjJ,GACP,IAAA03G,EAAgBx2E,GAAeqiG,GAAA,UAE/B,OADAyC,GAAAtuB,EAAA13G,EAAA,IACA03G,Gc9fA0qC,GAAAxnH,OAAAgwG,IAAgBc,GAChB0W,GAAAxnH,OAAA+xG,gBAA4BsF,GAC5BmQ,GAAAxnH,OAAAw3G,kBAA8BD,GAC9BiQ,GAAAxnH,OAAA+6G,iBAA6BoC,GAC7BqK,GAAAxnH,OAAA56B,OAAAm9H,KAAwBD,GACxBklB,GAAAxnH,OAAA56B,OAAAy9H,SAA4BD,GAC5B4kB,GAAAxnH,OAAA56B,OAAAg+H,OAA0BD,GAC1BqkB,GAAAxnH,OAAA56B,OAAAy+H,QAA2BD,GAC3B4jB,GAAAxnH,OAAA56B,OAAA4+H,YAA+BD,GAC/ByjB,GAAAxnH,OAAA56B,OAAA++H,qBAAwCD,GACxCsjB,GAAAxnH,OAAA56B,OAAAk/H,WAA8BD,GAC9BmjB,GAAAxnH,OAAA56B,OAAAq/H,UAA6BD,GAC7BgjB,GAAAxnH,OAAA56B,OAAA0/H,OAA0BD,GAC1B2iB,GAAAxnH,OAAA56B,OAAAogI,OAA0BD,GAC1BiiB,GAAAxnH,OAAA56B,OAAAugI,SAA4BD,GAC5B8hB,GAAAxnH,OAAA56B,OAAA0gI,kBAAqCD,GACrC2hB,GAAAxnH,OAAA56B,OAAA6gI,IAAuBD,GACvBwhB,GAAAxnH,OAAA56B,OAAAghI,WAA8BD,GAC9BqhB,GAAAxnH,OAAA56B,OAAAmhI,GAAsBD,GACtBkhB,GAAAxnH,OAAA56B,OAAAshI,OAA0BD,GAC1B+gB,GAAAxnH,OAAA56B,OAAAuhI,IAAuBA,GACvB6gB,GAAAxnH,OAAA56B,OAAAiuD,KAAwBwzE,GACxB2gB,GAAAxnH,OAAA56B,OAAA0jJ,QflPO,SAAA7lB,EAAAyB,EAAAC,GACP,WAAeH,GAASvB,EAAAyB,EAAAC,IekPxB6iB,GAAAxnH,OAAA56B,OAAA1Q,Sf3WO,SAAiB0uF,EAAAlgH,EAAAugJ,GACxB,WAAemf,GAAQx/C,EAAAlgH,EAAAugJ,Ie2WvB+jC,GAAAxnH,OAAA56B,OAAA2jJ,OfrNO,SAAA9lB,EAAAx+J,EAAAtW,GACP,WAAeg1K,GAAMF,EAAAx+J,EAAAtW,IeqNrBq5L,GAAAxnH,OAAA56B,OAAA4jJ,QfrUO,SAAA/lB,EAAAO,EAAAC,GACP,WAAeG,GAAOX,EAAAO,EAAAC,IeqUtB+jB,GAAAxnH,OAAA56B,OAAA6jJ,YfzRO,SAAAhmB,EAAAO,GACP,WAAeO,GAAWd,EAAAO,IeyR1BgkB,GAAAxnH,OAAA56B,OAAA8jJ,qBf/QO,SAAAjmB,EAAAO,GACP,WAAeU,GAAoBjB,EAAAO,Ie+QnCgkB,GAAAxnH,OAAA56B,OAAAvmB,WflWO,SAAmBukG,EAAAlgH,EAAAugJ,GAC1B,WAAe4gB,GAAUjhD,EAAAlgH,EAAAugJ,IekWzB+jC,GAAAxnH,OAAA56B,OAAA+jJ,OftQO,SAAAlmB,GACP,WAAesC,GAAMtC,IesQrBukB,GAAAxnH,OAAA56B,OAAAgkJ,SfnTO,SAAAnmB,EAAAO,GACP,WAAekC,GAAQzC,EAAAO,IemTvBgkB,GAAAxnH,OAAA56B,OAAAikJ,kBfzSO,SAAApmB,EAAAO,GACP,WAAeqC,GAAiB5C,EAAAO,IeyShCgkB,GAAAxnH,OAAA56B,OAAAkkJ,KfzOO,SAAArmB,EAAA8B,EAAAC,EAAAC,EAAAC,EAAAzB,GACP,WAAeoB,GAAM5B,EAAA8B,EAAAC,EAAAC,EAAAC,EAAAzB,IeyOrB+jB,GAAAxnH,OAAA56B,OAAAmkJ,IfjZO,SAAA3nI,GACP,WAAeokH,GAAGpkH,IeiZlB4lI,GAAAxnH,OAAA56B,OAAAokJ,WflUO,SAAAvmB,EAAAO,EAAAC,GACP,WAAe0C,GAAUlD,EAAAO,EAAAC,IekUzB+jB,GAAAxnH,OAAA56B,OAAAqkJ,Gf9ZO,SAAAxnB,GACP,IAAAp/D,EAAA,OAAAxtG,OAAAf,MAAAtN,UAAA0C,MAAAnE,KAAAwU,YACA,WAAA6sK,SAAA5/K,UAAAJ,KAAAwD,MAA8Ck8K,GAAEzjE,Ke6ZhD2kF,GAAAxnH,OAAA56B,OAAAskJ,Of5VO,SAAAtmE,EAAAlgH,EAAAugJ,GACP,WAAegjB,GAAMrjD,EAAAlgH,EAAAugJ,Ie4VrB+jC,GAAAllD,KAAAxV,OAAiB0b,GACjBg/C,GAAAllD,KAAAhrH,SAAmBD,GACnBmwK,GAAAllD,KAAAvlB,mBAA6BD,GAC7B0qE,GAAAllD,KAAAxjB,WAAqBD,GACrB2oE,GAAAllD,KAAAllH,WAAqBD,GACrBqqK,GAAAllD,KAAA9iB,gBAA0BD,GAC1BioE,GAAAllD,KAAAjiB,WAAqBD,GACrBonE,GAAAllD,KAAA3hB,aAAuBD,GACvB8mE,GAAAllD,KAAA7kH,MAAgBD,GAChBgqK,GAAAllD,KAAAniH,QAAkBiB,GAClBomK,GAAAllD,KAAAniH,QAAAkB,SAA2BA,GAC3BmmK,GAAAllD,KAAAniH,QAAAsB,WAA6BA,GAC7B+lK,GAAAllD,KAAAniH,QAAAqB,WAA6BA,GAC7BgmK,GAAAllD,KAAAjpH,eAAyBD,GACzBouK,GAAAG,IAAA5/J,mBAA4BA,GAC5By/J,GAAAG,IAAA1/J,MAAeA,GACfu/J,GAAAp1I,YAAA4M,gBAAiCD,GACjCyoI,GAAAp1I,YAAAi1F,YAA6BD,GAC7BogD,GAAAp1I,YAAA+Q,QAAyBD,GACzBskI,GAAAp1I,YAAAiP,QAAyBD,GACzBomI,GAAAp1I,YAAA8P,WAA4BD,GAC5BulI,GAAAp1I,YAAA41F,kBAAmCD,GACnCy/C,GAAAp1I,YAAA6R,SAA0BD,GAC1BwjI,GAAAp1I,YAAA02F,KAAsBD,GACtB2+C,GAAAp1I,YAAA02F,KAAA6gD,U7D+dO,WACP,gBAAAxjL,EAAA6jI,GACA,IAAA5jI,EAAqBF,GAAwC,GAC7D0jL,EAAA,EACgB3hL,GAAa7B,GACb8B,GAAc9B,GACd+B,GAAW/B,GACXgC,GAAUhC,GACV6B,GAAa7B,KAE7BlD,EAAA8mI,EAOA,OANA9mI,EACAA,EAAA6W,eAAA6vK,GAGA1mL,EAAA,IAA2Bke,GAAOwoK,GAElC1mL,I6D/eAskL,GAAAp1I,YAAA02F,KAAA+gD,qB7DscO,SAAAloK,EAAAC,GACP,gBAAAzb,EAAA6jI,GACA,IAAAlhI,EAA8C,KAC9C3a,EAA2C,KAC3Cof,EAAAhmB,KAAAK,KAA+B62C,GAAyB31B,EAAA3a,IACxD+U,EAAA8mI,GACYvoH,GAAU,IAAK+mH,GAAM1/H,GAAA6Y,GACjC1V,EAAA2V,EACA,IAAAA,EAAA,CACA,IAAA55B,EAAAmG,EAAA,GAAA2a,EAAA,GACApC,EAAAvY,EAAA,GAAA2a,EAAA,GACAmD,EAAA1kB,KAAA0qB,KAAAvL,EAAA1e,MAAA,EAAAT,KAAAslB,GAAA,GAGA,OADQmV,GAAW9e,EAAA4F,EAAAyE,EAAAtB,GACnB/I,I6DndAskL,GAAAp1I,YAAAm7F,OAAwBD,GACxBk6C,GAAAp1I,YAAAqM,YAA6BD,GAC7BgpI,GAAAp1I,YAAAwS,YAA6BD,GAC7B6iI,GAAAp1I,YAAA+S,aAA8BD,GAC9BsiI,GAAAp1I,YAAA89F,OAAwBD,GACxBu3C,GAAAp1I,YAAAmT,eAAgCD,GAChCkiI,GAAAp1I,YAAA8U,YAA6BD,GAC7BugI,GAAAp1I,YAAA0V,UAA2BD,GAC3B2/H,GAAAp1I,YAAA+N,QAAyBA,GACzBqnI,GAAAp1I,YAAAgjG,OAAwBD,GACxBqyC,GAAAp1I,YAAA+jG,KAAsBD,GACtBsxC,GAAAp1I,YAAA8lG,UAA2BD,GAC3BuvC,GAAAp1I,YAAA2L,SAA0BmK,GAC1Bs/H,GAAAr7I,MAAAX,KAAgBA,GAChBg8I,GAAAr7I,MAAAm8D,UAAqBA,GACrBk/E,GAAAr7I,MAAAo/D,SAAoBA,GACpBi8E,GAAAr7I,MAAA0xF,WAAsBA,GACtB2pD,GAAAr7I,MAAAmzF,UAAqBD,GACrBmoD,GAAAr7I,MAAAqB,MAAiBA,GACjBg6I,GAAAr7I,MAAAu4F,QAAmBD,GACnB+iD,GAAAr7I,MAAAqtC,MAAiB2xB,GACjBq8E,GAAAr7I,MAAAkN,MAAiBD,GACjBouI,GAAAr7I,MAAA41C,KAAgB8sB,GAChB24E,GAAAr7I,MAAAiqD,OAAkBioC,GAClBmpD,GAAAr7I,MAAA25F,YAAuBA,GACvB0hD,GAAAr7I,MAAA6qE,WAAsBmvB,GACtBqhD,GAAAI,gBAAA3+L,IAAyBo4E,GACzBmmH,GAAAI,gBAAAv0F,KAA0B/xB,GAC1BkmH,GAAAI,gBAAA9tJ,K1L9dO,SAAanpB,GACpB,gBAMAvK,EAAA2C,GACA,IAAAo4B,EAAAxwB,EAAAwzD,kBAAAp7D,GACA24D,EAAA/wD,EAAA2yD,0BAAAl9D,EAAA+6B,GAEAw0D,EAAA,GAEAn0B,EAAA,CAAArgC,EAAA,KACA,IAAAqgC,EAAA,GAAAE,EAAAj5E,KAA2C+4E,EAAA,IAAAE,EAAA/4E,OAAgC64E,EAAA,GAC3E,IAAAA,EAAA,GAAAE,EAAAh5E,KAA+C84E,EAAA,IAAAE,EAAA94E,OAAgC44E,EAAA,GAC/Em0B,EAAA3sG,KAAA2nB,EAAA+yD,mBAAAlC,IAGA,OAAAm0B,I0L4cA6xF,GAAA12F,KAAA9hF,WAAqBD,GACrBy4K,GAAA12F,KAAAxiF,MAAAO,gBAAgCA,GAChC24K,GAAA12F,KAAAx8E,wBAAkCA,GAClCkzK,GAAA12F,KAAA/8E,yBAAmCA,GACnCyzK,GAAA12F,KAAAz9E,cAAwBA,GACxBm0K,GAAA12F,KAAAn8E,WAAqBA,GACrB6yK,GAAA12F,KAAAg5F,W5RpLO,SAAAhjL,EAAAmnF,GACP,OAAW94E,GAASrO,EAAA,iBAAAhM,IAAAmzF,IAAA,c4RoLpBu5F,GAAA12F,KAAA7qG,IAAcutB,GACdg0K,GAAA12F,KAAAlhF,mBAA6BA,GAC7B43K,GAAA12F,KAAA57E,aAAuBA,GACvBsyK,GAAA12F,KAAA+2F,MAAA9wC,SCtfO,SAAiB8wC,GACxB,IAEAziM,EAAAsP,EAFAq1L,EAAAjkM,OAAAmP,KAAA4yL,EAAAmC,MACA59L,EAAA29L,EAAA9hM,OAEA,IAAA7C,EAAA,EAAeA,EAAAgH,IAAShH,EAAA,CACxB,IAAA6T,EAAA8wL,EAAA3kM,GACA,IAAaouB,GAAGva,GAAA,CAChB,IAAAgxL,EAAApC,EAAAmC,KAAA/wL,GACYoa,GAAa,IAAKtE,GAAU,CACxC9V,OACAsW,gBAAA06K,EAAAC,KACAn6K,cAAAk6K,EAAAE,SACA54K,MAAA04K,EAAA14K,UAIA,IAAAnsB,EAAA,EAAeA,EAAAgH,IAAShH,EAAA,CACxB,IAAAglM,EAAAL,EAAA3kM,GACAilM,EAAoB72K,GAAG42K,GACvB,IAAA11L,EAAA,EAAmBA,EAAAtI,IAASsI,EAAA,CAC5B,IAAA41L,EAAAP,EAAAr1L,GACA61L,EAAwB/2K,GAAG82K,GAC3B,IAAiBp3K,GAAYk3K,EAAAE,GAC7B,GAAAzC,EAAAmC,KAAAI,KAAAvC,EAAAmC,KAAAM,GACoBv2K,GAAwB,CAAAs2K,EAAAE,QAE5C,CACA,IAAA1+K,EAAAg8K,EAAAuC,EAAAE,GACoBh2K,GAAuB+1K,EAAAE,EAAA1+K,EAAA0I,QAAA1I,EAAA2I,aD2d3CgzK,GAAA12F,KAAA05F,S5R7KO,SAAA1jL,EAAAmnF,GACP,IAAAw8F,EAAiBt1K,GAASrO,OAAAhM,IAAAmzF,IAAA,yBAC1Bu0C,EAAAioD,EAAA,GAIA,OAHAjoD,GAAA,KAAAA,EAAA,OACAioD,EAAA,GAAoBz9K,GAAMw1H,EAAA,cAE1BioD,G4RwKAjD,GAAA12F,KAAAjlF,UAAoBsJ,GACpBqyK,GAAA12F,KAAA17E,gBAA0BA,GAC1BoyK,GAAAlxI,OAAA8U,cAA0BD,GAC1Bq8H,GAAAlxI,OAAA1M,OAAAoJ,WAA8B+b,GAC9By4H,GAAAlxI,OAAAo0I,elMnbO,SAAAhzL,EAAA9C,GACP,IAAA1G,EAAA0G,EAAAlL,MAAA,GAEA,OADIU,GAAcsN,EAAA0xD,sBAAA1/D,QAAAwE,GAClBA,GkMibAs5L,GAAAlxI,OAAAq0I,iBlMjcO,SAAAjzL,GACP,IAAAovB,EAAApvB,EAAAovB,WACAjb,EAAoB2J,GAAiB9d,EAAA0xD,sBAAA1/D,QAAAo9B,EAAA+tB,4BACrC,WAAe4c,GAAuB/5D,EAAAG,QAAAivB,EAAAmgB,WAAAngB,EAAA1gB,OAAAyF,EAAAib,EAAAswB,UAAApuC,WkM+btCw+K,GAAAlxI,OAAAs0I,UlMvdO,SAAA/yL,EAAAqJ,GACP,IAAA0oC,EAAA/xC,EAAA+xC,OACAzoC,EAAAD,GAAA,GACA+lC,EAAA9lC,EAAA8lC,YAA2Clf,GAC3C9e,EAAA9H,EAAA8H,KACAA,IACA2gC,EAAA/1C,MAAAoV,EAAA,GAAAg+B,EACA2C,EAAA9gD,OAAAmgB,EAAA,GAAAg+B,EACA2C,EAAAnmC,MAAA5P,MAAAoV,EAAA,QACA2gC,EAAAnmC,MAAA3a,OAAAmgB,EAAA,SAEA,IAAA7C,EAAA,KAAAwjC,EAAA/1C,MAAA+1C,EAAA9gD,QACA+iB,EAAoBuK,GzFtCpB,cyFsCkD6wB,KAClD,WAAewqB,GAAuB55D,EAAAovC,EAAA7gC,EAAAyF,EAAA,IkM2ctC27K,GAAAl8H,SAAA4P,UAAwBA,GACxBssH,GAAAl8H,SAAA1hB,OAAAwhE,WAAgCd,GAChCk9E,GAAAl8H,SAAA1hB,OAAAklE,UAA+BH,GAC/B64E,GAAAl8H,SAAA1hB,OAAAm8F,iBAAsC9L,GACtCutD,GAAAl8H,SAAA1hB,OAAA00F,YAAiCrG,GACjCuvD,GAAAl8H,SAAA1hB,OAAAw8F,gBAAqClL,GACrCssD,GAAAl8H,SAAAw8H,MAAAhkE,YAAgCA,GAChC0jE,GAAAv+K,KAAA0lC,OAAiBA,GACjB64I,GAAAhyL,OAAAy7F,SAAqBD,GACrBw2F,GAAAhyL,OAAAk+F,QAAoBD,GACpB+zF,GAAAhyL,OAAAklG,QAAoBD,GACpB+sF,GAAAhyL,OAAAuqG,KAAiBD,GACjB0nF,GAAAhyL,OAAAgkF,MAAkB4oB,GAClBolF,GAAAhyL,OAAA2tG,gBAA4BD,GAC5BskF,GAAAhyL,OAAA8uG,YAAwBM,GACxB4iF,GAAAhyL,OAAA2vG,cAA0BD,GAC1BsiF,GAAAhyL,OAAAkxG,YAAwBA,GACxB8gF,GAAAhyL,OAAA6xG,SAAqBD,GACrBogF,GAAAhyL,OAAA4yG,IAAgBD,GAChBq/E,GAAAhyL,OAAA4yG,IAAAF,YAA4BA,GAC5Bs/E,GAAAhyL,OAAAq7G,OAAmBA,GACnB22E,GAAAhyL,OAAAk2F,OAAmBD,GACnB+7F,GAAAhyL,OAAAs8G,OAAmBD,GACnB21E,GAAAhyL,OAAAusF,KAAiBwM,GACjBi5F,GAAAhyL,OAAA+8G,eAA2BD,GAC3Bk1E,GAAAhyL,OAAAs9G,UAAsBD,GACtB20E,GAAAhyL,OAAAo6F,UAAsBD,GACtB63F,GAAAhyL,OAAA09G,SAAqBD,GACrBu0E,GAAAhyL,OAAAu+G,QAAoBD,GACpB0zE,GAAAhyL,OAAA2/G,QAAoBD,GACpBsyE,GAAAhyL,OAAA4gG,OAAmBA,GACnBoxF,GAAAhyL,OAAAwhH,WAAuBM,GACvBkwE,GAAAhyL,OAAAojH,KAAiBD,GACjB6uE,GAAAhyL,OAAAojH,KAAAiyE,wBtG1SO,SAAAC,EAAAh2L,GACP,IACAzP,EAAYuf,GADZkmL,EAAA,eACgB,SAAA51G,EAAAz9E,EAAA9C,GAChB,OAAAugF,EAAA,YAAApgF,EAAA,QAEA,UAAAzP,EACA,YAEA,IACAggB,EADA0lL,EAAAD,EAAA,wBAIAzlL,EAFAhgB,EAAA,kBAAA4C,OAAA,EAEkBid,GAAS7f,EAAA,kBAD3B,eAAAyP,EAC2B,SAAAogF,EAAAz9E,EAAA9C,GAC3B,IAGAq2L,EAHoCpmL,GAAImmL,EAAA,SAAA3lL,GACxC,OAAAA,EAAA,YAAA8vE,EAAA,gBAEA,aACAm1G,EAA4B72K,GAAaw3K,EAAA/sJ,QAAA,gDACrBzqB,GAAaw3K,GACjCT,EAA4B/2K,GAAa1e,EAAA,YACzC,OAAAu1L,GAAAE,EAC2B51K,GAAU01K,EAAAE,GAGrCS,GAAAl2L,EAAA,YAK2B,SAAAogF,EAAAz9E,EAAA9C,GAC3B,OAAAugF,EAAA,eAAApgF,EAAA,YAKA,GAEA,IACAuQ,EAAA,GAEA,IAAAyvE,EAAsCzvF,EAAA,kBAAAggB,GAAA,cACtC2vE,EAAgD3vF,EAAA,kBAAAggB,GAAA,oBAChD26D,EAAmC36E,EAAA,UACnC,WAAAyP,IACAkrE,EAAAlrE,EAAA,SAEAuQ,EAAUH,GAAS7f,EAAA,eAAA6vF,EAAAz9E,EAAA9C,GACnB,gBAAAG,EACAogF,EAAA,OAAApgF,EAAA,MAGAogF,EAAA,aAGA,IACA7vE,EAAA,GAEA,IAAA5B,EAAkCpe,EAAA,MAAAggB,GAAA,WAClC2zG,EAAA,GACA,cAAA3zH,GACAA,EAAA,UAAAsc,QAAA,SAAAuzE,EAAAz9E,EAAA9C,GACA,IAAAhO,EAAAuuF,EAAA,WACA7uF,EAAA6uF,EAAA,aACAp6E,IAAAzU,IACAA,EAAA6uF,EAAA,UAEA8jC,EAAAryH,GAAAN,IAGA,IAIAitB,EAHA23K,EAAuBrmL,GADvBkmL,EAAA,uBAC2B,SAAA51G,EAAAz9E,EAAA9C,GAC3B,OAAAugF,EAAA,YAAAJ,IAGA77E,EAAAgyL,EAAA,aAKA,GAJAhyL,IACAqa,EAAqBE,GAAava,EAAAglC,QAAA,gDACtBzqB,GAAava,IAEzB,eAAAnE,EAAA,CACA,IAAAo2L,EAAyB13K,GAAa1e,EAAA,YACtCo2L,IACA53K,IAA+BqB,GAAUu2K,EAAA53K,KACzCA,EAAA43K,IAIA,IACA9kL,EAAA2lF,EADAo/F,EAAA9lM,EAAA,iBAEA,QAAAyV,IAAAqwL,EAAA,CACA,IAAAC,EAAoC53K,GAAa,aAAAtD,YACjD67E,EAAAo/F,EAAA,IAAAC,EAAA,IACAD,EAAA,IAAAC,EAAA,GACAhlL,EAAiBgP,GAAe+1K,EAAA,YAAA73K,GAChC,IAAAonD,EAAApnD,EAAApD,YACAwqD,IAGiB1zD,GAAc0zD,EAAAt0D,KAC/BA,OAAAtL,IAIA,IAAA6V,EAAmBkkE,GAA+Bo2G,EAAA7kL,EAAA4uE,GAElDgM,EAAA,GACA63B,EAAA/jH,EAAA,gBAEA,GADA+jH,OAAA/9G,IAAA+9G,IAAA,GACA,uBAAAiyE,GAAA,YAAAA,EAAA,mBAEA,IADA,IAAAO,EAAAP,EAAA,wCACA1lM,EAAA,EAAA0U,EAAAuxL,EAAApjM,OAAyC7C,EAAA0U,IAAQ1U,EACjD,GAAAimM,EAAAjmM,GAAA,YACA,IAGAkmM,EAHiC1mL,GAAIymL,EAAAjmM,GAAA,oBAAA0b,GACrC,qBAAAA,EAAA,OAEA,oBAKA,GAJA,KAAA+3G,IAEAA,EAAAyyE,EAAA,IAEAzyE,IAAwCN,GAAmBC,IAM3D,MALwBn0G,EAAQinL,EAAY/yE,GAAmBC,MAC/Dx3B,EAAAh4F,KAAoDqiM,EAAAjmM,GAAA,WAOpDimM,EAAAjmM,GAAA,OACAyzH,EAAkCN,GAAmBC,IACrDx3B,EAAAh4F,KAA4CqiM,EAAAjmM,GAAA,OAa5C,OATA,IAAA47F,EAAA/4F,SACA4wH,EAA0BN,GAAmBE,KAC7CpzH,EAAA,YAAAsc,QAAA,SAAAb,GACA,SAAAA,EAAA,eACAk/D,EAAAl/D,EAAA,OACAkgF,EAAAh4F,KAA4C8X,EAAA,cAI5C,CACAkgF,OACA70C,MAAAr3C,EAAA,MACAggF,YACA9U,SACA1sD,aACAulG,kBACAloG,WACAlN,QACAu1G,aACAjtB,QACAhhC,YAAAj2D,EAAA,csGgJA0yL,GAAAhyL,OAAAuV,IAAgBwoF,GAChBi0F,GAAAhyL,OAAAmmG,QAAoBD,GACpB8rF,GAAAO,OAAA1/K,QnS/YO,SAASkjL,EAAOroL,EAAAhC,GACvB,IAAAC,EAAAD,GAAA,GACAqM,EAAApM,EAAAoM,QAAAL,GACAoG,EAAAnS,EAAAmS,YAAA,YACAhoB,EAAA4X,EAAAwV,UACAptB,IAAiB4f,GAAYQ,sBAC7BxI,IAAAG,QAAAwI,UAAAyH,EAAA,cAEA,IACAnN,EAAAqe,EAAAp/B,EAAA0U,EAAApF,EAAA8C,EADA8Q,EAAA,EAEA,OAAAhd,GACA,KAAa4f,GAAYC,MACzB,KAAaD,GAAYK,YACzB,KAAaL,GAAYE,YACzB,KAAaF,GAAYM,kBACzB,KAAaN,GAAYG,YACzB,MAEA,KAAaH,GAAYI,QAGzB,IAFAnF,EAAyE,EAAAmT,iBACzEhR,EAAA/gB,KAAA6L,IAAA0a,GAAA3H,EAAA,GAAAoH,IACAnoB,EAAA,EAAA0U,EAAAqM,EAAAle,OAAgD7C,EAAA0U,IAAQ1U,EACxDkjB,GAAA/gB,KAAA6L,IAAA0a,GAAA3H,EAAA/gB,GAAAmoB,IAEA,MAEA,KAAarC,GAAYO,cAEzB,IAAArmB,EAAA,EAAA0U,GADAqM,EAAgF,EAAAmT,kBAChFrxB,OAAgD7C,EAAA0U,IAAQ1U,EAGxD,IAFAo/B,EAAAre,EAAA/gB,GACAkjB,GAAA/gB,KAAA6L,IAAA0a,GAAA0W,EAAA,GAAAjX,IACA7Y,EAAA,EAAA8C,EAAAgtB,EAAAv8B,OAA+CyM,EAAA8C,IAAQ9C,EACvD4T,GAAA/gB,KAAA6L,IAAA0a,GAAA0W,EAAA9vB,GAAA6Y,IAGA,MAEA,KAAarC,GAAYQ,oBACzB,IAAAypD,EAAuF,EAAAmoD,gBACvF,IAAAl4H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvDkjB,GAAwBijL,EAAOp2H,EAAA/vE,GAAA8b,GAE/B,MAEA,QACA,UAAAnS,MAAA,8BAAAzD,GAGA,OAAAgd,GmSgWAk/K,GAAAO,OAAA56K,YAAwBA,GACxBq6K,GAAAO,OAAAtmL,UnS7eO,SAAAA,EAAAyB,EAAAhC,GACP,IAAAC,EAAAD,GAAA,GACAqM,EAAApM,EAAAoM,QAAAL,GACAoG,EAAAnS,EAAAmS,YAAA,YACAhoB,EAAA4X,EAAAwV,UACAptB,IAAiB4f,GAAYQ,sBAC7BxI,IAAAG,QAAAwI,UAAAyH,EAAA,cAEA,IACAnN,EAAAqe,EAAAp/B,EAAA0U,EAAApF,EAAA8C,EADAvP,EAAA,EAEA,OAAAqD,GACA,KAAa4f,GAAYC,MACzB,KAAaD,GAAYK,YACzB,MAEA,KAAaL,GAAYE,YACzB,KAAaF,GAAYG,YAEzBpjB,EAAA4lB,GADA1H,EAAgF,EAAAmT,iBAChF/L,GACA,MAEA,KAAarC,GAAYM,kBACzB,KAAaN,GAAYI,QAEzB,IAAAlmB,EAAA,EAAA0U,GADAqM,EAAgF,EAAAmT,kBAChFrxB,OAAgD7C,EAAA0U,IAAQ1U,EACxD6C,GAAA4lB,GAAA1H,EAAA/gB,GAAAmoB,GAEA,MAEA,KAAarC,GAAYO,cAEzB,IAAArmB,EAAA,EAAA0U,GADAqM,EAAgF,EAAAmT,kBAChFrxB,OAAgD7C,EAAA0U,IAAQ1U,EAExD,IAAAsP,EAAA,EAAA8C,GADAgtB,EAAAre,EAAA/gB,IACA6C,OAA+CyM,EAAA8C,IAAQ9C,EACvDzM,GAAA4lB,GAAA2W,EAAA9vB,GAAA6Y,GAGA,MAEA,KAAarC,GAAYQ,oBACzB,IAAAypD,EAAuF,EAAAmoD,gBACvF,IAAAl4H,EAAA,EAAA0U,EAAAq7D,EAAAltE,OAA+C7C,EAAA0U,IAAQ1U,EACvD6C,GAAAwZ,EAAA0zD,EAAA/vE,GAAA8b,GAEA,MAEA,QACA,UAAAnS,MAAA,8BAAAzD,GAGA,OAAArD,GmS4bAu/L,GAAA/jL,MAAAqpH,OAAkBj1C,GAClB2vG,GAAA/jL,MAAAw0E,KAAgBD,GAChBwvG,GAAA/jL,MAAAy3E,KAAgBD,GAChBusG,GAAA/jL,MAAA8mD,eAAAU,OAAiCA,GACjCu8H,GAAA/jL,MAAA+1E,MAAiBjE,GACjBiyG,GAAA/jL,MAAA8yE,aAAwBD,GACxBkxG,GAAA/jL,MAAA24E,OAAkBD,GAClBqrG,GAAA/jL,MAAAu5E,MAAiBc,GACjB0pG,GAAA/jL,MAAA06E,KAAgBD,GAChBspG,GAAA32F,SAAAzuB,SAAuBD,GACvBqlH,GAAA32F,SAAA+nB,KAAmBhkC,GACnB4yG,GAAA32F,SAAA+nB,KAAA/jC,gCAAmDA,GACnD2yG,GAAA32F,SAAA7rB,UAAwBA,GACxBwiH,GAAAQ,KAAA3vL,OAAiBA,EACjBmvL,GAAAM,MAAApoH,arLphBO,MqLqhBP8nH,GAAAM,MAAA99G,OAAkBA,GAClBw9G,GAAAM,MAAApiH,aAAwBA,GACxB8hH,GAAAM,MAAA0D,qBrL9gBO,MqL+gBPhE,GAAAM,MAAAx3G,OAAkBA,GAClBk3G,GAAAM,MAAAh9G,mBAA8BA,GAC9B08G,GAAAM,MAAAh+G,YrLngBO,MqLogBP09G,GAAAM,MAAA/9G,YrL3gBO,MqL4gBPy9G,GAAAngH,IAAAZ,kBAA2BA,GAC3B+gH,GAAAngH,IAAAD,MAAeA,GAEAqkH,EAAA","file":"ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.0.0-beta.8';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n            '/doc/errors/#' + code + ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove'\n};\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange'\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function (target, var_sources) {\n    if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var output = Object(target);\n    for (var i = 1, ii = arguments.length; i < ii; ++i) {\n        var source = arguments[i];\n        if (source !== undefined && source !== null) {\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    output[key] = source[key];\n                }\n            }\n        }\n    }\n    return output;\n};\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function (object) {\n    var values = [];\n    for (var property in object) {\n        values.push(object[property]);\n    }\n    return values;\n};\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n    var boundListener = function (evt) {\n        var listener = listenerObj.listener;\n        var bindTo = listenerObj.bindTo || listenerObj.target;\n        if (listenerObj.callOnce) {\n            unlistenByKey(listenerObj);\n        }\n        return listener.call(bindTo, evt);\n    };\n    listenerObj.boundListener = boundListener;\n    return boundListener;\n}\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n    var listenerObj;\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        listenerObj = listeners[i];\n        if (listenerObj.listener === listener &&\n            listenerObj.bindTo === opt_this) {\n            if (opt_setDeleteIndex) {\n                listenerObj.deleteIndex = i;\n            }\n            return listenerObj;\n        }\n    }\n    return undefined;\n}\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n    var listenerMap = getListenerMap(target);\n    return listenerMap ? listenerMap[type] : undefined;\n}\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n    var listenerMap = target.ol_lm;\n    if (!listenerMap && opt_create) {\n        listenerMap = target.ol_lm = {};\n    }\n    return listenerMap;\n}\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n    delete target.ol_lm;\n}\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        for (var i = 0, ii = listeners.length; i < ii; ++i) {\n            /** @type {import(\"./events/Target.js\").default} */ (target).\n                removeEventListener(type, listeners[i].boundListener);\n            clear(listeners[i]);\n        }\n        listeners.length = 0;\n        var listenerMap = getListenerMap(target);\n        if (listenerMap) {\n            delete listenerMap[type];\n            if (Object.keys(listenerMap).length === 0) {\n                removeListenerMap(target);\n            }\n        }\n    }\n}\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    var listenerMap = getListenerMap(target, true);\n    var listeners = listenerMap[type];\n    if (!listeners) {\n        listeners = listenerMap[type] = [];\n    }\n    var listenerObj = findListener(listeners, listener, opt_this, false);\n    if (listenerObj) {\n        if (!opt_once) {\n            // Turn one-off listener into a permanent one.\n            listenerObj.callOnce = false;\n        }\n    }\n    else {\n        listenerObj = {\n            bindTo: opt_this,\n            callOnce: !!opt_once,\n            listener: listener,\n            target: target,\n            type: type\n        };\n        /** @type {import(\"./events/Target.js\").default} */ (target).\n            addEventListener(type, bindListener(listenerObj));\n        listeners.push(listenerObj);\n    }\n    return listenerObj;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n    var listeners = getListeners(target, type);\n    if (listeners) {\n        var listenerObj = findListener(listeners, listener, opt_this, true);\n        if (listenerObj) {\n            unlistenByKey(listenerObj);\n        }\n    }\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        /** @type {import(\"./events/Target.js\").default} */ (key.target).\n            removeEventListener(key.type, key.boundListener);\n        var listeners = getListeners(key.target, key.type);\n        if (listeners) {\n            var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n            if (i !== -1) {\n                listeners.splice(i, 1);\n            }\n            if (listeners.length === 0) {\n                removeListeners(key.target, key.type);\n            }\n        }\n        clear(key);\n    }\n}\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n        for (var type in listenerMap) {\n            removeListeners(target, type);\n        }\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @private\n         */\n        this.disposed_ = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed_) {\n            this.disposed_ = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function Event(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    Event.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return Event;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default Event;\n//# sourceMappingURL=Event.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport { unlistenAll } from '../events.js';\nimport { VOID } from '../functions.js';\nimport Event from './Event.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    function Target() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.pendingRemovals_ = {};\n        /**\n         * @private\n         * @type {!Object<string, number>}\n         */\n        _this.dispatching_ = {};\n        /**\n         * @private\n         * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n         */\n        _this.listeners_ = {};\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (!listeners) {\n            listeners = this.listeners_[type] = [];\n        }\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {{type: string,\n     *     target: (EventTargetLike|undefined),\n     *     propagationStopped: (boolean|undefined)}|\n     *     import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        evt.target = this;\n        var listeners = this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            if (!(type in this.dispatching_)) {\n                this.dispatching_[type] = 0;\n                this.pendingRemovals_[type] = 0;\n            }\n            ++this.dispatching_[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --this.dispatching_[type];\n            if (this.dispatching_[type] === 0) {\n                var pendingRemovals = this.pendingRemovals_[type];\n                delete this.pendingRemovals_[type];\n                while (pendingRemovals--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete this.dispatching_[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Target.prototype.disposeInternal = function () {\n        unlistenAll(this);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return this.listeners_[type];\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        return opt_type ?\n            opt_type in this.listeners_ :\n            Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (type in this.pendingRemovals_) {\n                // make listener a no-op, and remove later in #dispatchEvent()\n                listeners[index] = VOID;\n                ++this.pendingRemovals_[type];\n            }\n            else {\n                listeners.splice(index, 1);\n                if (listeners.length === 0) {\n                    delete this.listeners_[type];\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~Event#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~Event#error\n     * @api\n     */\n    ERROR: 'error',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    MOUSEDOWN: 'mousedown',\n    MOUSEMOVE: 'mousemove',\n    MOUSEOUT: 'mouseout',\n    MOUSEUP: 'mouseup',\n    MOUSEWHEEL: 'mousewheel',\n    MSPOINTERDOWN: 'MSPointerDown',\n    RESIZE: 'resize',\n    TOUCHSTART: 'touchstart',\n    TOUCHMOVE: 'touchmove',\n    TOUCHEND: 'touchend',\n    WHEEL: 'wheel'\n};\n//# sourceMappingURL=EventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport { listen, unlistenByKey, unlisten, listenOnce } from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listenOnce(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listenOnce(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                unlisten(this, type[i], listener);\n            }\n            return;\n        }\n        else {\n            unlisten(this, /** @type {string} */ (type), listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport { getUid } from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport { assign } from './obj.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {!Object<string, *>}\n         */\n        _this.values_ = {};\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return Object.keys(this.values_);\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return assign({}, this.values_);\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        if (opt_silent) {\n            this.values_[key] = value;\n        }\n        else {\n            var oldValue = this.values_[key];\n            this.values_[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key) ?\n        changeEventTypeCache[key] :\n        (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {CollectionEventType} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Feature\n */\nimport { assert } from './asserts.js';\nimport { listen, unlisten, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /** @class */ (function (_super) {\n    __extends(Feature, _super);\n    /**\n     * @param {import(\"./geom/Geometry.js\").default|Object<string, *>=} opt_geometryOrProperties\n     *     You may pass a Geometry object directly, or an object literal containing\n     *     properties. If you pass an object literal, you may include a Geometry\n     *     associated with a `geometry` key.\n     */\n    function Feature(opt_geometryOrProperties) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        _this.id_ = undefined;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.geometryName_ = 'geometry';\n        /**\n         * User provided style.\n         * @private\n         * @type {import(\"./style/Style.js\").StyleLike}\n         */\n        _this.style_ = null;\n        /**\n         * @private\n         * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n         */\n        _this.styleFunction_ = undefined;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.geometryChangeKey_ = null;\n        listen(_this, getChangeEventType(_this.geometryName_), _this.handleGeometryChanged_, _this);\n        if (opt_geometryOrProperties) {\n            if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n                var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n                _this.setGeometry(geometry);\n            }\n            else {\n                /** @type {Object<string, *>} */\n                var properties = opt_geometryOrProperties;\n                _this.setProperties(properties);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Clone this feature. If the original feature has a geometry it\n     * is also cloned. The feature id is not set in the clone.\n     * @return {Feature} The clone.\n     * @api\n     */\n    Feature.prototype.clone = function () {\n        var clone = new Feature(this.getProperties());\n        clone.setGeometryName(this.getGeometryName());\n        var geometry = this.getGeometry();\n        if (geometry) {\n            clone.setGeometry(geometry.clone());\n        }\n        var style = this.getStyle();\n        if (style) {\n            clone.setStyle(style);\n        }\n        return clone;\n    };\n    /**\n     * Get the feature's default geometry.  A feature may have any number of named\n     * geometries.  The \"default\" geometry (the one that is rendered by default) is\n     * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n     * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n     * @api\n     * @observable\n     */\n    Feature.prototype.getGeometry = function () {\n        return (\n        /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_)));\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is either set when reading data from a remote source or set explicitly by\n     * calling {@link module:ol/Feature~Feature#setId}.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Feature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * Get the name of the feature's default geometry.  By default, the default\n     * geometry is named `geometry`.\n     * @return {string} Get the property name associated with the default geometry\n     *     for this feature.\n     * @api\n     */\n    Feature.prototype.getGeometryName = function () {\n        return this.geometryName_;\n    };\n    /**\n     * Get the feature's style. Will return what was provided to the\n     * {@link module:ol/Feature~Feature#setStyle} method.\n     * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n     * @api\n     */\n    Feature.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the feature's style function.\n     * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n     * representing the current style of this feature.\n     * @api\n     */\n    Feature.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Feature.prototype.handleGeometryChanged_ = function () {\n        if (this.geometryChangeKey_) {\n            unlistenByKey(this.geometryChangeKey_);\n            this.geometryChangeKey_ = null;\n        }\n        var geometry = this.getGeometry();\n        if (geometry) {\n            this.geometryChangeKey_ = listen(geometry, EventType.CHANGE, this.handleGeometryChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * Set the default geometry for the feature.  This will update the property\n     * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n     * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n     * @api\n     * @observable\n     */\n    Feature.prototype.setGeometry = function (geometry) {\n        this.set(this.geometryName_, geometry);\n    };\n    /**\n     * Set the style for the feature.  This can be a single style object, an array\n     * of styles, or a function that takes a resolution and returns an array of\n     * styles. If it is `null` the feature has no style (a `null` style).\n     * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setStyle = function (style) {\n        this.style_ = style;\n        this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n        this.changed();\n    };\n    /**\n     * Set the feature id.  The feature id is considered stable and may be used when\n     * requesting features or comparing identifiers returned from a remote source.\n     * The feature id can be used with the\n     * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n     * @param {number|string|undefined} id The feature id.\n     * @api\n     * @fires module:ol/events/Event~Event#event:change\n     */\n    Feature.prototype.setId = function (id) {\n        this.id_ = id;\n        this.changed();\n    };\n    /**\n     * Set the property name to be used when getting the feature's default geometry.\n     * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n     * this name will be returned.\n     * @param {string} name The property name of the default geometry.\n     * @api\n     */\n    Feature.prototype.setGeometryName = function (name) {\n        unlisten(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.geometryName_ = name;\n        listen(this, getChangeEventType(this.geometryName_), this.handleGeometryChanged_, this);\n        this.handleGeometryChanged_();\n    };\n    return Feature;\n}(BaseObject));\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n    if (typeof obj === 'function') {\n        return obj;\n    }\n    else {\n        /**\n         * @type {Array<import(\"./style/Style.js\").default>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n            var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n            styles_1 = [style];\n        }\n        return function () {\n            return styles_1;\n        };\n    }\n}\nexport default Feature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + (high - low >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) { /* Too low. */\n            low = mid + 1;\n        }\n        else { /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || opt_strict && res === 0);\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport { assert } from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = resolution * size[0] / 2;\n    var dy = resolution * size[1] / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1];\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) &&\n            !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - ((endY - maxY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - ((endX - maxX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects && !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - ((endY - minY) / slope);\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects && !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - ((endX - minX) * slope);\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n    var coordinates = [\n        extent[0], extent[1],\n        extent[0], extent[3],\n        extent[2], extent[1],\n        extent[2], extent[3]\n    ];\n    transformFn(coordinates, coordinates, 2);\n    var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n    var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM'\n};\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle'\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n}());\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return angleInRadians * 180 / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return angleInDegrees * Math.PI / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n/**\n * @module ol/sphere\n */\nimport { toRadians, toDegrees } from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n            Math.cos(lat1) * Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area += toRadians(x2 - x1) *\n            (2 + Math.sin(toRadians(y1)) +\n                Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return area * radius * radius / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 + Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft'\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ = options.worldExtent !== undefined ?\n            options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ = options.axisOrientation !== undefined ?\n            options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport { cosh } from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n    -HALF_SIZE, -HALF_SIZE,\n    HALF_SIZE, HALF_SIZE\n];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            }\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = halfSize * input[i] / 180;\n        var y = RADIUS *\n            Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = 180 * input[i] / HALF_SIZE;\n        output[i + 1] = 360 * Math.atan(Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport { getDistance } from './sphere.js';\nimport { applyTransform } from './extent.js';\nimport { modulo } from './math.js';\nimport { toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc } from './proj/transforms.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    projections.add(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string' ?\n        projections.get(/** @type {string} */ (projectionLike)) :\n        ( /** @type {Projection} */(projectionLike) || null);\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2, point[1],\n                point[0] + resolution / 2, point[1],\n                point[0], point[1] - resolution / 2,\n                point[0], point[1] + resolution / 2\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units ?\n                METERS_PER_UNIT[opt_units] :\n                projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    projections.clear();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return (\n        /** @type {Projection} */ (projection));\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { createEmpty, getHeight, returnOrUpdate } from '../extent.js';\nimport { transform2D } from './flat/transform.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport Units from '../proj/Units.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {Object<string, Geometry>}\n         */\n        _this.simplifiedGeometryCache = {};\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            this.extent_ = this.computeExtent(this.extent_);\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n     *     sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the the {@link\n     * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n     * Douglas Peucker} algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to each coordinate of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n            function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            } :\n            getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { rotate, scale, translate, transform2D } from './flat/transform.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {GeometryLayout}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {GeometryLayout} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * @inheritDoc\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n            var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n            if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n                this.simplifiedGeometryCache[key] = simplifiedGeometry;\n                return simplifiedGeometry;\n            }\n            else {\n                // Simplification did not actually remove any coordinates.  We now know\n                // that any calls to getSimplifiedGeometry with a squaredTolerance less\n                // than or equal to the current squaredTolerance will also not have any\n                // effect.  This allows us to short circuit simplification (saving CPU\n                // cycles) and prevents the cache of simplified geometries from filling\n                // up with useless identical copies of this geometry (saving memory).\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {GeometryLayout} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {GeometryLayout|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return (\n    /** @type {GeometryLayout} */ (layout));\n}\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index += stride * Math.max(((Math.sqrt(squaredDistance) -\n                Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredSegmentDistance, squaredDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n        opt_simplifiedFlatCoordinates : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if ((dx1 * dy2 == dy1 * dx2) &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * @inheritDoc\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport { createOrUpdateFromCoordinate, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @override\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @override\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @inheritDoc\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { linearRingsContainsXY } from './contains.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; (offset + stride) < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment } from '../../extent.js';\nimport { linearRingContainsXY, linearRingContainsExtent } from './contains.js';\nimport { forEach as forEachSegment } from './segments.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] &&\n        coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] &&\n        coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // http://tinyurl.com/clockwise-method\n    // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n    var edge = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        edge += (x2 - x1) * (y2 + y1);\n        x1 = x2;\n        y1 = y2;\n    }\n    return edge > 0;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0 ?\n            (right && isClockwise) || (!right && !isClockwise) :\n            (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { offset as sphereOffset } from '../sphere.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { modulo } from '../math.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @override\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n        flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n        flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Geolocation\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport { listen } from './events.js';\nimport Event from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport { circular as circularPolygon } from './geom/Polygon.js';\nimport { toRadians } from './math.js';\nimport { get as getProjection, getTransformFromProjections, identityTransform } from './proj.js';\n/**\n * @enum {string}\n */\nvar Property = {\n    ACCURACY: 'accuracy',\n    ACCURACY_GEOMETRY: 'accuracyGeometry',\n    ALTITUDE: 'altitude',\n    ALTITUDE_ACCURACY: 'altitudeAccuracy',\n    HEADING: 'heading',\n    POSITION: 'position',\n    PROJECTION: 'projection',\n    SPEED: 'speed',\n    TRACKING: 'tracking',\n    TRACKING_OPTIONS: 'trackingOptions'\n};\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = /** @class */ (function (_super) {\n    __extends(GeolocationError, _super);\n    /**\n     * @param {PositionError} error error object.\n     */\n    function GeolocationError(error) {\n        var _this = _super.call(this, EventType.ERROR) || this;\n        /**\n         * @type {number}\n         */\n        _this.code = error.code;\n        /**\n         * @type {string}\n         */\n        _this.message = error.message;\n        return _this;\n    }\n    return GeolocationError;\n}(Event));\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires module:ol/events/Event~Event#event:error\n * @api\n */\nvar Geolocation = /** @class */ (function (_super) {\n    __extends(Geolocation, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Geolocation(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * The unprojected (EPSG:4326) device position.\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.position_ = null;\n        /**\n         * @private\n         * @type {import(\"./proj.js\").TransformFunction}\n         */\n        _this.transform_ = identityTransform;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.watchId_ = undefined;\n        listen(_this, getChangeEventType(Property.PROJECTION), _this.handleProjectionChanged_, _this);\n        listen(_this, getChangeEventType(Property.TRACKING), _this.handleTrackingChanged_, _this);\n        if (options.projection !== undefined) {\n            _this.setProjection(options.projection);\n        }\n        if (options.trackingOptions !== undefined) {\n            _this.setTrackingOptions(options.trackingOptions);\n        }\n        _this.setTracking(options.tracking !== undefined ? options.tracking : false);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Geolocation.prototype.disposeInternal = function () {\n        this.setTracking(false);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @private\n     */\n    Geolocation.prototype.handleProjectionChanged_ = function () {\n        var projection = this.getProjection();\n        if (projection) {\n            this.transform_ = getTransformFromProjections(getProjection('EPSG:4326'), projection);\n            if (this.position_) {\n                this.set(Property.POSITION, this.transform_(this.position_));\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    Geolocation.prototype.handleTrackingChanged_ = function () {\n        if ('geolocation' in navigator) {\n            var tracking = this.getTracking();\n            if (tracking && this.watchId_ === undefined) {\n                this.watchId_ = navigator.geolocation.watchPosition(this.positionChange_.bind(this), this.positionError_.bind(this), this.getTrackingOptions());\n            }\n            else if (!tracking && this.watchId_ !== undefined) {\n                navigator.geolocation.clearWatch(this.watchId_);\n                this.watchId_ = undefined;\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Position} position position event.\n     */\n    Geolocation.prototype.positionChange_ = function (position) {\n        var coords = position.coords;\n        this.set(Property.ACCURACY, coords.accuracy);\n        this.set(Property.ALTITUDE, coords.altitude === null ? undefined : coords.altitude);\n        this.set(Property.ALTITUDE_ACCURACY, coords.altitudeAccuracy === null ?\n            undefined : coords.altitudeAccuracy);\n        this.set(Property.HEADING, coords.heading === null ?\n            undefined : toRadians(coords.heading));\n        if (!this.position_) {\n            this.position_ = [coords.longitude, coords.latitude];\n        }\n        else {\n            this.position_[0] = coords.longitude;\n            this.position_[1] = coords.latitude;\n        }\n        var projectedPosition = this.transform_(this.position_);\n        this.set(Property.POSITION, projectedPosition);\n        this.set(Property.SPEED, coords.speed === null ? undefined : coords.speed);\n        var geometry = circularPolygon(this.position_, coords.accuracy);\n        geometry.applyTransform(this.transform_);\n        this.set(Property.ACCURACY_GEOMETRY, geometry);\n        this.changed();\n    };\n    /**\n     * @private\n     * @param {PositionError} error error object.\n     */\n    Geolocation.prototype.positionError_ = function (error) {\n        this.setTracking(false);\n        this.dispatchEvent(new GeolocationError(error));\n    };\n    /**\n     * Get the accuracy of the position in meters.\n     * @return {number|undefined} The accuracy of the position measurement in\n     *     meters.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAccuracy = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n    };\n    /**\n     * Get a geometry of the position accuracy.\n     * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAccuracyGeometry = function () {\n        return (\n        /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null));\n    };\n    /**\n     * Get the altitude associated with the position.\n     * @return {number|undefined} The altitude of the position in meters above mean\n     *     sea level.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAltitude = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n    };\n    /**\n     * Get the altitude accuracy of the position.\n     * @return {number|undefined} The accuracy of the altitude measurement in\n     *     meters.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getAltitudeAccuracy = function () {\n        return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n    };\n    /**\n     * Get the heading as radians clockwise from North.\n     * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n     * is set to `true` in the tracking options.\n     * @return {number|undefined} The heading of the device in radians from north.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getHeading = function () {\n        return /** @type {number|undefined} */ (this.get(Property.HEADING));\n    };\n    /**\n     * Get the position of the device.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n     *     in the current projection.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the projection associated with the position.\n     * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n     *     reported in.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION)));\n    };\n    /**\n     * Get the speed in meters per second.\n     * @return {number|undefined} The instantaneous speed of the device in meters\n     *     per second.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getSpeed = function () {\n        return /** @type {number|undefined} */ (this.get(Property.SPEED));\n    };\n    /**\n     * Determine if the device location is being tracked.\n     * @return {boolean} The device location is being tracked.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getTracking = function () {\n        return /** @type {boolean} */ (this.get(Property.TRACKING));\n    };\n    /**\n     * Get the tracking options.\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\n     * @return {PositionOptions|undefined} PositionOptions as defined by\n     *     the [HTML5 Geolocation spec\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.getTrackingOptions = function () {\n        return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n    };\n    /**\n     * Set the projection to use for transforming the coordinates.\n     * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n     *     reported in.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setProjection = function (projection) {\n        this.set(Property.PROJECTION, getProjection(projection));\n    };\n    /**\n     * Enable or disable tracking.\n     * @param {boolean} tracking Enable tracking.\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setTracking = function (tracking) {\n        this.set(Property.TRACKING, tracking);\n    };\n    /**\n     * Set the tracking options.\n     * See http://www.w3.org/TR/geolocation-API/#position-options.\n     * @param {PositionOptions} options PositionOptions as defined by the\n     *     [HTML5 Geolocation spec\n     *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n     * @observable\n     * @api\n     */\n    Geolocation.prototype.setTrackingOptions = function (options) {\n        this.set(Property.TRACKING_OPTIONS, options);\n    };\n    return Geolocation;\n}(BaseObject));\nexport default Geolocation;\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {Event} browserEvent Browser event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {Event}\n         * @api\n         */\n        _this.originalEvent = browserEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        _this.pixel = map.getEventPixel(browserEvent);\n        /**\n         * The coordinate in view projection corresponding to the original browser event.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = map.getCoordinateFromPixel(_this.pixel);\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @override\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' ?\n    navigator.userAgent.toLowerCase() : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\nexport { HAS as WEBGL } from './webgl.js';\n//# sourceMappingURL=has.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\nvar MapBrowserPointerEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserPointerEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState) || this;\n        /**\n         * @const\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         */\n        _this.pointerEvent = pointerEvent;\n        return _this;\n    }\n    return MapBrowserPointerEvent;\n}(MapBrowserEvent));\nexport default MapBrowserPointerEvent;\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\nvar EventSource = /** @class */ (function () {\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     * @param {!Object<string, function(Event): void>} mapping Event mapping.\n     */\n    function EventSource(dispatcher, mapping) {\n        /**\n         * @type {import(\"./PointerEventHandler.js\").default}\n         */\n        this.dispatcher = dispatcher;\n        /**\n         * @private\n         * @const\n         * @type {!Object<string, function(Event): void>}\n         */\n        this.mapping_ = mapping;\n    }\n    /**\n     * List of events supported by this source.\n     * @return {Array<string>} Event names\n     */\n    EventSource.prototype.getEvents = function () {\n        return Object.keys(this.mapping_);\n    };\n    /**\n     * Returns the handler that should handle a given event type.\n     * @param {string} eventType The event type.\n     * @return {function(Event)} Handler\n     */\n    EventSource.prototype.getHandlerForEvent = function (eventType) {\n        return this.mapping_[eventType];\n    };\n    return EventSource;\n}());\nexport default EventSource;\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        // TODO(dfreedman) workaround for some elements not sending mouseup\n        // http://crbug/149091\n        if (POINTER_ID.toString() in this.pointerMap) {\n            this.cancel(inEvent);\n        }\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.pointerMap[POINTER_ID.toString()] = inEvent;\n        this.dispatcher.down(e, inEvent);\n    }\n}\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.move(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var p = this.pointerMap[POINTER_ID.toString()];\n        if (p && p.button === inEvent.button) {\n            var e = prepareEvent(inEvent, this.dispatcher);\n            this.dispatcher.up(e, inEvent);\n            this.cleanupMouse();\n        }\n    }\n}\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.enterOver(e, inEvent);\n    }\n}\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n    if (!this.isEventSimulatedFromTouch_(inEvent)) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.leaveOut(e, inEvent);\n    }\n}\nvar MouseSource = /** @class */ (function (_super) {\n    __extends(MouseSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MouseSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'mousedown': mousedown,\n            'mousemove': mousemove,\n            'mouseup': mouseup,\n            'mouseover': mouseover,\n            'mouseout': mouseout\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {Array<import(\"../pixel.js\").Pixel>}\n         */\n        _this.lastTouches = [];\n        return _this;\n    }\n    /**\n     * Detect if a mouse event was simulated from a touch by\n     * checking if previously there was a touch event at the\n     * same position.\n     *\n     * FIXME - Known problem with the native Android browser on\n     * Samsung GT-I9100 (Android 4.1.2):\n     * In case the page is scrolled, this function does not work\n     * correctly when a canvas is used (WebGL or canvas renderer).\n     * Mouse listeners on canvas elements (for this browser), create\n     * two mouse events: One 'good' and one 'bad' one (on other browsers or\n     * when a div is used, there is only one event). For the 'bad' one,\n     * clientX/clientY and also pageX/pageY are wrong when the page\n     * is scrolled. Because of that, this function can not detect if\n     * the events were simulated from a touch event. As result, a\n     * pointer event at a wrong position is dispatched, which confuses\n     * the map interactions.\n     * It is unclear, how one can get the correct position for the event\n     * or detect that the positions are invalid.\n     *\n     * @private\n     * @param {MouseEvent} inEvent The in event.\n     * @return {boolean} True, if the event was generated by a touch.\n     */\n    MouseSource.prototype.isEventSimulatedFromTouch_ = function (inEvent) {\n        var lts = this.lastTouches;\n        var x = inEvent.clientX;\n        var y = inEvent.clientY;\n        for (var i = 0, l = lts.length, t = void 0; i < l && (t = lts[i]); i++) {\n            // simulated mouse events will be swallowed near a primary touchend\n            var dx = Math.abs(x - t[0]);\n            var dy = Math.abs(y - t[1]);\n            if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Dispatches a `pointercancel` event.\n     *\n     * @param {Event} inEvent The in event.\n     */\n    MouseSource.prototype.cancel = function (inEvent) {\n        var e = prepareEvent(inEvent, this.dispatcher);\n        this.dispatcher.cancel(e, inEvent);\n        this.cleanupMouse();\n    };\n    /**\n     * Remove the mouse from the list of active pointers.\n     */\n    MouseSource.prototype.cleanupMouse = function () {\n        delete this.pointerMap[POINTER_ID.toString()];\n    };\n    return MouseSource;\n}(EventSource));\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n    var e = dispatcher.cloneEvent(inEvent, inEvent);\n    // forward mouse preventDefault\n    var pd = e.preventDefault;\n    e.preventDefault = function () {\n        inEvent.preventDefault();\n        pd();\n    };\n    e.pointerId = POINTER_ID;\n    e.isPrimary = true;\n    e.pointerType = POINTER_TYPE;\n    return e;\n}\nexport default MouseSource;\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n    '',\n    'unavailable',\n    'touch',\n    'pen',\n    'mouse'\n];\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n    this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.down(e, inEvent);\n}\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.move(e, inEvent);\n}\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.up(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.leaveOut(e, inEvent);\n}\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.enterOver(e, inEvent);\n}\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n    var e = this.prepareEvent_(inEvent);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanup(inEvent.pointerId);\n}\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n    var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n    this.dispatcher.dispatchEvent(e);\n}\nvar MsSource = /** @class */ (function (_super) {\n    __extends(MsSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function MsSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'MSPointerDown': msPointerDown,\n            'MSPointerMove': msPointerMove,\n            'MSPointerUp': msPointerUp,\n            'MSPointerOut': msPointerOut,\n            'MSPointerOver': msPointerOver,\n            'MSPointerCancel': msPointerCancel,\n            'MSGotPointerCapture': msGotPointerCapture,\n            'MSLostPointerCapture': msLostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, MSPointerEvent|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        return _this;\n    }\n    /**\n     * Creates a copy of the original event that will be used\n     * for the fake pointer event.\n     *\n     * @private\n     * @param {MSPointerEvent} inEvent The in event.\n     * @return {Object} The copied event.\n     */\n    MsSource.prototype.prepareEvent_ = function (inEvent) {\n        /** @type {MSPointerEvent|Object} */\n        var e = inEvent;\n        if (typeof inEvent.pointerType === 'number') {\n            e = this.dispatcher.cloneEvent(inEvent, inEvent);\n            e.pointerType = POINTER_TYPES[inEvent.pointerType];\n        }\n        return e;\n    };\n    /**\n     * Remove this pointer from the list of active pointers.\n     * @param {number} pointerId Pointer identifier.\n     */\n    MsSource.prototype.cleanup = function (pointerId) {\n        delete this.pointerMap[pointerId.toString()];\n    };\n    return MsSource;\n}(EventSource));\nexport default MsSource;\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport EventSource from './EventSource.js';\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n    this.dispatcher.fireNativeEvent(inEvent);\n}\nvar NativeSource = /** @class */ (function (_super) {\n    __extends(NativeSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n     */\n    function NativeSource(dispatcher) {\n        var _this = this;\n        var mapping = {\n            'pointerdown': pointerDown,\n            'pointermove': pointerMove,\n            'pointerup': pointerUp,\n            'pointerout': pointerOut,\n            'pointerover': pointerOver,\n            'pointercancel': pointerCancel,\n            'gotpointercapture': gotPointerCapture,\n            'lostpointercapture': lostPointerCapture\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        return _this;\n    }\n    return NativeSource;\n}(EventSource));\nexport default NativeSource;\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport _Event from '../events/Event.js';\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\nvar PointerEvent = /** @class */ (function (_super) {\n    __extends(PointerEvent, _super);\n    /**\n     * A class for pointer events.\n     *\n     * This class is used as an abstraction for mouse events,\n     * touch events and even native pointer events.\n     *\n     * @param {string} type The type of the event to create.\n     * @param {Event} originalEvent The event.\n     * @param {Object<string, ?>=} opt_eventDict An optional dictionary of\n     *    initial event properties.\n     */\n    function PointerEvent(type, originalEvent, opt_eventDict) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * @const\n         * @type {Event}\n         */\n        _this.originalEvent = originalEvent;\n        var eventDict = opt_eventDict ? opt_eventDict : {};\n        /**\n         * @type {number}\n         */\n        _this.buttons = getButtons(eventDict);\n        /**\n         * @type {number}\n         */\n        _this.pressure = getPressure(eventDict, _this.buttons);\n        // MouseEvent related properties\n        /**\n         * @type {boolean}\n         */\n        _this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n        /**\n         * @type {Object}\n         */\n        _this.view = 'view' in eventDict ? eventDict['view'] : null;\n        /**\n         * @type {number}\n         */\n        _this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n        /**\n         * @type {number}\n         */\n        _this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n        /**\n         * @type {boolean}\n         */\n        _this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n        /**\n         * @type {number}\n         */\n        _this.button = 'button' in eventDict ? eventDict['button'] : 0;\n        /**\n         * @type {Node}\n         */\n        _this.relatedTarget = 'relatedTarget' in eventDict ?\n            eventDict['relatedTarget'] : null;\n        // PointerEvent related properties\n        /**\n         * @const\n         * @type {number}\n         */\n        _this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.width = 'width' in eventDict ? eventDict['width'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.height = 'height' in eventDict ? eventDict['height'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n        /**\n         * @type {number}\n         */\n        _this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n        /**\n         * @type {string}\n         */\n        _this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n        /**\n         * @type {number}\n         */\n        _this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n        /**\n         * @type {boolean}\n         */\n        _this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n        // keep the semantics of preventDefault\n        if (originalEvent.preventDefault) {\n            _this.preventDefault = function () {\n                originalEvent.preventDefault();\n            };\n        }\n        return _this;\n    }\n    return PointerEvent;\n}(_Event));\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n        buttons = eventDict.buttons;\n    }\n    else {\n        switch (eventDict.which) {\n            case 1:\n                buttons = 1;\n                break;\n            case 2:\n                buttons = 4;\n                break;\n            case 3:\n                buttons = 2;\n                break;\n            default: buttons = 0;\n        }\n    }\n    return buttons;\n}\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n        pressure = eventDict.pressure;\n    }\n    else {\n        pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n}\n/**\n * Checks if the `buttons` property is supported.\n */\n(function () {\n    try {\n        var ev = new MouseEvent('click', { buttons: 1 });\n        HAS_BUTTONS = ev.buttons === 1;\n    }\n    catch (e) {\n        // pass\n    }\n})();\nexport default PointerEvent;\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { remove } from '../array.js';\nimport EventSource from './EventSource.js';\nimport { POINTER_ID } from './MouseSource.js';\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n    this.vacuumTouches_(inEvent);\n    this.setPrimaryTouch_(inEvent.changedTouches[0]);\n    this.dedupSynthMouse_(inEvent);\n    this.clickCount_++;\n    this.processTouches_(inEvent, this.overDown_);\n}\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n    this.processTouches_(inEvent, this.moveOverOut_);\n}\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n    this.dedupSynthMouse_(inEvent);\n    this.processTouches_(inEvent, this.upOut_);\n}\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n    this.processTouches_(inEvent, this.cancelOut_);\n}\nvar TouchSource = /** @class */ (function (_super) {\n    __extends(TouchSource, _super);\n    /**\n     * @param {import(\"./PointerEventHandler.js\").default} dispatcher The event handler.\n     * @param {import(\"./MouseSource.js\").default} mouseSource Mouse source.\n     */\n    function TouchSource(dispatcher, mouseSource) {\n        var _this = this;\n        var mapping = {\n            'touchstart': touchstart,\n            'touchmove': touchmove,\n            'touchend': touchend,\n            'touchcancel': touchcancel\n        };\n        _this = _super.call(this, dispatcher, mapping) || this;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = dispatcher.pointerMap;\n        /**\n         * @const\n         * @type {import(\"./MouseSource.js\").default}\n         */\n        _this.mouseSource = mouseSource;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.firstTouchId_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.clickCount_ = 0;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.resetId_;\n        /**\n         * Mouse event timeout: This should be long enough to\n         * ignore compat mouse events made by touch.\n         * @private\n         * @type {number}\n         */\n        _this.dedupTimeout_ = 2500;\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Touch} inTouch The in touch.\n     * @return {boolean} True, if this is the primary touch.\n     */\n    TouchSource.prototype.isPrimaryTouch_ = function (inTouch) {\n        return this.firstTouchId_ === inTouch.identifier;\n    };\n    /**\n     * Set primary touch if there are no pointers, or the only pointer is the mouse.\n     * @param {Touch} inTouch The in touch.\n     * @private\n     */\n    TouchSource.prototype.setPrimaryTouch_ = function (inTouch) {\n        var count = Object.keys(this.pointerMap).length;\n        if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n            this.firstTouchId_ = inTouch.identifier;\n            this.cancelResetClickCount_();\n        }\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.removePrimaryPointer_ = function (inPointer) {\n        if (inPointer.isPrimary) {\n            this.firstTouchId_ = undefined;\n            this.resetClickCount_();\n        }\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCount_ = function () {\n        this.resetId_ = setTimeout(this.resetClickCountHandler_.bind(this), CLICK_COUNT_TIMEOUT);\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.resetClickCountHandler_ = function () {\n        this.clickCount_ = 0;\n        this.resetId_ = undefined;\n    };\n    /**\n     * @private\n     */\n    TouchSource.prototype.cancelResetClickCount_ = function () {\n        if (this.resetId_ !== undefined) {\n            clearTimeout(this.resetId_);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent Browser event\n     * @param {Touch} inTouch Touch event\n     * @return {PointerEvent} A pointer object.\n     */\n    TouchSource.prototype.touchToPointer_ = function (browserEvent, inTouch) {\n        var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n        // Spec specifies that pointerId 1 is reserved for Mouse.\n        // Touch identifiers can start at 0.\n        // Add 2 to the touch identifier for compatibility.\n        e.pointerId = inTouch.identifier + 2;\n        // TODO: check if this is necessary?\n        //e.target = findTarget(e);\n        e.bubbles = true;\n        e.cancelable = true;\n        e.detail = this.clickCount_;\n        e.button = 0;\n        e.buttons = 1;\n        e.width = inTouch.radiusX || 0;\n        e.height = inTouch.radiusY || 0;\n        e.pressure = inTouch.force || 0.5;\n        e.isPrimary = this.isPrimaryTouch_(inTouch);\n        e.pointerType = POINTER_TYPE;\n        // make sure that the properties that are different for\n        // each `Touch` object are not copied from the BrowserEvent object\n        e.clientX = inTouch.clientX;\n        e.clientY = inTouch.clientY;\n        e.screenX = inTouch.screenX;\n        e.screenY = inTouch.screenY;\n        return e;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} inEvent Touch event\n     * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n     */\n    TouchSource.prototype.processTouches_ = function (inEvent, inFunction) {\n        var touches = Array.prototype.slice.call(inEvent.changedTouches);\n        var count = touches.length;\n        function preventDefault() {\n            inEvent.preventDefault();\n        }\n        for (var i = 0; i < count; ++i) {\n            var pointer = this.touchToPointer_(inEvent, touches[i]);\n            // forward touch preventDefaults\n            pointer.preventDefault = preventDefault;\n            inFunction.call(this, inEvent, pointer);\n        }\n    };\n    /**\n     * @private\n     * @param {TouchList} touchList The touch list.\n     * @param {number} searchId Search identifier.\n     * @return {boolean} True, if the `Touch` with the given id is in the list.\n     */\n    TouchSource.prototype.findTouch_ = function (touchList, searchId) {\n        var l = touchList.length;\n        for (var i = 0; i < l; i++) {\n            var touch = touchList[i];\n            if (touch.identifier === searchId) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * In some instances, a touchstart can happen without a touchend. This\n     * leaves the pointermap in a broken state.\n     * Therefore, on every touchstart, we remove the touches that did not fire a\n     * touchend event.\n     * To keep state globally consistent, we fire a pointercancel for\n     * this \"abandoned\" touch\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.vacuumTouches_ = function (inEvent) {\n        var touchList = inEvent.touches;\n        // pointerMap.getCount() should be < touchList.length here,\n        // as the touchstart has not been processed yet.\n        var keys = Object.keys(this.pointerMap);\n        var count = keys.length;\n        if (count >= touchList.length) {\n            var d = [];\n            for (var i = 0; i < count; ++i) {\n                var key = Number(keys[i]);\n                var value = this.pointerMap[key];\n                // Never remove pointerId == 1, which is mouse.\n                // Touch identifiers are 2 smaller than their pointerId, which is the\n                // index in pointermap.\n                if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n                    d.push(value.out);\n                }\n            }\n            for (var i = 0; i < d.length; ++i) {\n                this.cancelOut_(inEvent, d[i]);\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer object.\n     */\n    TouchSource.prototype.overDown_ = function (browserEvent, inPointer) {\n        this.pointerMap[inPointer.pointerId] = {\n            target: inPointer.target,\n            out: inPointer,\n            outTarget: inPointer.target\n        };\n        this.dispatcher.over(inPointer, browserEvent);\n        this.dispatcher.enter(inPointer, browserEvent);\n        this.dispatcher.down(inPointer, browserEvent);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.moveOverOut_ = function (browserEvent, inPointer) {\n        var event = inPointer;\n        var pointer = this.pointerMap[event.pointerId];\n        // a finger drifted off the screen, ignore it\n        if (!pointer) {\n            return;\n        }\n        var outEvent = pointer.out;\n        var outTarget = pointer.outTarget;\n        this.dispatcher.move(event, browserEvent);\n        if (outEvent && outTarget !== event.target) {\n            outEvent.relatedTarget = event.target;\n            /** @type {Object} */ (event).relatedTarget = outTarget;\n            // recover from retargeting by shadow\n            outEvent.target = outTarget;\n            if (event.target) {\n                this.dispatcher.leaveOut(outEvent, browserEvent);\n                this.dispatcher.enterOver(event, browserEvent);\n            }\n            else {\n                // clean up case when finger leaves the screen\n                /** @type {Object} */ (event).target = outTarget;\n                /** @type {Object} */ (event).relatedTarget = null;\n                this.cancelOut_(browserEvent, event);\n            }\n        }\n        pointer.out = event;\n        pointer.outTarget = event.target;\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent An event.\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.upOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.up(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {TouchEvent} browserEvent The event.\n     * @param {PointerEvent} inPointer The in pointer.\n     */\n    TouchSource.prototype.cancelOut_ = function (browserEvent, inPointer) {\n        this.dispatcher.cancel(inPointer, browserEvent);\n        this.dispatcher.out(inPointer, browserEvent);\n        this.dispatcher.leave(inPointer, browserEvent);\n        this.cleanUpPointer_(inPointer);\n    };\n    /**\n     * @private\n     * @param {PointerEvent} inPointer The inPointer object.\n     */\n    TouchSource.prototype.cleanUpPointer_ = function (inPointer) {\n        delete this.pointerMap[inPointer.pointerId];\n        this.removePrimaryPointer_(inPointer);\n    };\n    /**\n     * Prevent synth mouse events from creating pointer events.\n     *\n     * @private\n     * @param {TouchEvent} inEvent The in event.\n     */\n    TouchSource.prototype.dedupSynthMouse_ = function (inEvent) {\n        var lts = this.mouseSource.lastTouches;\n        var t = inEvent.changedTouches[0];\n        // only the primary finger will synth mouse events\n        if (this.isPrimaryTouch_(t)) {\n            // remember x/y of last touch\n            var lt_1 = [t.clientX, t.clientY];\n            lts.push(lt_1);\n            setTimeout(function () {\n                // remove touch after timeout\n                remove(lts, lt_1);\n            }, this.dedupTimeout_);\n        }\n    };\n    return TouchSource;\n}(EventSource));\nexport default TouchSource;\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n// Based on https://github.com/Polymer/PointerEvents\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\nimport { listen, unlisten } from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport { POINTER, MSPOINTER, TOUCH } from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, { prepareEvent as prepareMouseEvent } from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n    // MouseEvent\n    ['bubbles', false],\n    ['cancelable', false],\n    ['view', null],\n    ['detail', null],\n    ['screenX', 0],\n    ['screenY', 0],\n    ['clientX', 0],\n    ['clientY', 0],\n    ['ctrlKey', false],\n    ['altKey', false],\n    ['shiftKey', false],\n    ['metaKey', false],\n    ['button', 0],\n    ['relatedTarget', null],\n    // DOM Level 3\n    ['buttons', 0],\n    // PointerEvent\n    ['pointerId', 0],\n    ['width', 0],\n    ['height', 0],\n    ['pressure', 0],\n    ['tiltX', 0],\n    ['tiltY', 0],\n    ['pointerType', ''],\n    ['hwTimestamp', 0],\n    ['isPrimary', false],\n    // event instance\n    ['type', ''],\n    ['target', null],\n    ['currentTarget', null],\n    ['which', 0]\n];\nvar PointerEventHandler = /** @class */ (function (_super) {\n    __extends(PointerEventHandler, _super);\n    /**\n     * @param {Element|HTMLDocument} element Viewport element.\n     */\n    function PointerEventHandler(element) {\n        var _this = _super.call(this) || this;\n        /**\n         * @const\n         * @private\n         * @type {Element|HTMLDocument}\n         */\n        _this.element_ = element;\n        /**\n         * @const\n         * @type {!Object<string, Event|Object>}\n         */\n        _this.pointerMap = {};\n        /**\n         * @type {Object<string, function(Event): void>}\n         * @private\n         */\n        _this.eventMap_ = {};\n        /**\n         * @type {Array<import(\"./EventSource.js\").default>}\n         * @private\n         */\n        _this.eventSourceList_ = [];\n        _this.registerSources();\n        return _this;\n    }\n    /**\n     * Set up the event sources (mouse, touch and native pointers)\n     * that generate pointer events.\n     */\n    PointerEventHandler.prototype.registerSources = function () {\n        if (POINTER) {\n            this.registerSource('native', new NativeSource(this));\n        }\n        else if (MSPOINTER) {\n            this.registerSource('ms', new MsSource(this));\n        }\n        else {\n            var mouseSource = new MouseSource(this);\n            this.registerSource('mouse', mouseSource);\n            if (TOUCH) {\n                this.registerSource('touch', new TouchSource(this, mouseSource));\n            }\n        }\n        // register events on the viewport element\n        this.register_();\n    };\n    /**\n     * Add a new event source that will generate pointer events.\n     *\n     * @param {string} name A name for the event source\n     * @param {import(\"./EventSource.js\").default} source The source event.\n     */\n    PointerEventHandler.prototype.registerSource = function (name, source) {\n        var s = source;\n        var newEvents = s.getEvents();\n        if (newEvents) {\n            newEvents.forEach(function (e) {\n                var handler = s.getHandlerForEvent(e);\n                if (handler) {\n                    this.eventMap_[e] = handler.bind(s);\n                }\n            }.bind(this));\n            this.eventSourceList_.push(s);\n        }\n    };\n    /**\n     * Set up the events for all registered event sources.\n     * @private\n     */\n    PointerEventHandler.prototype.register_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.addEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Remove all registered events.\n     * @private\n     */\n    PointerEventHandler.prototype.unregister_ = function () {\n        var l = this.eventSourceList_.length;\n        for (var i = 0; i < l; i++) {\n            var eventSource = this.eventSourceList_[i];\n            this.removeEvents_(eventSource.getEvents());\n        }\n    };\n    /**\n     * Calls the right handler for a new event.\n     * @private\n     * @param {Event} inEvent Browser event.\n     */\n    PointerEventHandler.prototype.eventHandler_ = function (inEvent) {\n        var type = inEvent.type;\n        var handler = this.eventMap_[type];\n        if (handler) {\n            handler(inEvent);\n        }\n    };\n    /**\n     * Setup listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.addEvents_ = function (events) {\n        events.forEach(function (eventName) {\n            listen(this.element_, eventName, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Unregister listeners for the given events.\n     * @private\n     * @param {Array<string>} events List of events.\n     */\n    PointerEventHandler.prototype.removeEvents_ = function (events) {\n        events.forEach(function (e) {\n            unlisten(this.element_, e, this.eventHandler_, this);\n        }.bind(this));\n    };\n    /**\n     * Returns a snapshot of inEvent, with writable properties.\n     *\n     * @param {Event} event Browser event.\n     * @param {Event|Touch} inEvent An event that contains\n     *    properties to copy.\n     * @return {Object} An object containing shallow copies of\n     *    `inEvent`'s properties.\n     */\n    PointerEventHandler.prototype.cloneEvent = function (event, inEvent) {\n        var eventCopy = {};\n        for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n            var p = CLONE_PROPS[i][0];\n            eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n        }\n        return eventCopy;\n    };\n    // EVENTS\n    /**\n     * Triggers a 'pointerdown' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.down = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n    };\n    /**\n     * Triggers a 'pointermove' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.move = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerup' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.up = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERUP, data, event);\n    };\n    /**\n     * Triggers a 'pointerenter' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enter = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERENTER, data, event);\n    };\n    /**\n     * Triggers a 'pointerleave' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leave = function (data, event) {\n        data.bubbles = false;\n        this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n    };\n    /**\n     * Triggers a 'pointerover' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.over = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROVER, data, event);\n    };\n    /**\n     * Triggers a 'pointerout' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.out = function (data, event) {\n        data.bubbles = true;\n        this.fireEvent(PointerEventType.POINTEROUT, data, event);\n    };\n    /**\n     * Triggers a 'pointercancel' event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.cancel = function (data, event) {\n        this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n    };\n    /**\n     * Triggers a combination of 'pointerout' and 'pointerleave' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.leaveOut = function (data, event) {\n        this.out(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.leave(data, event);\n        }\n    };\n    /**\n     * Triggers a combination of 'pointerover' and 'pointerevents' events.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.enterOver = function (data, event) {\n        this.over(data, event);\n        if (!this.contains_(data.target, data.relatedTarget)) {\n            this.enter(data, event);\n        }\n    };\n    /**\n     * @private\n     * @param {Element} container The container element.\n     * @param {Element} contained The contained element.\n     * @return {boolean} Returns true if the container element\n     *   contains the other element.\n     */\n    PointerEventHandler.prototype.contains_ = function (container, contained) {\n        if (!container || !contained) {\n            return false;\n        }\n        return container.contains(contained);\n    };\n    // EVENT CREATION AND TRACKING\n    /**\n     * Creates a new Event of type `inType`, based on the information in\n     * `data`.\n     *\n     * @param {string} inType A string representing the type of event to create.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     * @return {PointerEvent} A PointerEvent of type `inType`.\n     */\n    PointerEventHandler.prototype.makeEvent = function (inType, data, event) {\n        return new PointerEvent(inType, event, data);\n    };\n    /**\n     * Make and dispatch an event in one call.\n     * @param {string} inType A string representing the type of event.\n     * @param {Object} data Pointer event data.\n     * @param {Event} event The event.\n     */\n    PointerEventHandler.prototype.fireEvent = function (inType, data, event) {\n        var e = this.makeEvent(inType, data, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Creates a pointer event from a native pointer event\n     * and dispatches this event.\n     * @param {Event} event A platform event with a target.\n     */\n    PointerEventHandler.prototype.fireNativeEvent = function (event) {\n        var e = this.makeEvent(event.type, event, event);\n        this.dispatchEvent(e);\n    };\n    /**\n     * Wrap a native mouse event into a pointer event.\n     * This proxy method is required for the legacy IE support.\n     * @param {string} eventType The pointer event type.\n     * @param {Event} event The event.\n     * @return {PointerEvent} The wrapped event.\n     */\n    PointerEventHandler.prototype.wrapMouseEvent = function (eventType, event) {\n        var pointerEvent = this.makeEvent(eventType, prepareMouseEvent(event, this), event);\n        return pointerEvent;\n    };\n    /**\n     * @inheritDoc\n     */\n    PointerEventHandler.prototype.disposeInternal = function () {\n        this.unregister_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return PointerEventHandler;\n}(EventTarget));\nexport default PointerEventHandler;\n//# sourceMappingURL=PointerEventHandler.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEventHandler\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance ?\n            moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {import(\"./pointer/PointerEvent.js\").default}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        /**\n         * Event handler which generates pointer events for\n         * the viewport element.\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.pointerEventHandler_ = new PointerEventHandler(element);\n        /**\n         * Event handler which generates pointer events for\n         * the document (used when dragging).\n         *\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.documentPointerEventHandler_ = null;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(_this.pointerEventHandler_, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserPointerEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            /* Set up a pointer event handler on the `document`,\n             * which is required when the pointer is moved outside\n             * the viewport when dragging.\n             */\n            this.documentPointerEventHandler_ =\n                new PointerEventHandler(document);\n            this.dragListenerKeys_.push(listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(this.documentPointerEventHandler_, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.pointerEventHandler_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n        }\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserPointerEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n        // Some native android browser triggers mousemove events during small period\n        // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n        // https://code.google.com/p/android/issues/detail?id=19827\n        // ex: Galaxy Tab P3110 + Android 4.1.1\n        pointerEvent.preventDefault();\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserPointerEvent matches the PointerEvent type.\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserPointerEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        if (this.documentPointerEventHandler_) {\n            this.documentPointerEventHandler_.dispose();\n            this.documentPointerEventHandler_ = null;\n        }\n        if (this.pointerEventHandler_) {\n            this.pointerEventHandler_.dispose();\n            this.pointerEventHandler_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend'\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view'\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete'\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n    ABORT: 5\n};\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < (count >> 1)) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count &&\n                priorities[rIndex] < priorities[lIndex] ?\n                rIndex : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport { listen, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return ( /** @type {import(\"./Tile.js\").default} */(element[0]).getKey());\n        }) || this;\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n            state === TileState.EMPTY || state === TileState.ABORT) {\n            unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var abortedTiles = false;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.ABORT) {\n                abortedTiles = true;\n            }\n            else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n        if (newLoads === 0 && abortedTiles) {\n            // Do not stop the render loop when all wanted tiles were aborted due to\n            // a small, saturated tile cache.\n            this.tileChangeCallback_();\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = maxX = (maxX + minX) / 2;\n            }\n            if (minY > maxY) {\n                minY = maxY = (maxY + minY) / 2;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x += -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y += -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                    ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { linearFindNearest } from './array.js';\nimport { getHeight, getWidth } from './extent';\nimport { clamp } from './math';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into acocunt the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *= Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio + 1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /= Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) / ratio + 1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var offset = -direction * (0.5 - 1e-9) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var zoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent ?\n                getViewportClampedResolution(maxResolution, opt_maxExtent, size) :\n                maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = 2 * Math.PI / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation'\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/string\n */\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n    var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n    var decimal = numberString.indexOf('.');\n    decimal = decimal === -1 ? numberString.length : decimal;\n    return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n    var s1 = ('' + v1).split('.');\n    var s2 = ('' + v2).split('.');\n    for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n        var n1 = parseInt(s1[i] || '0', 10);\n        var n2 = parseInt(s2[i] || '0', 10);\n        if (n1 > n2) {\n            return 1;\n        }\n        if (n2 > n1) {\n            return -1;\n        }\n    }\n    return 0;\n}\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + r * dx / d;\n    var y = y0 + r * dy / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = (dx === 0 && dy === 0) ? 0 :\n        ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - (deg * 3600) - (min * 60);\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) + '\\u2033' +\n        (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { getUid } from './util.js';\nimport { VOID } from './functions.js';\nimport { createExtent, none as centerNone } from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport { createSnapToResolutions, createSnapToPower } from './resolutionconstraint.js';\nimport { createSnapToZero, createSnapToN, none as rotationNone, disable } from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { linearFindNearest } from './array.js';\nimport { assert } from './asserts.js';\nimport { add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual } from './coordinate.js';\nimport { inAndOut } from './easing.js';\nimport { getForViewAndSize, getCenter, getHeight, getWidth, isEmpty } from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\nimport { clamp, modulo } from './math.js';\nimport { assign } from './obj.js';\nimport { createProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport { equals } from './coordinate';\nimport { easeOut } from './easing';\nimport { createMinMaxResolution } from './resolutionconstraint';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] No more than one world is visible.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenter(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.resolveConstraints(0);\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenter();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        this.animate_.apply(this, arguments);\n    };\n    /**\n     * @private\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animate_ = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenter(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n        }\n        this.animations_.length = 0;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1 ?\n                        animation.targetResolution :\n                        animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getSizeFromViewport_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n                    var rotation = progress === 1 ?\n                        modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n                        animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenter();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n            var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getSizeFromViewport_ = function (opt_rotation) {\n        var size = [100, 100];\n        var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n        var element = document.querySelector(selector);\n        if (element) {\n            var metrics = getComputedStyle(element);\n            size[0] = parseInt(metrics.width, 10);\n            size[1] = parseInt(metrics.height, 10);\n        }\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            size[0] = Math.abs(w * Math.cos(opt_rotation)) + Math.abs(h * Math.sin(opt_rotation));\n            size[1] = Math.abs(w * Math.sin(opt_rotation)) + Math.abs(h * Math.cos(opt_rotation));\n        }\n        return size;\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER)));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        var size = opt_size || this.getSizeFromViewport_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.maxResolution_;\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n            return value;\n        });\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio for center rounding.\n     * @return {State} View state.\n     */\n    View.prototype.getState = function (pixelRatio) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom()\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return this.resolutions_[baseLevel] / Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1));\n        }\n        else {\n            return this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_);\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getSizeFromViewport_();\n        }\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            geometry = polygonFromExtent(geometryOrExtent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            geometryOrExtent = geometryOrExtent.getExtent();\n            geometry = polygonFromExtent(geometryOrExtent);\n            geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n        }\n        else {\n            geometry = geometryOrExtent;\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtent([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution) ? minResolution :\n            Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n        centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animate_({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenter([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenter() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenter([center[0] + deltaCoordinates[0], center[1] + deltaCoordinates[1]]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getSizeFromViewport_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @observable\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor !== undefined) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {ViewHint} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) || !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getSizeFromViewport_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenter() ||\n            !equals(this.getCenter(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animate_({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: opt_anchor\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} opt_direction Direction. Default is `0`. Specify `-1` or `1` to return\n     * the available value respectively lower or greater than the target one. Leaving `0` will simply choose\n     * the nearest available value.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getSizeFromViewport_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined ? options.smoothExtentConstraint : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ?\n        options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ?\n        options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ?\n        options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ?\n        options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined ? options.smoothResolutionConstraint : true;\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution = resolutions[maxZoom] !== undefined ?\n            resolutions[maxZoom] : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var projection = createProjection(options.projection, 'EPSG:3857');\n        var extent = projection.getExtent();\n        var size = !extent ?\n            // use an extent that can fit the whole world if need be\n            360 * METERS_PER_UNIT[Units.DEGREES] /\n                projection.getMetersPerUnit() :\n            Math.max(getWidth(extent), getHeight(extent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution / Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom = minZoom + Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !options.constrainOnlyCenter && options.extent);\n        }\n        else {\n            var constrainOnlyCenter = options.constrainOnlyCenter;\n            var extent_1 = options.extent;\n            if (!multiWorld && !extent_1 && projection.isGlobal()) {\n                constrainOnlyCenter = false;\n                extent_1 = projection.getExtent();\n            }\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent_1);\n        }\n    }\n    return { constraint: resolutionConstraint, maxResolution: maxResolution,\n        minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ?\n        options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/dom\n */\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n    var canvas = document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    return canvas.getContext('2d');\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    SOURCE: 'source'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { clamp } from '../math.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ || /** @type {?} */ ({\n            layer: this,\n            managed: opt_managed === undefined ? true : opt_managed\n        });\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex = this.getZIndex() || (state.managed === false ? Infinity : 0);\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return (\n        /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT)));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error'\n};\n//# sourceMappingURL=State.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getIntersection } from '../extent.js';\nimport BaseLayer from './Base.js';\nimport { assign, clear } from '../obj.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers'\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        listen(_this, getChangeEventType(Property.LAYERS), _this.handleLayersChanged_, _this);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof /** @type {?} */ (layers).getArray === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return (\n        /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS)));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @inheritDoc\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport { getUid } from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { assert } from './asserts.js';\nimport { removeNode } from './dom.js';\nimport { listen, unlistenByKey, unlisten } from './events.js';\nimport EventType from './events/EventType.js';\nimport { createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty } from './extent.js';\nimport { TRUE } from './functions.js';\nimport { DEVICE_PIXEL_RATIO, TOUCH } from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport { hasArea } from './size.js';\nimport { DROP } from './structs/PriorityQueue.js';\nimport { create as createTransform, apply as applyTransform } from './transform.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<*>} declutterItems\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = options.pixelRatio !== undefined ?\n            options.pixelRatio : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        // prevent page zoom on IE >= 10 browsers\n        _this.viewport_.style.msTouchAction = 'none';\n        _this.viewport_.style.touchAction = 'none';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = new MapBrowserEventHandler(_this, options.moveTolerance);\n        for (var key in MapBrowserEventType) {\n            listen(_this.mapBrowserEventHandler_, MapBrowserEventType[key], _this.handleMapBrowserEvent, _this);\n        }\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        listen(_this.viewport_, EventType.CONTEXTMENU, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.WHEEL, _this.handleBrowserEvent, _this);\n        listen(_this.viewport_, EventType.MOUSEWHEEL, _this.handleBrowserEvent, _this);\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {import(\"./events.js\").EventsKey}\n         */\n        _this.labelCacheListenerKey_;\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = _this.createRenderer();\n        /**\n         * @type {function(Event): void|undefined}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate}\n         */\n        _this.focus_ = null;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        /**\n         * Uids of features to skip at rendering time.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.skippedFeatureUids_ = {};\n        listen(_this, getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_, _this);\n        listen(_this, getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_, _this);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        (function (control) {\n            control.setMap(this);\n        }).bind(_this));\n        listen(_this.controls, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.controls, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        (function (interaction) {\n            interaction.setMap(this);\n        }).bind(_this));\n        listen(_this.interactions, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }, _this);\n        listen(_this.interactions, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }, _this);\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        listen(_this.overlays_, CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }, _this);\n        listen(_this.overlays_, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }, _this);\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     * Attach a label cache for listening to font changes.\n     * @param {import(\"./events/Target.js\").default} labelCache Label cache.\n     */\n    PluggableMap.prototype.attachLabelCache = function (labelCache) {\n        this.detachLabelCache();\n        this.labelCacheListenerKey_ = listen(labelCache, EventType.CLEAR, this.redrawText.bind(this));\n    };\n    /**\n     * Detach the label cache, i.e. no longer listen to font changes.\n     */\n    PluggableMap.prototype.detachLabelCache = function () {\n        if (this.labelCacheListenerKey_) {\n            unlistenByKey(this.labelCacheListenerKey_);\n        }\n    };\n    /**\n     *\n     * @inheritDoc\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.mapBrowserEventHandler_.dispose();\n        unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n        unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n        if (this.handleResize_ !== undefined) {\n            removeEventListener(EventType.RESIZE, this.handleResize_, false);\n            this.handleResize_ = undefined;\n        }\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n            this.animationDelayKey_ = undefined;\n        }\n        this.detachLabelCache();\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ?\n            opt_options.layerFilter : TRUE;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * `null` if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = null;\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!features) {\n                features = [];\n            }\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || /** @type {AtPixelOptions} */ ({});\n        var hitTolerance = options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixel(pixel);\n        opt_options = opt_options !== undefined ? opt_options :\n            /** @type {AtPixelOptions} */ ({});\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined ?\n            opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {Event} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {Event|TouchEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = 'changedTouches' in event ?\n            /** @type {TouchEvent} */ (event).changedTouches[0] :\n            /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string' ? document.getElementById(target) : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return (\n        /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP)));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return (\n        /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE)));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return (\n        /** @type {View} */ (this.get(MapProperty.VIEW)));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        // Filter out tiles at higher zoom levels than the current zoom level, or that\n        // are outside the visible extent.\n        var frameState = this.frameState_;\n        if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n            return DROP;\n        }\n        if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n            return DROP;\n        }\n        // Prioritize the highest zoom level tiles closest to the focus.\n        // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n        // Within a zoom level, tiles are prioritized by the distance in pixels\n        // between the center of the tile and the focus.  The factor of 65536 means\n        // that the prioritization should behave as desired for tiles up to\n        // 65536 * Math.log(2) = 45426 pixels from the focus.\n        var deltaX = tileCenter[0] - frameState.focus[0];\n        var deltaY = tileCenter[1] - frameState.focus[1];\n        return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    };\n    /**\n     * @param {Event} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var target = mapBrowserEvent.originalEvent.target;\n        while (target instanceof HTMLElement) {\n            if (target.parentElement === this.overlayContainerStopEvent_) {\n                return;\n            }\n            target = target.parentElement;\n        }\n        this.focus_ = mapBrowserEvent.coordinate;\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() && !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.keyHandlerKeys_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n        }\n        if (!targetElement) {\n            removeNode(this.viewport_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            var keyboardEventTarget = !this.keyboardEventTarget_ ?\n                targetElement : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.viewport_.setAttribute('data-view', getUid(view));\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this)\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var viewState;\n        var size = this.getSize();\n        var view = this.getView();\n        var extent = createEmpty();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            viewState = view.getState(this.pixelRatio_);\n            frameState = /** @type {FrameState} */ ({\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState ? previousFrameState.declutterItems : [],\n                extent: extent,\n                focus: this.focus_ ? this.focus_ : viewState.center,\n                index: this.frameIndex_++,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                skippedFeatureUids: this.skippedFeatureUids_,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {}\n            });\n        }\n        if (frameState) {\n            frameState.extent = getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, frameState.size, extent);\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.skipFeature = function (feature) {\n        this.skippedFeatureUids_[getUid(feature)] = true;\n        this.render();\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth'])\n            ]);\n        }\n    };\n    /**\n     * @param {import(\"./Feature.js\").default} feature Feature.\n     */\n    PluggableMap.prototype.unskipFeature = function (feature) {\n        delete this.skippedFeatureUids_[getUid(feature)];\n        this.render();\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n            document.getElementById(options.keyboardEventTarget) :\n            options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n        /** @type {LayerGroup} */ (options.layers) : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] = options.view !== undefined ?\n        options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.controls).getArray === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.interactions).getArray === 'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof /** @type {?} */ (options.overlays).getArray === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/css\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function () {\n    var style;\n    var cache = {};\n    return function (font) {\n        if (!style) {\n            style = document.createElement('div').style;\n        }\n        if (!(font in cache)) {\n            style.font = font;\n            var family = style.fontFamily;\n            style.font = '';\n            if (!family) {\n                return null;\n            }\n            cache[font] = family.split(/,\\s?/);\n        }\n        return cache[font];\n    };\n})();\n//# sourceMappingURL=css.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport { VOID } from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport { removeNode } from '../dom.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = options.element ? options.element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        /**\n         * @type {function(import(\"../MapEvent.js\").default): void}\n         */\n        _this.render = options.render ? options.render : VOID;\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_ ?\n                this.target_ : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ = typeof target === 'string' ?\n            document.getElementById(target) :\n            target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport { assign } from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        listen(_this, getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_, _this);\n        var source = options.source ? /** @type {SourceType} */ (options.source) : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @inheritDoc\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n      * @inheritDoc\n      */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState) {\n        var layerRenderer = this.getRenderer();\n        var layerState = this.getLayerState();\n        if (layerRenderer.prepareFrame(frameState, layerState)) {\n            return layerRenderer.renderFrame(frameState, layerState);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                renderEvent.frameState.layerStatesArray.push(this.getLayerState(false));\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n    return layerState.visible && resolution >= layerState.minResolution &&\n        resolution < layerState.maxResolution;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport { equals } from '../array.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { removeChildren, replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        var resolution = frameState.viewState.resolution;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, resolution)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    return Attribution;\n}(Control));\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n}\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        if (view.getRotation() !== undefined) {\n            if (this.duration_ > 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    return Rotate;\n}(Control));\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        return;\n    }\n    var rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n        var transform = 'rotate(' + rotation + 'rad)';\n        if (this.autoHide_) {\n            var contains = this.element.classList.contains(CLASS_HIDDEN);\n            if (!contains && rotation === 0) {\n                this.element.classList.add(CLASS_HIDDEN);\n            }\n            else if (contains && rotation !== 0) {\n                this.element.classList.remove(CLASS_HIDDEN);\n            }\n        }\n        this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n}\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n            options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n            options.zoomOutTipLabel : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel);\n        listen(inElement, EventType.CLICK, _this.handleClick_.bind(_this, delta));\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel);\n        listen(outElement, EventType.CLICK, _this.handleClick_.bind(_this, -delta));\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Collection from './Collection.js';\nimport Attribution from './control/Attribution.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ?\n        options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active'\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport { easeOut, linear } from '../easing.js';\nimport InteractionProperty from './Property.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions} options Options.\n     */\n    function Interaction(options) {\n        var _this = _super.call(this) || this;\n        if (options.handleEvent) {\n            _this.handleEvent = options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenter();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animate_({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center)\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    return DoubleClickZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n        var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n        var map = mapBrowserEvent.map;\n        var anchor = mapBrowserEvent.coordinate;\n        var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n        var view = map.getView();\n        zoomByDelta(view, delta, anchor, this.duration_);\n        mapBrowserEvent.preventDefault();\n        stopEvent = true;\n    }\n    return !stopEvent;\n}\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { assert } from '../asserts.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport { WEBKIT, MAC } from '../has.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement() === document.activeElement;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 &&\n        !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return !originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey;\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var target = mapBrowserEvent.originalEvent.target;\n    var tagName = /** @type {Element} */ (target).tagName;\n    return (tagName !== 'INPUT' &&\n        tagName !== 'SELECT' &&\n        tagName !== 'TEXTAREA');\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @override\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                if (handled) {\n                    mapBrowserEvent.preventDefault();\n                }\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.pointerEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type ==\n                MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP;\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport { scale as scaleCoordinate, rotate as rotateCoordinate } from '../coordinate.js';\nimport { easeOut } from '../easing.js';\nimport { noModifierKeys, primaryAction } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : defaultCondition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1]\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenter(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n                var centerpx = map.getPixelFromCoordinate(center);\n                var dest = map.getCoordinateFromPixel([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle)\n                ]);\n                view.animate({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport { disable } from '../rotationconstraint.js';\nimport { altShiftKeysOnly, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { FALSE } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotation(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = style.top = style.width = style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]]\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport { always, mouseOnly, mouseActionButton } from '../events/condition.js';\nimport { VOID } from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        /**\n         * Function to execute just before `onboxend` is fired\n         * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n         * @private\n         */\n        _this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition ?\n            options.boxEndCondition : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd_(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter } from '../extent.js';\nimport DragBox from './DragBox.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            onBoxEnd: onBoxEnd\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    return DragZoom;\n}(DragBox));\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n    var map = this.getMap();\n    var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n    var extent = this.getGeometry().getExtent();\n    if (this.out_) {\n        var mapExtent = view.calculateExtent(size);\n        var boxPixelExtent = createOrUpdateFromCoordinates([\n            map.getPixelFromCoordinate(getBottomLeft(extent)),\n            map.getPixelFromCoordinate(getTopRight(extent))\n        ]);\n        var factor = view.getResolutionForExtent(boxPixelExtent, size);\n        scaleFromCenter(mapExtent, 1 / factor);\n        extent = mapExtent;\n    }\n    var resolution = view.getConstrainedResolution(view.getResolutionForExtent(extent, size));\n    var center = view.getConstrainedCenter(getCenter(extent), resolution);\n    view.animate({\n        resolution: resolution,\n        center: center,\n        duration: this.duration_,\n        easing: easeOut\n    });\n}\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport { rotate as rotateCoordinate } from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport Interaction, { pan } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return noModifierKeys(mapBrowserEvent) &&\n                targetNotEditable(mapBrowserEvent);\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition !== undefined ?\n            options.condition : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ = options.pixelDelta !== undefined ?\n            options.pixelDelta : 128;\n        return _this;\n    }\n    return KeyboardPan;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var keyCode = keyEvent.keyCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (keyCode == KeyCode.DOWN ||\n                keyCode == KeyCode.LEFT ||\n                keyCode == KeyCode.RIGHT ||\n                keyCode == KeyCode.UP)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n            var deltaX = 0, deltaY = 0;\n            if (keyCode == KeyCode.DOWN) {\n                deltaY = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.LEFT) {\n                deltaX = -mapUnitsDelta;\n            }\n            else if (keyCode == KeyCode.RIGHT) {\n                deltaX = mapUnitsDelta;\n            }\n            else {\n                deltaY = mapUnitsDelta;\n            }\n            var delta = [deltaX, deltaY];\n            rotateCoordinate(delta, view.getRotation());\n            pan(view, delta, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport { targetNotEditable } from '../events/condition.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    return KeyboardZoom;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n    var stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN ||\n        mapBrowserEvent.type == EventType.KEYPRESS) {\n        var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n        var charCode = keyEvent.charCode;\n        if (this.condition_(mapBrowserEvent) &&\n            (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n            var map = mapBrowserEvent.map;\n            var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, undefined, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n    }\n    return !stopEvent;\n}\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport { always } from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX, SAFARI } from '../has.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel'\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.trackpadDeltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @override\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX &&\n                wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n            delta = -wheelEvent.wheelDeltaY;\n            if (SAFARI) {\n                delta /= 3;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ?\n                Mode.TRACKPAD :\n                Mode.WHEEL;\n        }\n        if (this.mode_ === Mode.TRACKPAD) {\n            var view = map.getView();\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n            view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n        zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ &&\n                Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotation(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport { FALSE } from '../functions.js';\nimport PointerInteraction, { centroid as centroidFromPointers } from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixel(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolution(scaleDelta, this.anchor_);\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport { focus } from './events/condition.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n        options.altShiftDragRotate : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ?\n        options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            condition: options.onFocusOnly ? focus : undefined,\n            kinetic: kinetic\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n        true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n        options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            condition: options.onFocusOnly ? focus : undefined,\n            duration: options.zoomDuration\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ?\n        options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     * @param {?import(\"../webgl/Helper.js\").default=} opt_glContext WebGL Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Only available when a Canvas renderer is used, null\n         * otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        /**\n         * WebGL context. Only available when a WebGL renderer is used, null\n         * otherwise.\n         * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n         * @api\n         */\n        _this.glContext = opt_glContext;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) { // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) { // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) { // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n        * @type {!Object<string, import(\"./IconImage.js\").default>}\n        * @private\n        */\n        this.cache_ = {};\n        /**\n        * @type {number}\n        * @private\n        */\n        this.cacheSize_ = 0;\n        /**\n        * @type {number}\n        * @private\n        */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n    * FIXME empty description for jsdoc\n    */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @return {import(\"./IconImage.js\").default} Icon image.\n    */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n    * @param {string} src Src.\n    * @param {?string} crossOrigin Cross origin.\n    * @param {import(\"../color.js\").Color} color Color.\n    * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n    */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n    * Set the cache size of the icon cache. Default is `32`. Change this value when\n    * your map uses more than 32 different icon images and you are not caching icon\n    * styles on the application level.\n    * @param {number} maxCacheSize Cache max size.\n    * @api\n    */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroup) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/structs/LRUCache\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /** @class */ (function (_super) {\n    __extends(LRUCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {number}\n         */\n        _this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        _this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        _this.newest_ = null;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n        this.dispatchEvent(EventType.CLEAR);\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}(EventTarget));\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n/**\n * @module ol/render/canvas/LabelCache\n */\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /** @class */ (function (_super) {\n    __extends(LabelCache, _super);\n    /**\n     * @inheritDoc\n     */\n    function LabelCache(opt_highWaterMark) {\n        var _this = _super.call(this, opt_highWaterMark) || this;\n        _this.consumers = {};\n        return _this;\n    }\n    LabelCache.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this.consumers = {};\n    };\n    /**\n     * @override\n     * @param {string} key Label key.\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     * @return {HTMLCanvasElement} Label.\n     */\n    LabelCache.prototype.get = function (key, consumer) {\n        var canvas = _super.prototype.get.call(this, key);\n        var consumerId = getUid(consumer);\n        if (!(consumerId in this.consumers)) {\n            this.consumers[consumerId] = {};\n        }\n        this.consumers[consumerId][key] = true;\n        return canvas;\n    };\n    LabelCache.prototype.prune = function () {\n        outer: while (this.canExpireCache()) {\n            var key = this.peekLastKey();\n            for (var consumerId in this.consumers) {\n                if (key in this.consumers[consumerId]) {\n                    break outer;\n                }\n            }\n            var canvas = this.pop();\n            canvas.width = canvas.height = 0;\n            for (var consumerId in this.consumers) {\n                delete this.consumers[consumerId][key];\n            }\n        }\n    };\n    /**\n     * @param {import(\"./Executor.js\").default} consumer Label consumer.\n     */\n    LabelCache.prototype.release = function (consumer) {\n        delete this.consumers[getUid(consumer)];\n    };\n    return LabelCache;\n}(LRUCache));\nexport default LabelCache;\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas\n */\nimport { getFontFamilies } from '../css.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { clear } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function () {\n    var retries = 60;\n    var checked = checkedFonts;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    function isAvailable(font) {\n        var context = getMeasureContext();\n        // Check weight ranges according to\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n        for (var weight = 100; weight <= 700; weight += 300) {\n            var fontWeight = weight + ' ';\n            var available = true;\n            for (var i = 0; i < len; ++i) {\n                var referenceFont = referenceFonts[i];\n                context.font = fontWeight + size + referenceFont;\n                referenceWidth = context.measureText(text).width;\n                if (font != referenceFont) {\n                    context.font = fontWeight + size + font + ',' + referenceFont;\n                    var width = context.measureText(text).width;\n                    // If width and referenceWidth are the same, then the fallback was used\n                    // instead of the font we wanted, so the font is not available.\n                    available = available && width != referenceWidth;\n                }\n            }\n            if (available) {\n                // Consider font available when it is available in one weight range.\n                //FIXME With this we miss rare corner cases, so we should consider\n                //FIXME checking availability for each requested weight range.\n                return true;\n            }\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        for (var font in checked) {\n            if (checked[font] < retries) {\n                if (isAvailable(font)) {\n                    checked[font] = retries;\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    labelCache.clear();\n                }\n                else {\n                    ++checked[font];\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var fontFamilies = getFontFamilies(fontSpec);\n        if (!fontFamilies) {\n            return;\n        }\n        for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n            var fontFamily = fontFamilies[i];\n            if (!(fontFamily in checked)) {\n                checked[fontFamily] = retries;\n                if (!isAvailable(fontFamily)) {\n                    checked[fontFamily] = 0;\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    return measureContext;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    var div;\n    var heights = textHeights;\n    return function (font) {\n        var height = heights[font];\n        if (height == undefined) {\n            if (!div) {\n                div = document.createElement('div');\n                div.innerHTML = 'M';\n                div.style.margin = div.style.padding = '0 !important';\n                div.style.position = 'absolute !important';\n                div.style.left = '-99999px !important';\n            }\n            div.style.font = font;\n            document.body.appendChild(div);\n            height = heights[font] = div.offsetHeight;\n            document.body.removeChild(div);\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    var measureContext = getMeasureContext();\n    if (font != measureContext.font) {\n        measureContext.font = font;\n    }\n    return measureContext.measureText(text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = cache[text] = measureTextWidth(font, text);\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\nexport var resetTransform = createTransform();\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale) {\n    var alpha;\n    if (opacity != 1) {\n        alpha = context.globalAlpha;\n        context.globalAlpha = alpha * opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n    if (alpha) {\n        context.globalAlpha = alpha;\n    }\n    if (transform) {\n        context.setTransform.apply(context, resetTransform);\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { equals } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont } from '../canvas.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageScale_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textScale_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 || this.imageScale_ != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, this.imageScale_, this.imageScale_, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n            }\n            context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n        }\n        if (rotation !== 0 || this.imageScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 || this.textScale_ != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, this.textScale_, this.textScale_, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n            }\n            if (this.textStrokeState_) {\n                context.strokeText(this.text_, x, y);\n            }\n            if (this.textFillState_) {\n                context.fillText(this.text_, x, y);\n            }\n        }\n        if (rotation !== 0 || this.textScale_ != 1) {\n            context.setTransform(1, 0, 0, 1, 0, 0);\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @override\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = context.lineDashOffset =\n                        strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = context.miterLimit =\n                    strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = context.strokeStyle =\n                    strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign ?\n            textState.textAlign : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = context.textBaseline =\n                    /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ?\n                    fillStyleColor : defaultFillStyle)\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined ?\n                    strokeStyleLineCap : defaultLineCap,\n                lineDash: strokeStyleLineDash ?\n                    strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset ?\n                    strokeStyleLineDashOffset : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined ?\n                    strokeStyleLineJoin : defaultLineJoin,\n                lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n                    strokeStyleWidth : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined ?\n                    strokeStyleMiterLimit : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ?\n                    strokeStyleColor : defaultStrokeStyle)\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageAnchor = imageStyle.getAnchor();\n            // FIXME pixel ratio\n            var imageImage = imageStyle.getImage(1);\n            var imageOrigin = imageStyle.getOrigin();\n            var imageSize = imageStyle.getSize();\n            this.imageAnchorX_ = imageAnchor[0];\n            this.imageAnchorY_ = imageAnchor[1];\n            this.imageHeight_ = imageSize[1];\n            this.image_ = imageImage;\n            this.imageOpacity_ = imageStyle.getOpacity();\n            this.imageOriginX_ = imageOrigin[0];\n            this.imageOriginY_ = imageOrigin[1];\n            this.imageRotateWithView_ = imageStyle.getRotateWithView();\n            this.imageRotation_ = imageStyle.getRotation();\n            this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n            this.imageWidth_ = imageSize[0];\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     * @override\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ?\n                        textFillStyleColor : defaultFillStyle)\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined ?\n                        textStrokeStyleLineCap : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash ?\n                        textStrokeStyleLineDash : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset ?\n                        textStrokeStyleLineDashOffset : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined ?\n                        textStrokeStyleLineJoin : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined ?\n                        textStrokeStyleWidth : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined ?\n                        textStrokeStyleMiterLimit : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ?\n                        textStrokeStyleColor : defaultStrokeStyle)\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScale();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ?\n                    textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ?\n                    textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined ?\n                    textTextBaseline : defaultTextBaseline\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n            this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n                textScale : 1);\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/render\n */\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform } from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var zIndexItems = items[z];\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport { abstract, getUid } from '../util.js';\nimport Disposable from '../Disposable.js';\nimport { getWidth } from '../extent.js';\nimport { TRUE } from '../functions.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { renderDeclutterItems } from '../render.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n                return callback.call(thisArg, feature, managed ? layer : null);\n            }\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = coordinate;\n        if (projection.canWrapX()) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            var x = coordinate[0];\n            if (x < projectionExtent[0] || x > projectionExtent[2]) {\n                var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n                translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n            }\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var i;\n        for (i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n            if (layer.hasRenderer() && visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n                var layerRenderer = layer.getRenderer();\n                var source = layer.getSource();\n                if (layerRenderer && source) {\n                    var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                    result = layerRenderer.forEachFeatureAtCoordinate(source.getWrapX() ? translatedCoordinate : coordinate, frameState, hitTolerance, callback_1, declutteredFeatures);\n                }\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { visibleAtResolution } from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport { replaceChildren } from '../dom.js';\nimport { labelCache } from '../render/canvas.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        map.attachLabelCache(labelCache);\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray;\n        var viewResolution = frameState.viewState.resolution;\n        this.children_.length = 0;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!visibleAtResolution(layerState, viewResolution) ||\n                (layerState.sourceState != SourceState.READY && layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState);\n            if (element) {\n                var zIndex = layerState.zIndex;\n                if (zIndex !== element.style.zIndex) {\n                    element.style.zIndex = zIndex === Infinity ? Number.MAX_SAFE_INTEGER : zIndex;\n                }\n                this.children_.push(element);\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @inheritDoc\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() && visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\nimport { assign } from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions();\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { removeNode, removeChildren, outerWidth, outerHeight } from './dom.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { containsExtent } from './extent.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning'\n};\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst = options.insertFirst !== undefined ?\n            options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className = options.className !== undefined ?\n            options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n        /**\n         * @protected\n         * @type {PanOptions}\n         */\n        _this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.autoPanMargin = options.autoPanMargin !== undefined ?\n            options.autoPanMargin : 20;\n        /**\n         * @protected\n         * @type {{bottom_: string,\n         *         left_: string,\n         *         right_: string,\n         *         top_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            bottom_: '',\n            left_: '',\n            right_: '',\n            top_: '',\n            visible: true\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        listen(_this, getChangeEventType(Property.ELEMENT), _this.handleElementChanged, _this);\n        listen(_this, getChangeEventType(Property.MAP), _this.handleMapChanged, _this);\n        listen(_this, getChangeEventType(Property.OFFSET), _this.handleOffsetChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITION), _this.handlePositionChanged, _this);\n        listen(_this, getChangeEventType(Property.POSITIONING), _this.handlePositioningChanged, _this);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined ?\n            /** @type {OverlayPositioning} */ (options.positioning) :\n            OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return (\n        /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP)));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return (\n        /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION)));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {OverlayPositioning} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return (\n        /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING)));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent ?\n                map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        if (this.get(Property.POSITION) && this.autoPan) {\n            this.panIntoView();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @protected\n     */\n    Overlay.prototype.panIntoView = function () {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement()) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n        var margin = this.autoPanMargin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - margin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + margin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - margin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + margin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n                var centerPx = map.getPixelFromCoordinate(center);\n                var newCenterPx = [\n                    centerPx[0] + delta[0],\n                    centerPx[1] + delta[1]\n                ];\n                map.getView().animate({\n                    center: map.getCoordinateFromPixel(newCenterPx),\n                    duration: this.autoPanAnimation.duration,\n                    easing: this.autoPanAnimation.easing\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement|undefined} element The element.\n     * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [\n            offsetX,\n            offsetY,\n            offsetX + size[0],\n            offsetY + size[1]\n        ];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {OverlayPositioning} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var offsetX = offset[0];\n        var offsetY = offset[1];\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            if (this.rendered.left_ !== '') {\n                this.rendered.left_ = style.left = '';\n            }\n            var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n            if (this.rendered.right_ != right) {\n                this.rendered.right_ = style.right = right;\n            }\n        }\n        else {\n            if (this.rendered.right_ !== '') {\n                this.rendered.right_ = style.right = '';\n            }\n            if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.TOP_CENTER) {\n                offsetX -= this.element.offsetWidth / 2;\n            }\n            var left = Math.round(pixel[0] + offsetX) + 'px';\n            if (this.rendered.left_ != left) {\n                this.rendered.left_ = style.left = left;\n            }\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            if (this.rendered.top_ !== '') {\n                this.rendered.top_ = style.top = '';\n            }\n            var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n            if (this.rendered.bottom_ != bottom) {\n                this.rendered.bottom_ = style.bottom = bottom;\n            }\n        }\n        else {\n            if (this.rendered.bottom_ !== '') {\n                this.rendered.bottom_ = style.bottom = '';\n            }\n            if (positioning == OverlayPositioning.CENTER_LEFT ||\n                positioning == OverlayPositioning.CENTER_CENTER ||\n                positioning == OverlayPositioning.CENTER_RIGHT) {\n                offsetY -= this.element.offsetHeight / 2;\n            }\n            var top_1 = Math.round(pixel[1] + offsetY) + 'px';\n            if (this.rendered.top_ != top_1) {\n                this.rendered.top_ = style.top = top_1;\n            }\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/format/FormatType\n */\n/**\n * @enum {string}\n */\nexport default {\n    ARRAY_BUFFER: 'arraybuffer',\n    JSON: 'json',\n    TEXT: 'text',\n    XML: 'xml'\n};\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport { VOID } from './functions.js';\nimport FormatType from './format/FormatType.js';\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (extent, resolution, projection) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', typeof url === 'function' ? url(extent, resolution, projection) : url, true);\n        if (format.getType() == FormatType.ARRAY_BUFFER) {\n            xhr.responseType = 'arraybuffer';\n        }\n        /**\n         * @param {Event} event Event.\n         * @private\n         */\n        xhr.onload = function (event) {\n            // status will be 0 for file:// urls\n            if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n                var type = format.getType();\n                /** @type {Document|Node|Object|string|undefined} */\n                var source = void 0;\n                if (type == FormatType.JSON || type == FormatType.TEXT) {\n                    source = xhr.responseText;\n                }\n                else if (type == FormatType.XML) {\n                    source = xhr.responseXML;\n                    if (!source) {\n                        source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n                    }\n                }\n                else if (type == FormatType.ARRAY_BUFFER) {\n                    source = /** @type {ArrayBuffer} */ (xhr.response);\n                }\n                if (source) {\n                    success.call(this, format.readFeatures(source, {\n                        extent: extent,\n                        featureProjection: projection\n                    }), format.readProjection(source));\n                }\n                else {\n                    failure.call(this);\n                }\n            }\n            else {\n                failure.call(this);\n            }\n        }.bind(this);\n        /**\n         * @private\n         */\n        xhr.onerror = function () {\n            failure.call(this);\n        }.bind(this);\n        xhr.send();\n    });\n}\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n    return loadFeaturesXhr(url, format, \n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function (features, dataProjection) {\n        var sourceOrTile = /** @type {?} */ (this);\n        if (typeof sourceOrTile.addFeatures === 'function') {\n            /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n        }\n    }, /* FIXME handle error */ VOID);\n}\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n    return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n    return [extent];\n}\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n    return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution) {\n        var z = tileGrid.getZForResolution(resolution);\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /** @type {Array<import(\"./extent.js\").Extent>} */\n        var extents = [];\n        /** @type {import(\"./tilecoord.js\").TileCoord} */\n        var tileCoord = [z, 0, 0];\n        for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n            for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n                extents.push(tileGrid.getTileCoordExtent(tileCoord));\n            }\n        }\n        return extents;\n    });\n}\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY;\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport TileRange, { createOrUpdate as createOrUpdateTileRange } from '../TileRange.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { toSize } from '../size.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined &&\n            !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ = options.tileSize !== undefined ?\n            options.tileSize :\n            !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = scale * xFromOrigin / tileSize[0];\n        var tileCoordY = scale * yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { toSize } from './size.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth } from './extent.js';\nimport Corner from './extent/Corner.js';\nimport { get as getProjection, METERS_PER_UNIT } from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    /** @type {XYZOptions} */\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize)\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n    var maxZoom = opt_maxZoom !== undefined ?\n        opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ?\n        opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/webgl\n */\n/**\n * Constants taken from goog.webgl\n */\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport var ARRAY_BUFFER = 0x8892;\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STREAM_DRAW = 0x88E0;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var STATIC_DRAW = 0x88E4;\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n/** end of goog.webgl constants\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n    'experimental-webgl',\n    'webgl',\n    'webkit-3d',\n    'moz-webgl'\n];\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n    var ii = CONTEXT_IDS.length;\n    for (var i = 0; i < ii; ++i) {\n        try {\n            var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n            if (context) {\n                return /** @type {!WebGLRenderingContext} */ (context);\n            }\n        }\n        catch (e) {\n            // pass\n        }\n    }\n    return null;\n}\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n    try {\n        var canvas = document.createElement('canvas');\n        var gl = getContext(canvas);\n        if (gl) {\n            HAS = true;\n            MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n            EXTENSIONS = gl.getSupportedExtensions();\n        }\n    }\n    catch (e) {\n        // pass\n    }\n}\nexport { HAS, MAX_TEXTURE_SIZE, EXTENSIONS };\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/xml\n */\nimport { extend } from './array.js';\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n    return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n    return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n    if (node.nodeType == Node.CDATA_SECTION_NODE ||\n        node.nodeType == Node.TEXT_NODE) {\n        if (normalizeWhitespace) {\n            accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n        }\n        else {\n            accumulator.push(node.nodeValue);\n        }\n    }\n    else {\n        var n = void 0;\n        for (n = node.firstChild; n; n = n.nextSibling) {\n            getAllTextContent_(n, normalizeWhitespace, accumulator);\n        }\n    }\n    return accumulator;\n}\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n    return 'documentElement' in object;\n}\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n    return node.getAttributeNS(namespaceURI, name) || '';\n}\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n    return new DOMParser().parseFromString(xml, 'application/xml');\n}\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            extend(array, value);\n        }\n    });\n}\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n    return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            objectStack[objectStack.length - 1] = value;\n        }\n    });\n}\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            var array = void 0;\n            if (property in object) {\n                array = object[property];\n            }\n            else {\n                array = object[property] = [];\n            }\n            array.push(value);\n        }\n    });\n}\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n    return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function (node, objectStack) {\n        var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n        if (value !== undefined) {\n            var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n            var property = opt_property !== undefined ? opt_property : node.localName;\n            object[property] = value;\n        }\n    });\n}\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n    return function (node, value, objectStack) {\n        nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n        var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var parentNode = parent.node;\n        parentNode.appendChild(node);\n    };\n}\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n    var serializersNS, nodeFactory;\n    return function (node, value, objectStack) {\n        if (serializersNS === undefined) {\n            serializersNS = {};\n            var serializers = {};\n            serializers[node.localName] = nodeWriter;\n            serializersNS[node.namespaceURI] = serializers;\n            nodeFactory = makeSimpleNodeFactory(node.localName);\n        }\n        serialize(serializersNS, nodeFactory, value, objectStack);\n    };\n}\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n    var fixedNodeName = opt_nodeName;\n    return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, opt_nodeName) {\n        var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n        var node = context.node;\n        var nodeName = fixedNodeName;\n        if (nodeName === undefined) {\n            nodeName = opt_nodeName;\n        }\n        var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n        return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    });\n}\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n    var length = orderedKeys.length;\n    var sequence = new Array(length);\n    for (var i = 0; i < length; ++i) {\n        sequence[i] = object[orderedKeys[i]];\n    }\n    return sequence;\n}\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n    /**\n     * @type {Object<string, T>}\n     */\n    var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n    var i, ii;\n    for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n        structureNS[namespaceURIs[i]] = structure;\n    }\n    return structureNS;\n}\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n    var n;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var parsers = parsersNS[n.namespaceURI];\n        if (parsers !== undefined) {\n            var parser = parsers[n.localName];\n            if (parser !== undefined) {\n                parser.call(opt_this, n, objectStack);\n            }\n        }\n    }\n}\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n    objectStack.push(object);\n    parseNode(parsersNS, node, objectStack, opt_this);\n    return /** @type {T} */ (objectStack.pop());\n}\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    var length = (opt_keys !== undefined ? opt_keys : values).length;\n    var value, node;\n    for (var i = 0; i < length; ++i) {\n        value = values[i];\n        if (value !== undefined) {\n            node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack, opt_keys !== undefined ? opt_keys[i] : undefined);\n            if (node !== undefined) {\n                serializersNS[node.namespaceURI][node.localName]\n                    .call(opt_this, node, value, objectStack);\n            }\n        }\n    }\n}\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n    objectStack.push(object);\n    serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n    return /** @type {O|undefined} */ (objectStack.pop());\n}\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport { STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW } from '../webgl.js';\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport var BufferUsage = {\n    STATIC_DRAW: STATIC_DRAW,\n    STREAM_DRAW: STREAM_DRAW,\n    DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData) for more info.\n * @api\n */\nvar WebGLArrayBuffer = /** @class */ (function () {\n    /**\n     * @param {Array<number>=} opt_arr Array.\n     * @param {number=} opt_usage Usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`. Default is `DYNAMIC_DRAW`.\n     */\n    function WebGLArrayBuffer(opt_arr, opt_usage) {\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.arr_ = opt_arr !== undefined ? opt_arr : [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n    }\n    /**\n     * @return {Array<number>} Array.\n     */\n    WebGLArrayBuffer.prototype.getArray = function () {\n        return this.arr_;\n    };\n    /**\n     * @return {number} Usage.\n     */\n    WebGLArrayBuffer.prototype.getUsage = function () {\n        return this.usage_;\n    };\n    return WebGLArrayBuffer;\n}());\nexport default WebGLArrayBuffer;\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    LOST: 'webglcontextlost',\n    RESTORED: 'webglcontextrestored'\n};\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/vec/mat4\n */\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n    mat4[0] = transform[0];\n    mat4[1] = transform[1];\n    mat4[4] = transform[2];\n    mat4[5] = transform[3];\n    mat4[12] = transform[4];\n    mat4[13] = transform[5];\n    return mat4;\n}\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n  }\\n\";\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = /** @class */ (function () {\n    /**\n     * @param {Options=} options Options.\n     */\n    function WebGLPostProcessingPass(options) {\n        this.gl_ = options.webGlContext;\n        var gl = this.gl_;\n        this.scaleRatio_ = options.scaleRatio || 1;\n        this.renderTargetTexture_ = gl.createTexture();\n        this.renderTargetTextureSize_ = null;\n        this.frameBuffer_ = gl.createFramebuffer();\n        // compile the program for the frame buffer\n        // TODO: make compilation errors show up\n        var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n        gl.compileShader(vertexShader);\n        var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n        gl.compileShader(fragmentShader);\n        this.renderTargetProgram_ = gl.createProgram();\n        gl.attachShader(this.renderTargetProgram_, vertexShader);\n        gl.attachShader(this.renderTargetProgram_, fragmentShader);\n        gl.linkProgram(this.renderTargetProgram_);\n        // bind the vertices buffer for the frame buffer\n        this.renderTargetVerticesBuffer_ = gl.createBuffer();\n        var verticesArray = [\n            -1, -1,\n            1, -1,\n            -1, 1,\n            1, -1,\n            1, 1,\n            -1, 1\n        ];\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n        this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n        this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n        this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n        /**\n         * Holds info about custom uniforms used in the post processing pass\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        this.uniforms_ = [];\n        options.uniforms && Object.keys(options.uniforms).forEach(function (name) {\n            this.uniforms_.push({\n                value: options.uniforms[name],\n                location: gl.getUniformLocation(this.renderTargetProgram_, name)\n            });\n        }.bind(this));\n    }\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Initialize the render target texture of the post process, make sure it is at the\n     * right size and bind it as a render target for the next draw calls.\n     * The last step to be initialized will be the one where the primitives are rendered.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.init = function (frameState) {\n        var gl = this.getGL();\n        var canvas = gl.canvas;\n        var size = frameState.size;\n        // rendering goes to my buffer\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n        gl.viewport(0, 0, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_);\n        // if size has changed: adjust canvas & render target texture\n        if (!this.renderTargetTextureSize_ ||\n            this.renderTargetTextureSize_[0] !== size[0] || this.renderTargetTextureSize_[1] !== size[1]) {\n            this.renderTargetTextureSize_ = size;\n            // create a new texture\n            var level = 0;\n            var internalFormat = gl.RGBA;\n            var border = 0;\n            var format = gl.RGBA;\n            var type = gl.UNSIGNED_BYTE;\n            var data = null;\n            gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_, border, format, type, data);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            // bind the texture to the framebuffer\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n        }\n    };\n    /**\n     * Render to the next postprocessing pass (or to the canvas if final pass).\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.apply = function (frameState, nextPass) {\n        var gl = this.getGL();\n        var canvas = gl.canvas;\n        gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n        // render the frame buffer to the canvas\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n        gl.useProgram(this.renderTargetProgram_);\n        gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n        gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n        gl.uniform2f(this.renderTargetUniformLocation_, canvas.width, canvas.height);\n        gl.uniform1i(this.renderTargetTextureLocation_, 0);\n        this.applyUniforms(frameState);\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\n    };\n    /**\n     * @returns {WebGLFramebuffer} Frame buffer\n     * @api\n     */\n    WebGLPostProcessingPass.prototype.getFrameBuffer = function () {\n        return this.frameBuffer_;\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPostProcessingPass.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 1;\n        this.uniforms_.forEach(function (uniform) {\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                if (value instanceof ImageData) {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0, gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n                }\n                else {\n                    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                }\n                // fill texture slots\n                gl.uniform1i(uniform.location, textureSlot++);\n            }\n            else if (Array.isArray(value)) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(uniform.location, value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n                        return;\n                    default: return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(uniform.location, value);\n            }\n        });\n    };\n    return WebGLPostProcessingPass;\n}());\nexport default WebGLPostProcessingPass;\n//# sourceMappingURL=PostProcessingPass.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/webgl/Helper\n */\nimport { getUid } from '../util.js';\nimport { EXTENSIONS as WEBGL_EXTENSIONS } from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport { includes } from '../array.js';\nimport { listen, unlistenAll } from '../events.js';\nimport { clear } from '../obj.js';\nimport { ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T } from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport { create as createTransform, reset as resetTransform, rotate as rotateTransform, scale as scaleTransform, translate as translateTransform } from '../transform';\nimport { create, fromTransform } from '../vec/mat4';\nimport WebGLPostProcessingPass from './PostProcessingPass';\nimport { getContext } from '../webgl';\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer\n * @property {WebGLBuffer} webGlBuffer\n */\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport var ShaderType = {\n    FRAGMENT_SHADER: 0x8B30,\n    VERTEX_SHADER: 0x8B31\n};\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport var DefaultUniform = {\n    PROJECTION_MATRIX: 'u_projectionMatrix',\n    OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n    OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix'\n};\n/**\n * Attribute names used in the default shaders: `POSITION`, `TEX_COORD`, `OPACITY`,\n * `ROTATE_WITH_VIEW`, `OFFSETS` and `COLOR`\n * @enum {string}\n */\nexport var DefaultAttrib = {\n    POSITION: 'a_position',\n    TEX_COORD: 'a_texCoord',\n    OPACITY: 'a_opacity',\n    ROTATE_WITH_VIEW: 'a_rotateWithView',\n    OFFSETS: 'a_offsets',\n    COLOR: 'a_color'\n};\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue=} value Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   this.program = this.context.getProgram(fragmentShader, vertexShader);\n *   this.context.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   this.context.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   this.verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   this.indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   this.context.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   this.context.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   this.context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   this.context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   let bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n *   this.context.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\n *   this.context.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\n *   this.context.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   this.context.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   this.context.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   this.context.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nvar WebGLHelper = /** @class */ (function (_super) {\n    __extends(WebGLHelper, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WebGLHelper(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = document.createElement('canvas');\n        _this.canvas_.style.position = 'absolute';\n        /**\n         * @private\n         * @type {WebGLRenderingContext}\n         */\n        _this.gl_ = getContext(_this.canvas_);\n        var gl = _this.getGL();\n        /**\n         * @private\n         * @type {!Object<string, BufferCacheEntry>}\n         */\n        _this.bufferCache_ = {};\n        /**\n         * @private\n         * @type {!Array<WebGLShader>}\n         */\n        _this.shaderCache_ = [];\n        /**\n         * @private\n         * @type {!Array<WebGLProgram>}\n         */\n        _this.programCache_ = [];\n        /**\n         * @private\n         * @type {WebGLProgram}\n         */\n        _this.currentProgram_ = null;\n        /**\n         * @type {boolean}\n         */\n        _this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n        // use the OES_element_index_uint extension if available\n        if (_this.hasOESElementIndexUint) {\n            gl.getExtension('OES_element_index_uint');\n        }\n        listen(_this.canvas_, ContextEventType.LOST, _this.handleWebGLContextLost, _this);\n        listen(_this.canvas_, ContextEventType.RESTORED, _this.handleWebGLContextRestored, _this);\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetRotateMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"../transform.js\").Transform}\n         */\n        _this.offsetScaleMatrix_ = createTransform();\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.tmpMat4_ = create();\n        /**\n         * @private\n         * @type {Object.<string, WebGLUniformLocation>}\n         */\n        _this.uniformLocations_ = {};\n        /**\n         * @private\n         * @type {Object.<string, number>}\n         */\n        _this.attribLocations_ = {};\n        /**\n         * Holds info about custom uniforms used in the post processing pass.\n         * If the uniform is a texture, the WebGL Texture object will be stored here.\n         * @type {Array<UniformInternalDescription>}\n         * @private\n         */\n        _this.uniforms_ = [];\n        if (options.uniforms) {\n            for (var name_1 in options.uniforms) {\n                _this.uniforms_.push({\n                    name: name_1,\n                    value: options.uniforms[name_1]\n                });\n            }\n        }\n        /**\n         * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n         * options. If no post process was given, a default one is used (so as not to have to make an exception to\n         * the frame buffer logic).\n         * @type {Array<WebGLPostProcessingPass>}\n         * @private\n         */\n        _this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function (options) {\n            return new WebGLPostProcessingPass({\n                webGlContext: gl,\n                scaleRatio: options.scaleRatio,\n                vertexShader: options.vertexShader,\n                fragmentShader: options.fragmentShader,\n                uniforms: options.uniforms\n            });\n        }) : [new WebGLPostProcessingPass({ webGlContext: gl })];\n        /**\n         * @type {string|null}\n         * @private\n         */\n        _this.shaderCompileErrors_ = null;\n        return _this;\n    }\n    /**\n     * Just bind the buffer if it's in the cache. Otherwise create\n     * the WebGL buffer, bind it, populate it, and add an entry to\n     * the cache.\n     * @param {number} target Target, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.bindBuffer = function (target, buffer) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buffer);\n        var bufferCache = this.bufferCache_[bufferKey];\n        if (!bufferCache) {\n            var webGlBuffer = gl.createBuffer();\n            bufferCache = this.bufferCache_[bufferKey] = {\n                buffer: buffer,\n                webGlBuffer: webGlBuffer\n            };\n        }\n        gl.bindBuffer(target, bufferCache.webGlBuffer);\n    };\n    /**\n     * Update the data contained in the buffer array; this is required for the\n     * new data to be rendered\n     * @param {number} target Target, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n     * @param {import(\"./Buffer\").default} buffer Buffer.\n     * @api\n     */\n    WebGLHelper.prototype.flushBufferData = function (target, buffer) {\n        var gl = this.getGL();\n        var arr = buffer.getArray();\n        this.bindBuffer(target, buffer);\n        var /** @type {ArrayBufferView} */ arrayBuffer;\n        if (target == ARRAY_BUFFER) {\n            arrayBuffer = new Float32Array(arr);\n        }\n        else if (target == ELEMENT_ARRAY_BUFFER) {\n            arrayBuffer = this.hasOESElementIndexUint ?\n                new Uint32Array(arr) : new Uint16Array(arr);\n        }\n        gl.bufferData(target, arrayBuffer, buffer.getUsage());\n    };\n    /**\n     * @param {import(\"./Buffer.js\").default} buf Buffer.\n     */\n    WebGLHelper.prototype.deleteBuffer = function (buf) {\n        var gl = this.getGL();\n        var bufferKey = getUid(buf);\n        var bufferCacheEntry = this.bufferCache_[bufferKey];\n        if (!gl.isContextLost()) {\n            gl.deleteBuffer(bufferCacheEntry.buffer);\n        }\n        delete this.bufferCache_[bufferKey];\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLHelper.prototype.disposeInternal = function () {\n        unlistenAll(this.canvas_);\n        var gl = this.getGL();\n        if (!gl.isContextLost()) {\n            for (var key in this.bufferCache_) {\n                gl.deleteBuffer(this.bufferCache_[key].buffer);\n            }\n            for (var key in this.programCache_) {\n                gl.deleteProgram(this.programCache_[key]);\n            }\n            for (var key in this.shaderCache_) {\n                gl.deleteShader(this.shaderCache_[key]);\n            }\n        }\n    };\n    /**\n     * Clear the buffer & set the viewport to draw.\n     * Post process passes will be initialized here, the first one being bound as a render target for\n     * subsequent draw calls.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.prepareDraw = function (frameState) {\n        var gl = this.getGL();\n        var canvas = this.getCanvas();\n        var size = frameState.size;\n        var pixelRatio = frameState.pixelRatio;\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n        gl.useProgram(this.currentProgram_);\n        // loop backwards in post processes list\n        for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n            this.postProcessPasses_[i].init(frameState);\n        }\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        this.applyFrameState(frameState);\n        this.applyUniforms(frameState);\n    };\n    /**\n     * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n     * @param {number} start Start index.\n     * @param {number} end End index.\n     * @api\n     */\n    WebGLHelper.prototype.drawElements = function (start, end) {\n        var gl = this.getGL();\n        var elementType = this.hasOESElementIndexUint ?\n            gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        var elementSize = this.hasOESElementIndexUint ? 4 : 2;\n        var numItems = end - start;\n        var offsetInBytes = start * elementSize;\n        gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n    };\n    /**\n     * Apply the successive post process passes which will eventually render to the actual canvas.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n     * @api\n     */\n    WebGLHelper.prototype.finalizeDraw = function (frameState) {\n        // apply post processes using the next one as target\n        for (var i = 0; i < this.postProcessPasses_.length; i++) {\n            this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas.\n     * @api\n     */\n    WebGLHelper.prototype.getCanvas = function () {\n        return this.canvas_;\n    };\n    /**\n     * Get the WebGL rendering context\n     * @return {WebGLRenderingContext} The rendering context.\n     * @api\n     */\n    WebGLHelper.prototype.getGL = function () {\n        return this.gl_;\n    };\n    /**\n     * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyFrameState = function (frameState) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n        scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n        var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n        if (rotation !== 0) {\n            rotateTransform(offsetRotateMatrix, -rotation);\n        }\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n        this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    };\n    /**\n     * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLHelper.prototype.applyUniforms = function (frameState) {\n        var gl = this.getGL();\n        var value;\n        var textureSlot = 0;\n        this.uniforms_.forEach(function (uniform) {\n            value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n            // apply value based on type\n            if (value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof ImageData) {\n                // create a texture & put data\n                if (!uniform.texture) {\n                    uniform.texture = gl.createTexture();\n                }\n                gl.activeTexture(gl[\"TEXTURE\" + textureSlot]);\n                gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n                // fill texture slots by increasing index\n                gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n            }\n            else if (Array.isArray(value) && value.length === 6) {\n                this.setUniformMatrixValue(uniform.name, fromTransform(this.tmpMat4_, value));\n            }\n            else if (Array.isArray(value) && value.length <= 4) {\n                switch (value.length) {\n                    case 2:\n                        gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n                        return;\n                    case 3:\n                        gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n                        return;\n                    case 4:\n                        gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n                        return;\n                    default:\n                        return;\n                }\n            }\n            else if (typeof value === 'number') {\n                gl.uniform1f(this.getUniformLocation(uniform.name), value);\n            }\n        }.bind(this));\n    };\n    /**\n     * Use a program.  If the program is already in use, this will return `false`.\n     * @param {WebGLProgram} program Program.\n     * @return {boolean} Changed.\n     * @api\n     */\n    WebGLHelper.prototype.useProgram = function (program) {\n        if (program == this.currentProgram_) {\n            return false;\n        }\n        else {\n            var gl = this.getGL();\n            gl.useProgram(program);\n            this.currentProgram_ = program;\n            this.uniformLocations_ = {};\n            this.attribLocations_ = {};\n            return true;\n        }\n    };\n    /**\n     * Will attempt to compile a vertex or fragment shader based on source\n     * On error, the shader will be returned but\n     * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n     * Use `gl.getShaderInfoLog(shader)` to have details\n     * @param {string} source Shader source\n     * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n     * @return {WebGLShader} Shader object\n     */\n    WebGLHelper.prototype.compileShader = function (source, type) {\n        var gl = this.getGL();\n        var shader = gl.createShader(type);\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n        this.shaderCache_.push(shader);\n        return shader;\n    };\n    /**\n     * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\n     * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\n     * @param {string} fragmentShaderSource Fragment shader source.\n     * @param {string} vertexShaderSource Vertex shader source.\n     * @return {WebGLProgram} Program\n     * @api\n     */\n    WebGLHelper.prototype.getProgram = function (fragmentShaderSource, vertexShaderSource) {\n        var gl = this.getGL();\n        var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n        var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n        this.shaderCompileErrors_ = null;\n        if (gl.getShaderInfoLog(fragmentShader)) {\n            this.shaderCompileErrors_ =\n                \"Fragment shader compilation failed:\\n\" + gl.getShaderInfoLog(fragmentShader);\n        }\n        if (gl.getShaderInfoLog(vertexShader)) {\n            this.shaderCompileErrors_ = (this.shaderCompileErrors_ || '') +\n                (\"Vertex shader compilation failed:\\n\" + gl.getShaderInfoLog(vertexShader));\n        }\n        var program = gl.createProgram();\n        gl.attachShader(program, fragmentShader);\n        gl.attachShader(program, vertexShader);\n        gl.linkProgram(program);\n        this.programCache_.push(program);\n        return program;\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors description, or null if last compilation was successful\n     * @api\n     */\n    WebGLHelper.prototype.getShaderCompileErrors = function () {\n        return this.shaderCompileErrors_;\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Uniform name\n     * @return {WebGLUniformLocation} uniformLocation\n     * @api\n     */\n    WebGLHelper.prototype.getUniformLocation = function (name) {\n        if (this.uniformLocations_[name] === undefined) {\n            this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n        }\n        return this.uniformLocations_[name];\n    };\n    /**\n     * Will get the location from the shader or the cache\n     * @param {string} name Attribute name\n     * @return {number} attribLocation\n     * @api\n     */\n    WebGLHelper.prototype.getAttributeLocation = function (name) {\n        if (this.attribLocations_[name] === undefined) {\n            this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n        }\n        return this.attribLocations_[name];\n    };\n    /**\n     * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n     * The resulting transform can be used to convert world space coordinates to view coordinates.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../transform\").Transform} transform Transform to update.\n     * @return {import(\"../transform\").Transform} The updated transform object.\n     * @api\n     */\n    WebGLHelper.prototype.makeProjectionTransform = function (frameState, transform) {\n        var size = frameState.size;\n        var rotation = frameState.viewState.rotation;\n        var resolution = frameState.viewState.resolution;\n        var center = frameState.viewState.center;\n        resetTransform(transform);\n        scaleTransform(transform, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n        rotateTransform(transform, -rotation);\n        translateTransform(transform, -center[0], -center[1]);\n        return transform;\n    };\n    /**\n     * Give a value for a standard float uniform\n     * @param {string} uniform Uniform name\n     * @param {number} value Value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformFloatValue = function (uniform, value) {\n        this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n    };\n    /**\n     * Give a value for a standard matrix4 uniform\n     * @param {string} uniform Uniform name\n     * @param {Array<number>} value Matrix value\n     * @api\n     */\n    WebGLHelper.prototype.setUniformMatrixValue = function (uniform, value) {\n        this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n    };\n    /**\n     * Will set the currently bound buffer to an attribute of the shader program\n     * @param {string} attribName Attribute name\n     * @param {number} size Number of components per attributes\n     * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n     * @param {number} stride Stride in bytes (0 means attribs are packed)\n     * @param {number} offset Offset in bytes\n     * @api\n     */\n    WebGLHelper.prototype.enableAttributeArray = function (attribName, size, type, stride, offset) {\n        var location = this.getAttributeLocation(attribName);\n        // the attribute has not been found in the shaders; do not enable it\n        if (location < 0) {\n            return;\n        }\n        this.getGL().enableVertexAttribArray(location);\n        this.getGL().vertexAttribPointer(location, size, type, false, stride, offset);\n    };\n    /**\n     * WebGL context was lost\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextLost = function () {\n        clear(this.bufferCache_);\n        clear(this.shaderCache_);\n        clear(this.programCache_);\n        this.currentProgram_ = null;\n    };\n    /**\n     * WebGL context was restored\n     * @private\n     */\n    WebGLHelper.prototype.handleWebGLContextRestored = function () {\n    };\n    // TODO: shutdown program\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createTextureInternal = function (opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        if (opt_wrapS !== undefined) {\n            gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n        }\n        if (opt_wrapT !== undefined) {\n            gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n        }\n        return texture;\n    };\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {number} width Width.\n     * @param {number} height Height.\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createEmptyTexture = function (width, height, opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        return texture;\n    };\n    /**\n     * TODO: these are not used and should be reworked\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     * @param {number=} opt_wrapS wrapS.\n     * @param {number=} opt_wrapT wrapT.\n     * @return {WebGLTexture} The texture.\n     */\n    WebGLHelper.prototype.createTexture = function (image, opt_wrapS, opt_wrapT) {\n        var gl = this.getGL();\n        var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n        return texture;\n    };\n    return WebGLHelper;\n}(Disposable));\nexport default WebGLHelper;\n//# sourceMappingURL=Helper.js.map","/**\n * @module ol/tilegrid/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { find } from '../array.js';\nimport { get as getProjection } from '../proj.js';\nimport TileGrid from './TileGrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /** @class */ (function (_super) {\n    __extends(WMTSTileGrid, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTSTileGrid(options) {\n        var _this = _super.call(this, {\n            extent: options.extent,\n            origin: options.origin,\n            origins: options.origins,\n            resolutions: options.resolutions,\n            tileSize: options.tileSize,\n            tileSizes: options.tileSizes,\n            sizes: options.sizes\n        }) || this;\n        /**\n         * @private\n         * @type {!Array<string>}\n         */\n        _this.matrixIds_ = options.matrixIds;\n        return _this;\n    }\n    /**\n     * @param {number} z Z.\n     * @return {string} MatrixId..\n     */\n    WMTSTileGrid.prototype.getMatrixId = function (z) {\n        return this.matrixIds_[z];\n    };\n    /**\n     * Get the list of matrix identifiers.\n     * @return {Array<string>} MatrixIds.\n     * @api\n     */\n    WMTSTileGrid.prototype.getMatrixIds = function () {\n        return this.matrixIds_;\n    };\n    return WMTSTileGrid;\n}(TileGrid));\nexport default WMTSTileGrid;\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n    /** @type {!Array<number>} */\n    var resolutions = [];\n    /** @type {!Array<string>} */\n    var matrixIds = [];\n    /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n    var origins = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var tileSizes = [];\n    /** @type {!Array<import(\"../size.js\").Size>} */\n    var sizes = [];\n    var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n    var supportedCRSPropName = 'SupportedCRS';\n    var matrixIdsPropName = 'TileMatrix';\n    var identifierPropName = 'Identifier';\n    var scaleDenominatorPropName = 'ScaleDenominator';\n    var topLeftCornerPropName = 'TopLeftCorner';\n    var tileWidthPropName = 'TileWidth';\n    var tileHeightPropName = 'TileHeight';\n    var code = matrixSet[supportedCRSPropName];\n    var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n    var metersPerUnit = projection.getMetersPerUnit();\n    // swap origin x and y coordinates if axis orientation is lat/long\n    var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n    matrixSet[matrixIdsPropName].sort(function (a, b) {\n        return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n    });\n    matrixSet[matrixIdsPropName].forEach(function (elt) {\n        var matrixAvailable;\n        // use of matrixLimits to filter TileMatrices from GetCapabilities\n        // TileMatrixSet from unavailable matrix levels.\n        if (matrixLimits.length > 0) {\n            matrixAvailable = find(matrixLimits, function (elt_ml) {\n                if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n                    return true;\n                }\n                // Fallback for tileMatrix identifiers that don't get prefixed\n                // by their tileMatrixSet identifiers.\n                if (elt[identifierPropName].indexOf(':') === -1) {\n                    return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n                }\n                return false;\n            });\n        }\n        else {\n            matrixAvailable = true;\n        }\n        if (matrixAvailable) {\n            matrixIds.push(elt[identifierPropName]);\n            var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n            var tileWidth = elt[tileWidthPropName];\n            var tileHeight = elt[tileHeightPropName];\n            if (switchOriginXY) {\n                origins.push([elt[topLeftCornerPropName][1],\n                    elt[topLeftCornerPropName][0]]);\n            }\n            else {\n                origins.push(elt[topLeftCornerPropName]);\n            }\n            resolutions.push(resolution);\n            tileSizes.push(tileWidth == tileHeight ?\n                tileWidth : [tileWidth, tileHeight]);\n            sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n        }\n    });\n    return new WMTSTileGrid({\n        extent: opt_extent,\n        origins: origins,\n        resolutions: resolutions,\n        matrixIds: matrixIds,\n        tileSizes: tileSizes,\n        sizes: sizes\n    });\n}\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/style/Image\n */\nimport { abstract } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = /** @class */ (function () {\n    /**\n     * @param {Options} options Options.\n     */\n    function ImageStyle(options) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.opacity_ = options.opacity;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.scale_ = options.scale;\n    }\n    /**\n     * Clones the style.\n     * @return {ImageStyle} The cloned style.\n     * @api\n     */\n    ImageStyle.prototype.clone = function () {\n        return new ImageStyle({\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * Get the symbolizer opacity.\n     * @return {number} Opacity.\n     * @api\n     */\n    ImageStyle.prototype.getOpacity = function () {\n        return this.opacity_;\n    };\n    /**\n     * Determine whether the symbolizer rotates with the map.\n     * @return {boolean} Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the symoblizer rotation.\n     * @return {number} Rotation.\n     * @api\n     */\n    ImageStyle.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the symbolizer scale.\n     * @return {number} Scale.\n     * @api\n     */\n    ImageStyle.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the anchor point in pixels. The anchor determines the center point for the\n     * symbolizer.\n     * @abstract\n     * @return {Array<number>} Anchor.\n     */\n    ImageStyle.prototype.getAnchor = function () {\n        return abstract();\n    };\n    /**\n     * Get the image element for the symbolizer.\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n     */\n    ImageStyle.prototype.getHitDetectionImage = function (pixelRatio) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    ImageStyle.prototype.getImageState = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    ImageStyle.prototype.getImageSize = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n     */\n    ImageStyle.prototype.getHitDetectionImageSize = function () {\n        return abstract();\n    };\n    /**\n     * Get the origin of the symbolizer.\n     * @abstract\n     * @return {Array<number>} Origin.\n     */\n    ImageStyle.prototype.getOrigin = function () {\n        return abstract();\n    };\n    /**\n     * Get the size of the symbolizer (in pixels).\n     * @abstract\n     * @return {import(\"../size.js\").Size} Size.\n     */\n    ImageStyle.prototype.getSize = function () {\n        return abstract();\n    };\n    /**\n     * Set the opacity.\n     *\n     * @param {number} opacity Opacity.\n     * @api\n     */\n    ImageStyle.prototype.setOpacity = function (opacity) {\n        this.opacity_ = opacity;\n    };\n    /**\n     * Set whether to rotate the style with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    ImageStyle.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number} rotation Rotation.\n     * @api\n     */\n    ImageStyle.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number} scale Scale.\n     * @api\n     */\n    ImageStyle.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n     * @template T\n     */\n    ImageStyle.prototype.listenImageChange = function (listener, thisArg) {\n        return abstract();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageStyle.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * @abstract\n     * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n     * @param {T} thisArg Value to use as `this` when executing `listener`.\n     * @template T\n     */\n    ImageStyle.prototype.unlistenImageChange = function (listener, thisArg) {\n        abstract();\n    };\n    return ImageStyle;\n}());\nexport default ImageStyle;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { asColorLike } from '../colorlike.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport { defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit } from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /** @class */ (function (_super) {\n    __extends(RegularShape, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RegularShape(options) {\n        var _this = this;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: 1,\n            rotateWithView: rotateWithView,\n            rotation: options.rotation !== undefined ? options.rotation : 0,\n            scale: 1\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.hitDetectionCanvas_ = null;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        _this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.points_ = options.points;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n            options.radius : options.radius1);\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.radius2_ = options.radius2;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.angle_ = options.angle !== undefined ? options.angle : 0;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        _this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.hitDetectionImageSize_ = null;\n        _this.render_();\n        return _this;\n    }\n    /**\n     * Clones the style.\n     * @return {RegularShape} The cloned style.\n     * @api\n     */\n    RegularShape.prototype.clone = function () {\n        var style = new RegularShape({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            points: this.getPoints(),\n            radius: this.getRadius(),\n            radius2: this.getRadius2(),\n            angle: this.getAngle(),\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getAnchor = function () {\n        return this.anchor_;\n    };\n    /**\n     * Get the angle used in generating the shape.\n     * @return {number} Shape's rotation in radians.\n     * @api\n     */\n    RegularShape.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    /**\n     * Get the fill style for the shape.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    RegularShape.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.hitDetectionCanvas_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getImage = function (pixelRatio) {\n        return this.canvas_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageSize = function () {\n        return this.imageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getHitDetectionImageSize = function () {\n        return this.hitDetectionImageSize_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.getImageState = function () {\n        return ImageState.LOADED;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getOrigin = function () {\n        return this.origin_;\n    };\n    /**\n     * Get the number of points for generating the shape.\n     * @return {number} Number of points for stars and regular polygons.\n     * @api\n     */\n    RegularShape.prototype.getPoints = function () {\n        return this.points_;\n    };\n    /**\n     * Get the (primary) radius for the shape.\n     * @return {number} Radius.\n     * @api\n     */\n    RegularShape.prototype.getRadius = function () {\n        return this.radius_;\n    };\n    /**\n     * Get the secondary radius for the shape.\n     * @return {number|undefined} Radius2.\n     * @api\n     */\n    RegularShape.prototype.getRadius2 = function () {\n        return this.radius2_;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    RegularShape.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * Get the stroke style for the shape.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    RegularShape.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.listenImageChange = function (listener, thisArg) {\n        return undefined;\n    };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.load = function () { };\n    /**\n     * @inheritDoc\n     */\n    RegularShape.prototype.unlistenImageChange = function (listener, thisArg) { };\n    /**\n     * @protected\n     */\n    RegularShape.prototype.render_ = function () {\n        var lineCap = '';\n        var lineJoin = '';\n        var miterLimit = 0;\n        var lineDash = null;\n        var lineDashOffset = 0;\n        var strokeStyle;\n        var strokeWidth = 0;\n        if (this.stroke_) {\n            strokeStyle = this.stroke_.getColor();\n            if (strokeStyle === null) {\n                strokeStyle = defaultStrokeStyle;\n            }\n            strokeStyle = asColorLike(strokeStyle);\n            strokeWidth = this.stroke_.getWidth();\n            if (strokeWidth === undefined) {\n                strokeWidth = defaultLineWidth;\n            }\n            lineDash = this.stroke_.getLineDash();\n            lineDashOffset = this.stroke_.getLineDashOffset();\n            lineJoin = this.stroke_.getLineJoin();\n            if (lineJoin === undefined) {\n                lineJoin = defaultLineJoin;\n            }\n            lineCap = this.stroke_.getLineCap();\n            if (lineCap === undefined) {\n                lineCap = defaultLineCap;\n            }\n            miterLimit = this.stroke_.getMiterLimit();\n            if (miterLimit === undefined) {\n                miterLimit = defaultMiterLimit;\n            }\n        }\n        var size = 2 * (this.radius_ + strokeWidth) + 1;\n        /** @type {RenderOptions} */\n        var renderOptions = {\n            strokeStyle: strokeStyle,\n            strokeWidth: strokeWidth,\n            size: size,\n            lineCap: lineCap,\n            lineDash: lineDash,\n            lineDashOffset: lineDashOffset,\n            lineJoin: lineJoin,\n            miterLimit: miterLimit\n        };\n        var context = createCanvasContext2D(size, size);\n        this.canvas_ = context.canvas;\n        // canvas.width and height are rounded to the closest integer\n        size = this.canvas_.width;\n        var imageSize = size;\n        this.draw_(renderOptions, context, 0, 0);\n        this.createHitDetectionCanvas_(renderOptions);\n        this.anchor_ = [size / 2, size / 2];\n        this.size_ = [size, size];\n        this.imageSize_ = [imageSize, imageSize];\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The rendering context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.draw_ = function (renderOptions, context, x, y) {\n        var i, angle0, radiusC;\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        if (this.fill_) {\n            var color = this.fill_.getColor();\n            if (color === null) {\n                color = defaultFillStyle;\n            }\n            context.fillStyle = asColorLike(color);\n            context.fill();\n        }\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (context.setLineDash && renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n            context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n            context.miterLimit = renderOptions.miterLimit;\n            context.stroke();\n        }\n        context.closePath();\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     */\n    RegularShape.prototype.createHitDetectionCanvas_ = function (renderOptions) {\n        this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n        if (this.fill_) {\n            this.hitDetectionCanvas_ = this.canvas_;\n            return;\n        }\n        // if no fill style is set, create an extra hit-detection image with a\n        // default fill style\n        var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n    };\n    /**\n     * @private\n     * @param {RenderOptions} renderOptions Render options.\n     * @param {CanvasRenderingContext2D} context The context.\n     * @param {number} x The origin for the symbol (x).\n     * @param {number} y The origin for the symbol (y).\n     */\n    RegularShape.prototype.drawHitDetectionCanvas_ = function (renderOptions, context, x, y) {\n        // reset transform\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        // then move to (x, y)\n        context.translate(x, y);\n        context.beginPath();\n        var points = this.points_;\n        if (points === Infinity) {\n            context.arc(renderOptions.size / 2, renderOptions.size / 2, this.radius_, 0, 2 * Math.PI, true);\n        }\n        else {\n            var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n                : this.radius_;\n            if (radius2 !== this.radius_) {\n                points = 2 * points;\n            }\n            var i = void 0, radiusC = void 0, angle0 = void 0;\n            for (i = 0; i <= points; i++) {\n                angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n                radiusC = i % 2 === 0 ? this.radius_ : radius2;\n                context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0), renderOptions.size / 2 + radiusC * Math.sin(angle0));\n            }\n        }\n        context.fillStyle = defaultFillStyle;\n        context.fill();\n        if (this.stroke_) {\n            context.strokeStyle = renderOptions.strokeStyle;\n            context.lineWidth = renderOptions.strokeWidth;\n            if (renderOptions.lineDash) {\n                context.setLineDash(renderOptions.lineDash);\n                context.lineDashOffset = renderOptions.lineDashOffset;\n            }\n            context.stroke();\n        }\n        context.closePath();\n    };\n    return RegularShape;\n}(ImageStyle));\nexport default RegularShape;\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport RegularShape from './RegularShape.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /** @class */ (function (_super) {\n    __extends(CircleStyle, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function CircleStyle(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            points: Infinity,\n            fill: options.fill,\n            radius: options.radius,\n            stroke: options.stroke\n        }) || this;\n        return _this;\n    }\n    /**\n    * Clones the style.\n    * @return {CircleStyle} The cloned style.\n    * @override\n    * @api\n    */\n    CircleStyle.prototype.clone = function () {\n        var style = new CircleStyle({\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            radius: this.getRadius()\n        });\n        style.setOpacity(this.getOpacity());\n        style.setScale(this.getScale());\n        return style;\n    };\n    /**\n    * Set the circle radius.\n    *\n    * @param {number} radius Circle radius.\n    * @api\n    */\n    CircleStyle.prototype.setRadius = function (radius) {\n        this.radius_ = radius;\n    };\n    return CircleStyle;\n}(RegularShape));\nexport default CircleStyle;\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Fill(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n    }\n    /**\n     * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n     * @return {Fill} The cloned style.\n     * @api\n     */\n    Fill.prototype.clone = function () {\n        var color = this.getColor();\n        return new Fill({\n            color: Array.isArray(color) ? color.slice() : color || undefined\n        });\n    };\n    /**\n     * Get the fill color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Fill.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Fill.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    return Fill;\n}());\nexport default Fill;\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n    FRACTION: 'fraction',\n    PIXELS: 'pixels'\n};\n//# sourceMappingURL=IconAnchorUnits.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport { abstract } from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { listenOnce, unlistenByKey } from './events.js';\nimport EventType from './events/EventType.js';\nimport { getHeight } from './extent.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {ImageState}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @override\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.decode) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise.then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        }).catch(function (error) {\n            if (listening_1) {\n                errorHandler();\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler)\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/IconImage\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createCanvasContext2D } from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport { shared as iconImageCache } from './IconImageCache.js';\nimport { listenImage } from '../Image.js';\nvar IconImage = /** @class */ (function (_super) {\n    __extends(IconImage, _super);\n    /**\n     * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n     * @param {string|undefined} src Src.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../ImageState.js\").default} imageState Image state.\n     * @param {import(\"../color.js\").Color} color Color.\n     */\n    function IconImage(image, src, size, crossOrigin, imageState, color) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = !image ? new Image() : image;\n        if (crossOrigin !== null) {\n            /** @type {HTMLImageElement} */ (_this.image_).crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = color ? document.createElement('canvas') : null;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = color;\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"../ImageState.js\").default}\n         */\n        _this.imageState_ = imageState;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = size;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.tainted_;\n        return _this;\n    }\n    /**\n     * @private\n     * @return {boolean} The image canvas is tainted.\n     */\n    IconImage.prototype.isTainted_ = function () {\n        if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n            this.tainted_ = false;\n            var context = createCanvasContext2D(1, 1);\n            try {\n                context.drawImage(this.image_, 0, 0);\n                context.getImageData(0, 0, 1, 1);\n            }\n            catch (e) {\n                this.tainted_ = true;\n            }\n        }\n        return this.tainted_ === true;\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.dispatchChangeEvent_ = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageError_ = function () {\n        this.imageState_ = ImageState.ERROR;\n        this.unlistenImage_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.handleImageLoad_ = function () {\n        this.imageState_ = ImageState.LOADED;\n        if (this.size_) {\n            this.image_.width = this.size_[0];\n            this.image_.height = this.size_[1];\n        }\n        this.size_ = [this.image_.width, this.image_.height];\n        this.unlistenImage_();\n        this.replaceColor_();\n        this.dispatchChangeEvent_();\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     */\n    IconImage.prototype.getImage = function (pixelRatio) {\n        return this.canvas_ ? this.canvas_ : this.image_;\n    };\n    /**\n     * @return {import(\"../ImageState.js\").default} Image state.\n     */\n    IconImage.prototype.getImageState = function () {\n        return this.imageState_;\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n     */\n    IconImage.prototype.getHitDetectionImage = function (pixelRatio) {\n        if (!this.hitDetectionImage_) {\n            if (this.isTainted_()) {\n                var width = this.size_[0];\n                var height = this.size_[1];\n                var context = createCanvasContext2D(width, height);\n                context.fillRect(0, 0, width, height);\n                this.hitDetectionImage_ = context.canvas;\n            }\n            else {\n                this.hitDetectionImage_ = this.image_;\n            }\n        }\n        return this.hitDetectionImage_;\n    };\n    /**\n     * @return {import(\"../size.js\").Size} Image size.\n     */\n    IconImage.prototype.getSize = function () {\n        return this.size_;\n    };\n    /**\n     * @return {string|undefined} Image src.\n     */\n    IconImage.prototype.getSrc = function () {\n        return this.src_;\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    IconImage.prototype.load = function () {\n        if (this.imageState_ == ImageState.IDLE) {\n            this.imageState_ = ImageState.LOADING;\n            try {\n                /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n            }\n            catch (e) {\n                this.handleImageError_();\n            }\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @private\n     */\n    IconImage.prototype.replaceColor_ = function () {\n        if (!this.color_ || this.isTainted_()) {\n            return;\n        }\n        this.canvas_.width = this.image_.width;\n        this.canvas_.height = this.image_.height;\n        var ctx = this.canvas_.getContext('2d');\n        ctx.drawImage(this.image_, 0, 0);\n        var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n        var data = imgData.data;\n        var r = this.color_[0] / 255.0;\n        var g = this.color_[1] / 255.0;\n        var b = this.color_[2] / 255.0;\n        for (var i = 0, ii = data.length; i < ii; i += 4) {\n            data[i] *= r;\n            data[i + 1] *= g;\n            data[i + 2] *= b;\n        }\n        ctx.putImageData(imgData, 0, 0);\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    IconImage.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return IconImage;\n}(EventTarget));\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n    var iconImage = iconImageCache.get(src, crossOrigin, color);\n    if (!iconImage) {\n        iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n        iconImageCache.set(src, crossOrigin, color, iconImage);\n    }\n    return iconImage;\n}\nexport default IconImage;\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right'\n};\n//# sourceMappingURL=IconOrigin.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/style/Icon\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport { get as getIconImage } from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /** @class */ (function (_super) {\n    __extends(Icon, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Icon(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        /**\n         * @type {number}\n         */\n        var opacity = options.opacity !== undefined ? options.opacity : 1;\n        /**\n         * @type {number}\n         */\n        var rotation = options.rotation !== undefined ? options.rotation : 0;\n        /**\n         * @type {number}\n         */\n        var scale = options.scale !== undefined ? options.scale : 1;\n        /**\n         * @type {boolean}\n         */\n        var rotateWithView = options.rotateWithView !== undefined ?\n            options.rotateWithView : false;\n        _this = _super.call(this, {\n            opacity: opacity,\n            rotation: rotation,\n            scale: scale,\n            rotateWithView: rotateWithView\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.normalizedAnchor_ = null;\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n            options.anchorOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n            options.anchorXUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {import(\"./IconAnchorUnits.js\").default}\n         */\n        _this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n            options.anchorYUnits : IconAnchorUnits.FRACTION;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        var image = options.img !== undefined ? options.img : null;\n        /**\n         * @type {import(\"../size.js\").Size}\n         */\n        var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n        /**\n         * @type {string|undefined}\n         */\n        var src = options.src;\n        assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n        assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n        if ((src === undefined || src.length === 0) && image) {\n            src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n        }\n        assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n        /**\n         * @type {import(\"../ImageState.js\").default}\n         */\n        var imageState = options.src !== undefined ?\n            ImageState.IDLE : ImageState.LOADED;\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color}\n         */\n        _this.color_ = options.color !== undefined ? asArray(options.color) : null;\n        /**\n         * @private\n         * @type {import(\"./IconImage.js\").default}\n         */\n        _this.iconImage_ = getIconImage(image, /** @type {string} */ (src), imgSize, _this.crossOrigin_, imageState, _this.color_);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n        /**\n         * @private\n         * @type {import(\"./IconOrigin.js\").default}\n         */\n        _this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n            options.offsetOrigin : IconOrigin.TOP_LEFT;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.origin_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.size_ = options.size !== undefined ? options.size : null;\n        return _this;\n    }\n    /**\n     * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n     * @return {Icon} The cloned style.\n     * @api\n     */\n    Icon.prototype.clone = function () {\n        return new Icon({\n            anchor: this.anchor_.slice(),\n            anchorOrigin: this.anchorOrigin_,\n            anchorXUnits: this.anchorXUnits_,\n            anchorYUnits: this.anchorYUnits_,\n            crossOrigin: this.crossOrigin_,\n            color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n            src: this.getSrc(),\n            offset: this.offset_.slice(),\n            offsetOrigin: this.offsetOrigin_,\n            size: this.size_ !== null ? this.size_.slice() : undefined,\n            opacity: this.getOpacity(),\n            scale: this.getScale(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView()\n        });\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getAnchor = function () {\n        if (this.normalizedAnchor_) {\n            return this.normalizedAnchor_;\n        }\n        var anchor = this.anchor_;\n        var size = this.getSize();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n            this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n            if (!size) {\n                return null;\n            }\n            anchor = this.anchor_.slice();\n            if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[0] *= size[0];\n            }\n            if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n                anchor[1] *= size[1];\n            }\n        }\n        if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n            if (!size) {\n                return null;\n            }\n            if (anchor === this.anchor_) {\n                anchor = this.anchor_.slice();\n            }\n            if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[0] = -anchor[0] + size[0];\n            }\n            if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                anchor[1] = -anchor[1] + size[1];\n            }\n        }\n        this.normalizedAnchor_ = anchor;\n        return this.normalizedAnchor_;\n    };\n    /**\n     * Set the anchor point. The anchor determines the center point for the\n     * symbolizer.\n     *\n     * @param {Array<number>} anchor Anchor.\n     * @api\n     */\n    Icon.prototype.setAnchor = function (anchor) {\n        this.anchor_ = anchor;\n        this.normalizedAnchor_ = null;\n    };\n    /**\n     * Get the icon color.\n     * @return {import(\"../color.js\").Color} Color.\n     * @api\n     */\n    Icon.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the image icon.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n     * @override\n     * @api\n     */\n    Icon.prototype.getImage = function (pixelRatio) {\n        return this.iconImage_.getImage(pixelRatio);\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageSize = function () {\n        return this.iconImage_.getSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImageSize = function () {\n        return this.getImageSize();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getImageState = function () {\n        return this.iconImage_.getImageState();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.getHitDetectionImage = function (pixelRatio) {\n        return this.iconImage_.getHitDetectionImage(pixelRatio);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getOrigin = function () {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        var offset = this.offset_;\n        if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n            var size = this.getSize();\n            var iconImageSize = this.iconImage_.getSize();\n            if (!size || !iconImageSize) {\n                return null;\n            }\n            offset = offset.slice();\n            if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[0] = iconImageSize[0] - size[0] - offset[0];\n            }\n            if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n                this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n                offset[1] = iconImageSize[1] - size[1] - offset[1];\n            }\n        }\n        this.origin_ = offset;\n        return this.origin_;\n    };\n    /**\n     * Get the image URL.\n     * @return {string|undefined} Image src.\n     * @api\n     */\n    Icon.prototype.getSrc = function () {\n        return this.iconImage_.getSrc();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Icon.prototype.getSize = function () {\n        return !this.size_ ? this.iconImage_.getSize() : this.size_;\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.listenImageChange = function (listener, thisArg) {\n        return listen(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    /**\n     * Load not yet loaded URI.\n     * When rendering a feature with an icon style, the vector renderer will\n     * automatically call this method. However, you might want to call this\n     * method yourself for preloading or other purposes.\n     * @override\n     * @api\n     */\n    Icon.prototype.load = function () {\n        this.iconImage_.load();\n    };\n    /**\n     * @override\n     */\n    Icon.prototype.unlistenImageChange = function (listener, thisArg) {\n        unlisten(this.iconImage_, EventType.CHANGE, listener, thisArg);\n    };\n    return Icon;\n}(ImageStyle));\nexport default Icon;\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Stroke\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Stroke(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n         */\n        this.color_ = options.color !== undefined ? options.color : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineCap_ = options.lineCap;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.lineDashOffset_ = options.lineDashOffset;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.lineJoin_ = options.lineJoin;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.miterLimit_ = options.miterLimit;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.width_ = options.width;\n    }\n    /**\n     * Clones the style.\n     * @return {Stroke} The cloned style.\n     * @api\n     */\n    Stroke.prototype.clone = function () {\n        var color = this.getColor();\n        return new Stroke({\n            color: Array.isArray(color) ? color.slice() : color || undefined,\n            lineCap: this.getLineCap(),\n            lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n            lineDashOffset: this.getLineDashOffset(),\n            lineJoin: this.getLineJoin(),\n            miterLimit: this.getMiterLimit(),\n            width: this.getWidth()\n        });\n    };\n    /**\n     * Get the stroke color.\n     * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n     * @api\n     */\n    Stroke.prototype.getColor = function () {\n        return this.color_;\n    };\n    /**\n     * Get the line cap type for the stroke.\n     * @return {string|undefined} Line cap.\n     * @api\n     */\n    Stroke.prototype.getLineCap = function () {\n        return this.lineCap_;\n    };\n    /**\n     * Get the line dash style for the stroke.\n     * @return {Array<number>} Line dash.\n     * @api\n     */\n    Stroke.prototype.getLineDash = function () {\n        return this.lineDash_;\n    };\n    /**\n     * Get the line dash offset for the stroke.\n     * @return {number|undefined} Line dash offset.\n     * @api\n     */\n    Stroke.prototype.getLineDashOffset = function () {\n        return this.lineDashOffset_;\n    };\n    /**\n     * Get the line join type for the stroke.\n     * @return {string|undefined} Line join.\n     * @api\n     */\n    Stroke.prototype.getLineJoin = function () {\n        return this.lineJoin_;\n    };\n    /**\n     * Get the miter limit for the stroke.\n     * @return {number|undefined} Miter limit.\n     * @api\n     */\n    Stroke.prototype.getMiterLimit = function () {\n        return this.miterLimit_;\n    };\n    /**\n     * Get the stroke width.\n     * @return {number|undefined} Width.\n     * @api\n     */\n    Stroke.prototype.getWidth = function () {\n        return this.width_;\n    };\n    /**\n     * Set the color.\n     *\n     * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n     * @api\n     */\n    Stroke.prototype.setColor = function (color) {\n        this.color_ = color;\n    };\n    /**\n     * Set the line cap.\n     *\n     * @param {string|undefined} lineCap Line cap.\n     * @api\n     */\n    Stroke.prototype.setLineCap = function (lineCap) {\n        this.lineCap_ = lineCap;\n    };\n    /**\n     * Set the line dash.\n     *\n     * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n     * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n     * property will have no visual effect in these browsers.\n     *\n     * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n     *\n     * @param {Array<number>} lineDash Line dash.\n     * @api\n     */\n    Stroke.prototype.setLineDash = function (lineDash) {\n        this.lineDash_ = lineDash;\n    };\n    /**\n     * Set the line dash offset.\n     *\n     * @param {number|undefined} lineDashOffset Line dash offset.\n     * @api\n     */\n    Stroke.prototype.setLineDashOffset = function (lineDashOffset) {\n        this.lineDashOffset_ = lineDashOffset;\n    };\n    /**\n     * Set the line join.\n     *\n     * @param {string|undefined} lineJoin Line join.\n     * @api\n     */\n    Stroke.prototype.setLineJoin = function (lineJoin) {\n        this.lineJoin_ = lineJoin;\n    };\n    /**\n     * Set the miter limit.\n     *\n     * @param {number|undefined} miterLimit Miter limit.\n     * @api\n     */\n    Stroke.prototype.setMiterLimit = function (miterLimit) {\n        this.miterLimit_ = miterLimit;\n    };\n    /**\n     * Set the width.\n     *\n     * @param {number|undefined} width Width.\n     * @api\n     */\n    Stroke.prototype.setWidth = function (width) {\n        this.width_ = width;\n    };\n    return Stroke;\n}());\nexport default Stroke;\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport { assert } from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Style options.\n     */\n    function Style(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n         */\n        this.geometry_ = null;\n        /**\n         * @private\n         * @type {!GeometryFunction}\n         */\n        this.geometryFunction_ = defaultGeometryFunction;\n        if (options.geometry !== undefined) {\n            this.setGeometry(options.geometry);\n        }\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill : null;\n        /**\n           * @private\n           * @type {import(\"./Image.js\").default}\n           */\n        this.image_ = options.image !== undefined ? options.image : null;\n        /**\n         * @private\n         * @type {RenderFunction|null}\n         */\n        this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {import(\"./Text.js\").default}\n         */\n        this.text_ = options.text !== undefined ? options.text : null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zIndex_ = options.zIndex;\n    }\n    /**\n     * Clones the style.\n     * @return {Style} The cloned style.\n     * @api\n     */\n    Style.prototype.clone = function () {\n        var geometry = this.getGeometry();\n        if (geometry && typeof geometry === 'object') {\n            geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n        }\n        return new Style({\n            geometry: geometry,\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            image: this.getImage() ? this.getImage().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            text: this.getText() ? this.getText().clone() : undefined,\n            zIndex: this.getZIndex()\n        });\n    };\n    /**\n     * Get the custom renderer function that was configured with\n     * {@link #setRenderer} or the `renderer` constructor option.\n     * @return {RenderFunction|null} Custom renderer function.\n     * @api\n     */\n    Style.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n     * and `image` options of the style will be ignored.\n     * @param {RenderFunction|null} renderer Custom renderer function.\n     * @api\n     */\n    Style.prototype.setRenderer = function (renderer) {\n        this.renderer_ = renderer;\n    };\n    /**\n     * Get the geometry to be rendered.\n     * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     * Feature property or geometry or function that returns the geometry that will\n     * be rendered with this style.\n     * @api\n     */\n    Style.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    /**\n     * Get the function used to generate a geometry for rendering.\n     * @return {!GeometryFunction} Function that is called with a feature\n     * and returns the geometry to render instead of the feature's geometry.\n     * @api\n     */\n    Style.prototype.getGeometryFunction = function () {\n        return this.geometryFunction_;\n    };\n    /**\n     * Get the fill style.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Style.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Set the fill style.\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Style.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Get the image style.\n     * @return {import(\"./Image.js\").default} Image style.\n     * @api\n     */\n    Style.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Set the image style.\n     * @param {import(\"./Image.js\").default} image Image style.\n     * @api\n     */\n    Style.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Get the stroke style.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Style.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Set the stroke style.\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Style.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Get the text style.\n     * @return {import(\"./Text.js\").default} Text style.\n     * @api\n     */\n    Style.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Set the text style.\n     * @param {import(\"./Text.js\").default} text Text style.\n     * @api\n     */\n    Style.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Get the z-index for the style.\n     * @return {number|undefined} ZIndex.\n     * @api\n     */\n    Style.prototype.getZIndex = function () {\n        return this.zIndex_;\n    };\n    /**\n     * Set a geometry that is rendered instead of the feature's geometry.\n     *\n     * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n     *     Feature property or geometry or function returning a geometry to render\n     *     for this style.\n     * @api\n     */\n    Style.prototype.setGeometry = function (geometry) {\n        if (typeof geometry === 'function') {\n            this.geometryFunction_ = geometry;\n        }\n        else if (typeof geometry === 'string') {\n            this.geometryFunction_ = function (feature) {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry)));\n            };\n        }\n        else if (!geometry) {\n            this.geometryFunction_ = defaultGeometryFunction;\n        }\n        else if (geometry !== undefined) {\n            this.geometryFunction_ = function () {\n                return (\n                /** @type {import(\"../geom/Geometry.js\").default} */ (geometry));\n            };\n        }\n        this.geometry_ = geometry;\n    };\n    /**\n     * Set the z-index.\n     *\n     * @param {number|undefined} zIndex ZIndex.\n     * @api\n     */\n    Style.prototype.setZIndex = function (zIndex) {\n        this.zIndex_ = zIndex;\n    };\n    return Style;\n}());\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n    var styleFunction;\n    if (typeof obj === 'function') {\n        styleFunction = obj;\n    }\n    else {\n        /**\n         * @type {Array<Style>}\n         */\n        var styles_1;\n        if (Array.isArray(obj)) {\n            styles_1 = obj;\n        }\n        else {\n            assert(typeof /** @type {?} */ (obj).getZIndex === 'function', 41); // Expected an `Style` or an array of `Style`\n            var style = /** @type {Style} */ (obj);\n            styles_1 = [style];\n        }\n        styleFunction = function () {\n            return styles_1;\n        };\n    }\n    return styleFunction;\n}\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n    // We don't use an immediately-invoked function\n    // and a closure so we don't get an error at script evaluation time in\n    // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n    // canvas.getContext('2d') at construction time, which will cause an.error\n    // in such browsers.)\n    if (!defaultStyles) {\n        var fill = new Fill({\n            color: 'rgba(255,255,255,0.4)'\n        });\n        var stroke = new Stroke({\n            color: '#3399CC',\n            width: 1.25\n        });\n        defaultStyles = [\n            new Style({\n                image: new CircleStyle({\n                    fill: fill,\n                    stroke: stroke,\n                    radius: 5\n                }),\n                fill: fill,\n                stroke: stroke\n            })\n        ];\n    }\n    return defaultStyles;\n}\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n    /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n    var styles = {};\n    var white = [255, 255, 255, 1];\n    var blue = [0, 153, 255, 1];\n    var width = 3;\n    styles[GeometryType.POLYGON] = [\n        new Style({\n            fill: new Fill({\n                color: [255, 255, 255, 0.5]\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_POLYGON] =\n        styles[GeometryType.POLYGON];\n    styles[GeometryType.LINE_STRING] = [\n        new Style({\n            stroke: new Stroke({\n                color: white,\n                width: width + 2\n            })\n        }),\n        new Style({\n            stroke: new Stroke({\n                color: blue,\n                width: width\n            })\n        })\n    ];\n    styles[GeometryType.MULTI_LINE_STRING] =\n        styles[GeometryType.LINE_STRING];\n    styles[GeometryType.CIRCLE] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING]);\n    styles[GeometryType.POINT] = [\n        new Style({\n            image: new CircleStyle({\n                radius: width * 2,\n                fill: new Fill({\n                    color: blue\n                }),\n                stroke: new Stroke({\n                    color: white,\n                    width: width / 2\n                })\n            }),\n            zIndex: Infinity\n        })\n    ];\n    styles[GeometryType.MULTI_POINT] =\n        styles[GeometryType.POINT];\n    styles[GeometryType.GEOMETRY_COLLECTION] =\n        styles[GeometryType.POLYGON].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n    return styles;\n}\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n    return feature.getGeometry();\n}\nexport default Style;\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n    POINT: 'point',\n    LINE: 'line'\n};\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ = options.fill !== undefined ? options.fill :\n            new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: this.getScale(),\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n            backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template.replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n        (opt_callbackParam || 'callback') + '=' + key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\n//# sourceMappingURL=net.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport { easeIn } from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {TileState}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ = options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {TileState} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {TileState} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + (1000 / 60); // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenImage_();\n            this.image_ = getBlankImage();\n        }\n        if (this.interimTile) {\n            this.interimTile.dispose();\n        }\n        this.state = TileState.ABORT;\n        this.changed();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function TileCache(opt_highWaterMark) {\n        return _super.call(this, opt_highWaterMark) || this;\n    }\n    /**\n     * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().dispose();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.dispose();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport { createCanvasContext2D } from './dom.js';\nimport { containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth } from './extent.js';\nimport { solveLinearSystem } from './math.js';\nimport { getPointResolution, transform } from './proj.js';\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n    var dX = x - centroidX;\n    var dY = y - centroidY;\n    var distance = Math.sqrt(dX * dX + dY * dY);\n    return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round(pixelRatio * canvasWidthInUnits / sourceResolution), Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n        var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n        var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n        var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n        var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n        var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0]\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        var centroidX = (u0 + u1 + u2) / 3;\n        var centroidY = (v0 + v1 + v2) / 3;\n        var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n        var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n        var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n        context.moveTo(p1[0], p1[1]);\n        context.lineTo(p0[0], p0[1]);\n        context.lineTo(p2[0], p2[1]);\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { getTransform } from '../proj.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n            !!maxSourceExtent &&\n            !!this.sourceProj_.getExtent() &&\n            (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n            getWidth(this.sourceProj_.getExtent()) : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n            getWidth(this.targetProj_.getExtent()) : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, MAX_SUBDIVISION);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]]];\n                    if ((newTriangle[0][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[1][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if ((newTriangle[2][0] - leftBound_1) > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c]\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_ ?\n            getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 && sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n                    needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                // whole quad outside source projection extent -> ignore\n                return;\n            }\n        }\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    return;\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) / 2;\n                    dx = centerSrcEstimX -\n                        modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getArea, getCenter, getIntersection } from '../extent.js';\nimport { clamp } from '../math.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n            opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.disposeInternal = function () {\n        if (this.state == TileState.LOADING) {\n            this.unlistenSources_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage()\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport { abstract } from '../util.js';\nimport BaseObject from '../Object.js';\nimport { get as getProjection } from '../proj.js';\nimport SourceState from './State.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n            options.attributionsCollapsible : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {SourceState}\n         */\n        _this.state_ = options.state !== undefined ?\n            options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {SourceState} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {SourceState} state State.\n     * @protected\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport { abstract } from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport { equivalent } from '../proj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport Source from './Source.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { wrapX, getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n            options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var cacheSize = options.cacheSize;\n        if (cacheSize === undefined) {\n            var tileSize = [256, 256];\n            var tileGrid = options.tileGrid;\n            if (tileGrid) {\n                toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n            }\n            var canUseScreen = 'screen' in self;\n            var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n            var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n            cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(cacheSize);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number=}\n         */\n        _this.zDirection;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = (callback(tile) !== false);\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ?\n            opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    /**\n     * @inheritDoc\n     */\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror'\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport { getUid } from '../util.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport { getKeyZXY } from '../tilecoord.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ = !options.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(_this) : nullTileUrlFunction;\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n                (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n                    TileEventType.TILELOADEND : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = this.urls = expandUrl(url);\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { getUid } from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction ?\n                options.tileLoadFunction : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass = options.tileClass !== undefined ?\n            options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return (\n            /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey]));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord ?\n            this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        listen(tile, EventType.CHANGE, this.handleTileChange, this);\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' + _this.apiKey_ +\n            '&c=' + _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight ?\n            resource.imageWidth / scale :\n            [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ?\n            options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n            createXYZ({\n                extent: extentFromProjection(projection),\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assign } from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = /** @class */ (function (_super) {\n    __extends(CartoDB, _super);\n    /**\n     * @param {Options} options CartoDB options.\n     */\n    function CartoDB(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n            minZoom: options.minZoom,\n            projection: options.projection,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.account_ = options.account;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.mapId_ = options.map || '';\n        /**\n         * @type {!Object}\n         * @private\n         */\n        _this.config_ = options.config || {};\n        /**\n         * @type {!Object<string, CartoDBLayerInfo>}\n         * @private\n         */\n        _this.templateCache_ = {};\n        _this.initializeMap_();\n        return _this;\n    }\n    /**\n     * Returns the current config.\n     * @return {!Object} The current configuration.\n     * @api\n     */\n    CartoDB.prototype.getConfig = function () {\n        return this.config_;\n    };\n    /**\n     * Updates the carto db config.\n     * @param {Object} config a key-value lookup. Values will replace current values\n     *     in the config.\n     * @api\n     */\n    CartoDB.prototype.updateConfig = function (config) {\n        assign(this.config_, config);\n        this.initializeMap_();\n    };\n    /**\n     * Sets the CartoDB config\n     * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n     *     object.\n     * If using named maps, a key-value lookup with the template parameters.\n     * @api\n     */\n    CartoDB.prototype.setConfig = function (config) {\n        this.config_ = config || {};\n        this.initializeMap_();\n    };\n    /**\n     * Issue a request to initialize the CartoDB map.\n     * @private\n     */\n    CartoDB.prototype.initializeMap_ = function () {\n        var paramHash = JSON.stringify(this.config_);\n        if (this.templateCache_[paramHash]) {\n            this.applyTemplate_(this.templateCache_[paramHash]);\n            return;\n        }\n        var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n        if (this.mapId_) {\n            mapUrl += '/named/' + this.mapId_;\n        }\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n        client.addEventListener('error', this.handleInitError_.bind(this));\n        client.open('POST', mapUrl);\n        client.setRequestHeader('Content-type', 'application/json');\n        client.send(JSON.stringify(this.config_));\n    };\n    /**\n     * Handle map initialization response.\n     * @param {string} paramHash a hash representing the parameter set that was used\n     *     for the request\n     * @param {Event} event Event.\n     * @private\n     */\n    CartoDB.prototype.handleInitResponse_ = function (paramHash, event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {CartoDBLayerInfo} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.setState(SourceState.ERROR);\n                return;\n            }\n            this.applyTemplate_(response);\n            this.templateCache_[paramHash] = response;\n            this.setState(SourceState.READY);\n        }\n        else {\n            this.setState(SourceState.ERROR);\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event Event.\n     */\n    CartoDB.prototype.handleInitError_ = function (event) {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * Apply the new tile urls returned by carto db\n     * @param {CartoDBLayerInfo} data Result of carto db call.\n     * @private\n     */\n    CartoDB.prototype.applyTemplate_ = function (data) {\n        var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n            '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n        this.setUrl(tilesUrl);\n    };\n    return CartoDB;\n}(XYZ));\nexport default CartoDB;\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/VectorEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a feature is added to the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n     * @api\n     */\n    ADDFEATURE: 'addfeature',\n    /**\n     * Triggered when a feature is updated.\n     * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n     * @api\n     */\n    CHANGEFEATURE: 'changefeature',\n    /**\n     * Triggered when the clear method is called on the source.\n     * @event module:ol/source/Vector.VectorSourceEvent#clear\n     * @api\n     */\n    CLEAR: 'clear',\n    /**\n     * Triggered when a feature is removed from the source.\n     * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n     * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n     * @api\n     */\n    REMOVEFEATURE: 'removefeature'\n};\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport { getUid } from '../util.js';\nimport RBush_ from 'rbush';\nimport { createOrUpdate, equals } from '../extent.js';\nimport { isEmpty } from '../obj.js';\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = /** @class */ (function () {\n    /**\n     * @param {number=} opt_maxEntries Max entries.\n     */\n    function RBush(opt_maxEntries) {\n        /**\n         * @private\n         */\n        this.rbush_ = new RBush_(opt_maxEntries);\n        /**\n         * A mapping between the objects added to this rbush wrapper\n         * and the objects that are actually added to the internal rbush.\n         * @private\n         * @type {Object<string, Entry>}\n         */\n        this.items_ = {};\n    }\n    /**\n     * Insert a value into the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.insert = function (extent, value) {\n        /** @type {Entry} */\n        var item = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3],\n            value: value\n        };\n        this.rbush_.insert(item);\n        this.items_[getUid(value)] = item;\n    };\n    /**\n     * Bulk-insert values into the RBush.\n     * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n     * @param {Array<T>} values Values.\n     */\n    RBush.prototype.load = function (extents, values) {\n        var items = new Array(values.length);\n        for (var i = 0, l = values.length; i < l; i++) {\n            var extent = extents[i];\n            var value = values[i];\n            /** @type {Entry} */\n            var item = {\n                minX: extent[0],\n                minY: extent[1],\n                maxX: extent[2],\n                maxY: extent[3],\n                value: value\n            };\n            items[i] = item;\n            this.items_[getUid(value)] = item;\n        }\n        this.rbush_.load(items);\n    };\n    /**\n     * Remove a value from the RBush.\n     * @param {T} value Value.\n     * @return {boolean} Removed.\n     */\n    RBush.prototype.remove = function (value) {\n        var uid = getUid(value);\n        // get the object in which the value was wrapped when adding to the\n        // internal rbush. then use that object to do the removal.\n        var item = this.items_[uid];\n        delete this.items_[uid];\n        return this.rbush_.remove(item) !== null;\n    };\n    /**\n     * Update the extent of a value in the RBush.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {T} value Value.\n     */\n    RBush.prototype.update = function (extent, value) {\n        var item = this.items_[getUid(value)];\n        var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n        if (!equals(bbox, extent)) {\n            this.remove(value);\n            this.insert(extent, value);\n        }\n    };\n    /**\n     * Return all values in the RBush.\n     * @return {Array<T>} All.\n     */\n    RBush.prototype.getAll = function () {\n        var items = this.rbush_.all();\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Return all values in the given extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<T>} All in extent.\n     */\n    RBush.prototype.getInExtent = function (extent) {\n        /** @type {Entry} */\n        var bbox = {\n            minX: extent[0],\n            minY: extent[1],\n            maxX: extent[2],\n            maxY: extent[3]\n        };\n        var items = this.rbush_.search(bbox);\n        return items.map(function (item) {\n            return item.value;\n        });\n    };\n    /**\n     * Calls a callback function with each value in the tree.\n     * If the callback returns a truthy value, this value is returned without\n     * checking the rest of the tree.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach = function (callback) {\n        return this.forEach_(this.getAll(), callback);\n    };\n    /**\n     * Calls a callback function with each value in the provided extent.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(T): *} callback Callback.\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEachInExtent = function (extent, callback) {\n        return this.forEach_(this.getInExtent(extent), callback);\n    };\n    /**\n     * @param {Array<T>} values Values.\n     * @param {function(T): *} callback Callback.\n     * @private\n     * @return {*} Callback return value.\n     */\n    RBush.prototype.forEach_ = function (values, callback) {\n        var result;\n        for (var i = 0, l = values.length; i < l; i++) {\n            result = callback(values[i]);\n            if (result) {\n                return result;\n            }\n        }\n        return result;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    RBush.prototype.isEmpty = function () {\n        return isEmpty(this.items_);\n    };\n    /**\n     * Remove all values from the RBush.\n     */\n    RBush.prototype.clear = function () {\n        this.rbush_.clear();\n        this.items_ = {};\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    RBush.prototype.getExtent = function (opt_extent) {\n        var data = this.rbush_.toJSON();\n        return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n    };\n    /**\n     * @param {RBush} rbush R-Tree.\n     */\n    RBush.prototype.concat = function (rbush) {\n        this.rbush_.load(rbush.rbush_.all());\n        for (var i in rbush.items_) {\n            this.items_[i] = rbush.items_[i];\n        }\n    };\n    return RBush;\n}());\nexport default RBush;\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport { extend } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, equals } from '../extent.js';\nimport { xhr } from '../featureloader.js';\nimport { TRUE, VOID } from '../functions.js';\nimport { all as allStrategy } from '../loadingstrategy.js';\nimport { isEmpty, getValues } from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nvar VectorSourceEvent = /** @class */ (function (_super) {\n    __extends(VectorSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Feature.js\").default=} opt_feature Feature.\n     */\n    function VectorSourceEvent(type, opt_feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being added or removed.\n         * @type {import(\"../Feature.js\").default|undefined}\n         * @api\n         */\n        _this.feature = opt_feature;\n        return _this;\n    }\n    return VectorSourceEvent;\n}(Event));\nexport { VectorSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /** @class */ (function (_super) {\n    __extends(VectorSource, _super);\n    /**\n     * @param {Options=} opt_options Vector source options.\n     */\n    function VectorSource(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: undefined,\n            state: SourceState.READY,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../featureloader.js\").FeatureLoader}\n         */\n        _this.loader_ = VOID;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default|undefined}\n         */\n        _this.format_ = options.format;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @private\n         * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n         */\n        _this.url_ = options.url;\n        if (options.loader !== undefined) {\n            _this.loader_ = options.loader;\n        }\n        else if (_this.url_ !== undefined) {\n            assert(_this.format_, 7); // `format` must be set when `url` is set\n            // create a XHR feature loader for \"url\" and \"format\"\n            _this.loader_ = xhr(_this.url_, /** @type {import(\"../format/Feature.js\").default} */ (_this.format_));\n        }\n        /**\n         * @private\n         * @type {LoadingStrategy}\n         */\n        _this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n        var useSpatialIndex = options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n        /**\n         * @private\n         * @type {RBush<import(\"../Feature.js\").default>}\n         */\n        _this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n        /**\n         * @private\n         * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n         */\n        _this.loadedExtentsRtree_ = new RBush();\n        /**\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.nullGeometryFeatures_ = {};\n        /**\n         * A lookup of features by id (the return from feature.getId()).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.idIndex_ = {};\n        /**\n         * A lookup of features without id (keyed by getUid(feature)).\n         * @private\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         */\n        _this.undefIdIndex_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.featureChangeKeys_ = {};\n        /**\n         * @private\n         * @type {Collection<import(\"../Feature.js\").default>}\n         */\n        _this.featuresCollection_ = null;\n        var collection, features;\n        if (Array.isArray(options.features)) {\n            features = options.features;\n        }\n        else if (options.features) {\n            collection = options.features;\n            features = collection.getArray();\n        }\n        if (!useSpatialIndex && collection === undefined) {\n            collection = new Collection(features);\n        }\n        if (features !== undefined) {\n            _this.addFeaturesInternal(features);\n        }\n        if (collection !== undefined) {\n            _this.bindFeaturesCollection_(collection);\n        }\n        return _this;\n    }\n    /**\n     * Add a single feature to the source.  If you want to add a batch of features\n     * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n     * instead. A feature will not be added to the source if feature with\n     * the same id is already there. The reason for this behavior is to avoid\n     * feature duplication when using bbox or tile loading strategies.\n     * @param {import(\"../Feature.js\").default} feature Feature to add.\n     * @api\n     */\n    VectorSource.prototype.addFeature = function (feature) {\n        this.addFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Add a feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.addFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        if (!this.addToIndex_(featureKey, feature)) {\n            return;\n        }\n        this.setupChangeEvents_(featureKey, feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var extent = geometry.getExtent();\n            if (this.featuresRtree_) {\n                this.featuresRtree_.insert(extent, feature);\n            }\n        }\n        else {\n            this.nullGeometryFeatures_[featureKey] = feature;\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @private\n     */\n    VectorSource.prototype.setupChangeEvents_ = function (featureKey, feature) {\n        this.featureChangeKeys_[featureKey] = [\n            listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n            listen(feature, ObjectEventType.PROPERTYCHANGE, this.handleFeatureChange_, this)\n        ];\n    };\n    /**\n     * @param {string} featureKey Unique identifier for the feature.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} The feature is \"valid\", in the sense that it is also a\n     *     candidate for insertion into the Rtree.\n     * @private\n     */\n    VectorSource.prototype.addToIndex_ = function (featureKey, feature) {\n        var valid = true;\n        var id = feature.getId();\n        if (id !== undefined) {\n            if (!(id.toString() in this.idIndex_)) {\n                this.idIndex_[id.toString()] = feature;\n            }\n            else {\n                valid = false;\n            }\n        }\n        else {\n            assert(!(featureKey in this.undefIdIndex_), 30); // The passed `feature` was already added to the source\n            this.undefIdIndex_[featureKey] = feature;\n        }\n        return valid;\n    };\n    /**\n     * Add a batch of features to the source.\n     * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n     * @api\n     */\n    VectorSource.prototype.addFeatures = function (features) {\n        this.addFeaturesInternal(features);\n        this.changed();\n    };\n    /**\n     * Add features without firing a `change` event.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @protected\n     */\n    VectorSource.prototype.addFeaturesInternal = function (features) {\n        var extents = [];\n        var newFeatures = [];\n        var geometryFeatures = [];\n        for (var i = 0, length_1 = features.length; i < length_1; i++) {\n            var feature = features[i];\n            var featureKey = getUid(feature);\n            if (this.addToIndex_(featureKey, feature)) {\n                newFeatures.push(feature);\n            }\n        }\n        for (var i = 0, length_2 = newFeatures.length; i < length_2; i++) {\n            var feature = newFeatures[i];\n            var featureKey = getUid(feature);\n            this.setupChangeEvents_(featureKey, feature);\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                var extent = geometry.getExtent();\n                extents.push(extent);\n                geometryFeatures.push(feature);\n            }\n            else {\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.load(extents, geometryFeatures);\n        }\n        for (var i = 0, length_3 = newFeatures.length; i < length_3; i++) {\n            this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n        }\n    };\n    /**\n     * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n     * @private\n     */\n    VectorSource.prototype.bindFeaturesCollection_ = function (collection) {\n        var modifyingCollection = false;\n        listen(this, VectorEventType.ADDFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.push(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(this, VectorEventType.REMOVEFEATURE, \n        /**\n         * @param {VectorSourceEvent} evt The vector source event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                collection.remove(evt.feature);\n                modifyingCollection = false;\n            }\n        });\n        listen(collection, CollectionEventType.ADD, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        listen(collection, CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n         */\n        function (evt) {\n            if (!modifyingCollection) {\n                modifyingCollection = true;\n                this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n                modifyingCollection = false;\n            }\n        }, this);\n        this.featuresCollection_ = collection;\n    };\n    /**\n     * Remove all features from the source.\n     * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    VectorSource.prototype.clear = function (opt_fast) {\n        if (opt_fast) {\n            for (var featureId in this.featureChangeKeys_) {\n                var keys = this.featureChangeKeys_[featureId];\n                keys.forEach(unlistenByKey);\n            }\n            if (!this.featuresCollection_) {\n                this.featureChangeKeys_ = {};\n                this.idIndex_ = {};\n                this.undefIdIndex_ = {};\n            }\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n                for (var id in this.nullGeometryFeatures_) {\n                    this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n                }\n            }\n        }\n        if (this.featuresCollection_) {\n            this.featuresCollection_.clear();\n        }\n        if (this.featuresRtree_) {\n            this.featuresRtree_.clear();\n        }\n        this.nullGeometryFeatures_ = {};\n        var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n        this.dispatchEvent(clearEvent);\n        this.changed();\n    };\n    /**\n     * Iterate through all features on the source, calling the provided callback\n     * with each one.  If the callback returns any \"truthy\" value, iteration will\n     * stop and the function will return the same value.\n     * Note: this function only iterate through the feature that have a defined geometry.\n     *\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     on the source.  Return a truthy value to stop iteration.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeature = function (callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEach(callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometries contain the provided\n     * coordinate, calling the callback with each feature.  If the callback returns\n     * a \"truthy\" value, iteration will stop and the function will return the same\n     * value.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose goemetry contains the provided coordinate.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    VectorSource.prototype.forEachFeatureAtCoordinateDirect = function (coordinate, callback) {\n        var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n        return this.forEachFeatureInExtent(extent, function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsCoordinate(coordinate)) {\n                return callback(feature);\n            }\n            else {\n                return undefined;\n            }\n        });\n    };\n    /**\n     * Iterate through all features whose bounding box intersects the provided\n     * extent (note that the feature's geometry may not intersect the extent),\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you are interested in features whose geometry intersects an extent, call\n     * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n     *\n     * When `useSpatialIndex` is set to false, this method will loop through all\n     * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose bounding box intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureInExtent = function (extent, callback) {\n        if (this.featuresRtree_) {\n            return this.featuresRtree_.forEachInExtent(extent, callback);\n        }\n        else if (this.featuresCollection_) {\n            this.featuresCollection_.forEach(callback);\n        }\n    };\n    /**\n     * Iterate through all features whose geometry intersects the provided extent,\n     * calling the callback with each feature.  If the callback returns a \"truthy\"\n     * value, iteration will stop and the function will return the same value.\n     *\n     * If you only want to test for bounding box intersection, call the\n     * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n     *     whose geometry intersects the provided extent.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     * @api\n     */\n    VectorSource.prototype.forEachFeatureIntersectingExtent = function (extent, callback) {\n        return this.forEachFeatureInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         * @return {T|undefined} The return value from the last call to the callback.\n         */\n        function (feature) {\n            var geometry = feature.getGeometry();\n            if (geometry.intersectsExtent(extent)) {\n                var result = callback(feature);\n                if (result) {\n                    return result;\n                }\n            }\n        });\n    };\n    /**\n     * Get the features collection associated with this source. Will be `null`\n     * unless the source was configured with `useSpatialIndex` set to `false`, or\n     * with an {@link module:ol/Collection} as `features`.\n     * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesCollection = function () {\n        return this.featuresCollection_;\n    };\n    /**\n     * Get all features on the source in random order.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeatures = function () {\n        var features;\n        if (this.featuresCollection_) {\n            features = this.featuresCollection_.getArray();\n        }\n        else if (this.featuresRtree_) {\n            features = this.featuresRtree_.getAll();\n            if (!isEmpty(this.nullGeometryFeatures_)) {\n                extend(features, getValues(this.nullGeometryFeatures_));\n            }\n        }\n        return (\n        /** @type {Array<import(\"../Feature.js\").default>} */ (features));\n    };\n    /**\n     * Get all features whose geometry intersects the provided coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesAtCoordinate = function (coordinate) {\n        var features = [];\n        this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n            features.push(feature);\n        });\n        return features;\n    };\n    /**\n     * Get all features in the provided extent.  Note that this returns an array of\n     * all features intersecting the given extent in random order (so it may include\n     * features whose geometries do not intersect the extent).\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    VectorSource.prototype.getFeaturesInExtent = function (extent) {\n        return this.featuresRtree_.getInExtent(extent);\n    };\n    /**\n     * Get the closest feature to the provided coordinate.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n     *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n     *     and it should return a boolean value. By default, no filtering is made.\n     * @return {import(\"../Feature.js\").default} Closest feature.\n     * @api\n     */\n    VectorSource.prototype.getClosestFeatureToCoordinate = function (coordinate, opt_filter) {\n        // Find the closest feature using branch and bound.  We start searching an\n        // infinite extent, and find the distance from the first feature found.  This\n        // becomes the closest feature.  We then compute a smaller extent which any\n        // closer feature must intersect.  We continue searching with this smaller\n        // extent, trying to find a closer feature.  Every time we find a closer\n        // feature, we update the extent being searched so that any even closer\n        // feature must intersect it.  We continue until we run out of features.\n        var x = coordinate[0];\n        var y = coordinate[1];\n        var closestFeature = null;\n        var closestPoint = [NaN, NaN];\n        var minSquaredDistance = Infinity;\n        var extent = [-Infinity, -Infinity, Infinity, Infinity];\n        var filter = opt_filter ? opt_filter : TRUE;\n        this.featuresRtree_.forEachInExtent(extent, \n        /**\n         * @param {import(\"../Feature.js\").default} feature Feature.\n         */\n        function (feature) {\n            if (filter(feature)) {\n                var geometry = feature.getGeometry();\n                var previousMinSquaredDistance = minSquaredDistance;\n                minSquaredDistance = geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n                if (minSquaredDistance < previousMinSquaredDistance) {\n                    closestFeature = feature;\n                    // This is sneaky.  Reduce the extent that it is currently being\n                    // searched while the R-Tree traversal using this same extent object\n                    // is still in progress.  This is safe because the new extent is\n                    // strictly contained by the old extent.\n                    var minDistance = Math.sqrt(minSquaredDistance);\n                    extent[0] = x - minDistance;\n                    extent[1] = y - minDistance;\n                    extent[2] = x + minDistance;\n                    extent[3] = y + minDistance;\n                }\n            }\n        });\n        return closestFeature;\n    };\n    /**\n     * Get the extent of the features currently in the source.\n     *\n     * This method is not available when the source is configured with\n     * `useSpatialIndex` set to `false`.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n     *     will be created. Instead, that extent's coordinates will be overwritten.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    VectorSource.prototype.getExtent = function (opt_extent) {\n        return this.featuresRtree_.getExtent(opt_extent);\n    };\n    /**\n     * Get a feature by its identifier (the value returned by feature.getId()).\n     * Note that the index treats string and numeric identifiers as the same.  So\n     * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n     *\n     * @param {string|number} id Feature identifier.\n     * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n     * @api\n     */\n    VectorSource.prototype.getFeatureById = function (id) {\n        var feature = this.idIndex_[id.toString()];\n        return feature !== undefined ? feature : null;\n    };\n    /**\n     * Get the format associated with this source.\n     *\n     * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n     * @api\n     */\n    VectorSource.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorSource.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * Get the url associated with this source.\n     *\n     * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n     * @api\n     */\n    VectorSource.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @param {Event} event Event.\n     * @private\n     */\n    VectorSource.prototype.handleFeatureChange_ = function (event) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n        var featureKey = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (!geometry) {\n            if (!(featureKey in this.nullGeometryFeatures_)) {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.remove(feature);\n                }\n                this.nullGeometryFeatures_[featureKey] = feature;\n            }\n        }\n        else {\n            var extent = geometry.getExtent();\n            if (featureKey in this.nullGeometryFeatures_) {\n                delete this.nullGeometryFeatures_[featureKey];\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.insert(extent, feature);\n                }\n            }\n            else {\n                if (this.featuresRtree_) {\n                    this.featuresRtree_.update(extent, feature);\n                }\n            }\n        }\n        var id = feature.getId();\n        if (id !== undefined) {\n            var sid = id.toString();\n            if (featureKey in this.undefIdIndex_) {\n                delete this.undefIdIndex_[featureKey];\n                this.idIndex_[sid] = feature;\n            }\n            else {\n                if (this.idIndex_[sid] !== feature) {\n                    this.removeFromIdIndex_(feature);\n                    this.idIndex_[sid] = feature;\n                }\n            }\n        }\n        else {\n            if (!(featureKey in this.undefIdIndex_)) {\n                this.removeFromIdIndex_(feature);\n                this.undefIdIndex_[featureKey] = feature;\n            }\n        }\n        this.changed();\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature));\n    };\n    /**\n     * Returns true if the feature is contained within the source.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @return {boolean} Has feature.\n     * @api\n     */\n    VectorSource.prototype.hasFeature = function (feature) {\n        var id = feature.getId();\n        if (id !== undefined) {\n            return id in this.idIndex_;\n        }\n        else {\n            return getUid(feature) in this.undefIdIndex_;\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    VectorSource.prototype.isEmpty = function () {\n        return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    VectorSource.prototype.loadFeatures = function (extent, resolution, projection) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var extentsToLoad = this.strategy_(extent, resolution);\n        this.loading = false;\n        var _loop_1 = function (i, ii) {\n            var extentToLoad = extentsToLoad[i];\n            var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad, \n            /**\n             * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n             * @return {boolean} Contains.\n             */\n            function (object) {\n                return containsExtent(object.extent, extentToLoad);\n            });\n            if (!alreadyLoaded) {\n                this_1.loader_.call(this_1, extentToLoad, resolution, projection);\n                loadedExtentsRtree.insert(extentToLoad, { extent: extentToLoad.slice() });\n                this_1.loading = this_1.loader_ !== VOID;\n            }\n        };\n        var this_1 = this;\n        for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n            _loop_1(i, ii);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorSource.prototype.refresh = function () {\n        this.clear(true);\n        this.loadedExtentsRtree_.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Remove an extent from the list of loaded extents.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    VectorSource.prototype.removeLoadedExtent = function (extent) {\n        var loadedExtentsRtree = this.loadedExtentsRtree_;\n        var obj;\n        loadedExtentsRtree.forEachInExtent(extent, function (object) {\n            if (equals(object.extent, extent)) {\n                obj = object;\n                return true;\n            }\n        });\n        if (obj) {\n            loadedExtentsRtree.remove(obj);\n        }\n    };\n    /**\n     * Remove a single feature from the source.  If you want to remove all features\n     * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n     * instead.\n     * @param {import(\"../Feature.js\").default} feature Feature to remove.\n     * @api\n     */\n    VectorSource.prototype.removeFeature = function (feature) {\n        var featureKey = getUid(feature);\n        if (featureKey in this.nullGeometryFeatures_) {\n            delete this.nullGeometryFeatures_[featureKey];\n        }\n        else {\n            if (this.featuresRtree_) {\n                this.featuresRtree_.remove(feature);\n            }\n        }\n        this.removeFeatureInternal(feature);\n        this.changed();\n    };\n    /**\n     * Remove feature without firing a `change` event.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @protected\n     */\n    VectorSource.prototype.removeFeatureInternal = function (feature) {\n        var featureKey = getUid(feature);\n        this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n        delete this.featureChangeKeys_[featureKey];\n        var id = feature.getId();\n        if (id !== undefined) {\n            delete this.idIndex_[id.toString()];\n        }\n        else {\n            delete this.undefIdIndex_[featureKey];\n        }\n        this.dispatchEvent(new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature));\n    };\n    /**\n     * Remove a feature from the id index.  Called internally when the feature id\n     * may have changed.\n     * @param {import(\"../Feature.js\").default} feature The feature.\n     * @return {boolean} Removed the feature from the index.\n     * @private\n     */\n    VectorSource.prototype.removeFromIdIndex_ = function (feature) {\n        var removed = false;\n        for (var id in this.idIndex_) {\n            if (this.idIndex_[id] === feature) {\n                delete this.idIndex_[id];\n                removed = true;\n                break;\n            }\n        }\n        return removed;\n    };\n    /**\n     * Set the new loader of the source. The next render cycle will use the\n     * new loader.\n     * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n     * @api\n     */\n    VectorSource.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    /**\n     * Points the source to a new url. The next render cycle will use the new url.\n     * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n     * @api\n     */\n    VectorSource.prototype.setUrl = function (url) {\n        assert(this.format_, 7); // `format` must be set when `url` is set\n        this.setLoader(xhr(url, this.format_));\n    };\n    return VectorSource;\n}(Source));\nexport default VectorSource;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/Cluster\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getUid } from '../util.js';\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { scale as scaleCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { buffer, createEmpty, createOrUpdateFromCoordinate } from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = /** @class */ (function (_super) {\n    __extends(Cluster, _super);\n    /**\n     * @param {Options} options Cluster options.\n     */\n    function Cluster(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            wrapX: options.wrapX\n        }) || this;\n        /**\n         * @type {number|undefined}\n         * @protected\n         */\n        _this.resolution = undefined;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.distance = options.distance !== undefined ? options.distance : 20;\n        /**\n         * @type {Array<Feature>}\n         * @protected\n         */\n        _this.features = [];\n        /**\n         * @param {Feature} feature Feature.\n         * @return {Point} Cluster calculation point.\n         * @protected\n         */\n        _this.geometryFunction = options.geometryFunction || function (feature) {\n            var geometry = /** @type {Point} */ (feature.getGeometry());\n            assert(geometry.getType() == GeometryType.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\n            return geometry;\n        };\n        /**\n         * @type {VectorSource}\n         * @protected\n         */\n        _this.source = options.source;\n        listen(_this.source, EventType.CHANGE, _this.refresh, _this);\n        return _this;\n    }\n    /**\n     * Get the distance in pixels between clusters.\n     * @return {number} Distance.\n     * @api\n     */\n    Cluster.prototype.getDistance = function () {\n        return this.distance;\n    };\n    /**\n     * Get a reference to the wrapped source.\n     * @return {VectorSource} Source.\n     * @api\n     */\n    Cluster.prototype.getSource = function () {\n        return this.source;\n    };\n    /**\n     * @inheritDoc\n     */\n    Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\n        this.source.loadFeatures(extent, resolution, projection);\n        if (resolution !== this.resolution) {\n            this.clear();\n            this.resolution = resolution;\n            this.cluster();\n            this.addFeatures(this.features);\n        }\n    };\n    /**\n     * Set the distance in pixels between clusters.\n     * @param {number} distance The distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setDistance = function (distance) {\n        this.distance = distance;\n        this.refresh();\n    };\n    /**\n     * handle the source changing\n     * @override\n     */\n    Cluster.prototype.refresh = function () {\n        this.clear();\n        this.cluster();\n        this.addFeatures(this.features);\n    };\n    /**\n     * @protected\n     */\n    Cluster.prototype.cluster = function () {\n        if (this.resolution === undefined) {\n            return;\n        }\n        this.features.length = 0;\n        var extent = createEmpty();\n        var mapDistance = this.distance * this.resolution;\n        var features = this.source.getFeatures();\n        /**\n         * @type {!Object<string, boolean>}\n         */\n        var clustered = {};\n        for (var i = 0, ii = features.length; i < ii; i++) {\n            var feature = features[i];\n            if (!(getUid(feature) in clustered)) {\n                var geometry = this.geometryFunction(feature);\n                if (geometry) {\n                    var coordinates = geometry.getCoordinates();\n                    createOrUpdateFromCoordinate(coordinates, extent);\n                    buffer(extent, mapDistance, extent);\n                    var neighbors = this.source.getFeaturesInExtent(extent);\n                    neighbors = neighbors.filter(function (neighbor) {\n                        var uid = getUid(neighbor);\n                        if (!(uid in clustered)) {\n                            clustered[uid] = true;\n                            return true;\n                        }\n                        else {\n                            return false;\n                        }\n                    });\n                    this.features.push(this.createCluster(neighbors));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Feature>} features Features\n     * @return {Feature} The cluster feature.\n     * @protected\n     */\n    Cluster.prototype.createCluster = function (features) {\n        var centroid = [0, 0];\n        for (var i = features.length - 1; i >= 0; --i) {\n            var geometry = this.geometryFunction(features[i]);\n            if (geometry) {\n                addCoordinate(centroid, geometry.getCoordinates());\n            }\n            else {\n                features.splice(i, 1);\n            }\n        }\n        scaleCoordinate(centroid, 1 / features.length);\n        var cluster = new Feature(new Point(centroid));\n        cluster.set('features', features);\n        return cluster;\n    };\n    return Cluster;\n}(VectorSource));\nexport default Cluster;\n//# sourceMappingURL=Cluster.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Zoomify\n */\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport { expandUrl, createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getTopLeft } from '../extent.js';\nimport { toSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n    DEFAULT: 'default',\n    TRUNCATED: 'truncated'\n};\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {number} tilePixelRatio Tile pixel ratio to display the tile\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid TileGrid that the tile belongs to.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"../Tile.js\").Options=} opt_options Tile options.\n     */\n    function CustomTile(tilePixelRatio, tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.zoomifyImage_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0])).map(function (x) {\n            return x * tilePixelRatio;\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getImage = function () {\n        if (this.zoomifyImage_) {\n            return this.zoomifyImage_;\n        }\n        var image = _super.prototype.getImage.call(this);\n        if (this.state == TileState.LOADED) {\n            var tileSize = this.tileSize_;\n            if (image.width == tileSize[0] && image.height == tileSize[1]) {\n                this.zoomifyImage_ = image;\n                return image;\n            }\n            else {\n                var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n                context.drawImage(image, 0, 0);\n                this.zoomifyImage_ = context.canvas;\n                return context.canvas;\n            }\n        }\n        else {\n            return image;\n        }\n    };\n    return CustomTile;\n}(ImageTile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [tilePixelRatio] The pixel ratio used by the tile service. For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px by 512px images (for retina/hidpi devices) then `tilePixelRatio` should be set to `2`\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = /** @class */ (function (_super) {\n    __extends(Zoomify, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Zoomify(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var size = options.size;\n        var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n            options.tierSizeCalculation :\n            TierSizeCalculation.DEFAULT;\n        var imageWidth = size[0];\n        var imageHeight = size[1];\n        var extent = options.extent || [0, -size[1], size[0], 0];\n        var tierSizeInTiles = [];\n        var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n        var tilePixelRatio = options.tilePixelRatio || 1;\n        var tileSizeForTierSizeCalculation = tileSize;\n        switch (tierSizeCalculation) {\n            case TierSizeCalculation.DEFAULT:\n                while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n                        Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n                    ]);\n                    tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n                }\n                break;\n            case TierSizeCalculation.TRUNCATED:\n                var width = imageWidth;\n                var height = imageHeight;\n                while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n                    tierSizeInTiles.push([\n                        Math.ceil(width / tileSizeForTierSizeCalculation),\n                        Math.ceil(height / tileSizeForTierSizeCalculation)\n                    ]);\n                    width >>= 1;\n                    height >>= 1;\n                }\n                break;\n            default:\n                assert(false, 53); // Unknown `tierSizeCalculation` configured\n                break;\n        }\n        tierSizeInTiles.push([1, 1]);\n        tierSizeInTiles.reverse();\n        var resolutions = [1];\n        var tileCountUpToTier = [0];\n        for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n            resolutions.push(1 << i);\n            tileCountUpToTier.push(tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n                tileCountUpToTier[i - 1]);\n        }\n        resolutions.reverse();\n        var tileGrid = new TileGrid({\n            tileSize: tileSize,\n            extent: extent,\n            origin: getTopLeft(extent),\n            resolutions: resolutions\n        });\n        var url = options.url;\n        if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n            url += '{TileGroup}/{z}-{x}-{y}.jpg';\n        }\n        var urls = expandUrl(url);\n        /**\n         * @param {string} template Template.\n         * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n         */\n        function createFromTemplate(template) {\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    var tileCoordZ = tileCoord[0];\n                    var tileCoordX = tileCoord[1];\n                    var tileCoordY = tileCoord[2];\n                    var tileIndex = tileCoordX +\n                        tileCoordY * tierSizeInTiles[tileCoordZ][0];\n                    var tileSize_1 = tileGrid.getTileSize(tileCoordZ);\n                    var tileWidth = Array.isArray(tileSize_1) ? tileSize_1[0] : tileSize_1;\n                    var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n                    var localContext_1 = {\n                        'z': tileCoordZ,\n                        'x': tileCoordX,\n                        'y': tileCoordY,\n                        'tileIndex': tileIndex,\n                        'TileGroup': 'TileGroup' + tileGroup\n                    };\n                    return template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                        return localContext_1[p];\n                    });\n                }\n            });\n        }\n        var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n        var ZoomifyTileClass = CustomTile.bind(null, tilePixelRatio, tileGrid);\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            tilePixelRatio: tilePixelRatio,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: ZoomifyTileClass,\n            tileGrid: tileGrid,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        return _this;\n    }\n    return Zoomify;\n}(TileImage));\nexport default Zoomify;\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/format/IIIFInfo\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} PreferredOptions\n * @property {string} [format] Preferred image format. Will be used if the image information\n * indicates support for that format.\n * @property {string} [quality] IIIF image qualitiy.  Will be used if the image information\n * indicates support for that quality.\n */\n/**\n * @typedef {Object} SupportedFeatures\n * @property {Array<string>} [supports] Supported IIIF image size and region\n * calculation features.\n * @property {Array<string>} [formats] Supported image formats.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n */\n/**\n * @typedef {Object} ImageInformationResponse1_0\n * @property {string} identifier\n * @property {number} width\n * @property {number} height\n * @property {Array<number>} [scale_factors] Resolution scaling factors.\n * @property {number} [tile_width]\n * @property {number} [tile_height]\n * @property {Array<string>} [formats] Supported image formats.\n * @property {string} [profile] Compliance level URI.\n */\n/**\n * @typedef {Object} ImageInformationResponse1_1\n * @property {string} \"@id\" The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context URI.\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {Array<number>} [scale_factors] Resolution scaling factors.\n * @property {number} [tile_width]\n * @property {number} [tile_height]\n * @property {Array<string>} [formats] Supported image formats.\n * @property {string} [profile] Compliance level URI.\n */\n/**\n * @typedef {Object} TileInfo\n * @property {Array<number>} scaleFactors Supported resolution scaling factors.\n * @property {number} width Tile width in pixels.\n * @property {number} [height] Tile height in pixels. Same as tile width if height is\n * not given.\n */\n/**\n * @typedef {Object} IiifProfile\n * @property {Array<string>} [formats] Supported image formats for the image service.\n * @property {Array<string>} [qualities] Supported IIIF image qualities.\n * @property {Array<string>} [supports] Supported features.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n */\n/**\n * @typedef {Object} ImageInformationResponse2\n * @property {string} \"@id\" The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context IRI\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {Array<string|IiifProfile>} profile Additional informations about the image\n * service's capabilities.\n * @property {Array<Object<string, number>>} [sizes] Supported full image dimensions.\n * @property {Array<TileInfo>} [tiles] Supported tile sizes and resolution scaling factors.\n */\n/**\n * @typedef {Object} ImageInformationResponse3\n * @property {string} id The base URI of the image service.\n * @property {string} \"@context\" JSON-LD context IRI\n * @property {number} width Full image width.\n * @property {number} height Full image height.\n * @property {string} profile Compliance level, one of 'level0', 'level1' or 'level2'\n * @property {Array<Object<string, number>>} [sizes] Supported full image dimensions.\n * @property {Array<TileInfo>} [tiles] Supported tile sizes and resolution scaling factors.\n * @property {number} [maxArea] Maximum area (pixels) available for this image service.\n * @property {number} [maxHeight] Maximum height.\n * @property {number} [maxWidth] Maximum width.\n * @property {Array<string>} [extraQualities] IIIF image qualities supported by the\n * image service additional to the ones indicated by the compliance level.\n * @property {Array<string>} [extraFormats] Image formats supported by the\n * image service additional to the ones indicated by the compliance level.\n * @property {Array<string>} [extraFeatures] Additional supported features whose support\n * is not indicated by the compliance level.\n */\n/**\n * Enum representing the major IIIF Image API versions\n * @enum {string}\n */\nvar Versions = {\n    VERSION1: 'version1',\n    VERSION2: 'version2',\n    VERSION3: 'version3'\n};\n/**\n * Supported image formats, qualities and supported region / size calculation features\n * for different image API versions and compliance levels\n * @const\n * @type {Object<string, Object<string, SupportedFeatures>>}\n */\nvar IIIF_PROFILE_VALUES = {};\nIIIF_PROFILE_VALUES[Versions.VERSION1] = {\n    'level0': {\n        supports: [],\n        formats: [],\n        qualities: ['native']\n    },\n    'level1': {\n        supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n        formats: ['jpg'],\n        qualities: ['native']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n            'sizeByConfinedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['native', 'color', 'grey', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION2] = {\n    'level0': {\n        supports: [],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level1': {\n        supports: ['regionByPx', 'sizeByW', 'sizeByH', 'sizeByPct'],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionByPct', 'sizeByW', 'sizeByH', 'sizeByPct',\n            'sizeByConfinedWh', 'sizeByDistortedWh', 'sizeByWh'],\n        formats: ['jpg', 'png'],\n        qualities: ['default', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES[Versions.VERSION3] = {\n    'level0': {\n        supports: [],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level1': {\n        supports: ['regionByPx', 'regionSquare', 'sizeByW', 'sizeByH'],\n        formats: ['jpg'],\n        qualities: ['default']\n    },\n    'level2': {\n        supports: ['regionByPx', 'regionSquare', 'regionByPct',\n            'sizeByW', 'sizeByH', 'sizeByPct', 'sizeByConfinedWh', 'sizeByWh'],\n        formats: ['jpg'],\n        qualities: ['default', 'bitonal']\n    }\n};\nIIIF_PROFILE_VALUES['none'] = {\n    'none': {\n        supports: [],\n        formats: [],\n        qualities: []\n    }\n};\nvar COMPLIANCE_VERSION1 = new RegExp('^https?\\:\\/\\/library\\.stanford\\.edu\\/iiif\\/image-api\\/(1\\.1\\/)?compliance\\.html#level[0-2]$');\nvar COMPLIANCE_VERSION2 = new RegExp('^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/2\\/level[0-2](\\.json)?$');\nvar COMPLIANCE_VERSION3 = new RegExp('(^https?\\:\\/\\/iiif\\.io\\/api\\/image\\/3\\/level[0-2](\\.json)?$)|(^level[0-2]$)');\nfunction generateVersion1Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n    // Version 1.0 and 1.1 do not require a profile.\n    if (levelProfile === undefined) {\n        levelProfile = IIIF_PROFILE_VALUES[Versions.VERSION1]['level0'];\n    }\n    return {\n        url: iiifInfo.imageInfo['@id'] === undefined ? undefined : iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n        supports: levelProfile.supports,\n        formats: levelProfile.formats.concat([iiifInfo.imageInfo.formats === undefined ?\n                [] : iiifInfo.imageInfo.formats]),\n        qualities: levelProfile.qualities.concat([iiifInfo.imageInfo.qualities === undefined ?\n                [] : iiifInfo.imageInfo.qualities]),\n        resolutions: iiifInfo.imageInfo.scale_factors,\n        tileSize: iiifInfo.imageInfo.tile_width !== undefined ? (iiifInfo.imageInfo.tile_height !== undefined ?\n            [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_height] : [iiifInfo.imageInfo.tile_width, iiifInfo.imageInfo.tile_width]) :\n            (iiifInfo.imageInfo.tile_height != undefined ? [iiifInfo.imageInfo.tile_height, iiifInfo.imageInfo.tile_height] : undefined)\n    };\n}\nfunction generateVersion2Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures(), additionalProfile = Array.isArray(iiifInfo.imageInfo.profile) && iiifInfo.imageInfo.profile.length > 1, profileSupports = additionalProfile && iiifInfo.imageInfo.profile[1].supports ? iiifInfo.imageInfo.profile[1].supports : [], profileFormats = additionalProfile && iiifInfo.imageInfo.profile[1].formats ? iiifInfo.imageInfo.profile[1].formats : [], profileQualities = additionalProfile && iiifInfo.imageInfo.profile[1].qualities ? iiifInfo.imageInfo.profile[1].qualities : [];\n    return {\n        url: iiifInfo.imageInfo['@id'].replace(/\\/?(info.json)?$/g, ''),\n        sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n        }),\n        tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.height === undefined ? tile.width : tile.height;\n            })[0]\n        ],\n        resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.scaleFactors;\n            })[0],\n        supports: levelProfile.supports.concat(profileSupports),\n        formats: levelProfile.formats.concat(profileFormats),\n        qualities: levelProfile.qualities.concat(profileQualities)\n    };\n}\nfunction generateVersion3Options(iiifInfo) {\n    var levelProfile = iiifInfo.getComplianceLevelSupportedFeatures();\n    return {\n        url: iiifInfo.imageInfo['id'],\n        sizes: iiifInfo.imageInfo.sizes === undefined ? undefined : iiifInfo.imageInfo.sizes.map(function (size) {\n            return [size.width, size.height];\n        }),\n        tileSize: iiifInfo.imageInfo.tiles === undefined ? undefined : [\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.width;\n            })[0],\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.height;\n            })[0]\n        ],\n        resolutions: iiifInfo.imageInfo.tiles === undefined ? undefined :\n            iiifInfo.imageInfo.tiles.map(function (tile) {\n                return tile.scaleFactors;\n            })[0],\n        supports: iiifInfo.imageInfo.extraFeatures === undefined ? levelProfile.supports : levelProfile.supports.concat(iiifInfo.imageInfo.extraFeatures),\n        formats: iiifInfo.imageInfo.extraFormats === undefined ? levelProfile.formats : levelProfile.formats.concat(iiifInfo.imageInfo.extraFormats),\n        qualities: iiifInfo.imageInfo.extraQualities === undefined ? levelProfile.qualities : levelProfile.supports.concat(iiifInfo.imageInfo.extraQualities),\n        maxWidth: undefined,\n        maxHeight: undefined,\n        maxArea: undefined\n    };\n}\nvar versionFunctions = {};\nversionFunctions[Versions.VERSION1] = generateVersion1Options;\nversionFunctions[Versions.VERSION2] = generateVersion2Options;\nversionFunctions[Versions.VERSION3] = generateVersion3Options;\n/**\n * @classdesc\n * Format for transforming IIIF Image API image information responses into\n * IIIF tile source ready options\n *\n * @api\n */\nvar IIIFInfo = /** @class */ (function () {\n    /**\n     * @param {string|ImageInformationResponse1_0|ImageInformationResponse1_1|ImageInformationResponse2|ImageInformationResponse3} imageInfo\n     * Deserialized image information JSON response object or JSON response as string\n     */\n    function IIIFInfo(imageInfo) {\n        this.setImageInfo(imageInfo);\n    }\n    /**\n     * @param {string|ImageInformationResponse1_0|ImageInformationResponse1_1|ImageInformationResponse2|ImageInformationResponse3} imageInfo\n     * Deserialized image information JSON response object or JSON response as string\n     * @api\n     */\n    IIIFInfo.prototype.setImageInfo = function (imageInfo) {\n        if (typeof imageInfo == 'string') {\n            this.imageInfo = JSON.parse(imageInfo);\n        }\n        else {\n            this.imageInfo = imageInfo;\n        }\n    };\n    /**\n     * @returns {Versions} Major IIIF version.\n     * @api\n     */\n    IIIFInfo.prototype.getImageApiVersion = function () {\n        if (this.imageInfo === undefined) {\n            return;\n        }\n        var context = this.imageInfo['@context'] || 'ol-no-context';\n        if (typeof context == 'string') {\n            context = [context];\n        }\n        for (var i = 0; i < context.length; i++) {\n            switch (context[i]) {\n                case 'http://library.stanford.edu/iiif/image-api/1.1/context.json':\n                case 'http://iiif.io/api/image/1/context.json':\n                    return Versions.VERSION1;\n                case 'http://iiif.io/api/image/2/context.json':\n                    return Versions.VERSION2;\n                case 'http://iiif.io/api/image/3/context.json':\n                    return Versions.VERSION3;\n                case 'ol-no-context':\n                    // Image API 1.0 has no '@context'\n                    if (this.getComplianceLevelEntryFromProfile(Versions.VERSION1) && this.imageInfo.identifier) {\n                        return Versions.VERSION1;\n                    }\n                    break;\n                default:\n            }\n        }\n        assert(false, 61);\n    };\n    /**\n     * @param {Versions} version Optional IIIF image API version\n     * @returns {string} Compliance level as it appears in the IIIF image information\n     * response.\n     */\n    IIIFInfo.prototype.getComplianceLevelEntryFromProfile = function (version) {\n        if (this.imageInfo === undefined || this.imageInfo.profile === undefined) {\n            return;\n        }\n        if (version === undefined) {\n            version = this.getImageApiVersion();\n        }\n        switch (version) {\n            case Versions.VERSION1:\n                if (COMPLIANCE_VERSION1.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                break;\n            case Versions.VERSION3:\n                if (COMPLIANCE_VERSION3.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                break;\n            case Versions.VERSION2:\n                if (typeof this.imageInfo.profile === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile)) {\n                    return this.imageInfo.profile;\n                }\n                if (Array.isArray(this.imageInfo.profile) && this.imageInfo.profile.length > 0\n                    && typeof this.imageInfo.profile[0] === 'string' && COMPLIANCE_VERSION2.test(this.imageInfo.profile[0])) {\n                    return this.imageInfo.profile[0];\n                }\n                break;\n            default:\n        }\n    };\n    /**\n     * @param {Versions} version Optional IIIF image API version\n     * @returns {string} Compliance level, on of 'level0', 'level1' or 'level2' or undefined\n     */\n    IIIFInfo.prototype.getComplianceLevelFromProfile = function (version) {\n        var complianceLevel = this.getComplianceLevelEntryFromProfile(version);\n        if (complianceLevel === undefined) {\n            return undefined;\n        }\n        var level = complianceLevel.match(/level[0-2](\\.json)?$/g);\n        return Array.isArray(level) ? level[0].replace('.json', '') : undefined;\n    };\n    /**\n     * @returns {SupportedFeatures} Image formats, qualities and region / size calculation\n     * methods that are supported by the IIIF service.\n     */\n    IIIFInfo.prototype.getComplianceLevelSupportedFeatures = function () {\n        if (this.imageInfo === undefined) {\n            return;\n        }\n        var version = this.getImageApiVersion();\n        var level = this.getComplianceLevelFromProfile(version);\n        if (level === undefined) {\n            return IIIF_PROFILE_VALUES['none']['none'];\n        }\n        return IIIF_PROFILE_VALUES[version][level];\n    };\n    /**\n     * @param {PreferredOptions} opt_preferredOptions Optional options for preferred format and quality.\n     * @returns {import(\"../source/IIIF.js\").Options} IIIF tile source ready constructor options.\n     * @api\n     */\n    IIIFInfo.prototype.getTileSourceOptions = function (opt_preferredOptions) {\n        var options = opt_preferredOptions || {}, version = this.getImageApiVersion();\n        if (version === undefined) {\n            return;\n        }\n        var imageOptions = version === undefined ? undefined : versionFunctions[version](this);\n        if (imageOptions === undefined) {\n            return;\n        }\n        return {\n            url: imageOptions.url,\n            version: version,\n            size: [this.imageInfo.width, this.imageInfo.height],\n            sizes: imageOptions.sizes,\n            format: imageOptions.formats.includes(options.format) ? options.format : 'jpg',\n            supports: imageOptions.supports,\n            quality: options.quality && imageOptions.qualities.includes(options.quality) ?\n                options.quality : imageOptions.qualities.includes('native') ? 'native' : 'default',\n            resolutions: Array.isArray(imageOptions.resolutions) ? imageOptions.resolutions.sort(function (a, b) {\n                return b - a;\n            }) : undefined,\n            tileSize: imageOptions.tileSize\n        };\n    };\n    return IIIFInfo;\n}());\nexport default IIIFInfo;\nexport { Versions };\n//# sourceMappingURL=IIIFInfo.js.map","/**\n * @module ol/source/IIIF\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_TILE_SIZE } from '../tilegrid/common.js';\nimport { getTopLeft } from '../extent.js';\nimport { CustomTile } from './Zoomify.js';\nimport { Versions } from '../format/IIIFInfo.js';\nimport { assert } from '../asserts.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileImage from './TileImage.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {null|string} [crossOrigin]\n * @property {import(\"../extent.js\").Extent} [extent=[0, -height, width, 0]]\n * @property {string} [format='jpg'] Requested image format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {string} [quality] Requested IIIF image quality. Default is 'native'\n * for version 1, 'default' for versions 2 and 3.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../size.js\").Size} size Size of the image [width, height].\n * @property {import(\"../size.js\").Size[]} [sizes] Supported scaled image sizes.\n * Content of the IIIF info.json 'sizes' property, but as array of Size objects.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {Array<string>} [supports=[]] Supported IIIF region and size calculation\n * features.\n * @property {number} [tilePixelRatio]\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Same tile size is used for all zoom levels. If tile size is a number,\n * a square tile is assumed. If the IIIF image service supports arbitrary\n * tiling (sizeByH, sizeByW, sizeByWh or sizeByPct as well as regionByPx or regionByPct\n * are supported), the default tilesize is 256.\n * @property {number} [transition]\n * @property {string} [url] Base URL of the IIIF Image service.\n * This should be the same as the IIIF Image @id.\n * @property {Versions} [version=Versions.VERSION2] Service's IIIF Image API version.\n * @property {number} [zDirection] Indicate which resolution should be used\n * by a renderer if the views resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\nfunction formatPercentage(percentage) {\n    return percentage.toLocaleString('en', { maximumFractionDigits: 10 });\n}\n/**\n * @classdesc\n * Layer source for IIIF Image API services.\n * @api\n */\nvar IIIF = /** @class */ (function (_super) {\n    __extends(IIIF, _super);\n    /**\n     * @param {Options} opt_options Tile source options. Use {@link import(\"../format/IIIFInfo.js\").IIIFInfo}\n     * to parse Image API service information responses into constructor options.\n     * @api\n     */\n    function IIIF(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseUrl = options.url || '';\n        baseUrl = baseUrl + (baseUrl.lastIndexOf('/') === baseUrl.length - 1 || baseUrl === '' ? '' : '/');\n        var version = options.version || Versions.VERSION2;\n        var sizes = options.sizes || [];\n        var size = options.size;\n        assert(size != undefined && Array.isArray(size) && size.length == 2 &&\n            !isNaN(size[0]) && size[0] > 0 && !isNaN(size[1]) && size[1] > 0, 60);\n        var width = size[0];\n        var height = size[1];\n        var tileSize = options.tileSize;\n        var tilePixelRatio = options.tilePixelRatio || 1;\n        var format = options.format || 'jpg';\n        var quality = options.quality || (options.version == Versions.VERSION1 ? 'native' : 'default');\n        var resolutions = options.resolutions || [];\n        var supports = options.supports || [];\n        var extent = options.extent || [0, -height, width, 0];\n        var supportsListedSizes = sizes != undefined && Array.isArray(sizes) && sizes.length > 0;\n        var supportsListedTiles = tileSize != undefined && (Number.isInteger(tileSize) && tileSize > 0 || Array.isArray(tileSize) && tileSize.length > 0);\n        var supportsArbitraryTiling = supports != undefined && Array.isArray(supports) &&\n            (supports.includes('regionByPx') || supports.includes('regionByPct')) &&\n            (supports.includes('sizeByWh') || supports.includes('sizeByH') ||\n                supports.includes('sizeByW') || supports.includes('sizeByPct'));\n        var tileWidth, tileHeight, maxZoom;\n        resolutions.sort(function (a, b) {\n            return b - a;\n        });\n        if (supportsListedTiles || supportsArbitraryTiling) {\n            if (tileSize != undefined) {\n                if (Number.isInteger(tileSize) && tileSize > 0) {\n                    tileWidth = tileSize;\n                    tileHeight = tileSize;\n                }\n                else if (Array.isArray(tileSize) && tileSize.length > 0) {\n                    if (tileSize.length == 1 || tileSize[1] == undefined && Number.isInteger(tileSize[0])) {\n                        tileWidth = tileSize[0];\n                        tileHeight = tileSize[0];\n                    }\n                    if (tileSize.length == 2) {\n                        if (Number.isInteger(tileSize[0]) && Number.isInteger(tileSize[1])) {\n                            tileWidth = tileSize[0];\n                            tileHeight = tileSize[1];\n                        }\n                        else if (tileSize[0] == undefined && Number.isInteger(tileSize[1])) {\n                            tileWidth = tileSize[1];\n                            tileHeight = tileSize[1];\n                        }\n                    }\n                }\n            }\n            if (tileWidth === undefined || tileHeight === undefined) {\n                tileWidth = DEFAULT_TILE_SIZE;\n                tileHeight = DEFAULT_TILE_SIZE;\n            }\n            if (resolutions.length == 0) {\n                maxZoom = Math.max(Math.ceil(Math.log(width / tileWidth) / Math.LN2), Math.ceil(Math.log(height / tileHeight) / Math.LN2));\n                for (var i = maxZoom; i >= 0; i--) {\n                    resolutions.push(Math.pow(2, i));\n                }\n            }\n            else {\n                var maxScaleFactor = Math.max(resolutions.slice());\n                // TODO maxScaleFactor might not be a power to 2\n                maxZoom = Math.round(Math.log(maxScaleFactor) / Math.LN2);\n            }\n        }\n        else {\n            // No tile support.\n            tileWidth = width;\n            tileHeight = height;\n            resolutions = [];\n            if (supportsListedSizes) {\n                /*\n                 * 'sizes' provided. Use full region in different resolutions. Every\n                 * resolution has only one tile.\n                 */\n                sizes.sort(function (a, b) {\n                    return a[0] - b[0];\n                });\n                maxZoom = -1;\n                var ignoredSizesIndex = [];\n                for (var i = 0; i < sizes.length; i++) {\n                    var resolution = width / sizes[i][0];\n                    if (resolutions.length > 0 && resolutions[resolutions.length - 1] == resolution) {\n                        ignoredSizesIndex.push(i);\n                        continue;\n                    }\n                    resolutions.push(resolution);\n                    maxZoom++;\n                }\n                if (ignoredSizesIndex.length > 0) {\n                    for (var i = 0; i < ignoredSizesIndex.length; i++) {\n                        sizes.splice(ignoredSizesIndex[i] - i, 1);\n                    }\n                }\n            }\n            else {\n                // No useful image information at all. Try pseudo tile with full image.\n                resolutions.push(1);\n                sizes.push([width, height]);\n                maxZoom = 0;\n            }\n        }\n        var tileGrid = new TileGrid({\n            tileSize: [tileWidth, tileHeight],\n            extent: extent,\n            origin: getTopLeft(extent),\n            resolutions: resolutions\n        });\n        var tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n            var regionParam, sizeParam;\n            var zoom = tileCoord[0];\n            if (zoom > maxZoom) {\n                return;\n            }\n            var tileX = tileCoord[1], tileY = tileCoord[2], scale = resolutions[zoom];\n            if (tileX === undefined || tileY === undefined || scale === undefined ||\n                tileX < 0 || Math.ceil(width / scale / tileWidth) <= tileX ||\n                tileY < 0 || Math.ceil(height / scale / tileHeight) <= tileY) {\n                return;\n            }\n            if (supportsArbitraryTiling || supportsListedTiles) {\n                var regionX = tileX * tileWidth * scale, regionY = tileY * tileHeight * scale;\n                var regionW = tileWidth * scale, regionH = tileHeight * scale, sizeW = tileWidth, sizeH = tileHeight;\n                if (regionX + regionW > width) {\n                    regionW = width - regionX;\n                }\n                if (regionY + regionH > height) {\n                    regionH = height - regionY;\n                }\n                if (regionX + tileWidth * scale > width) {\n                    sizeW = Math.floor((width - regionX + scale - 1) / scale);\n                }\n                if (regionY + tileHeight * scale > height) {\n                    sizeH = Math.floor((height - regionY + scale - 1) / scale);\n                }\n                if (regionX == 0 && regionW == width && regionY == 0 && regionH == height) {\n                    // canonical full image region parameter is 'full', not 'x,y,w,h'\n                    regionParam = 'full';\n                }\n                else if (!supportsArbitraryTiling || supports.includes('regionByPx')) {\n                    regionParam = regionX + ',' + regionY + ',' + regionW + ',' + regionH;\n                }\n                else if (supports.includes('regionByPct')) {\n                    var pctX = formatPercentage(regionX / width * 100), pctY = formatPercentage(regionY / height * 100), pctW = formatPercentage(regionW / width * 100), pctH = formatPercentage(regionH / height * 100);\n                    regionParam = 'pct:' + pctX + ',' + pctY + ',' + pctW + ',' + pctH;\n                }\n                if (version == Versions.VERSION3 && (!supportsArbitraryTiling || supports.includes('sizeByWh'))) {\n                    sizeParam = sizeW + ',' + sizeH;\n                }\n                else if (!supportsArbitraryTiling || supports.includes('sizeByW')) {\n                    sizeParam = sizeW + ',';\n                }\n                else if (supports.includes('sizeByH')) {\n                    sizeParam = ',' + sizeH;\n                }\n                else if (supports.includes('sizeByWh')) {\n                    sizeParam = sizeW + ',' + sizeH;\n                }\n                else if (supports.includes('sizeByPct')) {\n                    sizeParam = 'pct:' + formatPercentage(100 / scale);\n                }\n            }\n            else {\n                regionParam = 'full';\n                if (supportsListedSizes) {\n                    var regionWidth = sizes[zoom][0], regionHeight = sizes[zoom][1];\n                    if (version == Versions.VERSION3) {\n                        if (regionWidth == width && regionHeight == height) {\n                            sizeParam = 'max';\n                        }\n                        else {\n                            sizeParam = regionWidth + ',' + regionHeight;\n                        }\n                    }\n                    else {\n                        if (regionWidth == width) {\n                            sizeParam = 'full';\n                        }\n                        else {\n                            sizeParam = regionWidth + ',';\n                        }\n                    }\n                }\n                else {\n                    sizeParam = version == Versions.VERSION3 ? 'max' : 'full';\n                }\n            }\n            return baseUrl + regionParam + '/' + sizeParam + '/0/' + quality + '.' + format;\n        };\n        var IiifTileClass = CustomTile.bind(null, tilePixelRatio, tileGrid);\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: options.state,\n            tileClass: IiifTileClass,\n            tileGrid: tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: tileUrlFunction,\n            transition: options.transition\n        }) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.zDirection = options.zDirection;\n        return _this;\n    }\n    return IIIF;\n}(TileImage));\nexport default IIIF;\n//# sourceMappingURL=IIIF.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Image\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getCenter, getIntersection, getHeight, getWidth } from '../extent.js';\nimport { calculateSourceResolution, render as renderReprojected } from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /** @class */ (function (_super) {\n    __extends(ReprojImage, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n     * @param {number} targetResolution Target resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {FunctionType} getImageFunction\n     *     Function returning source images (extent, resolution, pixelRatio).\n     */\n    function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n        var _this = this;\n        var maxSourceExtent = sourceProj.getExtent();\n        var maxTargetExtent = targetProj.getExtent();\n        var limitedTargetExtent = maxTargetExtent ?\n            getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n        var targetCenter = getCenter(limitedTargetExtent);\n        var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n        var errorThresholdInPixels = ERROR_THRESHOLD;\n        var triangulation = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels);\n        var sourceExtent = triangulation.calculateSourceExtent();\n        var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n        var state = ImageState.LOADED;\n        if (sourceImage) {\n            state = ImageState.IDLE;\n        }\n        var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n        _this = _super.call(this, targetExtent, targetResolution, sourcePixelRatio, state) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.targetProj_ = targetProj;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = triangulation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.targetResolution_ = targetResolution;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.targetExtent_ = targetExtent;\n        /**\n         * @private\n         * @type {import(\"../ImageBase.js\").default}\n         */\n        _this.sourceImage_ = sourceImage;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourcePixelRatio_ = sourcePixelRatio;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceListenerKey_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.disposeInternal = function () {\n        if (this.state == ImageState.LOADING) {\n            this.unlistenSource_();\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    ReprojImage.prototype.getProjection = function () {\n        return this.targetProj_;\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.reproject_ = function () {\n        var sourceState = this.sourceImage_.getState();\n        if (sourceState == ImageState.LOADED) {\n            var width = getWidth(this.targetExtent_) / this.targetResolution_;\n            var height = getHeight(this.targetExtent_) / this.targetResolution_;\n            this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_, this.sourceImage_.getResolution(), this.maxSourceExtent_, this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n                    extent: this.sourceImage_.getExtent(),\n                    image: this.sourceImage_.getImage()\n                }], 0);\n        }\n        this.state = sourceState;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ReprojImage.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                this.reproject_();\n            }\n            else {\n                this.sourceListenerKey_ = listen(this.sourceImage_, EventType.CHANGE, function (e) {\n                    var sourceState = this.sourceImage_.getState();\n                    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n                        this.unlistenSource_();\n                        this.reproject_();\n                    }\n                }, this);\n                this.sourceImage_.load();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojImage.prototype.unlistenSource_ = function () {\n        unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n        this.sourceListenerKey_ = null;\n    };\n    return ReprojImage;\n}(ImageBase));\nexport default ReprojImage;\n//# sourceMappingURL=Image.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Image\n */\nimport { abstract } from '../util.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport { linearFindNearest } from '../array.js';\nimport Event from '../events/Event.js';\nimport { equals } from '../extent.js';\nimport { equivalent } from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n    /**\n     * Triggered when an image starts loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n     * @api\n     */\n    IMAGELOADSTART: 'imageloadstart',\n    /**\n     * Triggered when an image finishes loading.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n     * @api\n     */\n    IMAGELOADEND: 'imageloadend',\n    /**\n     * Triggered if image loading results in an error.\n     * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n     * @api\n     */\n    IMAGELOADERROR: 'imageloaderror'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = /** @class */ (function (_super) {\n    __extends(ImageSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Image.js\").default} image The image.\n     */\n    function ImageSourceEvent(type, image) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The image related to the event.\n         * @type {import(\"../Image.js\").default}\n         * @api\n         */\n        _this.image = image;\n        return _this;\n    }\n    return ImageSourceEvent;\n}(Event));\nexport { ImageSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /** @class */ (function (_super) {\n    __extends(ImageSource, _super);\n    /**\n     * @param {Options} options Single image source options.\n     */\n    function ImageSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            state: options.state\n        }) || this;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.resolutions_ = options.resolutions !== undefined ?\n            options.resolutions : null;\n        /**\n         * @private\n         * @type {import(\"../reproj/Image.js\").default}\n         */\n        _this.reprojectedImage_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.reprojectedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * @return {Array<number>} Resolutions.\n     * @override\n     */\n    ImageSource.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @protected\n     * @param {number} resolution Resolution.\n     * @return {number} Resolution.\n     */\n    ImageSource.prototype.findNearestResolution = function (resolution) {\n        if (this.resolutions_) {\n            var idx = linearFindNearest(this.resolutions_, resolution, 0);\n            resolution = this.resolutions_[idx];\n        }\n        return resolution;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     */\n    ImageSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            if (sourceProjection) {\n                projection = sourceProjection;\n            }\n            return this.getImageInternal(extent, resolution, pixelRatio, projection);\n        }\n        else {\n            if (this.reprojectedImage_) {\n                if (this.reprojectedRevision_ == this.getRevision() &&\n                    equivalent(this.reprojectedImage_.getProjection(), projection) &&\n                    this.reprojectedImage_.getResolution() == resolution &&\n                    equals(this.reprojectedImage_.getExtent(), extent)) {\n                    return this.reprojectedImage_;\n                }\n                this.reprojectedImage_.dispose();\n                this.reprojectedImage_ = null;\n            }\n            this.reprojectedImage_ = new ReprojImage(sourceProjection, projection, extent, resolution, pixelRatio, function (extent, resolution, pixelRatio) {\n                return this.getImageInternal(extent, resolution, pixelRatio, sourceProjection);\n            }.bind(this));\n            this.reprojectedRevision_ = this.getRevision();\n            return this.reprojectedImage_;\n        }\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../ImageBase.js\").default} Single image.\n     * @protected\n     */\n    ImageSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Handle image change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    ImageSource.prototype.handleImageChange = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        switch (image.getState()) {\n            case ImageState.LOADING:\n                this.loading = true;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART, image));\n                break;\n            case ImageState.LOADED:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND, image));\n                break;\n            case ImageState.ERROR:\n                this.loading = false;\n                this.dispatchEvent(new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR, image));\n                break;\n            default:\n            // pass\n        }\n    };\n    return ImageSource;\n}(Source));\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\nexport default ImageSource;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n    var keyParams = [];\n    // Skip any null or undefined parameter values\n    Object.keys(params).forEach(function (k) {\n        if (params[k] !== null && params[k] !== undefined) {\n            keyParams.push(k + '=' + encodeURIComponent(params[k]));\n        }\n    });\n    var qs = keyParams.join('&');\n    // remove any trailing ? or &\n    uri = uri.replace(/[?&]$/, '');\n    // append ? or & depending on whether uri has existing parameters\n    uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n    return uri + qs;\n}\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = /** @class */ (function (_super) {\n    __extends(ImageArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Image ArcGIS Rest Options.\n     */\n    function ImageArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageArcGISRest.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        var params = {\n            'F': 'image',\n            'FORMAT': 'PNG32',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        extent = extent.slice();\n        var centerX = (extent[0] + extent[2]) / 2;\n        var centerY = (extent[1] + extent[3]) / 2;\n        if (this.ratio_ != 1) {\n            var halfWidth = this.ratio_ * getWidth(extent) / 2;\n            var halfHeight = this.ratio_ * getHeight(extent) / 2;\n            extent[0] = centerX - halfWidth;\n            extent[1] = centerY - halfHeight;\n            extent[2] = centerX + halfWidth;\n            extent[3] = centerY + halfHeight;\n        }\n        var imageResolution = resolution / pixelRatio;\n        // Compute an integer width and height.\n        var width = Math.ceil(getWidth(extent) / imageResolution);\n        var height = Math.ceil(getHeight(extent) / imageResolution);\n        // Modify the extent to match the integer width and height.\n        extent[0] = centerX - imageResolution * width / 2;\n        extent[2] = centerX + imageResolution * width / 2;\n        extent[1] = centerY - imageResolution * height / 2;\n        extent[3] = centerY + imageResolution * height / 2;\n        this.imageSize_[0] = width;\n        this.imageSize_[1] = height;\n        var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(extent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageArcGISRest.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = size[0] + ',' + size[1];\n        params['BBOX'] = extent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(90 * pixelRatio);\n        var url = this.url_;\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        if (modifiedUrl == url) {\n            assert(false, 50); // `options.featureTypes` should be an Array\n        }\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * Return the URL used for this ArcGIS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageArcGISRest.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageArcGISRest.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.image_ = null;\n        this.changed();\n    };\n    return ImageArcGISRest;\n}(ImageSource));\nexport default ImageArcGISRest;\n//# sourceMappingURL=ImageArcGISRest.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\nvar ImageCanvas = /** @class */ (function (_super) {\n    __extends(ImageCanvas, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {HTMLCanvasElement} canvas Canvas.\n     * @param {Loader=} opt_loader Optional loader function to\n     *     support asynchronous canvas drawing.\n     */\n    function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n        var _this = this;\n        var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n        _this = _super.call(this, extent, resolution, pixelRatio, state) || this;\n        /**\n         * Optional canvas loader function.\n         * @type {?Loader}\n         * @private\n         */\n        _this.loader_ = opt_loader !== undefined ? opt_loader : null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = canvas;\n        /**\n         * @private\n         * @type {Error}\n         */\n        _this.error_ = null;\n        return _this;\n    }\n    /**\n     * Get any error associated with asynchronous rendering.\n     * @return {Error} Any error that occurred during rendering.\n     */\n    ImageCanvas.prototype.getError = function () {\n        return this.error_;\n    };\n    /**\n     * Handle async drawing complete.\n     * @param {Error=} err Any error during drawing.\n     * @private\n     */\n    ImageCanvas.prototype.handleLoad_ = function (err) {\n        if (err) {\n            this.error_ = err;\n            this.state = ImageState.ERROR;\n        }\n        else {\n            this.state = ImageState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageCanvas.prototype.load = function () {\n        if (this.state == ImageState.IDLE) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.loader_(this.handleLoad_.bind(this));\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Canvas element.\n     */\n    ImageCanvas.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    return ImageCanvas;\n}(ImageBase));\nexport default ImageCanvas;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageCanvas\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageCanvas from '../ImageCanvas.js';\nimport { containsExtent, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport ImageSource from './Image.js';\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = /** @class */ (function (_super) {\n    __extends(ImageCanvasSource, _super);\n    /**\n     * @param {Options=} opt_options ImageCanvas options.\n     */\n    function ImageCanvasSource(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions,\n            state: options.state\n        }) || this;\n        /**\n        * @private\n        * @type {FunctionType}\n        */\n        _this.canvasFunction_ = options.canvasFunction;\n        /**\n        * @private\n        * @type {import(\"../ImageCanvas.js\").default}\n        */\n        _this.canvas_ = null;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.renderedRevision_ = 0;\n        /**\n        * @private\n        * @type {number}\n        */\n        _this.ratio_ = options.ratio !== undefined ?\n            options.ratio : 1.5;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    ImageCanvasSource.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        var canvas = this.canvas_;\n        if (canvas &&\n            this.renderedRevision_ == this.getRevision() &&\n            canvas.getResolution() == resolution &&\n            canvas.getPixelRatio() == pixelRatio &&\n            containsExtent(canvas.getExtent(), extent)) {\n            return canvas;\n        }\n        extent = extent.slice();\n        scaleFromCenter(extent, this.ratio_);\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        var canvasElement = this.canvasFunction_.call(this, extent, resolution, pixelRatio, size, projection);\n        if (canvasElement) {\n            canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n        }\n        this.canvas_ = canvas;\n        this.renderedRevision_ = this.getRevision();\n        return canvas;\n    };\n    return ImageCanvasSource;\n}(ImageSource));\nexport default ImageCanvasSource;\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getHeight, getWidth, scaleFromCenter } from '../extent.js';\nimport { assign } from '../obj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = /** @class */ (function (_super) {\n    __extends(ImageMapGuide, _super);\n    /**\n     * @param {Options} options ImageMapGuide options.\n     */\n    function ImageMapGuide(options) {\n        var _this = _super.call(this, {\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.displayDpi_ = options.displayDpi !== undefined ?\n            options.displayDpi : 96;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n            options.metersPerUnit : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useOverlay_ = options.useOverlay !== undefined ?\n            options.useOverlay : false;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        return _this;\n    }\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageMapGuide.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageMapGuide.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        resolution = this.findNearestResolution(resolution);\n        pixelRatio = this.hidpi_ ? pixelRatio : 1;\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), extent)) {\n            return image;\n        }\n        if (this.ratio_ != 1) {\n            extent = extent.slice();\n            scaleFromCenter(extent, this.ratio_);\n        }\n        var width = getWidth(extent) / resolution;\n        var height = getHeight(extent) / resolution;\n        var size = [width * pixelRatio, height * pixelRatio];\n        if (this.url_ !== undefined) {\n            var imageUrl = this.getUrl(this.url_, this.params_, extent, size, projection);\n            image = new ImageWrapper(extent, resolution, pixelRatio, imageUrl, this.crossOrigin_, this.imageLoadFunction_);\n            listen(image, EventType.CHANGE, this.handleImageChange, this);\n        }\n        else {\n            image = null;\n        }\n        this.image_ = image;\n        this.renderedRevision_ = this.getRevision();\n        return image;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageMapGuide.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.changed();\n    };\n    /**\n     * @param {string} baseUrl The mapagent url.\n     * @param {Object<string, string|number>} params Request parameters.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string} The mapagent map image request URL.\n     */\n    ImageMapGuide.prototype.getUrl = function (baseUrl, params, extent, size, projection) {\n        var scale = getScale(extent, size, this.metersPerUnit_, this.displayDpi_);\n        var center = getCenter(extent);\n        var baseParams = {\n            'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n            'VERSION': '2.0.0',\n            'LOCALE': 'en',\n            'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n            'CLIP': '1',\n            'SETDISPLAYDPI': this.displayDpi_,\n            'SETDISPLAYWIDTH': Math.round(size[0]),\n            'SETDISPLAYHEIGHT': Math.round(size[1]),\n            'SETVIEWSCALE': scale,\n            'SETVIEWCENTERX': center[0],\n            'SETVIEWCENTERY': center[1]\n        };\n        assign(baseParams, params);\n        return appendParams(baseUrl, baseParams);\n    };\n    /**\n     * Set the image load function of the MapGuide source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageMapGuide.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    return ImageMapGuide;\n}(ImageSource));\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n    var mcsW = getWidth(extent);\n    var mcsH = getHeight(extent);\n    var devW = size[0];\n    var devH = size[1];\n    var mpp = 0.0254 / dpi;\n    if (devH * mcsW > devW * mcsH) {\n        return mcsW * metersPerUnit / (devW * mpp); // width limited\n    }\n    else {\n        return mcsH * metersPerUnit / (devH * mpp); // height limited\n    }\n}\nexport default ImageMapGuide;\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { intersects, getHeight, getWidth } from '../extent.js';\nimport { get as getProjection } from '../proj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /** @class */ (function (_super) {\n    __extends(Static, _super);\n    /**\n     * @param {Options} options ImageStatic options.\n     */\n    function Static(options) {\n        var _this = this;\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : null;\n        var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: getProjection(options.projection)\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.imageExtent_ = options.imageExtent;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = new ImageWrapper(_this.imageExtent_, undefined, 1, _this.url_, crossOrigin, imageLoadFunction);\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = options.imageSize ? options.imageSize : null;\n        listen(_this.image_, EventType.CHANGE, _this.handleImageChange, _this);\n        return _this;\n    }\n    /**\n     * Returns the image extent\n     * @return {import(\"../extent.js\").Extent} image extent.\n     * @api\n     */\n    Static.prototype.getImageExtent = function () {\n        return this.imageExtent_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (intersects(extent, this.image_.getExtent())) {\n            return this.image_;\n        }\n        return null;\n    };\n    /**\n     * Return the URL used for this image source.\n     * @return {string} URL.\n     * @api\n     */\n    Static.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Static.prototype.handleImageChange = function (evt) {\n        if (this.image_.getState() == ImageState.LOADED) {\n            var imageExtent = this.image_.getExtent();\n            var image = this.image_.getImage();\n            var imageWidth = void 0, imageHeight = void 0;\n            if (this.imageSize_) {\n                imageWidth = this.imageSize_[0];\n                imageHeight = this.imageSize_[1];\n            }\n            else {\n                imageWidth = image.width;\n                imageHeight = image.height;\n            }\n            var resolution = getHeight(imageExtent) / imageHeight;\n            var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n            if (targetWidth != imageWidth) {\n                var context = createCanvasContext2D(targetWidth, imageHeight);\n                var canvas = context.canvas;\n                context.drawImage(image, 0, 0, imageWidth, imageHeight, 0, 0, canvas.width, canvas.height);\n                this.image_.setImage(canvas);\n            }\n        }\n        _super.prototype.handleImageChange.call(this, evt);\n    };\n    return Static;\n}(ImageSource));\nexport default Static;\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n    CARMENTA_SERVER: 'carmentaserver',\n    GEOSERVER: 'geoserver',\n    MAPSERVER: 'mapserver',\n    QGIS: 'qgis'\n};\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport ImageWrapper from '../Image.js';\nimport { assert } from '../asserts.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getCenter, getForViewAndSize, getHeight, getWidth } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, transform } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport ImageSource, { defaultImageLoadFunction } from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /** @class */ (function (_super) {\n    __extends(ImageWMS, _super);\n    /**\n     * @param {Options=} [opt_options] ImageWMS options.\n     */\n    function ImageWMS(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            projection: options.projection,\n            resolutions: options.resolutions\n        }) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.url_ = options.url;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").LoadFunction}\n         */\n        _this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n            options.imageLoadFunction : defaultImageLoadFunction;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        _this.updateV13_();\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../Image.js\").default}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.imageSize_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    ImageWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        if (this.url_ === undefined) {\n            return undefined;\n        }\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var extent = getForViewAndSize(coordinate, resolution, 0, GETFEATUREINFO_IMAGE_SIZE);\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n        var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(extent, GETFEATUREINFO_IMAGE_SIZE, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    ImageWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @inheritDoc\n     */\n    ImageWMS.prototype.getImageInternal = function (extent, resolution, pixelRatio, projection) {\n        if (this.url_ === undefined) {\n            return null;\n        }\n        resolution = this.findNearestResolution(resolution);\n        if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n            pixelRatio = 1;\n        }\n        var imageResolution = resolution / pixelRatio;\n        var center = getCenter(extent);\n        var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n        var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n        var viewExtent = getForViewAndSize(center, imageResolution, 0, [viewWidth, viewHeight]);\n        var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n        var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n        var requestExtent = getForViewAndSize(center, imageResolution, 0, [requestWidth, requestHeight]);\n        var image = this.image_;\n        if (image &&\n            this.renderedRevision_ == this.getRevision() &&\n            image.getResolution() == resolution &&\n            image.getPixelRatio() == pixelRatio &&\n            containsExtent(image.getExtent(), viewExtent)) {\n            return image;\n        }\n        var params = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetMap',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true\n        };\n        assign(params, this.params_);\n        this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n        this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n        var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio, projection, params);\n        this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio, url, this.crossOrigin_, this.imageLoadFunction_);\n        this.renderedRevision_ = this.getRevision();\n        listen(this.image_, EventType.CHANGE, this.handleImageChange, this);\n        return this.image_;\n    };\n    /**\n     * Return the image load function of the source.\n     * @return {import(\"../Image.js\").LoadFunction} The image load function.\n     * @api\n     */\n    ImageWMS.prototype.getImageLoadFunction = function () {\n        return this.imageLoadFunction_;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../size.js\").Size} size Size.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string} Request URL.\n     * @private\n     */\n    ImageWMS.prototype.getRequestUrl_ = function (extent, size, pixelRatio, projection, params) {\n        assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 8); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        params['WIDTH'] = size[0];\n        params['HEIGHT'] = size[1];\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            bbox = [extent[1], extent[0], extent[3], extent[2]];\n        }\n        else {\n            bbox = extent;\n        }\n        params['BBOX'] = bbox.join(',');\n        return appendParams(/** @type {string} */ (this.url_), params);\n    };\n    /**\n     * Return the URL used for this WMS source.\n     * @return {string|undefined} URL.\n     * @api\n     */\n    ImageWMS.prototype.getUrl = function () {\n        return this.url_;\n    };\n    /**\n     * Set the image load function of the source.\n     * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n     * @api\n     */\n    ImageWMS.prototype.setImageLoadFunction = function (imageLoadFunction) {\n        this.image_ = null;\n        this.imageLoadFunction_ = imageLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string|undefined} url URL.\n     * @api\n     */\n    ImageWMS.prototype.setUrl = function (url) {\n        if (url != this.url_) {\n            this.url_ = url;\n            this.image_ = null;\n            this.changed();\n        }\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    ImageWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.image_ = null;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    ImageWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return ImageWMS;\n}(ImageSource));\nexport default ImageWMS;\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport XYZ from './XYZ.js';\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n    '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n    'contributors.';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /** @class */ (function (_super) {\n    __extends(OSM, _super);\n    /**\n     * @param {Options=} [opt_options] Open Street Map options.\n     */\n    function OSM(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var attributions;\n        if (options.attributions !== undefined) {\n            attributions = options.attributions;\n        }\n        else {\n            attributions = [ATTRIBUTION];\n        }\n        var crossOrigin = options.crossOrigin !== undefined ?\n            options.crossOrigin : 'anonymous';\n        var url = options.url !== undefined ?\n            options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n        _this = _super.call(this, {\n            attributions: attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: crossOrigin,\n            opaque: options.opaque !== undefined ? options.opaque : true,\n            maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            url: url,\n            wrapX: options.wrapX,\n            attributionsCollapsible: false\n        }) || this;\n        return _this;\n    }\n    return OSM;\n}(XYZ));\nexport default OSM;\n//# sourceMappingURL=OSM.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nvar BaseImageLayer = /** @class */ (function (_super) {\n    __extends(BaseImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function BaseImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return BaseImageLayer;\n}(Layer));\nexport default BaseImageLayer;\n//# sourceMappingURL=BaseImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport { abstract } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../layer/Layer.js\").default}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }).bind(this);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {import(\"../layer/Layer.js\").default} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Is there a feature at the given coordinate?\n     */\n    LayerRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState) {\n        return false;\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            listen(image, EventType.CHANGE, this.handleImageChange_, this);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../../extent.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport { create as createTransform, apply as applyTransform, compose as composeTransform } from '../../transform.js';\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform_ = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = createCanvasContext2D();\n        var canvas = _this.context.canvas;\n        canvas.style.position = 'absolute';\n        canvas.style.transformOrigin = 'top left';\n        canvas.className = _this.getLayer().getClassName();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasLayerRenderer.prototype.disposeInternal = function () {\n        this.context.canvas.width = this.context.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform_;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (frameState, width, height, offsetX) {\n        var viewState = frameState.viewState;\n        var pixelRatio = frameState.pixelRatio;\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / viewState.resolution;\n        var sy = -sx;\n        var dx2 = -viewState.center[0] + offsetX;\n        var dy2 = -viewState.center[1];\n        return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport { ENABLE_RASTER_REPROJECTION } from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport { containsExtent, intersects } from '../../extent.js';\nimport { getIntersection, isEmpty } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n     */\n    function CanvasImageLayerRenderer(imageLayer) {\n        var _this = _super.call(this, imageLayer) || this;\n        /**\n         * @protected\n         * @type {?import(\"../../ImageBase.js\").default}\n         */\n        _this.image_ = null;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.getImage = function () {\n        return !this.image_ ? null : this.image_.getImage();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var imageSource = this.getLayer().getSource();\n        var hints = frameState.viewHints;\n        var renderedExtent = frameState.extent;\n        if (layerState.extent !== undefined) {\n            renderedExtent = getIntersection(renderedExtent, layerState.extent);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var projection = viewState.projection;\n            if (!ENABLE_RASTER_REPROJECTION) {\n                var sourceProjection = imageSource.getProjection();\n                if (sourceProjection) {\n                    projection = sourceProjection;\n                }\n            }\n            var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n            if (image && this.loadImage(image)) {\n                this.image_ = image;\n            }\n        }\n        return !!this.image_;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var image = this.image_;\n        var imageExtent = image.getExtent();\n        var imageResolution = image.getResolution();\n        var imagePixelRatio = image.getPixelRatio();\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewCenter = viewState.center;\n        var viewResolution = viewState.resolution;\n        var size = frameState.size;\n        var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        var rotation = viewState.rotation;\n        if (rotation) {\n            var size_1 = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size_1;\n        }\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / pixelRatio, 1 / pixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        var context = this.context;\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        // clipped rendering if layer extent is set\n        var extent = layerState.extent;\n        var clipped = extent !== undefined &&\n            !containsExtent(extent, frameState.extent) &&\n            intersects(extent, frameState.extent);\n        if (clipped) {\n            this.clip(context, frameState, extent);\n        }\n        var img = image.getImage();\n        var transform = composeTransform(this.tempTransform_, width / 2, height / 2, scale, scale, 0, imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution, imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n        this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        var dx = transform[4];\n        var dy = transform[5];\n        var dw = img.width * transform[0];\n        var dh = img.height * transform[3];\n        this.preRender(context, frameState);\n        if (dw >= 0.5 && dh >= 0.5) {\n            this.context.drawImage(img, 0, 0, +img.width, +img.height, Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n        }\n        this.postRender(context, frameState);\n        if (clipped) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasImageLayerRenderer;\n//# sourceMappingURL=ImageLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n/**\n * @typedef {import(\"./BaseImage.js\").Options} Options\n */\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /** @class */ (function (_super) {\n    __extends(ImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function ImageLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    ImageLayer.prototype.createRenderer = function () {\n        return new CanvasImageLayerRenderer(this);\n    };\n    return ImageLayer;\n}(BaseImageLayer));\nexport default ImageLayer;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n    * Return the level as number to which we will preload tiles up to.\n    * @return {number} The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n    * Set the level as number to which we will preload tiles up to.\n    * @param {number} preload The level to preload tiles up to.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n    * Whether we use interim tiles on error.\n    * @return {boolean} Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n    * Set whether we use interim tiles on error.\n    * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n    * @observable\n    * @api\n    */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport { getUid } from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { createEmpty, equals, getIntersection, getTopLeft } from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.zDirection = 0;\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        return true;\n    };\n    /**\n     * TODO: File a TypeScript issue about inheritDoc not being followed\n     * all the way.  Without this explicit return type, the VectorTileLayer\n     * renderFrame function does not pass.\n     *\n     * @inheritDoc\n     * @returns {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var zDirection = tileSource.zDirection === undefined ? this.zDirection : tileSource.zDirection;\n        var z = tileGrid.getZForResolution(viewResolution, zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        if (layerState.extent) {\n            extent = getIntersection(extent, layerState.extent);\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = height = size;\n        }\n        var dx = tileResolution * width / 2 / tilePixelRatio;\n        var dy = tileResolution * height / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvas = context.canvas;\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform_, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform_, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerState.extent) {\n            this.clipUnrotated(context, frameState, layerState.extent);\n        }\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(function (a, b) {\n            if (a === z) {\n                return 1;\n            }\n            else if (b === z) {\n                return -1;\n            }\n            else {\n                return a > b ? 1 : a < b ? -1 : 0;\n            }\n        });\n        for (var i = 0, ii = zs.length; i < ii; ++i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform_, [\n                tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n                tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = tilesToDraw[tileCoordKey];\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = (origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1);\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = (origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1);\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, z === currentZ);\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.updateCacheSize_(frameState, tileSource);\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        var canvasTransform = transformToString(this.pixelTransform_);\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return canvas;\n    };\n    /**\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n        var tileSource = tileLayer.getSource();\n        if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n            this.context.clearRect(x, y, w, h);\n        }\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (alpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Check if the cache is big enough, and increase its size if necessary.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @private\n     */\n    CanvasTileLayerRenderer.prototype.updateCacheSize_ = function (frameState, tileSource) {\n        var tileSourceKey = getUid(tileSource);\n        var size = 0;\n        if (tileSourceKey in frameState.usedTiles) {\n            size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n        }\n        if (tileSourceKey in frameState.wantedTiles) {\n            size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n        }\n        var tileCache = tileSource.tileCache;\n        if (tileCache.highWaterMark < size) {\n            tileCache.highWaterMark = size;\n        }\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([tile, tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Raster\n */\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { Processor } from 'pixelworks/lib/index';\nimport { equals, getCenter, getHeight, getWidth } from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport { assign } from '../obj.js';\nimport { create as createTransform } from '../transform.js';\nimport ImageSource from './Image.js';\nimport TileSource from './Tile.js';\nimport SourceState from './State.js';\nimport Source from './Source.js';\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n    /**\n     * Triggered before operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n     * @api\n     */\n    BEFOREOPERATIONS: 'beforeoperations',\n    /**\n     * Triggered after operations are run.\n     * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n     * @api\n     */\n    AFTEROPERATIONS: 'afteroperations'\n};\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n    PIXEL: 'pixel',\n    IMAGE: 'image'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nvar RasterSourceEvent = /** @class */ (function (_super) {\n    __extends(RasterSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Object} data An object made available to operations.\n     */\n    function RasterSourceEvent(type, frameState, data) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The raster extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = frameState.extent;\n        /**\n         * The pixel resolution (map units per pixel).\n         * @type {number}\n         * @api\n         */\n        _this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n        /**\n         * An object made available to all operations.  This can be used by operations\n         * as a storage object (e.g. for calculating statistics).\n         * @type {Object}\n         * @api\n         */\n        _this.data = data;\n        return _this;\n    }\n    return RasterSourceEvent;\n}(Event));\nexport { RasterSourceEvent };\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nvar RasterSource = /** @class */ (function (_super) {\n    __extends(RasterSource, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function RasterSource(options) {\n        var _this = _super.call(this, {\n            projection: null\n        }) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.worker_ = null;\n        /**\n         * @private\n         * @type {RasterOperationType}\n         */\n        _this.operationType_ = options.operationType !== undefined ?\n            options.operationType : RasterOperationType.PIXEL;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threads_ = options.threads !== undefined ? options.threads : 1;\n        /**\n         * @private\n         * @type {Array<import(\"../layer/Layer.js\").default>}\n         */\n        _this.layers_ = createLayers(options.sources);\n        for (var i = 0, ii = _this.layers_.length; i < ii; ++i) {\n            listen(_this.layers_[i], EventType.CHANGE, _this.changed, _this);\n        }\n        /**\n         * @private\n         * @type {import(\"../TileQueue.js\").default}\n         */\n        _this.tileQueue_ = new TileQueue(function () {\n            return 1;\n        }, _this.changed.bind(_this));\n        /**\n         * The most recently requested frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         * @private\n         */\n        _this.requestedFrameState_;\n        /**\n         * The most recently rendered image canvas.\n         * @type {import(\"../ImageCanvas.js\").default}\n         * @private\n         */\n        _this.renderedImageCanvas_ = null;\n        /**\n         * The most recently rendered revision.\n         * @type {number}\n         */\n        _this.renderedRevision_;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").FrameState}\n         */\n        _this.frameState_ = {\n            animate: false,\n            coordinateToPixelTransform: createTransform(),\n            extent: null,\n            focus: null,\n            index: 0,\n            layerStatesArray: getLayerStatesArray(_this.layers_),\n            pixelRatio: 1,\n            pixelToCoordinateTransform: createTransform(),\n            postRenderFunctions: [],\n            size: [0, 0],\n            skippedFeatureUids: {},\n            tileQueue: _this.tileQueue_,\n            time: Date.now(),\n            usedTiles: {},\n            viewState: /** @type {import(\"../View.js\").State} */ ({\n                rotation: 0\n            }),\n            viewHints: [],\n            wantedTiles: {},\n            declutterItems: []\n        };\n        _this.setAttributions(function (frameState) {\n            var attributions = [];\n            for (var index = 0, iMax = options.sources.length; index < iMax; ++index) {\n                var sourceOrLayer = options.sources[index];\n                var source = sourceOrLayer instanceof Source ? sourceOrLayer : sourceOrLayer.getSource();\n                var attributionGetter = source.getAttributions();\n                if (typeof attributionGetter === 'function') {\n                    var sourceAttribution = attributionGetter(frameState);\n                    attributions.push.apply(attributions, sourceAttribution);\n                }\n            }\n            return attributions.length !== 0 ? attributions : null;\n        });\n        if (options.operation !== undefined) {\n            _this.setOperation(options.operation, options.lib);\n        }\n        return _this;\n    }\n    /**\n     * Set the operation.\n     * @param {Operation} operation New operation.\n     * @param {Object=} opt_lib Functions that will be available to operations run\n     *     in a worker.\n     * @api\n     */\n    RasterSource.prototype.setOperation = function (operation, opt_lib) {\n        this.worker_ = new Processor({\n            operation: operation,\n            imageOps: this.operationType_ === RasterOperationType.IMAGE,\n            queue: 1,\n            lib: opt_lib,\n            threads: this.threads_\n        });\n        this.changed();\n    };\n    /**\n     * Update the stored frame state.\n     * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n     * @param {number} resolution The view resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n     * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n     * @private\n     */\n    RasterSource.prototype.updateFrameState_ = function (extent, resolution, projection) {\n        var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n        frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n        var center = getCenter(extent);\n        frameState.extent = extent.slice();\n        frameState.focus = center;\n        frameState.size[0] = Math.round(getWidth(extent) / resolution);\n        frameState.size[1] = Math.round(getHeight(extent) / resolution);\n        frameState.time = Infinity;\n        var viewState = frameState.viewState;\n        viewState.center = center;\n        viewState.projection = projection;\n        viewState.resolution = resolution;\n        return frameState;\n    };\n    /**\n     * Determine if all sources are ready.\n     * @return {boolean} All sources are ready.\n     * @private\n     */\n    RasterSource.prototype.allSourcesReady_ = function () {\n        var ready = true;\n        var source;\n        for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\n            source = this.layers_[i].getSource();\n            if (source.getState() !== SourceState.READY) {\n                ready = false;\n                break;\n            }\n        }\n        return ready;\n    };\n    /**\n     * @inheritDoc\n     */\n    RasterSource.prototype.getImage = function (extent, resolution, pixelRatio, projection) {\n        if (!this.allSourcesReady_()) {\n            return null;\n        }\n        var frameState = this.updateFrameState_(extent, resolution, projection);\n        this.requestedFrameState_ = frameState;\n        // check if we can't reuse the existing ol/ImageCanvas\n        if (this.renderedImageCanvas_) {\n            var renderedResolution = this.renderedImageCanvas_.getResolution();\n            var renderedExtent = this.renderedImageCanvas_.getExtent();\n            if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n                this.renderedImageCanvas_ = null;\n            }\n        }\n        if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n            this.processSources_();\n        }\n        frameState.tileQueue.loadMoreTiles(16, 16);\n        if (frameState.animate) {\n            requestAnimationFrame(this.changed.bind(this));\n        }\n        return this.renderedImageCanvas_;\n    };\n    /**\n     * Start processing source data.\n     * @private\n     */\n    RasterSource.prototype.processSources_ = function () {\n        var frameState = this.requestedFrameState_;\n        var len = this.layers_.length;\n        var imageDatas = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var imageData = getImageData(this.layers_[i], frameState, frameState.layerStatesArray[i]);\n            if (imageData) {\n                imageDatas[i] = imageData;\n            }\n            else {\n                return;\n            }\n        }\n        var data = {};\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n        this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n    };\n    /**\n     * Called when pixel processing is complete.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n     * @param {Error} err Any error during processing.\n     * @param {ImageData} output The output image data.\n     * @param {Object} data The user data.\n     * @private\n     */\n    RasterSource.prototype.onWorkerComplete_ = function (frameState, err, output, data) {\n        if (err || !output) {\n            return;\n        }\n        // do nothing if extent or resolution changed\n        var extent = frameState.extent;\n        var resolution = frameState.viewState.resolution;\n        if (resolution !== this.requestedFrameState_.viewState.resolution ||\n            !equals(extent, this.requestedFrameState_.extent)) {\n            return;\n        }\n        var context;\n        if (this.renderedImageCanvas_) {\n            context = this.renderedImageCanvas_.getImage().getContext('2d');\n        }\n        else {\n            var width = Math.round(getWidth(extent) / resolution);\n            var height = Math.round(getHeight(extent) / resolution);\n            context = createCanvasContext2D(width, height);\n            this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n        }\n        context.putImageData(output, 0, 0);\n        this.changed();\n        this.renderedRevision_ = this.getRevision();\n        this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n    };\n    /**\n     * @override\n     */\n    RasterSource.prototype.getImageInternal = function () {\n        return null; // not implemented\n    };\n    return RasterSource;\n}(ImageSource));\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState, layerState) {\n    var renderer = layer.getRenderer();\n    if (!renderer) {\n        throw new Error('Unsupported layer type: ' + layer);\n    }\n    if (!renderer.prepareFrame(frameState, layerState)) {\n        return null;\n    }\n    var width = frameState.size[0];\n    var height = frameState.size[1];\n    var element = renderer.renderFrame(frameState, layerState);\n    if (!(element instanceof HTMLCanvasElement)) {\n        throw new Error('Unsupported rendered element: ' + element);\n    }\n    if (element.width === width && element.height === height) {\n        var context = element.getContext('2d');\n        return context.getImageData(0, 0, width, height);\n    }\n    if (!sharedContext) {\n        sharedContext = createCanvasContext2D(width, height);\n    }\n    else {\n        var canvas = sharedContext.canvas;\n        if (canvas.width !== width || canvas.height !== height) {\n            sharedContext = createCanvasContext2D(width, height);\n        }\n        else {\n            sharedContext.clearRect(0, 0, width, height);\n        }\n    }\n    sharedContext.drawImage(element, 0, 0, width, height);\n    return sharedContext.getImageData(0, 0, width, height);\n}\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n    return layers.map(function (layer) {\n        return layer.getLayerState();\n    });\n}\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n    var len = sources.length;\n    var layers = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        layers[i] = createLayer(sources[i]);\n    }\n    return layers;\n}\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n    // @type {import(\"../layer/Layer.js\").default}\n    var layer;\n    if (layerOrSource instanceof Source) {\n        if (layerOrSource instanceof TileSource) {\n            layer = new TileLayer({ source: layerOrSource });\n        }\n        else if (layerOrSource instanceof ImageSource) {\n            layer = new ImageLayer({ source: layerOrSource });\n        }\n    }\n    else {\n        layer = layerOrSource;\n    }\n    return layer;\n}\nexport default RasterSource;\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { ATTRIBUTION as OSM_ATTRIBUTION } from './OSM.js';\nimport XYZ from './XYZ.js';\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n    'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n    OSM_ATTRIBUTION\n];\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n    'terrain': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-background': {\n        extension: 'jpg',\n        opaque: true\n    },\n    'terrain-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'terrain-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-background': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner': {\n        extension: 'png',\n        opaque: true\n    },\n    'toner-hybrid': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-labels': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lines': {\n        extension: 'png',\n        opaque: false\n    },\n    'toner-lite': {\n        extension: 'png',\n        opaque: true\n    },\n    'watercolor': {\n        extension: 'jpg',\n        opaque: true\n    }\n};\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n    'terrain': {\n        minZoom: 0,\n        maxZoom: 18\n    },\n    'toner': {\n        minZoom: 0,\n        maxZoom: 20\n    },\n    'watercolor': {\n        minZoom: 0,\n        maxZoom: 18\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /** @class */ (function (_super) {\n    __extends(Stamen, _super);\n    /**\n     * @param {Options} options Stamen options.\n     */\n    function Stamen(options) {\n        var _this = this;\n        var i = options.layer.indexOf('-');\n        var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n        var providerConfig = ProviderConfig[provider];\n        var layerConfig = LayerConfig[options.layer];\n        var url = options.url !== undefined ? options.url :\n            'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n                '/{z}/{x}/{y}.' + layerConfig.extension;\n        _this = _super.call(this, {\n            attributions: ATTRIBUTIONS,\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n            minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n            opaque: layerConfig.opaque,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileLoadFunction: options.tileLoadFunction,\n            transition: options.transition,\n            url: url,\n            wrapX: options.wrapX\n        }) || this;\n        return _this;\n    }\n    return Stamen;\n}(XYZ));\nexport default Stamen;\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { createEmpty } from '../extent.js';\nimport { modulo } from '../math.js';\nimport { assign } from '../obj.js';\nimport { toSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /** @class */ (function (_super) {\n    __extends(TileArcGISRest, _super);\n    /**\n     * @param {Options=} opt_options Tile ArcGIS Rest options.\n     */\n    function TileArcGISRest(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = options.params || {};\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileArcGISRest.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileArcGISRest.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileArcGISRest.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        // ArcGIS Server only wants the numeric portion of the projection ID.\n        var srid = projection.getCode().split(':').pop();\n        params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n        params['BBOX'] = tileExtent.join(',');\n        params['BBOXSR'] = srid;\n        params['IMAGESR'] = srid;\n        params['DPI'] = Math.round(params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio);\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        var modifiedUrl = url\n            .replace(/MapServer\\/?$/, 'MapServer/export')\n            .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n        return appendParams(modifiedUrl, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileArcGISRest.prototype.getTilePixelRatio = function (pixelRatio) {\n        return /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileArcGISRest.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.setKey(this.getKeyForParams_());\n    };\n    return TileArcGISRest;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    // Apply default params and override with user specified values.\n    var baseParams = {\n        'F': 'image',\n        'FORMAT': 'PNG32',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileArcGISRest;\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { toSize } from '../size.js';\nimport XYZ from './XYZ.js';\nimport { getKeyZXY } from '../tilecoord.js';\nvar LabeledTile = /** @class */ (function (_super) {\n    __extends(LabeledTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {string} text Text.\n     */\n    function LabeledTile(tileCoord, tileSize, text) {\n        var _this = _super.call(this, tileCoord, TileState.LOADED) || this;\n        /**\n        * @private\n        * @type {import(\"../size.js\").Size}\n        */\n        _this.tileSize_ = tileSize;\n        /**\n        * @private\n        * @type {string}\n        */\n        _this.text_ = text;\n        /**\n        * @private\n        * @type {HTMLCanvasElement}\n        */\n        _this.canvas_ = null;\n        return _this;\n    }\n    /**\n    * Get the image element for this tile.\n    * @return {HTMLCanvasElement} Image.\n    */\n    LabeledTile.prototype.getImage = function () {\n        if (this.canvas_) {\n            return this.canvas_;\n        }\n        else {\n            var tileSize = this.tileSize_;\n            var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n            context.strokeStyle = 'grey';\n            context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n            context.fillStyle = 'grey';\n            context.strokeStyle = 'white';\n            context.textAlign = 'center';\n            context.textBaseline = 'middle';\n            context.font = '24px sans-serif';\n            context.lineWidth = 4;\n            context.strokeText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2, tileSize[0]);\n            this.canvas_ = context.canvas;\n            return context.canvas;\n        }\n    };\n    /**\n    * @override\n    */\n    LabeledTile.prototype.load = function () { };\n    return LabeledTile;\n}(Tile));\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = /** @class */ (function (_super) {\n    __extends(TileDebug, _super);\n    /**\n     * @param {Options=} opt_options Debug tile options.\n     */\n    function TileDebug(opt_options) {\n        var _this = this;\n        /**\n         * @type {Options}\n         */\n        var options = opt_options || {};\n        _this = _super.call(this, {\n            opaque: false,\n            projection: options.projection,\n            tileGrid: options.tileGrid,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true\n        }) || this;\n        return _this;\n    }\n    /**\n    * @inheritDoc\n    */\n    TileDebug.prototype.getTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n        }\n        else {\n            var tileSize = toSize(this.tileGrid.getTileSize(z));\n            var tileCoord = [z, x, y];\n            var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n            var text = void 0;\n            if (textTileCoord) {\n                text = 'z:' + textTileCoord[0] + ' x:' + textTileCoord[1] + ' y:' + textTileCoord[2];\n            }\n            else {\n                text = 'none';\n            }\n            var tile = new LabeledTile(tileCoord, tileSize, text);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    return TileDebug;\n}(XYZ));\nexport default TileDebug;\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * See https://mapbox.com/developers/api/.\n */\nimport { createFromTemplates } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Note: `tileSize` and other non-standard TileJSON properties are currently ignored.\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /** @class */ (function (_super) {\n    __extends(TileJSON, _super);\n    /**\n     * @param {Options} options TileJSON options.\n     */\n    function TileJSON(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @type {Config}\n         * @private\n         */\n        _this.tileJSON_ = null;\n        /**\n         * @type {number|import(\"../size.js\").Size}\n         * @private\n         */\n        _this.tileSize_ = options.tileSize;\n        if (options.url) {\n            if (options.jsonp) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    TileJSON.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {TileJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    TileJSON.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * @return {Config} The tilejson object.\n     * @api\n     */\n    TileJSON.prototype.getTileJSON = function () {\n        return this.tileJSON_;\n    };\n    /**\n     * @protected\n     * @param {Config} tileJSON Tile JSON.\n     */\n    TileJSON.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom,\n            tileSize: this.tileSize_\n        });\n        this.tileGrid = tileGrid;\n        this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n        if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.tileJSON_ = tileJSON;\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @protected\n     */\n    TileJSON.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    return TileJSON;\n}(TileImage));\nexport default TileJSON;\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { DEFAULT_WMS_VERSION } from './common.js';\nimport { assert } from '../asserts.js';\nimport { buffer, createEmpty } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { modulo } from '../math.js';\nimport { get as getProjection, transform, transformExtent } from '../proj.js';\nimport { calculateSourceResolution } from '../reproj.js';\nimport { toSize, buffer as bufferSize, scale as scaleSize } from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport { hash as tileCoordHash } from '../tilecoord.js';\nimport { compareVersions } from '../string.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /** @class */ (function (_super) {\n    __extends(TileWMS, _super);\n    /**\n     * @param {Options=} [opt_options] Tile WMS options.\n     */\n    function TileWMS(opt_options) {\n        var _this = this;\n        var options = opt_options || /** @type {Options} */ ({});\n        var params = options.params || {};\n        var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            opaque: !transparent,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tileUrlFunction: tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.params_ = params;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.v13_ = true;\n        /**\n         * @private\n         * @type {import(\"./WMSServerType.js\").default|undefined}\n         */\n        _this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.tmpExtent_ = createEmpty();\n        _this.updateV13_();\n        _this.setKey(_this.getKeyForParams_());\n        return _this;\n    }\n    /**\n     * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n     * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n     * constructed.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n     *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n     *     in the `LAYERS` parameter will be used. `VERSION` should not be\n     *     specified here.\n     * @return {string|undefined} GetFeatureInfo URL.\n     * @api\n     */\n    TileWMS.prototype.getGetFeatureInfoUrl = function (coordinate, resolution, projection, params) {\n        var projectionObj = getProjection(projection);\n        var sourceProjectionObj = this.getProjection();\n        var tileGrid = this.getTileGrid();\n        if (!tileGrid) {\n            tileGrid = this.getTileGridForProjection(projectionObj);\n        }\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n        if (tileGrid.getResolutions().length <= tileCoord[0]) {\n            return undefined;\n        }\n        var tileResolution = tileGrid.getResolution(tileCoord[0]);\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n        var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n        var gutter = this.gutter_;\n        if (gutter !== 0) {\n            tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n            tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n        }\n        if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n            tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n            tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n            coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n        }\n        var baseParams = {\n            'SERVICE': 'WMS',\n            'VERSION': DEFAULT_WMS_VERSION,\n            'REQUEST': 'GetFeatureInfo',\n            'FORMAT': 'image/png',\n            'TRANSPARENT': true,\n            'QUERY_LAYERS': this.params_['LAYERS']\n        };\n        assign(baseParams, this.params_, params);\n        var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n        var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n        baseParams[this.v13_ ? 'I' : 'X'] = x;\n        baseParams[this.v13_ ? 'J' : 'Y'] = y;\n        return this.getRequestUrl_(tileCoord, tileSize, tileExtent, 1, sourceProjectionObj || projectionObj, baseParams);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getGutter = function () {\n        return this.gutter_;\n    };\n    /**\n     * Get the user-provided params, i.e. those passed to the constructor through\n     * the \"params\" option, and possibly updated using the updateParams method.\n     * @return {Object} Params.\n     * @api\n     */\n    TileWMS.prototype.getParams = function () {\n        return this.params_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../size.js\").Size} tileSize Tile size.\n     * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {Object} params Params.\n     * @return {string|undefined} Request URL.\n     * @private\n     */\n    TileWMS.prototype.getRequestUrl_ = function (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n        var urls = this.urls;\n        if (!urls) {\n            return undefined;\n        }\n        params['WIDTH'] = tileSize[0];\n        params['HEIGHT'] = tileSize[1];\n        params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n        if (!('STYLES' in this.params_)) {\n            params['STYLES'] = '';\n        }\n        if (pixelRatio != 1) {\n            switch (this.serverType_) {\n                case WMSServerType.GEOSERVER:\n                    var dpi = (90 * pixelRatio + 0.5) | 0;\n                    if ('FORMAT_OPTIONS' in params) {\n                        params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n                    }\n                    else {\n                        params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n                    }\n                    break;\n                case WMSServerType.MAPSERVER:\n                    params['MAP_RESOLUTION'] = 90 * pixelRatio;\n                    break;\n                case WMSServerType.CARMENTA_SERVER:\n                case WMSServerType.QGIS:\n                    params['DPI'] = 90 * pixelRatio;\n                    break;\n                default:\n                    assert(false, 52); // Unknown `serverType` configured\n                    break;\n            }\n        }\n        var axisOrientation = projection.getAxisOrientation();\n        var bbox = tileExtent;\n        if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n            var tmp = void 0;\n            tmp = tileExtent[0];\n            bbox[0] = tileExtent[1];\n            bbox[1] = tmp;\n            tmp = tileExtent[2];\n            bbox[2] = tileExtent[3];\n            bbox[3] = tmp;\n        }\n        params['BBOX'] = bbox.join(',');\n        var url;\n        if (urls.length == 1) {\n            url = urls[0];\n        }\n        else {\n            var index = modulo(tileCoordHash(tileCoord), urls.length);\n            url = urls[index];\n        }\n        return appendParams(url, params);\n    };\n    /**\n     * @inheritDoc\n     */\n    TileWMS.prototype.getTilePixelRatio = function (pixelRatio) {\n        return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n            /** @type {number} */ (pixelRatio);\n    };\n    /**\n     * @private\n     * @return {string} The key for the current params.\n     */\n    TileWMS.prototype.getKeyForParams_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.params_) {\n            res[i++] = key + '-' + this.params_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the user-provided params.\n     * @param {Object} params Params.\n     * @api\n     */\n    TileWMS.prototype.updateParams = function (params) {\n        assign(this.params_, params);\n        this.updateV13_();\n        this.setKey(this.getKeyForParams_());\n    };\n    /**\n     * @private\n     */\n    TileWMS.prototype.updateV13_ = function () {\n        var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n        this.v13_ = compareVersions(version, '1.3') >= 0;\n    };\n    return TileWMS;\n}(TileImage));\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n        tileGrid = this.getTileGridForProjection(projection);\n    }\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n        return undefined;\n    }\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n        pixelRatio = 1;\n    }\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n        tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n        tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n    if (pixelRatio != 1) {\n        tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n    }\n    var baseParams = {\n        'SERVICE': 'WMS',\n        'VERSION': DEFAULT_WMS_VERSION,\n        'REQUEST': 'GetMap',\n        'FORMAT': 'image/png',\n        'TRANSPARENT': true\n    };\n    assign(baseParams, this.params_);\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent, pixelRatio, projection, baseParams);\n}\nexport default TileWMS;\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { assert } from '../asserts.js';\nimport { listenOnce } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { jsonp as requestJSONP } from '../net.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\nvar CustomTile = /** @class */ (function (_super) {\n    __extends(CustomTile, _super);\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Image source URI.\n     * @param {import(\"../extent.js\").Extent} extent Extent of the tile.\n     * @param {boolean} preemptive Load the tile when visible (before it's needed).\n     * @param {boolean} jsonp Load the tile as a script.\n     */\n    function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n        var _this = _super.call(this, tileCoord, state) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = preemptive;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.grid_ = null;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.keys_ = null;\n        /**\n         * @private\n         * @type {Object<string, Object>|undefined}\n         */\n        _this.data_ = null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = jsonp;\n        return _this;\n    }\n    /**\n     * Get the image element for this tile.\n     * @return {HTMLImageElement} Image.\n     */\n    CustomTile.prototype.getImage = function () {\n        return null;\n    };\n    /**\n     * Synchronously returns data at given coordinate (if available).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {*} The data.\n     */\n    CustomTile.prototype.getData = function (coordinate) {\n        if (!this.grid_ || !this.keys_) {\n            return null;\n        }\n        var xRelative = (coordinate[0] - this.extent_[0]) /\n            (this.extent_[2] - this.extent_[0]);\n        var yRelative = (coordinate[1] - this.extent_[1]) /\n            (this.extent_[3] - this.extent_[1]);\n        var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n        if (typeof row !== 'string') {\n            return null;\n        }\n        var code = row.charCodeAt(Math.floor(xRelative * row.length));\n        if (code >= 93) {\n            code--;\n        }\n        if (code >= 35) {\n            code--;\n        }\n        code -= 32;\n        var data = null;\n        if (code in this.keys_) {\n            var id = this.keys_[code];\n            if (this.data_ && id in this.data_) {\n                data = this.data_[id];\n            }\n            else {\n                data = id;\n            }\n        }\n        return data;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate (or `null` if not yet loaded).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     */\n    CustomTile.prototype.forDataAtCoordinate = function (coordinate, callback, opt_request) {\n        if (this.state == TileState.IDLE && opt_request === true) {\n            listenOnce(this, EventType.CHANGE, function (e) {\n                callback(this.getData(coordinate));\n            }, this);\n            this.loadInternal_();\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(this.getData(coordinate));\n                }.bind(this), 0);\n            }\n            else {\n                callback(this.getData(coordinate));\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CustomTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.handleError_ = function () {\n        this.state = TileState.ERROR;\n        this.changed();\n    };\n    /**\n     * @param {!UTFGridJSON} json UTFGrid data.\n     * @private\n     */\n    CustomTile.prototype.handleLoad_ = function (json) {\n        this.grid_ = json['grid'];\n        this.keys_ = json['keys'];\n        this.data_ = json['data'];\n        this.state = TileState.EMPTY;\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    CustomTile.prototype.loadInternal_ = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            if (this.jsonp_) {\n                requestJSONP(this.src_, this.handleLoad_.bind(this), this.handleError_.bind(this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', this.onXHRLoad_.bind(this));\n                client.addEventListener('error', this.onXHRError_.bind(this));\n                client.open('GET', this.src_);\n                client.send();\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    CustomTile.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {!UTFGridJSON} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleError_();\n                return;\n            }\n            this.handleLoad_(response);\n        }\n        else {\n            this.handleError_();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    CustomTile.prototype.onXHRError_ = function (event) {\n        this.handleError_();\n    };\n    /**\n     * @override\n     */\n    CustomTile.prototype.load = function () {\n        if (this.preemptive_) {\n            this.loadInternal_();\n        }\n    };\n    return CustomTile;\n}(Tile));\nexport { CustomTile };\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = /** @class */ (function (_super) {\n    __extends(UTFGrid, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function UTFGrid(options) {\n        var _this = _super.call(this, {\n            projection: getProjection('EPSG:3857'),\n            state: SourceState.LOADING\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.preemptive_ = options.preemptive !== undefined ?\n            options.preemptive : true;\n        /**\n         * @private\n         * @type {!import(\"../Tile.js\").UrlFunction}\n         */\n        _this.tileUrlFunction_ = nullTileUrlFunction;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.template_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.jsonp_ = options.jsonp || false;\n        if (options.url) {\n            if (_this.jsonp_) {\n                requestJSONP(options.url, _this.handleTileJSONResponse.bind(_this), _this.handleTileJSONError.bind(_this));\n            }\n            else {\n                var client = new XMLHttpRequest();\n                client.addEventListener('load', _this.onXHRLoad_.bind(_this));\n                client.addEventListener('error', _this.onXHRError_.bind(_this));\n                client.open('GET', options.url);\n                client.send();\n            }\n        }\n        else if (options.tileJSON) {\n            _this.handleTileJSONResponse(options.tileJSON);\n        }\n        else {\n            assert(false, 51); // Either `url` or `tileJSON` options must be provided\n        }\n        return _this;\n    }\n    /**\n     * @private\n     * @param {Event} event The load event.\n     */\n    UTFGrid.prototype.onXHRLoad_ = function (event) {\n        var client = /** @type {XMLHttpRequest} */ (event.target);\n        // status will be 0 for file:// urls\n        if (!client.status || client.status >= 200 && client.status < 300) {\n            var response = void 0;\n            try {\n                response = /** @type {import(\"./TileJSON.js\").Config} */ (JSON.parse(client.responseText));\n            }\n            catch (err) {\n                this.handleTileJSONError();\n                return;\n            }\n            this.handleTileJSONResponse(response);\n        }\n        else {\n            this.handleTileJSONError();\n        }\n    };\n    /**\n     * @private\n     * @param {Event} event The error event.\n     */\n    UTFGrid.prototype.onXHRError_ = function (event) {\n        this.handleTileJSONError();\n    };\n    /**\n     * Return the template from TileJSON.\n     * @return {string|undefined} The template from TileJSON.\n     * @api\n     */\n    UTFGrid.prototype.getTemplate = function () {\n        return this.template_;\n    };\n    /**\n     * Calls the callback (synchronously by default) with the available data\n     * for given coordinate and resolution (or `null` if not yet loaded or\n     * in case of an error).\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {function(*): void} callback Callback.\n     * @param {boolean=} opt_request If `true` the callback is always async.\n     *                               The tile data is requested if not yet loaded.\n     * @api\n     */\n    UTFGrid.prototype.forDataAtCoordinateAndResolution = function (coordinate, resolution, callback, opt_request) {\n        if (this.tileGrid) {\n            var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n            var tile = /** @type {!CustomTile} */ (this.getTile(tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n            tile.forDataAtCoordinate(coordinate, callback, opt_request);\n        }\n        else {\n            if (opt_request === true) {\n                setTimeout(function () {\n                    callback(null);\n                }, 0);\n            }\n            else {\n                callback(null);\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    UTFGrid.prototype.handleTileJSONError = function () {\n        this.setState(SourceState.ERROR);\n    };\n    /**\n     * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n     * @protected\n     * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n     */\n    UTFGrid.prototype.handleTileJSONResponse = function (tileJSON) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var sourceProjection = this.getProjection();\n        var extent;\n        if (tileJSON['bounds'] !== undefined) {\n            var transform = getTransformFromProjections(epsg4326Projection, sourceProjection);\n            extent = applyTransform(tileJSON['bounds'], transform);\n        }\n        var minZoom = tileJSON['minzoom'] || 0;\n        var maxZoom = tileJSON['maxzoom'] || 22;\n        var tileGrid = createXYZ({\n            extent: extentFromProjection(sourceProjection),\n            maxZoom: maxZoom,\n            minZoom: minZoom\n        });\n        this.tileGrid = tileGrid;\n        this.template_ = tileJSON['template'];\n        var grids = tileJSON['grids'];\n        if (!grids) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n        if (tileJSON['attribution'] !== undefined) {\n            var attributionExtent_1 = extent !== undefined ?\n                extent : epsg4326Projection.getExtent();\n            this.setAttributions(function (frameState) {\n                if (intersects(attributionExtent_1, frameState.extent)) {\n                    return [tileJSON['attribution']];\n                }\n                return null;\n            });\n        }\n        this.setState(SourceState.READY);\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n            var tile = new CustomTile(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.tileGrid.getTileCoordExtent(tileCoord), this.preemptive_, this.jsonp_);\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    UTFGrid.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UTFGrid;\n}(TileSource));\nexport default UTFGrid;\n//# sourceMappingURL=UTFGrid.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorRenderTile\n */\nimport { getUid } from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedResolution\n * @property {number} renderedRevision\n * @property {number} renderedZ\n * @property {number} renderedTileResolution\n * @property {number} renderedTileZ\n */\nvar VectorRenderTile = /** @class */ (function (_super) {\n    __extends(VectorRenderTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n     * @param {import(\"./tilegrid/TileGrid.js\").default} sourceTileGrid Tile grid of the source.\n     * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n     * to get an source tiles for this tile.\n     * @param {function(VectorRenderTile):void} removeSourceTiles Function to remove this tile from its\n     * source tiles's consumer count.\n     */\n    function VectorRenderTile(tileCoord, state, urlTileCoord, sourceTileGrid, getSourceTiles, removeSourceTiles) {\n        var _this = _super.call(this, tileCoord, state, { transition: 0 }) || this;\n        /**\n         * @private\n         * @type {!Object<string, CanvasRenderingContext2D>}\n         */\n        _this.context_ = {};\n        /**\n         * Executor groups by layer uid. Entries are read/written by the renderer.\n         * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n         */\n        _this.executorGroups = {};\n        /**\n         * Number of loading source tiles. Read/written by the source.\n         * @type {number}\n         */\n        _this.loadingSourceTiles = 0;\n        /**\n         * Tile keys of error source tiles. Read/written by the source.\n         * @type {Object<string, boolean>}\n         */\n        _this.errorSourceTileKeys = {};\n        /**\n         * @private\n         * @type {!Object<string, ReplayState>}\n         */\n        _this.replayState_ = {};\n        /**\n         * @type {number}\n         */\n        _this.wantedResolution;\n        /**\n         * @type {!function(import(\"./VectorRenderTile.js\").default):Array<import(\"./VectorTile.js\").default>}\n         */\n        _this.getSourceTiles_ = getSourceTiles;\n        /**\n         * @type {!function(import(\"./VectorRenderTile.js\").default):void}\n         */\n        _this.removeSourceTiles_ = removeSourceTiles;\n        /**\n         * @private\n         * @type {import(\"./tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * z of the source tiles of the last getSourceTiles call.\n         * @type {number}\n         */\n        _this.sourceZ = -1;\n        /**\n         * True when all tiles for this tile's nominal resolution are available.\n         * @type {boolean}\n         */\n        _this.hifi = false;\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord = urlTileCoord;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.disposeInternal = function () {\n        this.removeSourceTiles_(this);\n        for (var key in this.context_) {\n            var canvas = this.context_[key].canvas;\n            canvas.width = canvas.height = 0;\n        }\n        for (var key in this.executorGroups) {\n            var executorGroups = this.executorGroups[key];\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n                executorGroups[i].disposeInternal();\n            }\n        }\n        this.setState(TileState.ABORT);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {CanvasRenderingContext2D} The rendering context.\n     */\n    VectorRenderTile.prototype.getContext = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.context_)) {\n            this.context_[key] = createCanvasContext2D();\n        }\n        return this.context_[key];\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {boolean} Tile has a rendering context for the given layer.\n     */\n    VectorRenderTile.prototype.hasContext = function (layer) {\n        return getUid(layer) in this.context_;\n    };\n    /**\n     * Get the Canvas for this tile.\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    VectorRenderTile.prototype.getImage = function (layer) {\n        return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n    };\n    /**\n     * @param {import(\"./layer/Layer.js\").default} layer Layer.\n     * @return {ReplayState} The replay state.\n     */\n    VectorRenderTile.prototype.getReplayState = function (layer) {\n        var key = getUid(layer);\n        if (!(key in this.replayState_)) {\n            this.replayState_[key] = {\n                dirty: false,\n                renderedRenderOrder: null,\n                renderedResolution: NaN,\n                renderedRevision: -1,\n                renderedTileResolution: NaN,\n                renderedTileRevision: -1,\n                renderedZ: -1,\n                renderedTileZ: -1\n            };\n        }\n        return this.replayState_[key];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorRenderTile.prototype.load = function () {\n        this.getSourceTiles_(this);\n    };\n    return VectorRenderTile;\n}(Tile));\nexport default VectorRenderTile;\n//# sourceMappingURL=VectorRenderTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {TileState} state State.\n     * @param {string} src Data source url.\n     * @param {import(\"./format/Feature.js\").default} format Feature format.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @type {number}\n         */\n        _this.consumers = 0;\n        /**\n         * Extent of this tile; set by the source.\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = null;\n        /**\n         * @private\n         * @type {import(\"./format/Feature.js\").default}\n         */\n        _this.format_ = format;\n        /**\n         * @private\n         * @type {Array<import(\"./Feature.js\").default>}\n         */\n        _this.features_ = null;\n        /**\n         * @private\n         * @type {import(\"./featureloader.js\").FeatureLoader}\n         */\n        _this.loader_;\n        /**\n         * Feature projection of this tile; set by the source.\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection = null;\n        /**\n         * Resolution of this tile; set by the source.\n         * @type {number}\n         */\n        _this.resolution;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.url_ = src;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.disposeInternal = function () {\n        this.setState(TileState.ABORT);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the feature format assigned for reading this tile's features.\n     * @return {import(\"./format/Feature.js\").default} Feature format.\n     * @api\n     */\n    VectorTile.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Get the features for this tile. Geometries will be in the view projection.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    VectorTile.prototype.getFeatures = function () {\n        return this.features_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getKey = function () {\n        return this.url_;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.setState(TileState.LOADING);\n            this.tileLoadFunction_(this, this.url_);\n            this.loader_(this.extent, this.resolution, this.projection);\n        }\n    };\n    /**\n     * Handler for successful tile load.\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n     */\n    VectorTile.prototype.onLoad = function (features, dataProjection) {\n        this.setFeatures(features);\n    };\n    /**\n     * Handler for tile load errors.\n     */\n    VectorTile.prototype.onError = function () {\n        this.setState(TileState.ERROR);\n    };\n    /**\n     * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n     * Sets the features for the tile.\n     * @param {Array<import(\"./Feature.js\").default>} features Features.\n     * @api\n     */\n    VectorTile.prototype.setFeatures = function (features) {\n        this.features_ = features;\n        this.setState(TileState.LOADED);\n    };\n    /**\n     * Set the feature loader for reading this tile's features.\n     * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n     * @api\n     */\n    VectorTile.prototype.setLoader = function (loader) {\n        this.loader_ = loader;\n    };\n    return VectorTile;\n}(Tile));\nexport default VectorTile;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport { toSize } from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport { getKeyZXY, getKey } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection, createForProjection } from '../tilegrid.js';\nimport { buffer as bufferExtent, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { loadFeaturesXhr } from '../featureloader.js';\nimport { isEmpty } from '../obj.js';\nimport { equals } from '../array.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = /** @class */ (function (_super) {\n    __extends(VectorTile, _super);\n    /**\n     * @param {!Options} options Vector tile options.\n     */\n    function VectorTile(options) {\n        var _this = this;\n        var projection = options.projection || 'EPSG:3857';\n        var extent = options.extent || extentFromProjection(projection);\n        var tileGrid = options.tileGrid || createXYZ({\n            extent: extent,\n            maxZoom: options.maxZoom || 22,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize || 512\n        });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            cacheSize: options.cacheSize,\n            opaque: false,\n            projection: projection,\n            state: options.state,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX === undefined ? true : options.wrapX,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../format/Feature.js\").default}\n         */\n        _this.format_ = options.format ? options.format : null;\n        /**\n         * @type {Object<string, import(\"./VectorTile\").default>}\n         */\n        _this.loadingTiles_ = {};\n        /**\n         * @private\n         * @type {Object<string, import(\"../VectorTile.js\").default>}\n         */\n        _this.sourceTiles_ = {};\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../VectorTile.js\").default>>}\n         */\n        _this.sourceTilesByTileKey_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n        /**\n         * @protected\n         * @type {typeof import(\"../VectorTile.js\").default}\n         */\n        _this.tileClass = options.tileClass ? options.tileClass : Tile;\n        /**\n         * @private\n         * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGrids_ = {};\n        return _this;\n    }\n    /**\n     * @return {boolean} The source can have overlapping geometries.\n     */\n    VectorTile.prototype.getOverlaps = function () {\n        return this.overlaps_;\n    };\n    /**\n     * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n     * @api\n     */\n    VectorTile.prototype.clear = function () {\n        this.tileCache.clear();\n        this.sourceTiles_ = {};\n        this.sourceTilesByTileKey_ = {};\n    };\n    /**\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection\").default} projection Projection.\n     * @param {VectorRenderTile} tile Vector image tile.\n     * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n     */\n    VectorTile.prototype.getSourceTiles = function (pixelRatio, projection, tile) {\n        var sourceTiles = [];\n        var urlTileCoord = tile.wrappedTileCoord;\n        if (urlTileCoord) {\n            var tileGrid = this.getTileGridForProjection(projection);\n            var extent = tileGrid.getTileCoordExtent(urlTileCoord);\n            var z = urlTileCoord[0];\n            var resolution = tileGrid.getResolution(z);\n            // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n            bufferExtent(extent, -1 / resolution, extent);\n            var sourceTileGrid_1 = this.tileGrid;\n            var sourceExtent = sourceTileGrid_1.getExtent();\n            if (sourceExtent) {\n                getIntersection(extent, sourceExtent, extent);\n            }\n            var sourceZ_1 = sourceTileGrid_1.getZForResolution(resolution, 1);\n            var minZoom = sourceTileGrid_1.getMinZoom();\n            var loadedZ_1 = sourceZ_1 + 1;\n            var covered_1, empty_1;\n            do {\n                --loadedZ_1;\n                covered_1 = true;\n                empty_1 = true;\n                sourceTileGrid_1.forEachTileCoord(extent, loadedZ_1, function (sourceTileCoord) {\n                    var tileKey = getKey(sourceTileCoord);\n                    var sourceTile;\n                    if (tileKey in this.sourceTiles_) {\n                        sourceTile = this.sourceTiles_[tileKey];\n                        var state = sourceTile.getState();\n                        if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n                            empty_1 = empty_1 && state === TileState.EMPTY;\n                            sourceTiles.push(sourceTile);\n                            return;\n                        }\n                    }\n                    else if (loadedZ_1 === sourceZ_1) {\n                        var tileUrl = this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n                        sourceTile = new this.tileClass(sourceTileCoord, tileUrl == undefined ? TileState.EMPTY : TileState.IDLE, tileUrl == undefined ? '' : tileUrl, this.format_, this.tileLoadFunction);\n                        sourceTile.extent = sourceTileGrid_1.getTileCoordExtent(sourceTileCoord);\n                        sourceTile.projection = projection;\n                        sourceTile.resolution = sourceTileGrid_1.getResolution(sourceTileCoord[0]);\n                        this.sourceTiles_[tileKey] = sourceTile;\n                        empty_1 = empty_1 && sourceTile.getState() === TileState.EMPTY;\n                        listen(sourceTile, EventType.CHANGE, this.handleTileChange, this);\n                        sourceTile.load();\n                    }\n                    else {\n                        empty_1 = false;\n                    }\n                    covered_1 = false;\n                    if (!sourceTile) {\n                        return;\n                    }\n                    if (sourceTile.getState() !== TileState.EMPTY && tile.getState() === TileState.IDLE) {\n                        tile.loadingSourceTiles++;\n                        var key_1 = listen(sourceTile, EventType.CHANGE, function () {\n                            var state = sourceTile.getState();\n                            var sourceTileKey = getKey(sourceTile.tileCoord);\n                            if (state === TileState.LOADED || state === TileState.ERROR) {\n                                if (state === TileState.LOADED) {\n                                    unlistenByKey(key_1);\n                                    tile.loadingSourceTiles--;\n                                    delete tile.errorSourceTileKeys[sourceTileKey];\n                                }\n                                else if (state === TileState.ERROR) {\n                                    tile.errorSourceTileKeys[sourceTileKey] = true;\n                                }\n                                if (tile.loadingSourceTiles - Object.keys(tile.errorSourceTileKeys).length === 0) {\n                                    tile.hifi = true;\n                                    tile.sourceZ = sourceZ_1;\n                                    tile.setState(isEmpty(tile.errorSourceTileKeys) ? TileState.LOADED : TileState.ERROR);\n                                }\n                            }\n                        });\n                    }\n                }.bind(this));\n                if (!covered_1) {\n                    sourceTiles.length = 0;\n                }\n            } while (!covered_1 && loadedZ_1 > minZoom);\n            if (!empty_1 && tile.getState() === TileState.IDLE) {\n                tile.setState(TileState.LOADING);\n            }\n            if (covered_1 || empty_1) {\n                tile.hifi = sourceZ_1 === loadedZ_1;\n                tile.sourceZ = loadedZ_1;\n                var previousSourceTiles = this.sourceTilesByTileKey_[getKey(tile.tileCoord)];\n                if (tile.getState() < TileState.LOADED) {\n                    tile.setState(empty_1 ? TileState.EMPTY : TileState.LOADED);\n                }\n                else if (!previousSourceTiles || !equals(sourceTiles, previousSourceTiles)) {\n                    this.removeSourceTiles(tile);\n                    this.addSourceTiles(tile, sourceTiles);\n                }\n            }\n        }\n        return sourceTiles;\n    };\n    /**\n     * @param {VectorRenderTile} tile Tile.\n     * @param {Array<import(\"../VectorTile\").default>} sourceTiles Source tiles.\n     */\n    VectorTile.prototype.addSourceTiles = function (tile, sourceTiles) {\n        this.sourceTilesByTileKey_[getKey(tile.tileCoord)] = sourceTiles;\n        for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n            sourceTiles[i].consumers++;\n        }\n    };\n    /**\n     * @param {VectorRenderTile} tile Tile.\n     */\n    VectorTile.prototype.removeSourceTiles = function (tile) {\n        var tileKey = getKey(tile.tileCoord);\n        if (tileKey in this.sourceTilesByTileKey_) {\n            var sourceTiles = this.sourceTilesByTileKey_[tileKey];\n            for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n                var sourceTile = sourceTiles[i];\n                sourceTile.consumers--;\n                if (sourceTile.consumers === 0) {\n                    sourceTile.dispose();\n                    delete this.sourceTiles_[getKey(sourceTile.tileCoord)];\n                }\n            }\n        }\n        delete this.sourceTilesByTileKey_[tileKey];\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            return (\n            /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey)));\n        }\n        else {\n            var tileCoord = [z, x, y];\n            var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n            var tile = new VectorRenderTile(tileCoord, urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY, urlTileCoord, this.tileGrid, this.getSourceTiles.bind(this, pixelRatio, projection), this.removeSourceTiles.bind(this));\n            tile.key = this.getRevision().toString();\n            this.tileCache.set(tileCoordKey, tile);\n            return tile;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTileGridForProjection = function (projection) {\n        var code = projection.getCode();\n        var tileGrid = this.tileGrids_[code];\n        if (!tileGrid) {\n            // A tile grid that matches the tile size of the source tile grid is more\n            // likely to have 1:1 relationships between source tiles and rendered tiles.\n            var sourceTileGrid = this.tileGrid;\n            tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined, sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n        }\n        return tileGrid;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelRatio = function (pixelRatio) {\n        return pixelRatio;\n    };\n    /**\n     * @inheritDoc\n     */\n    VectorTile.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n    };\n    return VectorTile;\n}(UrlTile));\nexport default VectorTile;\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n    var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n    tile.setLoader(loader);\n}\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n    KVP: 'KVP',\n    REST: 'REST' // see spec §10\n};\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { expandUrl, createFromTileUrlFunctions, nullTileUrlFunction } from '../tileurlfunction.js';\nimport { find, findIndex, includes } from '../array.js';\nimport { containsExtent } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection, equivalent, transformExtent } from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport { createFromCapabilitiesMatrixSet } from '../tilegrid/WMTS.js';\nimport { appendParams } from '../uri.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /** @class */ (function (_super) {\n    __extends(WMTS, _super);\n    /**\n     * @param {Options} options WMTS options.\n     */\n    function WMTS(options) {\n        // TODO: add support for TileMatrixLimits\n        var _this = this;\n        var requestEncoding = options.requestEncoding !== undefined ?\n            /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n            WMTSRequestEncoding.KVP;\n        // FIXME: should we create a default tileGrid?\n        // we could issue a getCapabilities xhr to retrieve missing configuration\n        var tileGrid = options.tileGrid;\n        var urls = options.urls;\n        if (urls === undefined && options.url !== undefined) {\n            urls = expandUrl(options.url);\n        }\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            projection: options.projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileClass: options.tileClass,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: nullTileUrlFunction,\n            urls: urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : false,\n            transition: options.transition\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.version_ = options.version !== undefined ? options.version : '1.0.0';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n        /**\n         * @private\n         * @type {!Object}\n         */\n        _this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layer_ = options.layer;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.matrixSet_ = options.matrixSet;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.style_ = options.style;\n        // FIXME: should we guess this requestEncoding from options.url(s)\n        //        structure? that would mean KVP only if a template is not provided.\n        /**\n         * @private\n         * @type {import(\"./WMTSRequestEncoding.js\").default}\n         */\n        _this.requestEncoding_ = requestEncoding;\n        _this.setKey(_this.getKeyForDimensions_());\n        if (urls && urls.length > 0) {\n            _this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(_this)));\n        }\n        return _this;\n    }\n    /**\n     * Set the URLs to use for requests.\n     * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n     * @override\n     */\n    WMTS.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n    };\n    /**\n     * Get the dimensions, i.e. those passed to the constructor through the\n     * \"dimensions\" option, and possibly updated using the updateDimensions\n     * method.\n     * @return {!Object} Dimensions.\n     * @api\n     */\n    WMTS.prototype.getDimensions = function () {\n        return this.dimensions_;\n    };\n    /**\n     * Return the image format of the WMTS source.\n     * @return {string} Format.\n     * @api\n     */\n    WMTS.prototype.getFormat = function () {\n        return this.format_;\n    };\n    /**\n     * Return the layer of the WMTS source.\n     * @return {string} Layer.\n     * @api\n     */\n    WMTS.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Return the matrix set of the WMTS source.\n     * @return {string} MatrixSet.\n     * @api\n     */\n    WMTS.prototype.getMatrixSet = function () {\n        return this.matrixSet_;\n    };\n    /**\n     * Return the request encoding, either \"KVP\" or \"REST\".\n     * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n     * @api\n     */\n    WMTS.prototype.getRequestEncoding = function () {\n        return this.requestEncoding_;\n    };\n    /**\n     * Return the style of the WMTS source.\n     * @return {string} Style.\n     * @api\n     */\n    WMTS.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Return the version of the WMTS source.\n     * @return {string} Version.\n     * @api\n     */\n    WMTS.prototype.getVersion = function () {\n        return this.version_;\n    };\n    /**\n     * @private\n     * @return {string} The key for the current dimensions.\n     */\n    WMTS.prototype.getKeyForDimensions_ = function () {\n        var i = 0;\n        var res = [];\n        for (var key in this.dimensions_) {\n            res[i++] = key + '-' + this.dimensions_[key];\n        }\n        return res.join('/');\n    };\n    /**\n     * Update the dimensions.\n     * @param {Object} dimensions Dimensions.\n     * @api\n     */\n    WMTS.prototype.updateDimensions = function (dimensions) {\n        assign(this.dimensions_, dimensions);\n        this.setKey(this.getKeyForDimensions_());\n    };\n    return WMTS;\n}(TileImage));\nexport default WMTS;\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n    var layers = wmtsCap['Contents']['Layer'];\n    var l = find(layers, function (elt, index, array) {\n        return elt['Identifier'] == config['layer'];\n    });\n    if (l === null) {\n        return null;\n    }\n    var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var idx;\n    if (l['TileMatrixSetLink'].length > 1) {\n        if ('projection' in config) {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                var tileMatrixSet = find(tileMatrixSets, function (el) {\n                    return el['Identifier'] == elt['TileMatrixSet'];\n                });\n                var supportedCRS = tileMatrixSet['SupportedCRS'];\n                var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                    getProjection(supportedCRS);\n                var proj2 = getProjection(config['projection']);\n                if (proj1 && proj2) {\n                    return equivalent(proj1, proj2);\n                }\n                else {\n                    return supportedCRS == config['projection'];\n                }\n            });\n        }\n        else {\n            idx = findIndex(l['TileMatrixSetLink'], function (elt, index, array) {\n                return elt['TileMatrixSet'] == config['matrixSet'];\n            });\n        }\n    }\n    else {\n        idx = 0;\n    }\n    if (idx < 0) {\n        idx = 0;\n    }\n    var matrixSet = /** @type {string} */ (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n    var matrixLimits = /** @type {Array<Object>} */ (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n    var format = /** @type {string} */ (l['Format'][0]);\n    if ('format' in config) {\n        format = config['format'];\n    }\n    idx = findIndex(l['Style'], function (elt, index, array) {\n        if ('style' in config) {\n            return elt['Title'] == config['style'];\n        }\n        else {\n            return elt['isDefault'];\n        }\n    });\n    if (idx < 0) {\n        idx = 0;\n    }\n    var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n    var dimensions = {};\n    if ('Dimension' in l) {\n        l['Dimension'].forEach(function (elt, index, array) {\n            var key = elt['Identifier'];\n            var value = elt['Default'];\n            if (value === undefined) {\n                value = elt['Value'][0];\n            }\n            dimensions[key] = value;\n        });\n    }\n    var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n    var matrixSetObj = find(matrixSets, function (elt, index, array) {\n        return elt['Identifier'] == matrixSet;\n    });\n    var projection;\n    var code = matrixSetObj['SupportedCRS'];\n    if (code) {\n        projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n            getProjection(code);\n    }\n    if ('projection' in config) {\n        var projConfig = getProjection(config['projection']);\n        if (projConfig) {\n            if (!projection || equivalent(projConfig, projection)) {\n                projection = projConfig;\n            }\n        }\n    }\n    var wgs84BoundingBox = l['WGS84BoundingBox'];\n    var extent, wrapX;\n    if (wgs84BoundingBox !== undefined) {\n        var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n        wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n            wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n        extent = transformExtent(wgs84BoundingBox, 'EPSG:4326', projection);\n        var projectionExtent = projection.getExtent();\n        if (projectionExtent) {\n            // If possible, do a sanity check on the extent - it should never be\n            // bigger than the validity extent of the projection of a matrix set.\n            if (!containsExtent(projectionExtent, extent)) {\n                extent = undefined;\n            }\n        }\n    }\n    var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n    /** @type {!Array<string>} */\n    var urls = [];\n    var requestEncoding = config['requestEncoding'];\n    requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n    if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n        var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n        for (var i = 0, ii = gets.length; i < ii; ++i) {\n            if (gets[i]['Constraint']) {\n                var constraint = find(gets[i]['Constraint'], function (element) {\n                    return element['name'] == 'GetEncoding';\n                });\n                var encodings = constraint['AllowedValues']['Value'];\n                if (requestEncoding === '') {\n                    // requestEncoding not provided, use the first encoding from the list\n                    requestEncoding = encodings[0];\n                }\n                if (requestEncoding === WMTSRequestEncoding.KVP) {\n                    if (includes(encodings, WMTSRequestEncoding.KVP)) {\n                        urls.push(/** @type {string} */ (gets[i]['href']));\n                    }\n                }\n                else {\n                    break;\n                }\n            }\n            else if (gets[i]['href']) {\n                requestEncoding = WMTSRequestEncoding.KVP;\n                urls.push(/** @type {string} */ (gets[i]['href']));\n            }\n        }\n    }\n    if (urls.length === 0) {\n        requestEncoding = WMTSRequestEncoding.REST;\n        l['ResourceURL'].forEach(function (element) {\n            if (element['resourceType'] === 'tile') {\n                format = element['format'];\n                urls.push(/** @type {string} */ (element['template']));\n            }\n        });\n    }\n    return {\n        urls: urls,\n        layer: config['layer'],\n        matrixSet: matrixSet,\n        format: format,\n        projection: projection,\n        requestEncoding: requestEncoding,\n        tileGrid: tileGrid,\n        style: style,\n        dimensions: dimensions,\n        wrapX: wrapX,\n        crossOrigin: config['crossOrigin']\n    };\n}\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n    var requestEncoding = this.requestEncoding_;\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    var context = {\n        'layer': this.layer_,\n        'style': this.style_,\n        'tilematrixset': this.matrixSet_\n    };\n    if (requestEncoding == WMTSRequestEncoding.KVP) {\n        assign(context, {\n            'Service': 'WMTS',\n            'Request': 'GetTile',\n            'Version': this.version_,\n            'Format': this.format_\n        });\n    }\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n        appendParams(template, context) :\n        template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n        });\n    var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (this.tileGrid);\n    var dimensions = this.dimensions_;\n    return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var localContext_1 = {\n                'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n                'TileCol': tileCoord[1],\n                'TileRow': tileCoord[2]\n            };\n            assign(localContext_1, dimensions);\n            var url = template;\n            if (requestEncoding == WMTSRequestEncoding.KVP) {\n                url = appendParams(url, localContext_1);\n            }\n            else {\n                url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n                    return localContext_1[p];\n                });\n            }\n            return url;\n        }\n    });\n}\n//# sourceMappingURL=WMTS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport WebGLHelper from '../../webgl/Helper';\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n/**\n * @typedef {Object} Options\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n */\nvar WebGLLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLLayerRenderer(layer, opt_options) {\n        var _this = _super.call(this, layer) || this;\n        var options = opt_options || {};\n        _this.helper_ = new WebGLHelper({\n            postProcesses: options.postProcesses,\n            uniforms: options.uniforms\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WebGLLayerRenderer.prototype.disposeInternal = function () {\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Will return the last shader compilation errors. If no error happened, will return null;\n     * @return {string|null} Errors, or null if last compilation was successful\n     * @api\n     */\n    WebGLLayerRenderer.prototype.getShaderCompileErrors = function () {\n        return this.helper_.getShaderCompileErrors();\n    };\n    return WebGLLayerRenderer;\n}(LayerRenderer));\n/**\n * Pushes vertices and indices to the given buffers using the geometry coordinates and the following properties\n * from the feature:\n * - `color`\n * - `opacity`\n * - `size` (for points)\n * - `u0`, `v0`, `u1`, `v1` (for points)\n * - `rotateWithView` (for points)\n * - `width` (for lines)\n * Custom attributes can be designated using the `opt_attributes` argument, otherwise other properties on the\n * feature will be ignored.\n * @param {import(\"../../webgl/Buffer\").default} vertexBuffer WebGL buffer in which new vertices will be pushed.\n * @param {import(\"../../webgl/Buffer\").default} indexBuffer WebGL buffer in which new indices will be pushed.\n * @param {import(\"../../format/GeoJSON\").GeoJSONFeature} geojsonFeature Feature in geojson format, coordinates\n * expressed in EPSG:4326.\n * @param {Array<string>} [opt_attributes] Custom attributes. An array of properties which will be read from the\n * feature and pushed in the buffer in the given order. Note: attributes can only be numerical! Any other type or\n * NaN will result in `0` being pushed in the buffer.\n */\nexport function pushFeatureToBuffer(vertexBuffer, indexBuffer, geojsonFeature, opt_attributes) {\n    if (!geojsonFeature.geometry) {\n        return;\n    }\n    switch (geojsonFeature.geometry.type) {\n        case 'Point':\n            pushPointFeatureToBuffer_(vertexBuffer, indexBuffer, geojsonFeature, opt_attributes);\n            return;\n        default:\n            return;\n    }\n}\nvar tmpArray_ = [];\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {import(\"../../webgl/Buffer\").default} vertexBuffer WebGL buffer\n * @param {import(\"../../webgl/Buffer\").default} indexBuffer WebGL buffer\n * @param {import(\"../../format/GeoJSON\").GeoJSONFeature} geojsonFeature Feature\n * @param {Array<string>} [opt_attributes] Custom attributes\n * @private\n */\nfunction pushPointFeatureToBuffer_(vertexBuffer, indexBuffer, geojsonFeature, opt_attributes) {\n    var stride = 12 + (opt_attributes !== undefined ? opt_attributes.length : 0);\n    var x = geojsonFeature.geometry.coordinates[0];\n    var y = geojsonFeature.geometry.coordinates[1];\n    var u0 = geojsonFeature.properties.u0;\n    var v0 = geojsonFeature.properties.v0;\n    var u1 = geojsonFeature.properties.u1;\n    var v1 = geojsonFeature.properties.v1;\n    var size = geojsonFeature.properties.size;\n    var opacity = geojsonFeature.properties.opacity;\n    var rotateWithView = geojsonFeature.properties.rotateWithView;\n    var color = geojsonFeature.properties.color;\n    var red = color[0];\n    var green = color[1];\n    var blue = color[2];\n    var alpha = color[3];\n    var baseIndex = vertexBuffer.getArray().length / stride;\n    // read custom numerical attributes on the feature\n    var customAttributeValues = tmpArray_;\n    customAttributeValues.length = opt_attributes ? opt_attributes.length : 0;\n    for (var i = 0; i < customAttributeValues.length; i++) {\n        customAttributeValues[i] = parseFloat(geojsonFeature.properties[opt_attributes[i]]) || 0;\n    }\n    // push vertices for each of the four quad corners (first standard then custom attributes)\n    vertexBuffer.getArray().push(x, y, -size / 2, -size / 2, u0, v0, opacity, rotateWithView, red, green, blue, alpha);\n    Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\n    vertexBuffer.getArray().push(x, y, +size / 2, -size / 2, u1, v0, opacity, rotateWithView, red, green, blue, alpha);\n    Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\n    vertexBuffer.getArray().push(x, y, +size / 2, +size / 2, u1, v1, opacity, rotateWithView, red, green, blue, alpha);\n    Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\n    vertexBuffer.getArray().push(x, y, -size / 2, +size / 2, u0, v1, opacity, rotateWithView, red, green, blue, alpha);\n    Array.prototype.push.apply(vertexBuffer.getArray(), customAttributeValues);\n    indexBuffer.getArray().push(baseIndex, baseIndex + 1, baseIndex + 3, baseIndex + 1, baseIndex + 2, baseIndex + 3);\n}\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankTexture() {\n    var canvas = document.createElement('canvas');\n    var image = canvas.getContext('2d').createImageData(1, 1);\n    image.data[0] = image.data[1] = image.data[2] = image.data[3] = 255;\n    return image;\n}\nexport default WebGLLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/format/Feature\n */\nimport { assign } from '../obj.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection, equivalent as equivalentProjection, transformExtent } from '../proj.js';\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = /** @class */ (function () {\n    function FeatureFormat() {\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.dataProjection = null;\n        /**\n         * @protected\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        this.defaultFeatureProjection = null;\n    }\n    /**\n     * Adds the data projection to the read options.\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Options.\n     * @return {ReadOptions|undefined} Options.\n     * @protected\n     */\n    FeatureFormat.prototype.getReadOptions = function (source, opt_options) {\n        var options;\n        if (opt_options) {\n            options = {\n                dataProjection: opt_options.dataProjection ?\n                    opt_options.dataProjection : this.readProjection(source),\n                featureProjection: opt_options.featureProjection\n            };\n        }\n        return this.adaptOptions(options);\n    };\n    /**\n     * Sets the `dataProjection` on the options, if no `dataProjection`\n     * is set.\n     * @param {WriteOptions|ReadOptions|undefined} options\n     *     Options.\n     * @protected\n     * @return {WriteOptions|ReadOptions|undefined}\n     *     Updated options.\n     */\n    FeatureFormat.prototype.adaptOptions = function (options) {\n        return assign({\n            dataProjection: this.dataProjection,\n            featureProjection: this.defaultFeatureProjection\n        }, options);\n    };\n    /**\n     * @abstract\n     * @return {import(\"./FormatType.js\").default} Format.\n     */\n    FeatureFormat.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Read a single feature from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    FeatureFormat.prototype.readFeature = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read all features from a source.\n     *\n     * @abstract\n     * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    FeatureFormat.prototype.readFeatures = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a single geometry from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @param {ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    FeatureFormat.prototype.readGeometry = function (source, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from a source.\n     *\n     * @abstract\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    FeatureFormat.prototype.readProjection = function (source) {\n        return abstract();\n    };\n    /**\n     * Encode a feature in this format.\n     *\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeature = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features in this format.\n     *\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeFeatures = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry in this format.\n     *\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     */\n    FeatureFormat.prototype.writeGeometry = function (geometry, opt_options) {\n        return abstract();\n    };\n    return FeatureFormat;\n}());\nexport default FeatureFormat;\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    var transformed;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        transformed = (write ? geometry.clone() : geometry).transform(write ? featureProjection : dataProjection, write ? dataProjection : featureProjection);\n    }\n    else {\n        transformed = geometry;\n    }\n    if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n        var power_1 = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n        // if decimals option on write, round each coordinate appropriately\n        /**\n         * @param {Array<number>} coordinates Coordinates.\n         * @return {Array<number>} Transformed coordinates.\n         */\n        var transform = function (coordinates) {\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = Math.round(coordinates[i] * power_1) / power_1;\n            }\n            return coordinates;\n        };\n        if (transformed === geometry) {\n            transformed = geometry.clone();\n        }\n        transformed.applyTransform(transform);\n    }\n    return transformed;\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n    var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n    var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n    if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n        return transformExtent(extent, dataProjection, featureProjection);\n    }\n    else {\n        return extent;\n    }\n}\n//# sourceMappingURL=Feature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/JSONFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /** @class */ (function (_super) {\n    __extends(JSONFeature, _super);\n    function JSONFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    JSONFeature.prototype.getType = function () {\n        return FormatType.JSON;\n    };\n    /**\n     * Read a feature.  Only works for a single feature. Use `readFeatures` to\n     * read a feature collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    JSONFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * Read all features.  Works with both a single feature and a feature\n     * collection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    JSONFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    JSONFeature.prototype.readFeatureFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    JSONFeature.prototype.readFeaturesFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read a geometry.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    JSONFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromObject(getObject(source), this.getReadOptions(source, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    JSONFeature.prototype.readGeometryFromObject = function (object, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection.\n     *\n     * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    JSONFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromObject(getObject(source));\n    };\n    /**\n     * @abstract\n     * @param {Object} object Object.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    JSONFeature.prototype.readProjectionFromObject = function (object) {\n        return abstract();\n    };\n    /**\n     * Encode a feature as string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    JSONFeature.prototype.writeFeature = function (feature, opt_options) {\n        return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeatureObject = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    JSONFeature.prototype.writeFeatures = function (features, opt_options) {\n        return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeFeaturesObject = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode a geometry as string.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded geometry.\n     * @api\n     */\n    JSONFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     */\n    JSONFeature.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return abstract();\n    };\n    return JSONFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n    if (typeof source === 'string') {\n        var object = JSON.parse(source);\n        return object ? /** @type {Object} */ (object) : null;\n    }\n    else if (source !== null) {\n        return source;\n    }\n    else {\n        return null;\n    }\n}\nexport default JSONFeature;\n//# sourceMappingURL=JSONFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/GeometryCollection\n */\nimport { listen, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter } from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport { clear } from '../obj.js';\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /** @class */ (function (_super) {\n    __extends(GeometryCollection, _super);\n    /**\n     * @param {Array<Geometry>=} opt_geometries Geometries.\n     */\n    function GeometryCollection(opt_geometries) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {Array<Geometry>}\n         */\n        _this.geometries_ = opt_geometries ? opt_geometries : null;\n        _this.listenGeometriesChange_();\n        return _this;\n    }\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.unlistenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            unlisten(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * @private\n     */\n    GeometryCollection.prototype.listenGeometriesChange_ = function () {\n        if (!this.geometries_) {\n            return;\n        }\n        for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n            listen(this.geometries_[i], EventType.CHANGE, this.changed, this);\n        }\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!GeometryCollection} Clone.\n     * @override\n     * @api\n     */\n    GeometryCollection.prototype.clone = function () {\n        var geometryCollection = new GeometryCollection(null);\n        geometryCollection.setGeometries(this.geometries_);\n        return geometryCollection;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            minSquaredDistance = geometries[i].closestPointXY(x, y, closestPoint, minSquaredDistance);\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.containsXY = function (x, y) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].containsXY(x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.computeExtent = function (extent) {\n        createOrUpdateEmpty(extent);\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            extend(extent, geometries[i].getExtent());\n        }\n        return extent;\n    };\n    /**\n     * Return the geometries that make up this geometry collection.\n     * @return {Array<Geometry>} Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.getGeometries = function () {\n        return cloneGeometries(this.geometries_);\n    };\n    /**\n     * @return {Array<Geometry>} Geometries.\n     */\n    GeometryCollection.prototype.getGeometriesArray = function () {\n        return this.geometries_;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision != this.getRevision()) {\n            clear(this.simplifiedGeometryCache);\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var key = squaredTolerance.toString();\n        if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n            return this.simplifiedGeometryCache[key];\n        }\n        else {\n            var simplifiedGeometries = [];\n            var geometries = this.geometries_;\n            var simplified = false;\n            for (var i = 0, ii = geometries.length; i < ii; ++i) {\n                var geometry = geometries[i];\n                var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n                simplifiedGeometries.push(simplifiedGeometry);\n                if (simplifiedGeometry !== geometry) {\n                    simplified = true;\n                }\n            }\n            if (simplified) {\n                var simplifiedGeometryCollection = new GeometryCollection(null);\n                simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n                this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n                return simplifiedGeometryCollection;\n            }\n            else {\n                this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n                return this;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.getType = function () {\n        return GeometryType.GEOMETRY_COLLECTION;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.intersectsExtent = function (extent) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            if (geometries[i].intersectsExtent(extent)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    GeometryCollection.prototype.isEmpty = function () {\n        return this.geometries_.length === 0;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.rotate = function (angle, anchor) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].rotate(angle, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].scale(sx, opt_sy, anchor);\n        }\n        this.changed();\n    };\n    /**\n     * Set the geometries that make up this geometry collection.\n     * @param {Array<Geometry>} geometries Geometries.\n     * @api\n     */\n    GeometryCollection.prototype.setGeometries = function (geometries) {\n        this.setGeometriesArray(cloneGeometries(geometries));\n    };\n    /**\n     * @param {Array<Geometry>} geometries Geometries.\n     */\n    GeometryCollection.prototype.setGeometriesArray = function (geometries) {\n        this.unlistenGeometriesChange_();\n        this.geometries_ = geometries;\n        this.listenGeometriesChange_();\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.applyTransform = function (transformFn) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].applyTransform(transformFn);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    GeometryCollection.prototype.translate = function (deltaX, deltaY) {\n        var geometries = this.geometries_;\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            geometries[i].translate(deltaX, deltaY);\n        }\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    GeometryCollection.prototype.disposeInternal = function () {\n        this.unlistenGeometriesChange_();\n        _super.prototype.disposeInternal.call(this);\n    };\n    return GeometryCollection;\n}(Geometry));\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n    var clonedGeometries = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        clonedGeometries.push(geometries[i].clone());\n    }\n    return clonedGeometries;\n}\nexport default GeometryCollection;\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport { binarySearch } from '../../array.js';\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n    var pointX = NaN;\n    var pointY = NaN;\n    var n = (end - offset) / stride;\n    if (n === 1) {\n        pointX = flatCoordinates[offset];\n        pointY = flatCoordinates[offset + 1];\n    }\n    else if (n == 2) {\n        pointX = (1 - fraction) * flatCoordinates[offset] +\n            fraction * flatCoordinates[offset + stride];\n        pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n            fraction * flatCoordinates[offset + stride + 1];\n    }\n    else if (n !== 0) {\n        var x1 = flatCoordinates[offset];\n        var y1 = flatCoordinates[offset + 1];\n        var length_1 = 0;\n        var cumulativeLengths = [0];\n        for (var i = offset + stride; i < end; i += stride) {\n            var x2 = flatCoordinates[i];\n            var y2 = flatCoordinates[i + 1];\n            length_1 += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n            cumulativeLengths.push(length_1);\n            x1 = x2;\n            y1 = y2;\n        }\n        var target = fraction * length_1;\n        var index = binarySearch(cumulativeLengths, target);\n        if (index < 0) {\n            var t = (target - cumulativeLengths[-index - 2]) /\n                (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n            var o = offset + (-index - 2) * stride;\n            pointX = lerp(flatCoordinates[o], flatCoordinates[o + stride], t);\n            pointY = lerp(flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n        }\n        else {\n            pointX = flatCoordinates[offset + index * stride];\n            pointY = flatCoordinates[offset + index * stride + 1];\n        }\n    }\n    if (opt_dest) {\n        opt_dest[0] = pointX;\n        opt_dest[1] = pointY;\n        return opt_dest;\n    }\n    else {\n        return [pointX, pointY];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n    if (end == offset) {\n        return null;\n    }\n    var coordinate;\n    if (m < flatCoordinates[offset + stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(offset, offset + stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    else if (flatCoordinates[end - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(end - stride, end);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    // FIXME use O(1) search\n    if (m == flatCoordinates[offset + stride - 1]) {\n        return flatCoordinates.slice(offset, offset + stride);\n    }\n    var lo = offset / stride;\n    var hi = end / stride;\n    while (lo < hi) {\n        var mid = (lo + hi) >> 1;\n        if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n            hi = mid;\n        }\n        else {\n            lo = mid + 1;\n        }\n    }\n    var m0 = flatCoordinates[lo * stride - 1];\n    if (m == m0) {\n        return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n    }\n    var m1 = flatCoordinates[(lo + 1) * stride - 1];\n    var t = (m - m0) / (m1 - m0);\n    coordinate = [];\n    for (var i = 0; i < stride - 1; ++i) {\n        coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i], flatCoordinates[lo * stride + i], t));\n    }\n    coordinate.push(m);\n    return coordinate;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n    if (interpolate) {\n        return lineStringCoordinateAtM(flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n    }\n    var coordinate;\n    if (m < flatCoordinates[stride - 1]) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(0, stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    if (flatCoordinates[flatCoordinates.length - 1] < m) {\n        if (extrapolate) {\n            coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n            coordinate[stride - 1] = m;\n            return coordinate;\n        }\n        else {\n            return null;\n        }\n    }\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        if (offset == end) {\n            continue;\n        }\n        if (m < flatCoordinates[offset + stride - 1]) {\n            return null;\n        }\n        else if (m <= flatCoordinates[end - 1]) {\n            return lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, false);\n        }\n        offset = end;\n    }\n    return null;\n}\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/flat/length\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    for (var i = offset + stride; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        x1 = x2;\n        y1 = y2;\n    }\n    return length;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n    var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n    var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n    var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n    perimeter += Math.sqrt(dx * dx + dy * dy);\n    return perimeter;\n}\n//# sourceMappingURL=length.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { interpolatePoint, lineStringCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineString } from './flat/intersectsextent.js';\nimport { lineStringLength } from './flat/length.js';\nimport { forEach as forEachSegment } from './flat/segments.js';\nimport { douglasPeucker } from './flat/simplify.js';\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /** @class */ (function (_super) {\n    __extends(LineString, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     */\n    function LineString(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatMidpoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatMidpointRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed coordinate to the coordinates of the linestring.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @api\n     */\n    LineString.prototype.appendCoordinate = function (coordinate) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = coordinate.slice();\n        }\n        else {\n            extend(this.flatCoordinates, coordinate);\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LineString} Clone.\n     * @override\n     * @api\n     */\n    LineString.prototype.clone = function () {\n        return new LineString(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Iterate over each segment, calling the provided callback.\n     * If the callback returns a truthy value the function returns that\n     * value immediately. Otherwise the function returns `false`.\n     *\n     * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n     *     called for each segment.\n     * @return {T|boolean} Value.\n     * @template T,S\n     * @api\n     */\n    LineString.prototype.forEachSegment = function (callback) {\n        return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    LineString.prototype.getCoordinateAtM = function (m, opt_extrapolate) {\n        if (this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        return lineStringCoordinateAtM(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, m, extrapolate);\n    };\n    /**\n     * Return the coordinates of the linestring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    LineString.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinate at the provided fraction along the linestring.\n     * The `fraction` is a number between 0 and 1, where 0 is the start of the\n     * linestring and 1 is the end.\n     * @param {number} fraction Fraction.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n     *     be modified. If not provided, a new coordinate will be returned.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n     * @api\n     */\n    LineString.prototype.getCoordinateAt = function (fraction, opt_dest) {\n        return interpolatePoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, fraction, opt_dest);\n    };\n    /**\n     * Return the length of the linestring on projected plane.\n     * @return {number} Length (on projected plane).\n     * @api\n     */\n    LineString.prototype.getLength = function () {\n        return lineStringLength(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    LineString.prototype.getFlatMidpoint = function () {\n        if (this.flatMidpointRevision_ != this.getRevision()) {\n            this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n            this.flatMidpointRevision_ = this.getRevision();\n        }\n        return this.flatMidpoint_;\n    };\n    /**\n     * @inheritDoc\n     */\n    LineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.getType = function () {\n        return GeometryType.LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    LineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineString(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the linestring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    LineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LineString;\n}(SimpleGeometry));\nexport default LineString;\n//# sourceMappingURL=LineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiLineString\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestArrayPoint, arrayMaxSquaredDelta } from './flat/closest.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { interpolatePoint, lineStringsCoordinateAtM } from './flat/interpolate.js';\nimport { intersectsLineStringArray } from './flat/intersectsextent.js';\nimport { douglasPeuckerArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /** @class */ (function (_super) {\n    __extends(MultiLineString, _super);\n    /**\n     * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n     *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n     *     combination with `opt_layout` and `opt_ends` are also accepted.)\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n     */\n    function MultiLineString(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (Array.isArray(coordinates[0])) {\n            _this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        else if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            var layout = _this.getLayout();\n            var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n            var flatCoordinates = [];\n            var ends = [];\n            for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n                var lineString = lineStrings[i];\n                if (i === 0) {\n                    layout = lineString.getLayout();\n                }\n                extend(flatCoordinates, lineString.getFlatCoordinates());\n                ends.push(flatCoordinates.length);\n            }\n            _this.setFlatCoordinates(layout, flatCoordinates);\n            _this.ends_ = ends;\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linestring to the multilinestring.\n     * @param {LineString} lineString LineString.\n     * @api\n     */\n    MultiLineString.prototype.appendLineString = function (lineString) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = lineString.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiLineString} Clone.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.clone = function () {\n        return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Returns the coordinate at `m` using linear interpolation, or `null` if no\n     * such coordinate exists.\n     *\n     * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n     * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n     * M will return the first coordinate and Ms greater than the last M will\n     * return the last coordinate.\n     *\n     * `opt_interpolate` controls interpolation between consecutive LineStrings\n     * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n     * will be linearly interpolated between the last coordinate of one LineString\n     * and the first coordinate of the next LineString.  If `opt_interpolate` is\n     * `false` then the function will return `null` for Ms falling between\n     * LineStrings.\n     *\n     * @param {number} m M.\n     * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n     * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    MultiLineString.prototype.getCoordinateAtM = function (m, opt_extrapolate, opt_interpolate) {\n        if ((this.layout != GeometryLayout.XYM &&\n            this.layout != GeometryLayout.XYZM) ||\n            this.flatCoordinates.length === 0) {\n            return null;\n        }\n        var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n        var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n        return lineStringsCoordinateAtM(this.flatCoordinates, 0, this.ends_, this.stride, m, extrapolate, interpolate);\n    };\n    /**\n     * Return the coordinates of the multilinestring.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.getCoordinates = function () {\n        return inflateCoordinatesArray(this.flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    MultiLineString.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * Return the linestring at the specified index.\n     * @param {number} index Index.\n     * @return {LineString} LineString.\n     * @api\n     */\n    MultiLineString.prototype.getLineString = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LineString(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linestrings of this multilinestring.\n     * @return {Array<LineString>} LineStrings.\n     * @api\n     */\n    MultiLineString.prototype.getLineStrings = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var layout = this.layout;\n        /** @type {Array<LineString>} */\n        var lineStrings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n            lineStrings.push(lineString);\n            offset = end;\n        }\n        return lineStrings;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    MultiLineString.prototype.getFlatMidpoints = function () {\n        var midpoints = [];\n        var flatCoordinates = this.flatCoordinates;\n        var offset = 0;\n        var ends = this.ends_;\n        var stride = this.stride;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var midpoint = interpolatePoint(flatCoordinates, offset, end, stride, 0.5);\n            extend(midpoints, midpoint);\n            offset = end;\n        }\n        return midpoints;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiLineString.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = douglasPeuckerArray(this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.getType = function () {\n        return GeometryType.MULTI_LINE_STRING;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiLineString.prototype.intersectsExtent = function (extent) {\n        return intersectsLineStringArray(this.flatCoordinates, 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multilinestring.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiLineString.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return MultiLineString;\n}(SimpleGeometry));\nexport default MultiLineString;\n//# sourceMappingURL=MultiLineString.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPoint\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY, containsXY } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /** @class */ (function (_super) {\n    __extends(MultiPoint, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function MultiPoint(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed point to this multipoint.\n     * @param {Point} point Point.\n     * @api\n     */\n    MultiPoint.prototype.appendPoint = function (point) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = point.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, point.getFlatCoordinates());\n        }\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPoint} Clone.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.clone = function () {\n        var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n        return multiPoint;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPoint.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var squaredDistance = squaredDx(x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n            if (squaredDistance < minSquaredDistance) {\n                minSquaredDistance = squaredDistance;\n                for (var j = 0; j < stride; ++j) {\n                    closestPoint[j] = flatCoordinates[i + j];\n                }\n                closestPoint.length = stride;\n            }\n        }\n        return minSquaredDistance;\n    };\n    /**\n     * Return the coordinates of the multipoint.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the point at the specified index.\n     * @param {number} index Index.\n     * @return {Point} Point.\n     * @api\n     */\n    MultiPoint.prototype.getPoint = function (index) {\n        var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n        if (index < 0 || n <= index) {\n            return null;\n        }\n        return new Point(this.flatCoordinates.slice(index * this.stride, (index + 1) * this.stride), this.layout);\n    };\n    /**\n     * Return the points of this multipoint.\n     * @return {Array<Point>} Points.\n     * @api\n     */\n    MultiPoint.prototype.getPoints = function () {\n        var flatCoordinates = this.flatCoordinates;\n        var layout = this.layout;\n        var stride = this.stride;\n        /** @type {Array<Point>} */\n        var points = [];\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n            points.push(point);\n        }\n        return points;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.getType = function () {\n        return GeometryType.MULTI_POINT;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPoint.prototype.intersectsExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var stride = this.stride;\n        for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            if (containsXY(extent, x, y)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Set the coordinates of the multipoint.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPoint.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return MultiPoint;\n}(SimpleGeometry));\nexport default MultiPoint;\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport { createEmpty, createOrUpdateFromFlatCoordinates } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var flatCenters = [];\n    var extent = createEmpty();\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n        flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n        offset = ends[ends.length - 1];\n    }\n    return flatCenters;\n}\n//# sourceMappingURL=center.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/MultiPolygon\n */\nimport { extend } from '../array.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { linearRingss as linearRingssArea } from './flat/area.js';\nimport { linearRingss as linearRingssCenter } from './flat/center.js';\nimport { assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta } from './flat/closest.js';\nimport { linearRingssContainsXY } from './flat/contains.js';\nimport { deflateMultiCoordinatesArray } from './flat/deflate.js';\nimport { inflateMultiCoordinatesArray } from './flat/inflate.js';\nimport { getInteriorPointsOfMultiArray } from './flat/interiorpoint.js';\nimport { intersectsLinearRingMultiArray } from './flat/intersectsextent.js';\nimport { linearRingssAreOriented, orientLinearRingsArray } from './flat/orient.js';\nimport { quantizeMultiArray } from './flat/simplify.js';\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /** @class */ (function (_super) {\n    __extends(MultiPolygon, _super);\n    /**\n     * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n     */\n    function MultiPolygon(coordinates, opt_layout, opt_endss) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<Array<number>>}\n         * @private\n         */\n        _this.endss_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointsRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (!opt_endss && !Array.isArray(coordinates[0])) {\n            var layout = _this.getLayout();\n            var polygons = /** @type {Array<Polygon>} */ (coordinates);\n            var flatCoordinates = [];\n            var endss = [];\n            for (var i = 0, ii = polygons.length; i < ii; ++i) {\n                var polygon = polygons[i];\n                if (i === 0) {\n                    layout = polygon.getLayout();\n                }\n                var offset = flatCoordinates.length;\n                var ends = polygon.getEnds();\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] += offset;\n                }\n                extend(flatCoordinates, polygon.getFlatCoordinates());\n                endss.push(ends);\n            }\n            opt_layout = layout;\n            coordinates = flatCoordinates;\n            opt_endss = endss;\n        }\n        if (opt_layout !== undefined && opt_endss) {\n            _this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n            _this.endss_ = opt_endss;\n        }\n        else {\n            _this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed polygon to this multipolygon.\n     * @param {Polygon} polygon Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.appendPolygon = function (polygon) {\n        /** @type {Array<number>} */\n        var ends;\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = polygon.getFlatCoordinates().slice();\n            ends = polygon.getEnds().slice();\n            this.endss_.push();\n        }\n        else {\n            var offset = this.flatCoordinates.length;\n            extend(this.flatCoordinates, polygon.getFlatCoordinates());\n            ends = polygon.getEnds().slice();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] += offset;\n            }\n        }\n        this.endss_.push(ends);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!MultiPolygon} Clone.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.clone = function () {\n        var len = this.endss_.length;\n        var newEndss = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            newEndss[i] = this.endss_[i].slice();\n        }\n        return new MultiPolygon(this.flatCoordinates.slice(), this.layout, newEndss);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(this.flatCoordinates, 0, this.endss_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestMultiArrayPoint(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.containsXY = function (x, y) {\n        return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the multipolygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    MultiPolygon.prototype.getArea = function () {\n        return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for multi-polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRingsArray(flatCoordinates, 0, this.endss_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateMultiCoordinatesArray(flatCoordinates, 0, this.endss_, this.stride);\n    };\n    /**\n     * @return {Array<Array<number>>} Endss.\n     */\n    MultiPolygon.prototype.getEndss = function () {\n        return this.endss_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    MultiPolygon.prototype.getFlatInteriorPoints = function () {\n        if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates, 0, this.endss_, this.stride);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, flatCenters);\n            this.flatInteriorPointsRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n     * @return {MultiPoint} Interior points as XYM coordinates, where M is\n     * the length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    MultiPolygon.prototype.getInteriorPoints = function () {\n        return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    MultiPolygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length =\n                    orientLinearRingsArray(this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @inheritDoc\n     */\n    MultiPolygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEndss = [];\n        simplifiedFlatCoordinates.length = quantizeMultiArray(this.flatCoordinates, 0, this.endss_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEndss);\n        return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n    };\n    /**\n     * Return the polygon at the specified index.\n     * @param {number} index Index.\n     * @return {Polygon} Polygon.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygon = function (index) {\n        if (index < 0 || this.endss_.length <= index) {\n            return null;\n        }\n        var offset;\n        if (index === 0) {\n            offset = 0;\n        }\n        else {\n            var prevEnds = this.endss_[index - 1];\n            offset = prevEnds[prevEnds.length - 1];\n        }\n        var ends = this.endss_[index].slice();\n        var end = ends[ends.length - 1];\n        if (offset !== 0) {\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                ends[i] -= offset;\n            }\n        }\n        return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n    };\n    /**\n     * Return the polygons of this multipolygon.\n     * @return {Array<Polygon>} Polygons.\n     * @api\n     */\n    MultiPolygon.prototype.getPolygons = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var endss = this.endss_;\n        var polygons = [];\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            var ends = endss[i].slice();\n            var end = ends[ends.length - 1];\n            if (offset !== 0) {\n                for (var j = 0, jj = ends.length; j < jj; ++j) {\n                    ends[j] -= offset;\n                }\n            }\n            var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n            polygons.push(polygon);\n            offset = end;\n        }\n        return polygons;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.getType = function () {\n        return GeometryType.MULTI_POLYGON;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MultiPolygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingMultiArray(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the multipolygon.\n     * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n     * @param {GeometryLayout=} opt_layout Layout.\n     * @override\n     * @api\n     */\n    MultiPolygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 3);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var endss = deflateMultiCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n        if (endss.length === 0) {\n            this.flatCoordinates.length = 0;\n        }\n        else {\n            var lastEnds = endss[endss.length - 1];\n            this.flatCoordinates.length = lastEnds.length === 0 ?\n                0 : lastEnds[lastEnds.length - 1];\n        }\n        this.changed();\n    };\n    return MultiPolygon;\n}(SimpleGeometry));\nexport default MultiPolygon;\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/format/GeoJSON\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign, isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /** @class */ (function (_super) {\n    __extends(GeoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GeoJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        if (options.featureProjection) {\n            _this.defaultFeatureProjection = getProjection(options.featureProjection);\n        }\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * Look for the geometry name in the feature GeoJSON\n         * @type {boolean|undefined}\n         * @private\n         */\n        _this.extractGeometryName_ = options.extractGeometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        /**\n         * @type {GeoJSONFeature}\n         */\n        var geoJSONFeature = null;\n        if (object['type'] === 'Feature') {\n            geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n        }\n        else {\n            geoJSONFeature = {\n                'type': 'Feature',\n                'geometry': /** @type {GeoJSONGeometry} */ (object),\n                'properties': null\n            };\n        }\n        var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n            feature.setGeometryName(geoJSONFeature['geometry_name']);\n        }\n        feature.setGeometry(geometry);\n        if ('id' in geoJSONFeature) {\n            feature.setId(geoJSONFeature['id']);\n        }\n        if (geoJSONFeature['properties']) {\n            feature.setProperties(geoJSONFeature['properties'], true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = null;\n        if (geoJSONObject['type'] === 'FeatureCollection') {\n            var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n            features = [];\n            var geoJSONFeatures = geoJSONFeatureCollection['features'];\n            for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n            }\n        }\n        else {\n            features = [this.readFeatureFromObject(object, opt_options)];\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    GeoJSON.prototype.readProjectionFromObject = function (object) {\n        var crs = object['crs'];\n        var projection;\n        if (crs) {\n            if (crs['type'] == 'name') {\n                projection = getProjection(crs['properties']['name']);\n            }\n            else {\n                assert(false, 36); // Unknown SRS type\n            }\n        }\n        else {\n            projection = this.dataProjection;\n        }\n        return (\n        /** @type {import(\"../proj/Projection.js\").default} */ (projection));\n    };\n    /**\n     * Encode a feature as a GeoJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeature} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        /** @type {GeoJSONFeature} */\n        var object = {\n            'type': 'Feature',\n            geometry: null,\n            properties: null\n        };\n        var id = feature.getId();\n        if (id !== undefined) {\n            object.id = id;\n        }\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object.geometry = writeGeometry(geometry, opt_options);\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object.properties = properties;\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a GeoJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONFeatureCollection} GeoJSON Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            type: 'FeatureCollection',\n            features: objects\n        };\n    };\n    /**\n     * Encode a geometry as a GeoJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n     * @override\n     * @api\n     */\n    GeoJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    return GeoJSON;\n}(JSONFeature));\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /**\n     * @type {import(\"../geom/Geometry.js\").default}\n     */\n    var geometry;\n    switch (object['type']) {\n        case GeometryType.POINT: {\n            geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n            break;\n        }\n        default: {\n            throw new Error('Unsupported GeoJSON type: ' + object.type);\n        }\n    }\n    return transformGeometryWithOptions(geometry, false, opt_options);\n}\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n    var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n        return readGeometry(geometry, opt_options);\n    });\n    return new GeometryCollection(geometries);\n}\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n    return new Point(object['coordinates']);\n}\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n    return new LineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    return new MultiLineString(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    return new MultiPoint(object['coordinates']);\n}\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    return new MultiPolygon(object['coordinates']);\n}\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    return new Polygon(object['coordinates']);\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    geometry = transformGeometryWithOptions(geometry, true, opt_options);\n    var type = geometry.getType();\n    /** @type {GeoJSONGeometry} */\n    var geoJSON;\n    switch (type) {\n        case GeometryType.POINT: {\n            geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.LINE_STRING: {\n            geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.POLYGON: {\n            geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POINT: {\n            geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING: {\n            geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n            break;\n        }\n        case GeometryType.CIRCLE: {\n            geoJSON = {\n                type: 'GeometryCollection',\n                geometries: []\n            };\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return geoJSON;\n}\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n    var geometries = geometry.getGeometriesArray().map(function (geometry) {\n        var options = assign({}, opt_options);\n        delete options.featureProjection;\n        return writeGeometry(geometry, options);\n    });\n    return {\n        type: 'GeometryCollection',\n        geometries: geometries\n    };\n}\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'LineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiLineString',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n    return {\n        type: 'MultiPoint',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'MultiPolygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    return {\n        type: 'Point',\n        coordinates: geometry.getCoordinates()\n    };\n}\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n    var right;\n    if (opt_options) {\n        right = opt_options.rightHanded;\n    }\n    return {\n        type: 'Polygon',\n        coordinates: geometry.getCoordinates(right)\n    };\n}\nexport default GeoJSON;\n//# sourceMappingURL=GeoJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport WebGLArrayBuffer from '../../webgl/Buffer';\nimport { DYNAMIC_DRAW, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, FLOAT } from '../../webgl';\nimport { DefaultAttrib, DefaultUniform } from '../../webgl/Helper';\nimport GeometryType from '../../geom/GeometryType';\nimport WebGLLayerRenderer, { getBlankTexture, pushFeatureToBuffer } from './Layer';\nimport GeoJSON from '../../format/GeoJSON';\nimport { getUid } from '../../util';\nimport ViewHint from '../../ViewHint';\nimport { createEmpty, equals } from '../../extent';\nimport { create as createTransform, makeInverse as makeInverseTransform, multiply as multiplyTransform, apply as applyTransform } from '../../transform';\nvar VERTEX_SHADER = \"\\n  precision mediump float;\\n  attribute vec2 a_position;\\n  attribute vec2 a_texCoord;\\n  attribute float a_rotateWithView;\\n  attribute vec2 a_offsets;\\n  attribute float a_opacity;\\n  attribute vec4 a_color;\\n  \\n  uniform mat4 u_projectionMatrix;\\n  uniform mat4 u_offsetScaleMatrix;\\n  uniform mat4 u_offsetRotateMatrix;\\n  \\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    mat4 offsetMatrix = u_offsetScaleMatrix;\\n    if (a_rotateWithView == 1.0) {\\n      offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n    }\\n    vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n    v_texCoord = a_texCoord;\\n    v_opacity = a_opacity;\\n    v_color = a_color;\\n  }\";\nvar FRAGMENT_SHADER = \"\\n  precision mediump float;\\n  \\n  uniform sampler2D u_texture;\\n\\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    if (v_opacity == 0.0) {\\n      discard;\\n    }\\n    vec4 textureColor = texture2D(u_texture, v_texCoord);\\n    gl_FragColor = v_color * textureColor;\\n    gl_FragColor.a *= v_opacity;\\n    gl_FragColor.rgb *= gl_FragColor.a;\\n  }\";\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../../Feature\").default):number} [sizeCallback] Will be called on every feature in the\n * source to compute the size of the quad on screen (in pixels). This is only done on source change.\n * @property {function(import(\"../../Feature\").default, number):number} [coordCallback] Will be called on every feature in the\n * source to compute the coordinate of the quad center on screen (in pixels). This is only done on source change.\n * The second argument is 0 for `x` component and 1 for `y`.\n * @property {function(import(\"../../Feature\").default, number):number} [texCoordCallback] Will be called on every feature in the\n * source to compute the texture coordinates of each corner of the quad (without effect if no `texture` option defined). This is only done on source change.\n * The second argument is 0 for `u0` component, 1 for `v0`, 2 for `u1`, and 3 for `v1`.\n * @property {function(import(\"../../Feature\").default, Array<number>=):Array<number>} [colorCallback] Will be called on every feature in the\n * source to compute the color for use in the fragment shader (available as the `v_color` varying). This is only done on source change.\n * The return value should be between an array of R, G, B, A values between 0 and 1.  To reduce unnecessary\n * allocation, the function is called with a reusable array that can serve as the return value after updating\n * the R, G, B, and A values.\n * @property {function(import(\"../../Feature\").default):number} [opacityCallback] Will be called on every feature in the\n * source to compute the opacity of the quad on screen (from 0 to 1). This is only done on source change.\n * Note: this is multiplied with the color of the point which can also have an alpha value < 1.\n * @property {function(import(\"../../Feature\").default):boolean} [rotateWithViewCallback] Will be called on every feature in the\n * source to compute whether the quad on screen must stay upwards (`false`) or follow the view rotation (`true`).\n * This is only done on source change.\n * @property {HTMLCanvasElement|HTMLImageElement|ImageData} [texture] Texture to use on points. `texCoordCallback` and `sizeCallback`\n * must be defined for this to have any effect.\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * Use shaders to customize the final output. The following attributes are available:\n * * `vec2 a_position`\n * * `vec2 a_texCoord`\n * * `vec2 a_offsets`\n * * `float a_rotateWithView`\n * * `float a_opacity`\n * * `float a_color`\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   attribute vec2 a_texCoord;\n *   attribute float a_rotateWithView;\n *   attribute vec2 a_offsets;\n *   attribute float a_opacity;\n *   attribute vec4 a_color;\n *\n *   uniform mat4 u_projectionMatrix;\n *   uniform mat4 u_offsetScaleMatrix;\n *   uniform mat4 u_offsetRotateMatrix;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     mat4 offsetMatrix = u_offsetScaleMatrix;\n *     if (a_rotateWithView == 1.0) {\n *       offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\n *     }\n *     vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\n *     gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n *     v_texCoord = a_texCoord;\n *     v_opacity = a_opacity;\n *     v_color = a_color;\n *   }\n *   ```\n *\n * * Fragment shader:\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_texture;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     if (v_opacity == 0.0) {\n *       discard;\n *     }\n *     vec4 textureColor = texture2D(u_texture, v_texCoord);\n *     gl_FragColor = v_color * textureColor;\n *     gl_FragColor.a *= v_opacity;\n *     gl_FragColor.rgb *= gl_FragColor.a;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPointsLayerRenderer = /** @class */ (function (_super) {\n    __extends(WebGLPointsLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     * @param {Options=} [opt_options] Options.\n     */\n    function WebGLPointsLayerRenderer(vectorLayer, opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var uniforms = options.uniforms || {};\n        uniforms.u_texture = options.texture || getBlankTexture();\n        var projectionMatrixTransform = createTransform();\n        uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n        _this = _super.call(this, vectorLayer, {\n            uniforms: uniforms,\n            postProcesses: options.postProcesses\n        }) || this;\n        _this.sourceRevision_ = -1;\n        _this.verticesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n        _this.indicesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n        _this.program_ = _this.helper_.getProgram(options.fragmentShader || FRAGMENT_SHADER, options.vertexShader || VERTEX_SHADER);\n        _this.helper_.useProgram(_this.program_);\n        _this.sizeCallback_ = options.sizeCallback || function () {\n            return 1;\n        };\n        _this.coordCallback_ = options.coordCallback || function (feature, index) {\n            var geom = /** @type {import(\"../../geom/Point\").default} */ (feature.getGeometry());\n            return geom.getCoordinates()[index];\n        };\n        _this.opacityCallback_ = options.opacityCallback || function () {\n            return 1;\n        };\n        _this.texCoordCallback_ = options.texCoordCallback || function (feature, index) {\n            return index < 2 ? 0 : 1;\n        };\n        _this.colorArray_ = [1, 1, 1, 1];\n        _this.colorCallback_ = options.colorCallback || function (feature, color) {\n            return this.colorArray_;\n        };\n        _this.rotateWithViewCallback_ = options.rotateWithViewCallback || function () {\n            return false;\n        };\n        _this.geojsonFormat_ = new GeoJSON();\n        /**\n         * @type {Object<string, import(\"../../format/GeoJSON\").GeoJSONFeature>}\n         * @private\n         */\n        _this.geojsonFeatureCache_ = {};\n        _this.previousExtent_ = createEmpty();\n        /**\n         * This transform is updated on every frame and is the composition of:\n         * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n         * - current world->screen transform\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.currentTransform_ = projectionMatrixTransform;\n        /**\n         * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.renderTransform_ = createTransform();\n        /**\n         * @type {import(\"../../transform.js\").Transform}\n         * @private\n         */\n        _this.invertRenderTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.disposeInternal = function () {\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        this.helper_.drawElements(0, this.indicesBuffer_.getArray().length);\n        this.helper_.finalizeDraw(frameState);\n        var canvas = this.helper_.getCanvas();\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    WebGLPointsLayerRenderer.prototype.prepareFrame = function (frameState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var viewState = frameState.viewState;\n        // TODO: get this from somewhere...\n        var stride = 12;\n        // the source has changed: clear the feature cache & reload features\n        var sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n        if (sourceChanged) {\n            this.sourceRevision_ = vectorSource.getRevision();\n            this.geojsonFeatureCache_ = {};\n            var projection = viewState.projection;\n            var resolution = viewState.resolution;\n            vectorSource.loadFeatures([-Infinity, -Infinity, Infinity, Infinity], resolution, projection);\n        }\n        var viewNotMoving = !frameState.viewHints[ViewHint.ANIMATING] && !frameState.viewHints[ViewHint.INTERACTING];\n        var extentChanged = !equals(this.previousExtent_, frameState.extent);\n        if ((sourceChanged || extentChanged) && viewNotMoving) {\n            this.rebuildBuffers_(frameState);\n            this.previousExtent_ = frameState.extent.slice();\n        }\n        // apply the current projection transform with the invert of the one used to fill buffers\n        this.helper_.makeProjectionTransform(frameState, this.currentTransform_);\n        multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n        this.helper_.prepareDraw(frameState);\n        // write new data\n        this.helper_.bindBuffer(ARRAY_BUFFER, this.verticesBuffer_);\n        this.helper_.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\n        var bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n        this.helper_.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * stride, 0);\n        this.helper_.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 2);\n        this.helper_.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 4);\n        this.helper_.enableAttributeArray(DefaultAttrib.OPACITY, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 6);\n        this.helper_.enableAttributeArray(DefaultAttrib.ROTATE_WITH_VIEW, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 7);\n        this.helper_.enableAttributeArray(DefaultAttrib.COLOR, 4, FLOAT, bytesPerFloat * stride, bytesPerFloat * 8);\n        return true;\n    };\n    /**\n     * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n     * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n     * @private\n     */\n    WebGLPointsLayerRenderer.prototype.rebuildBuffers_ = function (frameState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        this.verticesBuffer_.getArray().length = 0;\n        this.indicesBuffer_.getArray().length = 0;\n        // saves the projection transform for the current frame state\n        this.helper_.makeProjectionTransform(frameState, this.renderTransform_);\n        makeInverseTransform(this.invertRenderTransform_, this.renderTransform_);\n        // loop on features to fill the buffer\n        var features = vectorSource.getFeatures();\n        var feature;\n        for (var i = 0; i < features.length; i++) {\n            feature = features[i];\n            if (!feature.getGeometry() || feature.getGeometry().getType() !== GeometryType.POINT) {\n                continue;\n            }\n            var geojsonFeature = this.geojsonFeatureCache_[getUid(feature)];\n            if (!geojsonFeature) {\n                geojsonFeature = this.geojsonFormat_.writeFeatureObject(feature);\n                this.geojsonFeatureCache_[getUid(feature)] = geojsonFeature;\n            }\n            geojsonFeature.geometry.coordinates[0] = this.coordCallback_(feature, 0);\n            geojsonFeature.geometry.coordinates[1] = this.coordCallback_(feature, 1);\n            applyTransform(this.renderTransform_, geojsonFeature.geometry.coordinates);\n            geojsonFeature.properties = geojsonFeature.properties || {};\n            geojsonFeature.properties.color = this.colorCallback_(feature, this.colorArray_);\n            geojsonFeature.properties.u0 = this.texCoordCallback_(feature, 0);\n            geojsonFeature.properties.v0 = this.texCoordCallback_(feature, 1);\n            geojsonFeature.properties.u1 = this.texCoordCallback_(feature, 2);\n            geojsonFeature.properties.v1 = this.texCoordCallback_(feature, 3);\n            geojsonFeature.properties.size = this.sizeCallback_(feature);\n            geojsonFeature.properties.opacity = this.opacityCallback_(feature);\n            geojsonFeature.properties.rotateWithView = this.rotateWithViewCallback_(feature) ? 1 : 0;\n            pushFeatureToBuffer(this.verticesBuffer_, this.indicesBuffer_, geojsonFeature);\n        }\n        this.helper_.flushBufferData(ARRAY_BUFFER, this.verticesBuffer_);\n        this.helper_.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\n    };\n    return WebGLPointsLayerRenderer;\n}(WebGLLayerRenderer));\nexport default WebGLPointsLayerRenderer;\n//# sourceMappingURL=PointsLayer.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n/**\n * @enum {number}\n */\nvar Instruction = {\n    BEGIN_GEOMETRY: 0,\n    BEGIN_PATH: 1,\n    CIRCLE: 2,\n    CLOSE_PATH: 3,\n    CUSTOM: 4,\n    DRAW_CHARS: 5,\n    DRAW_IMAGE: 6,\n    END_GEOMETRY: 7,\n    FILL: 8,\n    MOVE_TO_LINE_TO: 9,\n    SET_FILL_STYLE: 10,\n    SET_STROKE_STYLE: 11,\n    STROKE: 12\n};\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\nexport default Instruction;\n//# sourceMappingURL=Instruction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Builder\n */\nimport { equals, reverseSubArray } from '../../array.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { buffer, clone, coordinateRelationship } from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray } from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport { defaultFillStyle, defaultStrokeStyle, defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset, defaultLineDash, defaultLineCap } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\nvar CanvasBuilder = /** @class */ (function (_super) {\n    __extends(CanvasBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.tolerance = tolerance;\n        /**\n         * @protected\n         * @const\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent = maxExtent;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.maxLineWidth = 0;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction1_ = null;\n        /**\n         * @private\n         * @type {Array<*>}\n         */\n        _this.beginGeometryInstruction2_ = null;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.bufferedMaxExtent_ = null;\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = [];\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = [];\n        /**\n         * @private\n         * @type {import(\"../../coordinate.js\").Coordinate}\n         */\n        _this.tmpCoordinate_ = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = [];\n        /**\n         * @protected\n         * @type {import(\"../canvas.js\").FillStrokeState}\n         */\n        _this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {Array<number>} dashArray Dash array.\n     * @return {Array<number>} Dash array with pixel ratio applied\n     */\n    CanvasBuilder.prototype.applyPixelRatio = function (dashArray) {\n        var pixelRatio = this.pixelRatio;\n        return pixelRatio == 1 ? dashArray : dashArray.map(function (dash) {\n            return dash * pixelRatio;\n        });\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} closed Last input coordinate equals first.\n     * @param {boolean} skipFirst Skip first coordinate.\n     * @protected\n     * @return {number} My end.\n     */\n    CanvasBuilder.prototype.appendFlatCoordinates = function (flatCoordinates, offset, end, stride, closed, skipFirst) {\n        var myEnd = this.coordinates.length;\n        var extent = this.getBufferedMaxExtent();\n        if (skipFirst) {\n            offset += stride;\n        }\n        var lastXCoord = flatCoordinates[offset];\n        var lastYCoord = flatCoordinates[offset + 1];\n        var nextCoord = this.tmpCoordinate_;\n        var skipped = true;\n        var i, lastRel, nextRel;\n        for (i = offset + stride; i < end; i += stride) {\n            nextCoord[0] = flatCoordinates[i];\n            nextCoord[1] = flatCoordinates[i + 1];\n            nextRel = coordinateRelationship(extent, nextCoord);\n            if (nextRel !== lastRel) {\n                if (skipped) {\n                    this.coordinates[myEnd++] = lastXCoord;\n                    this.coordinates[myEnd++] = lastYCoord;\n                }\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else if (nextRel === Relationship.INTERSECTING) {\n                this.coordinates[myEnd++] = nextCoord[0];\n                this.coordinates[myEnd++] = nextCoord[1];\n                skipped = false;\n            }\n            else {\n                skipped = true;\n            }\n            lastXCoord = nextCoord[0];\n            lastYCoord = nextCoord[1];\n            lastRel = nextRel;\n        }\n        // Last coordinate equals first or only one point to append:\n        if ((closed && skipped) || i === offset + stride) {\n            this.coordinates[myEnd++] = lastXCoord;\n            this.coordinates[myEnd++] = lastYCoord;\n        }\n        return myEnd;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @param {Array<number>} builderEnds Builder ends.\n     * @return {number} Offset.\n     */\n    CanvasBuilder.prototype.drawCustomCoordinates_ = function (flatCoordinates, offset, ends, stride, builderEnds) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n            builderEnds.push(builderEnd);\n            offset = end;\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasBuilder.prototype.drawCustom = function (geometry, feature, renderer) {\n        this.beginGeometry(feature);\n        var type = geometry.getType();\n        var stride = geometry.getStride();\n        var builderBegin = this.coordinates.length;\n        var flatCoordinates, builderEnd, builderEnds, builderEndss;\n        var offset;\n        if (type == GeometryType.MULTI_POLYGON) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n            flatCoordinates = geometry.getOrientedFlatCoordinates();\n            builderEndss = [];\n            var endss = geometry.getEndss();\n            offset = 0;\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var myEnds = [];\n                offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n                builderEndss.push(myEnds);\n            }\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n        }\n        else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n            builderEnds = [];\n            flatCoordinates = (type == GeometryType.POLYGON) ?\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n                geometry.getFlatCoordinates();\n            offset = this.drawCustomCoordinates_(flatCoordinates, 0, \n            /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(), stride, builderEnds);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n        }\n        else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            builderEnd = this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n        }\n        else if (type == GeometryType.POINT) {\n            flatCoordinates = geometry.getFlatCoordinates();\n            this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n            builderEnd = this.coordinates.length;\n            this.instructions.push([CanvasInstruction.CUSTOM,\n                builderBegin, builderEnd, geometry, renderer]);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @protected\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.beginGeometry = function (feature) {\n        this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.instructions.push(this.beginGeometryInstruction1_);\n        this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n        this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n    };\n    /**\n     * @return {SerializableInstructions} the serializable instructions.\n     */\n    CanvasBuilder.prototype.finish = function () {\n        return {\n            instructions: this.instructions,\n            hitDetectionInstructions: this.hitDetectionInstructions,\n            coordinates: this.coordinates\n        };\n    };\n    /**\n     * Reverse the hit detection instructions.\n     */\n    CanvasBuilder.prototype.reverseHitDetectionInstructions = function () {\n        var hitDetectionInstructions = this.hitDetectionInstructions;\n        // step 1 - reverse array\n        hitDetectionInstructions.reverse();\n        // step 2 - reverse instructions within geometry blocks\n        var i;\n        var n = hitDetectionInstructions.length;\n        var instruction;\n        var type;\n        var begin = -1;\n        for (i = 0; i < n; ++i) {\n            instruction = hitDetectionInstructions[i];\n            type = /** @type {CanvasInstruction} */ (instruction[0]);\n            if (type == CanvasInstruction.END_GEOMETRY) {\n                begin = i;\n            }\n            else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n                instruction[2] = i;\n                reverseSubArray(this.hitDetectionInstructions, begin, i);\n                begin = -1;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasBuilder.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        var state = this.state;\n        if (fillStyle) {\n            var fillStyleColor = fillStyle.getColor();\n            state.fillStyle = asColorLike(fillStyleColor ?\n                fillStyleColor : defaultFillStyle);\n        }\n        else {\n            state.fillStyle = undefined;\n        }\n        if (strokeStyle) {\n            var strokeStyleColor = strokeStyle.getColor();\n            state.strokeStyle = asColorLike(strokeStyleColor ?\n                strokeStyleColor : defaultStrokeStyle);\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            state.lineCap = strokeStyleLineCap !== undefined ?\n                strokeStyleLineCap : defaultLineCap;\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            state.lineDash = strokeStyleLineDash ?\n                strokeStyleLineDash.slice() : defaultLineDash;\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            state.lineDashOffset = strokeStyleLineDashOffset ?\n                strokeStyleLineDashOffset : defaultLineDashOffset;\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            state.lineJoin = strokeStyleLineJoin !== undefined ?\n                strokeStyleLineJoin : defaultLineJoin;\n            var strokeStyleWidth = strokeStyle.getWidth();\n            state.lineWidth = strokeStyleWidth !== undefined ?\n                strokeStyleWidth : defaultLineWidth;\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            state.miterLimit = strokeStyleMiterLimit !== undefined ?\n                strokeStyleMiterLimit : defaultMiterLimit;\n            if (state.lineWidth > this.maxLineWidth) {\n                this.maxLineWidth = state.lineWidth;\n                // invalidate the buffered max extent cache\n                this.bufferedMaxExtent_ = null;\n            }\n        }\n        else {\n            state.strokeStyle = undefined;\n            state.lineCap = undefined;\n            state.lineDash = null;\n            state.lineDashOffset = undefined;\n            state.lineJoin = undefined;\n            state.lineWidth = undefined;\n            state.miterLimit = undefined;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Fill instruction.\n     */\n    CanvasBuilder.prototype.createFill = function (state) {\n        var fillStyle = state.fillStyle;\n        /** @type {Array<*>} */\n        var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n        if (typeof fillStyle !== 'string') {\n            // Fill is a pattern or gradient - align it!\n            fillInstruction.push(true);\n        }\n        return fillInstruction;\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     */\n    CanvasBuilder.prototype.applyStroke = function (state) {\n        this.instructions.push(this.createStroke(state));\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @return {Array<*>} Stroke instruction.\n     */\n    CanvasBuilder.prototype.createStroke = function (state) {\n        return [\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n            state.lineJoin, state.miterLimit,\n            this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n        ];\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n     */\n    CanvasBuilder.prototype.updateFillStyle = function (state, createFill) {\n        var fillStyle = state.fillStyle;\n        if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n            if (fillStyle !== undefined) {\n                this.instructions.push(createFill.call(this, state));\n            }\n            state.currentFillStyle = fillStyle;\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillStrokeState} state State.\n     * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n     */\n    CanvasBuilder.prototype.updateStrokeStyle = function (state, applyStroke) {\n        var strokeStyle = state.strokeStyle;\n        var lineCap = state.lineCap;\n        var lineDash = state.lineDash;\n        var lineDashOffset = state.lineDashOffset;\n        var lineJoin = state.lineJoin;\n        var lineWidth = state.lineWidth;\n        var miterLimit = state.miterLimit;\n        if (state.currentStrokeStyle != strokeStyle ||\n            state.currentLineCap != lineCap ||\n            (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n            state.currentLineDashOffset != lineDashOffset ||\n            state.currentLineJoin != lineJoin ||\n            state.currentLineWidth != lineWidth ||\n            state.currentMiterLimit != miterLimit) {\n            if (strokeStyle !== undefined) {\n                applyStroke.call(this, state);\n            }\n            state.currentStrokeStyle = strokeStyle;\n            state.currentLineCap = lineCap;\n            state.currentLineDash = lineDash;\n            state.currentLineDashOffset = lineDashOffset;\n            state.currentLineJoin = lineJoin;\n            state.currentLineWidth = lineWidth;\n            state.currentMiterLimit = miterLimit;\n        }\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     */\n    CanvasBuilder.prototype.endGeometry = function (feature) {\n        this.beginGeometryInstruction1_[2] = this.instructions.length;\n        this.beginGeometryInstruction1_ = null;\n        this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n        this.beginGeometryInstruction2_ = null;\n        var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n        this.instructions.push(endGeometryInstruction);\n        this.hitDetectionInstructions.push(endGeometryInstruction);\n    };\n    /**\n     * Get the buffered rendering extent.  Rendering will be clipped to the extent\n     * provided to the constructor.  To account for symbolizers that may intersect\n     * this extent, we calculate a buffered extent (e.g. based on stroke width).\n     * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n     * @protected\n     */\n    CanvasBuilder.prototype.getBufferedMaxExtent = function () {\n        if (!this.bufferedMaxExtent_) {\n            this.bufferedMaxExtent_ = clone(this.maxExtent);\n            if (this.maxLineWidth > 0) {\n                var width = this.resolution * (this.maxLineWidth + 1) / 2;\n                buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n            }\n        }\n        return this.bufferedMaxExtent_;\n    };\n    return CanvasBuilder;\n}(VectorContext));\nexport default CanvasBuilder;\n//# sourceMappingURL=Builder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasImageBuilder = /** @class */ (function (_super) {\n    __extends(CanvasImageBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.hitDetectionImage_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.anchorY_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.height_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.opacity_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originX_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.originY_ = undefined;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.rotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.scale_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.width_ = undefined;\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} My end.\n     */\n    CanvasImageBuilder.prototype.drawCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawPoint = function (pointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = pointGeometry.getFlatCoordinates();\n        var stride = pointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.drawMultiPoint = function (multiPointGeometry, feature) {\n        if (!this.image_) {\n            return;\n        }\n        this.beginGeometry(feature);\n        var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n        var stride = multiPointGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.instructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_ * this.pixelRatio, this.width_\n        ]);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n            // Remaining arguments to DRAW_IMAGE are in alphabetical order\n            this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n            this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n            this.scale_, this.width_\n        ]);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        // FIXME this doesn't really protect us against further calls to draw*Geometry\n        this.anchorX_ = undefined;\n        this.anchorY_ = undefined;\n        this.hitDetectionImage_ = null;\n        this.image_ = null;\n        this.height_ = undefined;\n        this.scale_ = undefined;\n        this.opacity_ = undefined;\n        this.originX_ = undefined;\n        this.originY_ = undefined;\n        this.rotateWithView_ = undefined;\n        this.rotation_ = undefined;\n        this.width_ = undefined;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasImageBuilder.prototype.setImageStyle = function (imageStyle, declutterGroup) {\n        var anchor = imageStyle.getAnchor();\n        var size = imageStyle.getSize();\n        var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n        var image = imageStyle.getImage(1);\n        var origin = imageStyle.getOrigin();\n        this.anchorX_ = anchor[0];\n        this.anchorY_ = anchor[1];\n        this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n        this.hitDetectionImage_ = hitDetectionImage;\n        this.image_ = image;\n        this.height_ = size[1];\n        this.opacity_ = imageStyle.getOpacity();\n        this.originX_ = origin[0];\n        this.originY_ = origin[1];\n        this.rotateWithView_ = imageStyle.getRotateWithView();\n        this.rotation_ = imageStyle.getRotation();\n        this.scale_ = imageStyle.getScale();\n        this.width_ = size[0];\n    };\n    return CanvasImageBuilder;\n}(CanvasBuilder));\nexport default CanvasImageBuilder;\n//# sourceMappingURL=ImageBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, { strokeInstruction, beginPathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasLineStringBuilder = /** @class */ (function (_super) {\n    __extends(CanvasLineStringBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} end.\n     */\n    CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function (flatCoordinates, offset, end, stride) {\n        var myBegin = this.coordinates.length;\n        var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n        var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n        this.instructions.push(moveToLineToInstruction);\n        this.hitDetectionInstructions.push(moveToLineToInstruction);\n        return end;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawLineString = function (lineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n        var stride = lineStringGeometry.getStride();\n        this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) {\n        var state = this.state;\n        var strokeStyle = state.strokeStyle;\n        var lineWidth = state.lineWidth;\n        if (strokeStyle === undefined || lineWidth === undefined) {\n            return;\n        }\n        this.updateStrokeStyle(state, this.applyStroke);\n        this.beginGeometry(feature);\n        this.hitDetectionInstructions.push([\n            CanvasInstruction.SET_STROKE_STYLE,\n            state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n            state.miterLimit, state.lineDash, state.lineDashOffset\n        ], beginPathInstruction);\n        var ends = multiLineStringGeometry.getEnds();\n        var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n        var stride = multiLineStringGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n        }\n        this.hitDetectionInstructions.push(strokeInstruction);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasLineStringBuilder.prototype.finish = function () {\n        var state = this.state;\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n        }\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @inheritDoc.\n     */\n    CanvasLineStringBuilder.prototype.applyStroke = function (state) {\n        if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n            this.instructions.push(strokeInstruction);\n            state.lastStroke = this.coordinates.length;\n        }\n        state.lastStroke = 0;\n        _super.prototype.applyStroke.call(this, state);\n        this.instructions.push(beginPathInstruction);\n    };\n    return CanvasLineStringBuilder;\n}(CanvasBuilder));\nexport default CanvasLineStringBuilder;\n//# sourceMappingURL=LineStringBuilder.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport { snap } from '../../geom/flat/simplify.js';\nimport { defaultFillStyle } from '../canvas.js';\nimport CanvasInstruction, { fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction } from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nvar CanvasPolygonBuilder = /** @class */ (function (_super) {\n    __extends(CanvasPolygonBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        return _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function (flatCoordinates, offset, ends, stride) {\n        var state = this.state;\n        var fill = state.fillStyle !== undefined;\n        var stroke = state.strokeStyle != undefined;\n        var numEnds = ends.length;\n        this.instructions.push(beginPathInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction);\n        for (var i = 0; i < numEnds; ++i) {\n            var end = ends[i];\n            var myBegin = this.coordinates.length;\n            var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n            var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n            this.instructions.push(moveToLineToInstruction);\n            this.hitDetectionInstructions.push(moveToLineToInstruction);\n            if (stroke) {\n                // Performance optimization: only call closePath() when we have a stroke.\n                // Otherwise the ring is closed already (see appendFlatCoordinates above).\n                this.instructions.push(closePathInstruction);\n                this.hitDetectionInstructions.push(closePathInstruction);\n            }\n            offset = end;\n        }\n        if (fill) {\n            this.instructions.push(fillInstruction);\n            this.hitDetectionInstructions.push(fillInstruction);\n        }\n        if (stroke) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        return offset;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawCircle = function (circleGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var flatCoordinates = circleGeometry.getFlatCoordinates();\n        var stride = circleGeometry.getStride();\n        var myBegin = this.coordinates.length;\n        this.appendFlatCoordinates(flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n        var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n        this.instructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n        this.hitDetectionInstructions.push(fillInstruction);\n        if (state.fillStyle !== undefined) {\n            this.instructions.push(fillInstruction);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.instructions.push(strokeInstruction);\n            this.hitDetectionInstructions.push(strokeInstruction);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawPolygon = function (polygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var ends = polygonGeometry.getEnds();\n        var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n        var stride = polygonGeometry.getStride();\n        this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        var strokeStyle = state.strokeStyle;\n        if (fillStyle === undefined && strokeStyle === undefined) {\n            return;\n        }\n        this.setFillStrokeStyles_();\n        this.beginGeometry(feature);\n        if (state.fillStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_FILL_STYLE,\n                defaultFillStyle\n            ]);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.hitDetectionInstructions.push([\n                CanvasInstruction.SET_STROKE_STYLE,\n                state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n                state.miterLimit, state.lineDash, state.lineDashOffset\n            ]);\n        }\n        var endss = multiPolygonGeometry.getEndss();\n        var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n        var stride = multiPolygonGeometry.getStride();\n        var offset = 0;\n        for (var i = 0, ii = endss.length; i < ii; ++i) {\n            offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n        }\n        this.endGeometry(feature);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasPolygonBuilder.prototype.finish = function () {\n        this.reverseHitDetectionInstructions();\n        this.state = null;\n        // We want to preserve topology when drawing polygons.  Polygons are\n        // simplified using quantization and point elimination. However, we might\n        // have received a mix of quantized and non-quantized geometries, so ensure\n        // that all are quantized by quantizing all coordinates in the batch.\n        var tolerance = this.tolerance;\n        if (tolerance !== 0) {\n            var coordinates = this.coordinates;\n            for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n                coordinates[i] = snap(coordinates[i], tolerance);\n            }\n        }\n        return _super.prototype.finish.call(this);\n    };\n    /**\n     * @private\n     */\n    CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function () {\n        var state = this.state;\n        var fillStyle = state.fillStyle;\n        if (fillStyle !== undefined) {\n            this.updateFillStyle(state, this.createFill);\n        }\n        if (state.strokeStyle !== undefined) {\n            this.updateStrokeStyle(state, this.applyStroke);\n        }\n    };\n    return CanvasPolygonBuilder;\n}(CanvasBuilder));\nexport default CanvasPolygonBuilder;\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n    var chunkStart = offset;\n    var chunkEnd = offset;\n    var chunkM = 0;\n    var m = 0;\n    var start = offset;\n    var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n    for (i = offset; i < end; i += stride) {\n        var x2 = flatCoordinates[i];\n        var y2 = flatCoordinates[i + 1];\n        if (x1 !== undefined) {\n            x23 = x2 - x1;\n            y23 = y2 - y1;\n            m23 = Math.sqrt(x23 * x23 + y23 * y23);\n            if (x12 !== undefined) {\n                m += m12;\n                acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n                if (acos > maxAngle) {\n                    if (m > chunkM) {\n                        chunkM = m;\n                        chunkStart = start;\n                        chunkEnd = i;\n                    }\n                    m = 0;\n                    start = i - stride;\n                }\n            }\n            m12 = m23;\n            x12 = x23;\n            y12 = y23;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    m += m23;\n    return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n//# sourceMappingURL=straightchunk.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/TextBuilder\n */\nimport { getUid } from '../../util.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { intersects } from '../../extent.js';\nimport { matchingChunk } from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport { labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\nvar CanvasTextBuilder = /** @class */ (function (_super) {\n    __extends(CanvasTextBuilder, _super);\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     */\n    function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n        var _this = _super.call(this, tolerance, maxExtent, resolution, pixelRatio) || this;\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         */\n        _this.declutterGroup_;\n        /**\n         * @private\n         * @type {Array<HTMLCanvasElement>}\n         */\n        _this.labels_ = null;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        _this.textRotateWithView_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = {};\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = {};\n        /**\n         * @private\n         * @type {import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.textKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.fillKey_ = '';\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.strokeKey_ = '';\n        labelCache.prune();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.finish = function () {\n        var instructions = _super.prototype.finish.call(this);\n        instructions.textStates = this.textStates;\n        instructions.fillStates = this.fillStates;\n        instructions.strokeStates = this.strokeStates;\n        return instructions;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.drawText = function (geometry, feature) {\n        var fillState = this.textFillState_;\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n            return;\n        }\n        var begin = this.coordinates.length;\n        var geometryType = geometry.getType();\n        var flatCoordinates = null;\n        var end = 2;\n        var stride = 2;\n        var i, ii;\n        if (textState.placement === TextPlacement.LINE) {\n            if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n                return;\n            }\n            var ends = void 0;\n            flatCoordinates = geometry.getFlatCoordinates();\n            stride = geometry.getStride();\n            if (geometryType == GeometryType.LINE_STRING) {\n                ends = [flatCoordinates.length];\n            }\n            else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n                ends = geometry.getEnds();\n            }\n            else if (geometryType == GeometryType.POLYGON) {\n                ends = geometry.getEnds().slice(0, 1);\n            }\n            else if (geometryType == GeometryType.MULTI_POLYGON) {\n                var endss = geometry.getEndss();\n                ends = [];\n                for (i = 0, ii = endss.length; i < ii; ++i) {\n                    ends.push(endss[i][0]);\n                }\n            }\n            this.beginGeometry(feature);\n            var textAlign = textState.textAlign;\n            var flatOffset = 0;\n            var flatEnd = void 0;\n            for (var o = 0, oo = ends.length; o < oo; ++o) {\n                if (textAlign == undefined) {\n                    var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n                    flatOffset = range[0];\n                    flatEnd = range[1];\n                }\n                else {\n                    flatEnd = ends[o];\n                }\n                for (i = flatOffset; i < flatEnd; i += stride) {\n                    this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n                }\n                end = this.coordinates.length;\n                flatOffset = ends[o];\n                this.drawChars_(begin, end, this.declutterGroup_);\n                begin = end;\n            }\n            this.endGeometry(feature);\n        }\n        else {\n            var geometryWidths = null;\n            if (!textState.overflow) {\n                geometryWidths = [];\n            }\n            switch (geometryType) {\n                case GeometryType.POINT:\n                case GeometryType.MULTI_POINT:\n                    flatCoordinates = geometry.getFlatCoordinates();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n                    break;\n                case GeometryType.CIRCLE:\n                    flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n                    end = flatCoordinates.length;\n                    break;\n                case GeometryType.POLYGON:\n                    flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n                    if (!textState.overflow) {\n                        geometryWidths.push(flatCoordinates[2] / this.resolution);\n                    }\n                    stride = 3;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n                    flatCoordinates = [];\n                    for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n                        if (!textState.overflow) {\n                            geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n                        }\n                        flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n                    }\n                    end = flatCoordinates.length;\n                    if (end == 0) {\n                        return;\n                    }\n                    break;\n                default:\n            }\n            end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n            this.saveTextStates_();\n            if (textState.backgroundFill || textState.backgroundStroke) {\n                this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n                if (textState.backgroundFill) {\n                    this.updateFillStyle(this.state, this.createFill);\n                    this.hitDetectionInstructions.push(this.createFill(this.state));\n                }\n                if (textState.backgroundStroke) {\n                    this.updateStrokeStyle(this.state, this.applyStroke);\n                    this.hitDetectionInstructions.push(this.createStroke(this.state));\n                }\n            }\n            this.beginGeometry(feature);\n            // The image is unknown at this stage so we pass null; it will be computed at render time.\n            // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n            // render time.\n            var pixelRatio_1 = this.pixelRatio;\n            this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1, NaN,\n                textState.padding == defaultPadding ?\n                    defaultPadding : textState.padding.map(function (p) {\n                    return p * pixelRatio_1;\n                }),\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n                null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n                this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n                textState.padding,\n                !!textState.backgroundFill, !!textState.backgroundStroke,\n                this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n                this.textOffsetX_, this.textOffsetY_, geometryWidths\n            ]);\n            this.endGeometry(feature);\n        }\n    };\n    /**\n     * @private\n     */\n    CanvasTextBuilder.prototype.saveTextStates_ = function () {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var fillState = this.textFillState_;\n        var strokeKey = this.strokeKey_;\n        if (strokeState) {\n            if (!(strokeKey in this.strokeStates)) {\n                this.strokeStates[strokeKey] = {\n                    strokeStyle: strokeState.strokeStyle,\n                    lineCap: strokeState.lineCap,\n                    lineDashOffset: strokeState.lineDashOffset,\n                    lineWidth: strokeState.lineWidth,\n                    lineJoin: strokeState.lineJoin,\n                    miterLimit: strokeState.miterLimit,\n                    lineDash: strokeState.lineDash\n                };\n            }\n        }\n        var textKey = this.textKey_;\n        if (!(textKey in this.textStates)) {\n            this.textStates[textKey] = {\n                font: textState.font,\n                textAlign: textState.textAlign || defaultTextAlign,\n                textBaseline: textState.textBaseline || defaultTextBaseline,\n                scale: textState.scale\n            };\n        }\n        var fillKey = this.fillKey_;\n        if (fillState) {\n            if (!(fillKey in this.fillStates)) {\n                this.fillStates[fillKey] = {\n                    fillStyle: fillState.fillStyle\n                };\n            }\n        }\n    };\n    /**\n     * @private\n     * @param {number} begin Begin.\n     * @param {number} end End.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     */\n    CanvasTextBuilder.prototype.drawChars_ = function (begin, end, declutterGroup) {\n        var strokeState = this.textStrokeState_;\n        var textState = this.textState_;\n        var strokeKey = this.strokeKey_;\n        var textKey = this.textKey_;\n        var fillKey = this.fillKey_;\n        this.saveTextStates_();\n        var pixelRatio = this.pixelRatio;\n        var baseline = TEXT_ALIGN[textState.textBaseline];\n        var offsetY = this.textOffsetY_ * pixelRatio;\n        var text = this.text_;\n        var textScale = textState.scale;\n        var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n        this.instructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            pixelRatio,\n            offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n        ]);\n        this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n            begin, end, baseline, declutterGroup,\n            textState.overflow, fillKey, textState.maxAngle,\n            1,\n            offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n        ]);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasTextBuilder.prototype.setTextStyle = function (textStyle, declutterGroup) {\n        var textState, fillState, strokeState;\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                fillState = this.textFillState_ = null;\n            }\n            else {\n                fillState = this.textFillState_;\n                if (!fillState) {\n                    fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n                }\n                fillState.fillStyle = asColorLike(textFillStyle.getColor() || defaultFillStyle);\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                strokeState = this.textStrokeState_ = null;\n            }\n            else {\n                strokeState = this.textStrokeState_;\n                if (!strokeState) {\n                    strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n                }\n                var lineDash = textStrokeStyle.getLineDash();\n                var lineDashOffset = textStrokeStyle.getLineDashOffset();\n                var lineWidth = textStrokeStyle.getWidth();\n                var miterLimit = textStrokeStyle.getMiterLimit();\n                strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n                strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n                strokeState.lineDashOffset =\n                    lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n                strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n                strokeState.lineWidth =\n                    lineWidth === undefined ? defaultLineWidth : lineWidth;\n                strokeState.miterLimit =\n                    miterLimit === undefined ? defaultMiterLimit : miterLimit;\n                strokeState.strokeStyle = asColorLike(textStrokeStyle.getColor() || defaultStrokeStyle);\n            }\n            textState = this.textState_;\n            var font = textStyle.getFont() || defaultFont;\n            checkFont(font);\n            var textScale = textStyle.getScale();\n            textState.overflow = textStyle.getOverflow();\n            textState.font = font;\n            textState.maxAngle = textStyle.getMaxAngle();\n            textState.placement = textStyle.getPlacement();\n            textState.textAlign = textStyle.getTextAlign();\n            textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n            textState.backgroundFill = textStyle.getBackgroundFill();\n            textState.backgroundStroke = textStyle.getBackgroundStroke();\n            textState.padding = textStyle.getPadding() || defaultPadding;\n            textState.scale = textScale === undefined ? 1 : textScale;\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            this.text_ = textStyle.getText() || '';\n            this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n            this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n            this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n            this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n            this.strokeKey_ = strokeState ?\n                (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n                    strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n                    strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n                '';\n            this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n            this.fillKey_ = fillState ?\n                (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n                '';\n        }\n    };\n    return CanvasTextBuilder;\n}(CanvasBuilder));\nexport default CanvasTextBuilder;\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\nimport { createEmpty } from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n    'Circle': PolygonBuilder,\n    'Default': Builder,\n    'Image': ImageBuilder,\n    'LineString': LineStringBuilder,\n    'Polygon': PolygonBuilder,\n    'Text': TextBuilder\n};\nvar BuilderGroup = /** @class */ (function () {\n    /**\n     * @param {number} tolerance Tolerance.\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} declutter Decluttering enabled.\n     */\n    function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.declutter_ = declutter;\n        /**\n         * @type {import(\"../canvas.js\").DeclutterGroup}\n         * @private\n         */\n        this.declutterGroup_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.tolerance_ = tolerance;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n         */\n        this.buildersByZIndex_ = {};\n    }\n    /**\n     * @param {boolean} group Group with previous builder.\n     * @return {Array<*>} The resulting instruction group.\n     */\n    BuilderGroup.prototype.addDeclutter = function (group) {\n        var declutter = null;\n        if (this.declutter_) {\n            if (group) {\n                declutter = this.declutterGroup_;\n                /** @type {number} */ (declutter[4])++;\n            }\n            else {\n                declutter = this.declutterGroup_ = createEmpty();\n                declutter.push(1);\n            }\n        }\n        return declutter;\n    };\n    /**\n     * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n     */\n    BuilderGroup.prototype.finish = function () {\n        var builderInstructions = {};\n        for (var zKey in this.buildersByZIndex_) {\n            builderInstructions[zKey] = builderInstructions[zKey] || {};\n            var builders = this.buildersByZIndex_[zKey];\n            for (var builderKey in builders) {\n                var builderInstruction = builders[builderKey].finish();\n                builderInstructions[zKey][builderKey] = builderInstruction;\n            }\n        }\n        return builderInstructions;\n    };\n    /**\n     * @param {number|undefined} zIndex Z index.\n     * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n     * @return {import(\"../VectorContext.js\").default} Replay.\n     */\n    BuilderGroup.prototype.getBuilder = function (zIndex, builderType) {\n        var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n        var replays = this.buildersByZIndex_[zIndexKey];\n        if (replays === undefined) {\n            replays = {};\n            this.buildersByZIndex_[zIndexKey] = replays;\n        }\n        var replay = replays[builderType];\n        if (replay === undefined) {\n            var Constructor = BATCH_CONSTRUCTORS[builderType];\n            replay = new Constructor(this.tolerance_, this.maxExtent_, this.resolution_, this.pixelRatio_);\n            replays[builderType] = replay;\n        }\n        return replay;\n    };\n    return BuilderGroup;\n}());\nexport default BuilderGroup;\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text'\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport { lerp } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n    var result = [];\n    // Keep text upright\n    var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n    var numChars = text.length;\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    offset += stride;\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var segmentM = 0;\n    var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    var angleChanged = false;\n    var index, previousAngle;\n    for (var i = 0; i < numChars; ++i) {\n        index = reverse ? numChars - i - 1 : i;\n        var char = text[index];\n        var charLength = scale * measureAndCacheTextWidth(font, char, cache);\n        var charM = startM + charLength / 2;\n        while (offset < end - stride && segmentM + segmentLength < charM) {\n            x1 = x2;\n            y1 = y2;\n            offset += stride;\n            x2 = flatCoordinates[offset];\n            y2 = flatCoordinates[offset + 1];\n            segmentM += segmentLength;\n            segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        }\n        var segmentPos = charM - segmentM;\n        var angle = Math.atan2(y2 - y1, x2 - x1);\n        if (reverse) {\n            angle += angle > 0 ? -Math.PI : Math.PI;\n        }\n        if (previousAngle !== undefined) {\n            var delta = angle - previousAngle;\n            angleChanged = angleChanged || delta !== 0;\n            delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n            if (Math.abs(delta) > maxAngle) {\n                return null;\n            }\n        }\n        previousAngle = angle;\n        var interpolate = segmentPos / segmentLength;\n        var x = lerp(x1, x2, interpolate);\n        var y = lerp(y1, y2, interpolate);\n        result[index] = [x, y, charLength / 2, angle, char];\n        startM += charLength;\n    }\n    return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n//# sourceMappingURL=textpath.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/render/canvas/Executor\n */\nimport { getUid } from '../../util.js';\nimport { equals } from '../../array.js';\nimport { createEmpty, createOrUpdate, createOrUpdateEmpty, extend, intersects } from '../../extent.js';\nimport { lineStringLength } from '../../geom/flat/length.js';\nimport { drawTextOnPath } from '../../geom/flat/textpath.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport { drawImage, defaultPadding, defaultTextBaseline } from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport { TEXT_ALIGN } from './TextBuilder.js';\nimport { create as createTransform, compose as composeTransform, apply as applyTransform, setFromArray as transformSetFromArray } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths } from '../canvas.js';\nimport Disposable from '../../Disposable.js';\nimport RBush from 'rbush';\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\nvar Executor = /** @class */ (function (_super) {\n    __extends(Executor, _super);\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The replay can have overlapping geometries.\n     * @param {SerializableInstructions} instructions The serializable instructions\n     */\n    function Executor(resolution, pixelRatio, overlaps, instructions) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.overlaps = overlaps;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.pixelRatio = pixelRatio;\n        /**\n         * @protected\n         * @const\n         * @type {number}\n         */\n        _this.resolution = resolution;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.alignFill_;\n        /**\n         * @type {Array<*>}\n         */\n        _this.declutterItems = [];\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.instructions = instructions.instructions;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.coordinates = instructions.coordinates;\n        /**\n         * @private\n         * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n         */\n        _this.coordinateCache_ = {};\n        /**\n         * @private\n         * @type {!import(\"../../transform.js\").Transform}\n         */\n        _this.renderedTransform_ = createTransform();\n        /**\n         * @protected\n         * @type {Array<*>}\n         */\n        _this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = 0;\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").FillState>}\n         */\n        _this.fillStates = instructions.fillStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n         */\n        _this.strokeStates = instructions.strokeStates || {};\n        /**\n         * @type {!Object<string, import(\"../canvas.js\").TextState>}\n         */\n        _this.textStates = instructions.textStates || {};\n        /**\n         * @private\n         * @type {Object<string, Object<string, number>>}\n         */\n        _this.widths_ = {};\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Executor.prototype.disposeInternal = function () {\n        labelCache.release(this);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {string} text Text.\n     * @param {string} textKey Text style key.\n     * @param {string} fillKey Fill style key.\n     * @param {string} strokeKey Stroke style key.\n     * @return {HTMLCanvasElement} Image.\n     */\n    Executor.prototype.getTextImage = function (text, textKey, fillKey, strokeKey) {\n        var label;\n        var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n        if (!labelCache.containsKey(key)) {\n            var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n            var fillState = fillKey ? this.fillStates[fillKey] : null;\n            var textState = this.textStates[textKey];\n            var pixelRatio = this.pixelRatio;\n            var scale = textState.scale * pixelRatio;\n            var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n            var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n            var lines = text.split('\\n');\n            var numLines = lines.length;\n            var widths = [];\n            var width = measureTextWidths(textState.font, lines, widths);\n            var lineHeight = measureTextHeight(textState.font);\n            var height = lineHeight * numLines;\n            var renderWidth = width + strokeWidth;\n            var context = createCanvasContext2D(\n            // make canvas 2 pixels wider to account for italic text width measurement errors\n            Math.ceil((renderWidth + 2) * scale), Math.ceil((height + strokeWidth) * scale));\n            label = context.canvas;\n            labelCache.set(key, label);\n            if (scale != 1) {\n                context.scale(scale, scale);\n            }\n            context.font = textState.font;\n            if (strokeKey) {\n                context.strokeStyle = strokeState.strokeStyle;\n                context.lineWidth = strokeWidth;\n                context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n                context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n                context.miterLimit = strokeState.miterLimit;\n                if (context.setLineDash && strokeState.lineDash.length) {\n                    context.setLineDash(strokeState.lineDash);\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (fillKey) {\n                context.fillStyle = fillState.fillStyle;\n            }\n            context.textBaseline = 'middle';\n            context.textAlign = 'center';\n            var leftRight = (0.5 - align);\n            var x = align * renderWidth + leftRight * strokeWidth;\n            var i = void 0;\n            if (strokeKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n            if (fillKey) {\n                for (i = 0; i < numLines; ++i) {\n                    context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n                }\n            }\n        }\n        return labelCache.get(key, this);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n     * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayTextBackground_ = function (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n        context.beginPath();\n        context.moveTo.apply(context, p1);\n        context.lineTo.apply(context, p2);\n        context.lineTo.apply(context, p3);\n        context.lineTo.apply(context, p4);\n        context.lineTo.apply(context, p1);\n        if (fillInstruction) {\n            this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n            this.fill_(context);\n        }\n        if (strokeInstruction) {\n            this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n            context.stroke();\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n     * @param {number} anchorX Anchor X.\n     * @param {number} anchorY Anchor Y.\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {number} height Height.\n     * @param {number} opacity Opacity.\n     * @param {number} originX Origin X.\n     * @param {number} originY Origin Y.\n     * @param {number} rotation Rotation.\n     * @param {number} scale Scale.\n     * @param {boolean} snapToPixel Snap to pixel.\n     * @param {number} width Width.\n     * @param {Array<number>} padding Padding.\n     * @param {Array<*>} fillInstruction Fill instruction.\n     * @param {Array<*>} strokeInstruction Stroke instruction.\n     */\n    Executor.prototype.replayImage_ = function (context, x, y, image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n        var fillStroke = fillInstruction || strokeInstruction;\n        anchorX *= scale;\n        anchorY *= scale;\n        x -= anchorX;\n        y -= anchorY;\n        var w = (width + originX > image.width) ? image.width - originX : width;\n        var h = (height + originY > image.height) ? image.height - originY : height;\n        var boxW = padding[3] + w * scale + padding[1];\n        var boxH = padding[0] + h * scale + padding[2];\n        var boxX = x - padding[3];\n        var boxY = y - padding[0];\n        if (fillStroke || rotation !== 0) {\n            p1[0] = p4[0] = boxX;\n            p1[1] = p2[1] = boxY;\n            p2[0] = p3[0] = boxX + boxW;\n            p3[1] = p4[1] = boxY + boxH;\n        }\n        var transform = null;\n        if (rotation !== 0) {\n            var centerX = x + anchorX;\n            var centerY = y + anchorY;\n            transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n            applyTransform(tmpTransform, p1);\n            applyTransform(tmpTransform, p2);\n            applyTransform(tmpTransform, p3);\n            applyTransform(tmpTransform, p4);\n            createOrUpdate(Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1]), tmpExtent);\n        }\n        else {\n            createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n        }\n        var canvas = context.canvas;\n        var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n        var intersects = tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n            tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n        if (snapToPixel) {\n            x = Math.round(x);\n            y = Math.round(y);\n        }\n        if (declutterGroup) {\n            if (!intersects && declutterGroup[4] == 1) {\n                return;\n            }\n            extend(declutterGroup, tmpExtent);\n            var declutterArgs = intersects ?\n                [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n                null;\n            if (declutterArgs && fillStroke) {\n                declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n            }\n            declutterGroup.push(declutterArgs);\n        }\n        else if (intersects) {\n            if (fillStroke) {\n                this.replayTextBackground_(context, p1, p2, p3, p4, \n                /** @type {Array<*>} */ (fillInstruction), \n                /** @type {Array<*>} */ (strokeInstruction));\n            }\n            drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     */\n    Executor.prototype.fill_ = function (context) {\n        if (this.alignFill_) {\n            var origin_1 = applyTransform(this.renderedTransform_, [0, 0]);\n            var repeatSize = 512 * this.pixelRatio;\n            context.save();\n            context.translate(origin_1[0] % repeatSize, origin_1[1] % repeatSize);\n            context.rotate(this.viewRotation_);\n        }\n        context.fill();\n        if (this.alignFill_) {\n            context.restore();\n        }\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {Array<*>} instruction Instruction.\n     */\n    Executor.prototype.setStrokeStyle_ = function (context, instruction) {\n        context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n        context.lineWidth = /** @type {number} */ (instruction[2]);\n        context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n        context.miterLimit = /** @type {number} */ (instruction[5]);\n        if (context.setLineDash) {\n            context.lineDashOffset = /** @type {number} */ (instruction[7]);\n            context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {?} declutterTree Declutter tree.\n     * @return {?} Declutter tree.\n     */\n    Executor.prototype.renderDeclutter = function (declutterGroup, feature, declutterTree) {\n        if (declutterGroup && declutterGroup.length > 5) {\n            var groupCount = declutterGroup[4];\n            if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n                /** @type {import(\"../../structs/RBush.js\").Entry} */\n                var box = {\n                    minX: /** @type {number} */ (declutterGroup[0]),\n                    minY: /** @type {number} */ (declutterGroup[1]),\n                    maxX: /** @type {number} */ (declutterGroup[2]),\n                    maxY: /** @type {number} */ (declutterGroup[3]),\n                    value: feature\n                };\n                if (!declutterTree) {\n                    declutterTree = new RBush(9);\n                }\n                if (!declutterTree.collides(box)) {\n                    declutterTree.insert(box);\n                    for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n                        var declutterData = /** @type {Array} */ (declutterGroup[j]);\n                        if (declutterData) {\n                            if (declutterData.length > 11) {\n                                this.replayTextBackground_(declutterData[0], declutterData[13], declutterData[14], declutterData[15], declutterData[16], declutterData[11], declutterData[12]);\n                            }\n                            drawImage.apply(undefined, declutterData);\n                        }\n                    }\n                }\n                declutterGroup.length = 5;\n                createOrUpdateEmpty(declutterGroup);\n            }\n        }\n        return declutterTree;\n    };\n    /**\n     * @private\n     * @param {string} text The text to draw.\n     * @param {string} textKey The key of the text state.\n     * @param {string} strokeKey The key for the stroke state.\n     * @param {string} fillKey The key for the fill state.\n     * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n     */\n    Executor.prototype.drawTextImageWithPointPlacement_ = function (text, textKey, strokeKey, fillKey) {\n        var textState = this.textStates[textKey];\n        var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n        var strokeState = this.strokeStates[strokeKey];\n        var pixelRatio = this.pixelRatio;\n        var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n        var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n        var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n        // Remove the 2 pixels we added in getTextImage() for the anchor\n        var width = label.width / pixelRatio - 2 * textState.scale;\n        var anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n        var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n        return {\n            label: label,\n            anchorX: anchorX,\n            anchorY: anchorY\n        };\n    };\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {Array<*>} instructions Instructions array.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.execute_ = function (context, transform, skippedFeaturesHash, instructions, snapToPixel, featureCallback, opt_hitExtent) {\n        this.declutterItems.length = 0;\n        /** @type {Array<number>} */\n        var pixelCoordinates;\n        if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n            pixelCoordinates = this.pixelCoordinates_;\n        }\n        else {\n            if (!this.pixelCoordinates_) {\n                this.pixelCoordinates_ = [];\n            }\n            pixelCoordinates = transform2D(this.coordinates, 0, this.coordinates.length, 2, transform, this.pixelCoordinates_);\n            transformSetFromArray(this.renderedTransform_, transform);\n        }\n        var skipFeatures = !isEmpty(skippedFeaturesHash);\n        var i = 0; // instruction index\n        var ii = instructions.length; // end of instructions\n        var d = 0; // data index\n        var dd; // end of per-instruction data\n        var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n        var strokeKey, fillKey;\n        var pendingFill = 0;\n        var pendingStroke = 0;\n        var lastFillInstruction = null;\n        var lastStrokeInstruction = null;\n        var coordinateCache = this.coordinateCache_;\n        var viewRotation = this.viewRotation_;\n        var state = /** @type {import(\"../../render.js\").State} */ ({\n            context: context,\n            pixelRatio: this.pixelRatio,\n            resolution: this.resolution,\n            rotation: viewRotation\n        });\n        // When the batch size gets too big, performance decreases. 200 is a good\n        // balance between batch size and number of fill/stroke instructions.\n        var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n        var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n        var x, y;\n        while (i < ii) {\n            var instruction = instructions[i];\n            var type = /** @type {CanvasInstruction} */ (instruction[0]);\n            switch (type) {\n                case CanvasInstruction.BEGIN_GEOMETRY:\n                    feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                    if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n                        i = /** @type {number} */ (instruction[2]);\n                    }\n                    else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, feature.getGeometry().getExtent())) {\n                        i = /** @type {number} */ (instruction[2]) + 1;\n                    }\n                    else {\n                        ++i;\n                    }\n                    break;\n                case CanvasInstruction.BEGIN_PATH:\n                    if (pendingFill > batchSize) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                    }\n                    if (pendingStroke > batchSize) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    if (!pendingFill && !pendingStroke) {\n                        context.beginPath();\n                        prevX = prevY = NaN;\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.CIRCLE:\n                    d = /** @type {number} */ (instruction[1]);\n                    var x1 = pixelCoordinates[d];\n                    var y1 = pixelCoordinates[d + 1];\n                    var x2 = pixelCoordinates[d + 2];\n                    var y2 = pixelCoordinates[d + 3];\n                    var dx = x2 - x1;\n                    var dy = y2 - y1;\n                    var r = Math.sqrt(dx * dx + dy * dy);\n                    context.moveTo(x1 + r, y1);\n                    context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n                    ++i;\n                    break;\n                case CanvasInstruction.CLOSE_PATH:\n                    context.closePath();\n                    ++i;\n                    break;\n                case CanvasInstruction.CUSTOM:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = instruction[2];\n                    var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n                    var renderer = instruction[4];\n                    var fn = instruction.length == 6 ? instruction[5] : undefined;\n                    state.geometry = geometry;\n                    state.feature = feature;\n                    if (!(i in coordinateCache)) {\n                        coordinateCache[i] = [];\n                    }\n                    var coords = coordinateCache[i];\n                    if (fn) {\n                        fn(pixelCoordinates, d, dd, 2, coords);\n                    }\n                    else {\n                        coords[0] = pixelCoordinates[d];\n                        coords[1] = pixelCoordinates[d + 1];\n                        coords.length = 2;\n                    }\n                    renderer(coords, state);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_IMAGE:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n                    // Remaining arguments in DRAW_IMAGE are in alphabetical order\n                    anchorX = /** @type {number} */ (instruction[4]);\n                    anchorY = /** @type {number} */ (instruction[5]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n                    var height = /** @type {number} */ (instruction[7]);\n                    var opacity = /** @type {number} */ (instruction[8]);\n                    var originX = /** @type {number} */ (instruction[9]);\n                    var originY = /** @type {number} */ (instruction[10]);\n                    var rotateWithView = /** @type {boolean} */ (instruction[11]);\n                    var rotation = /** @type {number} */ (instruction[12]);\n                    var scale = /** @type {number} */ (instruction[13]);\n                    var width = /** @type {number} */ (instruction[14]);\n                    if (!image && instruction.length >= 19) {\n                        // create label images\n                        text = /** @type {string} */ (instruction[18]);\n                        textKey = /** @type {string} */ (instruction[19]);\n                        strokeKey = /** @type {string} */ (instruction[20]);\n                        fillKey = /** @type {string} */ (instruction[21]);\n                        var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n                        image = instruction[3] = labelWithAnchor.label;\n                        var textOffsetX = /** @type {number} */ (instruction[22]);\n                        anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n                        var textOffsetY = /** @type {number} */ (instruction[23]);\n                        anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n                        height = instruction[7] = image.height;\n                        width = instruction[14] = image.width;\n                    }\n                    var geometryWidths = void 0;\n                    if (instruction.length > 24) {\n                        geometryWidths = /** @type {number} */ (instruction[24]);\n                    }\n                    var padding = void 0, backgroundFill = void 0, backgroundStroke = void 0;\n                    if (instruction.length > 16) {\n                        padding = /** @type {Array<number>} */ (instruction[15]);\n                        backgroundFill = /** @type {boolean} */ (instruction[16]);\n                        backgroundStroke = /** @type {boolean} */ (instruction[17]);\n                    }\n                    else {\n                        padding = defaultPadding;\n                        backgroundFill = backgroundStroke = false;\n                    }\n                    if (rotateWithView) {\n                        rotation += viewRotation;\n                    }\n                    var widthIndex = 0;\n                    for (; d < dd; d += 2) {\n                        if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n                            continue;\n                        }\n                        this.replayImage_(context, pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY, declutterGroup, height, opacity, originX, originY, rotation, scale, snapToPixel, width, padding, backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null, backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.DRAW_CHARS:\n                    var begin = /** @type {number} */ (instruction[1]);\n                    var end = /** @type {number} */ (instruction[2]);\n                    var baseline = /** @type {number} */ (instruction[3]);\n                    declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n                    var overflow = /** @type {number} */ (instruction[5]);\n                    fillKey = /** @type {string} */ (instruction[6]);\n                    var maxAngle = /** @type {number} */ (instruction[7]);\n                    var measurePixelRatio = /** @type {number} */ (instruction[8]);\n                    var offsetY = /** @type {number} */ (instruction[9]);\n                    strokeKey = /** @type {string} */ (instruction[10]);\n                    var strokeWidth = /** @type {number} */ (instruction[11]);\n                    text = /** @type {string} */ (instruction[12]);\n                    textKey = /** @type {string} */ (instruction[13]);\n                    var pixelRatioScale = /** @type {number} */ (instruction[14]);\n                    var textState = this.textStates[textKey];\n                    var font = textState.font;\n                    var textScale = textState.scale * measurePixelRatio;\n                    var cachedWidths = void 0;\n                    if (font in this.widths_) {\n                        cachedWidths = this.widths_[font];\n                    }\n                    else {\n                        cachedWidths = this.widths_[font] = {};\n                    }\n                    var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n                    var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n                    if (overflow || textLength <= pathLength) {\n                        var textAlign = this.textStates[textKey].textAlign;\n                        var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n                        var parts = drawTextOnPath(pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n                        if (parts) {\n                            var c = void 0, cc = void 0, chars = void 0, label = void 0, part = void 0;\n                            if (strokeKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, '', strokeKey);\n                                    anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                                    anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                            if (fillKey) {\n                                for (c = 0, cc = parts.length; c < cc; ++c) {\n                                    part = parts[c]; // x, y, anchorX, rotation, chunk\n                                    chars = /** @type {string} */ (part[4]);\n                                    label = this.getTextImage(chars, textKey, fillKey, '');\n                                    anchorX = /** @type {number} */ (part[2]);\n                                    anchorY = baseline * label.height - offsetY;\n                                    this.replayImage_(context, \n                                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label, anchorX, anchorY, declutterGroup, label.height, 1, 0, 0, \n                                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width, defaultPadding, null, null);\n                                }\n                            }\n                        }\n                    }\n                    this.declutterItems.push(this, declutterGroup, feature);\n                    ++i;\n                    break;\n                case CanvasInstruction.END_GEOMETRY:\n                    if (featureCallback !== undefined) {\n                        feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n                        var result = featureCallback(feature);\n                        if (result) {\n                            return result;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.FILL:\n                    if (batchSize) {\n                        pendingFill++;\n                    }\n                    else {\n                        this.fill_(context);\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.MOVE_TO_LINE_TO:\n                    d = /** @type {number} */ (instruction[1]);\n                    dd = /** @type {number} */ (instruction[2]);\n                    x = pixelCoordinates[d];\n                    y = pixelCoordinates[d + 1];\n                    roundX = (x + 0.5) | 0;\n                    roundY = (y + 0.5) | 0;\n                    if (roundX !== prevX || roundY !== prevY) {\n                        context.moveTo(x, y);\n                        prevX = roundX;\n                        prevY = roundY;\n                    }\n                    for (d += 2; d < dd; d += 2) {\n                        x = pixelCoordinates[d];\n                        y = pixelCoordinates[d + 1];\n                        roundX = (x + 0.5) | 0;\n                        roundY = (y + 0.5) | 0;\n                        if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n                            context.lineTo(x, y);\n                            prevX = roundX;\n                            prevY = roundY;\n                        }\n                    }\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_FILL_STYLE:\n                    lastFillInstruction = instruction;\n                    this.alignFill_ = instruction[2];\n                    if (pendingFill) {\n                        this.fill_(context);\n                        pendingFill = 0;\n                        if (pendingStroke) {\n                            context.stroke();\n                            pendingStroke = 0;\n                        }\n                    }\n                    context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n                    ++i;\n                    break;\n                case CanvasInstruction.SET_STROKE_STYLE:\n                    lastStrokeInstruction = instruction;\n                    if (pendingStroke) {\n                        context.stroke();\n                        pendingStroke = 0;\n                    }\n                    this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n                    ++i;\n                    break;\n                case CanvasInstruction.STROKE:\n                    if (batchSize) {\n                        pendingStroke++;\n                    }\n                    else {\n                        context.stroke();\n                    }\n                    ++i;\n                    break;\n                default:\n                    ++i; // consume the instruction anyway, to avoid an infinite loop\n                    break;\n            }\n        }\n        if (pendingFill) {\n            this.fill_(context);\n        }\n        if (pendingStroke) {\n            context.stroke();\n        }\n        return undefined;\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n     */\n    Executor.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n        this.viewRotation_ = viewRotation;\n        this.execute_(context, transform, skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n     *     to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n     *     Feature callback.\n     * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n     *     extent.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    Executor.prototype.executeHitDetection = function (context, transform, viewRotation, skippedFeaturesHash, opt_featureCallback, opt_hitExtent) {\n        this.viewRotation_ = viewRotation;\n        return this.execute_(context, transform, skippedFeaturesHash, this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n    };\n    return Executor;\n}(Disposable));\nexport default Executor;\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { numberSafeCompareFunction } from '../../array.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { buffer, createEmpty, extendCoordinate } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { isEmpty } from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport { create as createTransform, compose as composeTransform } from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n    BuilderType.POLYGON,\n    BuilderType.CIRCLE,\n    BuilderType.LINE_STRING,\n    BuilderType.IMAGE,\n    BuilderType.TEXT,\n    BuilderType.DEFAULT\n];\nvar ExecutorGroup = /** @class */ (function (_super) {\n    __extends(ExecutorGroup, _super);\n    /**\n     * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n     * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n     * should be set here, unless the target context does not exceet that extent (which\n     * can be the case when rendering to tiles).\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {boolean} overlaps The executor group can have overlapping geometries.\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n     * The serializable instructions.\n     * @param {number=} opt_renderBuffer Optional rendering buffer.\n     */\n    function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.maxExtent_ = maxExtent;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overlaps_ = overlaps;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.resolution_ = resolution;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderBuffer_ = opt_renderBuffer;\n        /**\n         * @private\n         * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n         */\n        _this.executorsByZIndex_ = {};\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.hitDetectionContext_ = null;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.hitDetectionTransform_ = createTransform();\n        _this.createExecutors_(allInstructions);\n        return _this;\n    }\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    ExecutorGroup.prototype.clip = function (context, transform) {\n        var flatClipCoords = this.getClipCoords(transform);\n        context.beginPath();\n        context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n        context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n        context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n        context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n        context.clip();\n    };\n    /**\n     * Create executors and populate them using the provided instructions.\n     * @private\n     * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n     */\n    ExecutorGroup.prototype.createExecutors_ = function (allInstructions) {\n        for (var zIndex in allInstructions) {\n            var executors = this.executorsByZIndex_[zIndex];\n            if (executors === undefined) {\n                this.executorsByZIndex_[zIndex] = executors = {};\n            }\n            var instructionByZindex = allInstructions[zIndex];\n            for (var builderType in instructionByZindex) {\n                var instructions = instructionByZindex[builderType];\n                executors[builderType] = new Executor(this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    ExecutorGroup.prototype.disposeInternal = function () {\n        for (var z in this.executorsByZIndex_) {\n            var executors = this.executorsByZIndex_[z];\n            for (var key in executors) {\n                executors[key].disposeInternal();\n            }\n        }\n        if (this.hitDetectionContext_) {\n            var canvas = this.hitDetectionContext_.canvas;\n            canvas.width = canvas.height = 0;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {Array<BuilderType>} executors Executors.\n     * @return {boolean} Has executors of the provided types.\n     */\n    ExecutorGroup.prototype.hasExecutors = function (executors) {\n        for (var zIndex in this.executorsByZIndex_) {\n            var candidates = this.executorsByZIndex_[zIndex];\n            for (var i = 0, ii = executors.length; i < ii; ++i) {\n                if (executors[i] in candidates) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n     * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    ExecutorGroup.prototype.forEachFeatureAtCoordinate = function (coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutteredFeatures) {\n        hitTolerance = Math.round(hitTolerance);\n        var contextSize = hitTolerance * 2 + 1;\n        var transform = composeTransform(this.hitDetectionTransform_, hitTolerance + 0.5, hitTolerance + 0.5, 1 / resolution, -1 / resolution, -rotation, -coordinate[0], -coordinate[1]);\n        if (!this.hitDetectionContext_) {\n            this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n        }\n        var context = this.hitDetectionContext_;\n        if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n            context.canvas.width = contextSize;\n            context.canvas.height = contextSize;\n        }\n        else {\n            context.clearRect(0, 0, contextSize, contextSize);\n        }\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        var hitExtent;\n        if (this.renderBuffer_ !== undefined) {\n            hitExtent = createEmpty();\n            extendCoordinate(hitExtent, coordinate);\n            buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n        }\n        var mask = getCircleArray(hitTolerance);\n        var builderType;\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function featureCallback(feature) {\n            var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n            for (var i_1 = 0; i_1 < contextSize; i_1++) {\n                for (var j_1 = 0; j_1 < contextSize; j_1++) {\n                    if (mask[i_1][j_1]) {\n                        if (imageData[(j_1 * contextSize + i_1) * 4 + 3] > 0) {\n                            var result_1 = void 0;\n                            if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                                declutteredFeatures.indexOf(feature) !== -1) {\n                                result_1 = callback(feature);\n                            }\n                            if (result_1) {\n                                return result_1;\n                            }\n                            else {\n                                context.clearRect(0, 0, contextSize, contextSize);\n                                return undefined;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var i, j, executors, executor, result;\n        for (i = zs.length - 1; i >= 0; --i) {\n            var zIndexKey = zs[i].toString();\n            executors = this.executorsByZIndex_[zIndexKey];\n            for (j = ORDER.length - 1; j >= 0; --j) {\n                builderType = ORDER[j];\n                executor = executors[builderType];\n                if (executor !== undefined) {\n                    result = executor.executeHitDetection(context, transform, rotation, skippedFeaturesHash, featureCallback, hitExtent);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @return {Array<number>} Clip coordinates.\n     */\n    ExecutorGroup.prototype.getClipCoords = function (transform) {\n        var maxExtent = this.maxExtent_;\n        if (!maxExtent) {\n            return null;\n        }\n        var minX = maxExtent[0];\n        var minY = maxExtent[1];\n        var maxX = maxExtent[2];\n        var maxY = maxExtent[3];\n        var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n        transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n        return flatClipCoords;\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    ExecutorGroup.prototype.isEmpty = function () {\n        return isEmpty(this.executorsByZIndex_);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n     * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n     * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n     *     Default is {@link module:ol/render/replay~ORDER}\n     * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n     */\n    ExecutorGroup.prototype.execute = function (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n        /** @type {Array<number>} */\n        var zs = Object.keys(this.executorsByZIndex_).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        // setup clipping so that the parts of over-simplified geometries are not\n        // visible outside the current extent when panning\n        if (this.maxExtent_) {\n            context.save();\n            this.clip(context, transform);\n        }\n        var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n        var i, ii, j, jj, replays, replay;\n        for (i = 0, ii = zs.length; i < ii; ++i) {\n            var zIndexKey = zs[i].toString();\n            replays = this.executorsByZIndex_[zIndexKey];\n            for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n                var builderType = builderTypes[j];\n                replay = replays[builderType];\n                if (replay !== undefined) {\n                    if (opt_declutterReplays &&\n                        (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n                        var declutter = opt_declutterReplays[zIndexKey];\n                        if (!declutter) {\n                            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n                        }\n                        else {\n                            declutter.push(replay, transform.slice(0));\n                        }\n                    }\n                    else {\n                        replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n                    }\n                }\n            }\n        }\n        if (this.maxExtent_) {\n            context.restore();\n        }\n    };\n    return ExecutorGroup;\n}(Disposable));\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n    0: [[true]]\n};\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n    var i;\n    var radius = Math.floor(array.length / 2);\n    if (x >= radius) {\n        for (i = radius; i < x; i++) {\n            array[i][y] = true;\n        }\n    }\n    else if (x < radius) {\n        for (i = x + 1; i < radius; i++) {\n            array[i][y] = true;\n        }\n    }\n}\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n    if (circleArrayCache[radius] !== undefined) {\n        return circleArrayCache[radius];\n    }\n    var arraySize = radius * 2 + 1;\n    var arr = new Array(arraySize);\n    for (var i = 0; i < arraySize; i++) {\n        arr[i] = new Array(arraySize);\n    }\n    var x = radius;\n    var y = 0;\n    var error = 0;\n    while (x >= y) {\n        fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n        fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n        fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n        fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n        y++;\n        error += 1 + 2 * y;\n        if (2 * (error - x) + 1 > 0) {\n            x -= 1;\n            error += 1 - 2 * x;\n        }\n    }\n    circleArrayCache[radius] = arr;\n    return arr;\n}\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<Array<*>>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel, declutterItems) {\n    var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n    var skippedFeatureUids = {};\n    for (var z = 0, zz = zs.length; z < zz; ++z) {\n        var executorData = declutterReplays[zs[z].toString()];\n        var currentExecutor = void 0;\n        for (var i = 0, ii = executorData.length; i < ii;) {\n            var executor = executorData[i++];\n            if (executor !== currentExecutor) {\n                currentExecutor = executor;\n                declutterItems.push(executor.declutterItems);\n            }\n            var transform = executorData[i++];\n            executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n        }\n    }\n}\nexport default ExecutorGroup;\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport { getUid } from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener, thisArg);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener, thisArg);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport { getUid } from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport { buffer, createEmpty, containsExtent, getWidth } from '../../extent.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport { defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { toString as transformToString, makeScale, makeInverse } from '../../transform.js';\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n     */\n    function CanvasVectorLayerRenderer(vectorLayer) {\n        var _this = _super.call(this, vectorLayer) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedResolution_ = NaN;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = createEmpty();\n        /**\n         * @private\n         * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n         */\n        _this.renderedRenderOrder_ = null;\n        /**\n         * @private\n         * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n         */\n        _this.replayGroup_ = null;\n        /**\n         * A new replay group had to be created by `prepareFrame()`\n         * @type {boolean}\n         */\n        _this.replayGroupChanged = true;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        var context = this.context;\n        var canvas = context.canvas;\n        var replayGroup = this.replayGroup_;\n        if (!replayGroup || replayGroup.isEmpty()) {\n            if (canvas.width > 0) {\n                canvas.width = 0;\n            }\n            return canvas;\n        }\n        var pixelRatio = frameState.pixelRatio;\n        // set forward and inverse pixel transforms\n        makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n        // resize and clear\n        var width = Math.round(frameState.size[0] * pixelRatio);\n        var height = Math.round(frameState.size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.pixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        this.preRender(context, frameState);\n        var extent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var rotation = viewState.rotation;\n        var projectionExtent = projection.getExtent();\n        var vectorSource = this.getLayer().getSource();\n        // clipped rendering if layer extent is set\n        var clipExtent = layerState.extent;\n        var clipped = clipExtent !== undefined;\n        if (clipped) {\n            this.clip(context, frameState, clipExtent);\n        }\n        var viewHints = frameState.viewHints;\n        var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var transform = this.getRenderTransform(frameState, width, height, 0);\n        var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n        var declutterReplays = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer()).getDeclutter() ? {} : null;\n        replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n        if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            var startX = extent[0];\n            var worldWidth = getWidth(projectionExtent);\n            var world = 0;\n            var offsetX = void 0;\n            while (startX < projectionExtent[0]) {\n                --world;\n                offsetX = worldWidth * world;\n                var transform_1 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_1, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n                startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n                ++world;\n                offsetX = worldWidth * world;\n                var transform_2 = this.getRenderTransform(frameState, width, height, offsetX);\n                replayGroup.execute(context, transform_2, rotation, skippedFeatureUids, snapToPixel, undefined, declutterReplays);\n                startX -= worldWidth;\n            }\n        }\n        if (declutterReplays) {\n            var viewHints_1 = frameState.viewHints;\n            var hifi = !(viewHints_1[ViewHint.ANIMATING] || viewHints_1[ViewHint.INTERACTING]);\n            replayDeclutter(declutterReplays, context, rotation, hifi, frameState.declutterItems);\n        }\n        if (clipped) {\n            context.restore();\n        }\n        this.postRender(context, frameState);\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        return canvas;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (!this.replayGroup_) {\n            return undefined;\n        }\n        else {\n            var resolution = frameState.viewState.resolution;\n            var rotation = frameState.viewState.rotation;\n            var layer_1 = /** @type {import(\"../../layer/Vector\").default} */ (this.getLayer());\n            /** @type {!Object<string, boolean>} */\n            var features_1 = {};\n            var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @return {?} Callback result.\n             */\n            function (feature) {\n                var key = getUid(feature);\n                if (!(key in features_1)) {\n                    features_1[key] = true;\n                    return callback(feature, layer_1);\n                }\n            }, layer_1.getDeclutter() ? declutteredFeatures : null);\n            return result;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.replayGroup_) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n        var vectorSource = vectorLayer.getSource();\n        var animating = frameState.viewHints[ViewHint.ANIMATING];\n        var interacting = frameState.viewHints[ViewHint.INTERACTING];\n        var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n        var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n        if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n            (!updateWhileInteracting && interacting)) {\n            return true;\n        }\n        var frameStateExtent = frameState.extent;\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var resolution = viewState.resolution;\n        var pixelRatio = frameState.pixelRatio;\n        var vectorLayerRevision = vectorLayer.getRevision();\n        var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n        var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n        if (vectorLayerRenderOrder === undefined) {\n            vectorLayerRenderOrder = defaultRenderOrder;\n        }\n        var extent = buffer(frameStateExtent, vectorLayerRenderBuffer * resolution);\n        var projectionExtent = viewState.projection.getExtent();\n        if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n            !containsExtent(projectionExtent, frameState.extent)) {\n            // For the replay group, we need an extent that intersects the real world\n            // (-180° to +180°). To support geometries in a coordinate range from -540°\n            // to +540°, we add at least 1 world width on each side of the projection\n            // extent. If the viewport is wider than the world, we need to add half of\n            // the viewport width to make sure we cover the whole viewport.\n            var worldWidth = getWidth(projectionExtent);\n            var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n            extent[0] = projectionExtent[0] - gutter;\n            extent[2] = projectionExtent[2] + gutter;\n        }\n        if (!this.dirty_ &&\n            this.renderedResolution_ == resolution &&\n            this.renderedRevision_ == vectorLayerRevision &&\n            this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n            containsExtent(this.renderedExtent_, extent)) {\n            this.replayGroupChanged = false;\n            return true;\n        }\n        if (this.replayGroup_) {\n            this.replayGroup_.dispose();\n        }\n        this.replayGroup_ = null;\n        this.dirty_ = false;\n        var replayGroup = new CanvasBuilderGroup(getRenderTolerance(resolution, pixelRatio), extent, resolution, pixelRatio, vectorLayer.getDeclutter());\n        vectorSource.loadFeatures(extent, resolution, projection);\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         * @this {CanvasVectorLayerRenderer}\n         */\n        var render = function (feature) {\n            var styles;\n            var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n            if (styleFunction) {\n                styles = styleFunction(feature, resolution);\n            }\n            if (styles) {\n                var dirty = this.renderFeature(feature, resolution, pixelRatio, styles, replayGroup);\n                this.dirty_ = this.dirty_ || dirty;\n            }\n        }.bind(this);\n        if (vectorLayerRenderOrder) {\n            /** @type {Array<import(\"../../Feature.js\").default>} */\n            var features_2 = [];\n            vectorSource.forEachFeatureInExtent(extent, \n            /**\n             * @param {import(\"../../Feature.js\").default} feature Feature.\n             */\n            function (feature) {\n                features_2.push(feature);\n            });\n            features_2.sort(vectorLayerRenderOrder);\n            for (var i = 0, ii = features_2.length; i < ii; ++i) {\n                render(features_2[i]);\n            }\n        }\n        else {\n            vectorSource.forEachFeatureInExtent(extent, render);\n        }\n        var replayGroupInstructions = replayGroup.finish();\n        var executorGroup = new ExecutorGroup(extent, resolution, pixelRatio, vectorSource.getOverlaps(), replayGroupInstructions, vectorLayer.getRenderBuffer());\n        this.renderedResolution_ = resolution;\n        this.renderedRevision_ = vectorLayerRevision;\n        this.renderedRenderOrder_ = vectorLayerRenderOrder;\n        this.renderedExtent_ = extent;\n        this.replayGroup_ = executorGroup;\n        this.replayGroupChanged = true;\n        return true;\n    };\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {number} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorLayerRenderer.prototype.renderFeature = function (feature, resolution, pixelRatio, styles, builderGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(builderGroup, feature, styles[i], getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(builderGroup, feature, styles, getSquaredRenderTolerance(resolution, pixelRatio), this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\nexport default CanvasVectorLayerRenderer;\n//# sourceMappingURL=VectorLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorImageLayer\n */\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ViewHint from '../../ViewHint.js';\nimport { equals } from '../../array.js';\nimport { getHeight, getWidth, isEmpty, scaleFromCenter } from '../../extent.js';\nimport { assign } from '../../obj.js';\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\nimport { listen } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport ImageState from '../../ImageState.js';\nimport { renderDeclutterItems } from '../../render.js';\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasVectorImageLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorImageLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorImage.js\").default} layer Vector image layer.\n     */\n    function CanvasVectorImageLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @type {!Array<string>}\n         */\n        _this.skippedFeatures_ = [];\n        /**\n         * @private\n         * @type {import(\"./VectorLayer.js\").default}\n         */\n        _this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.layerImageRatio_ = layer.getImageRatio();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.disposeInternal = function () {\n        this.vectorRenderer_.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.handleFontsChanged = function () {\n        this.vectorRenderer_.handleFontsChanged();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var viewResolution = viewState.resolution;\n        var hints = frameState.viewHints;\n        var vectorRenderer = this.vectorRenderer_;\n        var renderedExtent = frameState.extent;\n        if (this.layerImageRatio_ !== 1) {\n            renderedExtent = renderedExtent.slice(0);\n            scaleFromCenter(renderedExtent, this.layerImageRatio_);\n        }\n        if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n            var skippedFeatures_1 = this.skippedFeatures_;\n            var context = vectorRenderer.context;\n            var imageFrameState_1 = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n                declutterItems: [],\n                size: [\n                    getWidth(renderedExtent) / viewResolution,\n                    getHeight(renderedExtent) / viewResolution\n                ],\n                viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n                    rotation: 0\n                }))\n            }));\n            var newSkippedFeatures_1 = Object.keys(imageFrameState_1.skippedFeatureUids).sort();\n            var image_1 = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function (callback) {\n                if (vectorRenderer.prepareFrame(imageFrameState_1, layerState) &&\n                    (vectorRenderer.replayGroupChanged ||\n                        !equals(skippedFeatures_1, newSkippedFeatures_1))) {\n                    vectorRenderer.renderFrame(imageFrameState_1, layerState);\n                    renderDeclutterItems(imageFrameState_1, null);\n                    skippedFeatures_1 = newSkippedFeatures_1;\n                    callback();\n                }\n            });\n            listen(image_1, EventType.CHANGE, function () {\n                if (image_1.getState() === ImageState.LOADED) {\n                    this.image_ = image_1;\n                    this.skippedFeatures_ = skippedFeatures_1;\n                }\n            }, this);\n            image_1.load();\n        }\n        if (this.image_) {\n            var image = this.image_;\n            var imageResolution = image.getResolution();\n            var imagePixelRatio = image.getPixelRatio();\n            this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n        }\n        return !!this.image_;\n    };\n    /**\n     * @override\n     */\n    CanvasVectorImageLayerRenderer.prototype.preRender = function () { };\n    /**\n     * @override\n     */\n    CanvasVectorImageLayerRenderer.prototype.postRender = function () { };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        if (this.vectorRenderer_) {\n            return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures);\n        }\n        else {\n            return _super.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, declutteredFeatures);\n        }\n    };\n    return CanvasVectorImageLayerRenderer;\n}(CanvasImageLayerRenderer));\nexport default CanvasVectorImageLayerRenderer;\n//# sourceMappingURL=VectorImageLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n * @api\n */\nexport default {\n    IMAGE: 'image',\n    HYBRID: 'hybrid'\n};\n//# sourceMappingURL=VectorTileRenderType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport { getUid } from '../../util.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport { listen, unlistenByKey } from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport { buffer, containsCoordinate, equals, getIntersection, intersects } from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport ReplayType from '../../render/canvas/BuilderType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport { getSquaredTolerance as getSquaredRenderTolerance, renderFeature } from '../vector.js';\nimport { apply as applyTransform, create as createTransform, reset as resetTransform, scale as scaleTransform, translate as translateTransform, toString as transformToString, makeScale, makeInverse } from '../../transform.js';\nimport CanvasExecutorGroup, { replayDeclutter } from '../../render/canvas/ExecutorGroup.js';\nimport { clear, isEmpty } from '../../obj.js';\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n    'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n        ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n    'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n    'image': [ReplayType.DEFAULT],\n    'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT]\n};\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasVectorTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n     */\n    function CanvasVectorTileLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        var baseCanvas = _this.context.canvas;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.overlayContext_ = createCanvasContext2D();\n        var overlayCanvas = _this.overlayContext_.canvas;\n        overlayCanvas.style.position = 'absolute';\n        overlayCanvas.style.transformOrigin = 'top left';\n        var container = document.createElement('div');\n        var style = container.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        container.appendChild(baseCanvas);\n        container.appendChild(overlayCanvas);\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.container_ = container;\n        /**\n         * The transform for rendered pixels to viewport CSS pixels for the overlay canvas.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.overlayPixelTransform_ = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels for the overlay canvas.\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inverseOverlayPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.dirty_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.renderedLayerRevision_;\n        /**\n         * @private\n         * @type {!Object<string, import(\"../../VectorRenderTile.js\").default>}\n         */\n        _this.renderTileImageQueue_ = {};\n        /**\n         * @type {Object<string, import(\"../../events.js\").EventsKey>}\n         */\n        _this.tileListenerKeys_ = {};\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpTransform_ = createTransform();\n        // Use nearest lower resolution.\n        _this.zDirection = 1;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.disposeInternal = function () {\n        this.overlayContext_.canvas.width = this.overlayContext_.canvas.height = 0;\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection\").default} projection Projection.\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareTile = function (tile, pixelRatio, projection) {\n        var tileUid = getUid(tile);\n        var state = tile.getState();\n        if (((state === TileState.LOADED && tile.hifi) ||\n            state === TileState.ERROR || state === TileState.ABORT) &&\n            tileUid in this.tileListenerKeys_) {\n            unlistenByKey(this.tileListenerKeys_[tileUid]);\n            delete this.tileListenerKeys_[tileUid];\n        }\n        if (state === TileState.LOADED || state === TileState.ERROR) {\n            this.updateExecutorGroup_(tile, pixelRatio, projection);\n            if (this.tileImageNeedsRender_(tile, pixelRatio, projection)) {\n                this.renderTileImageQueue_[tileUid] = tile;\n            }\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (_super.prototype.getTile.call(this, z, x, y, frameState));\n        var pixelRatio = frameState.pixelRatio;\n        var viewState = frameState.viewState;\n        var resolution = viewState.resolution;\n        var projection = viewState.projection;\n        if (tile.getState() < TileState.LOADED) {\n            tile.wantedResolution = resolution;\n            var tileUid = getUid(tile);\n            if (!(tileUid in this.tileListenerKeys_)) {\n                var listenerKey = listen(tile, EventType.CHANGE, this.prepareTile.bind(this, tile, pixelRatio, projection));\n                this.tileListenerKeys_[tileUid] = listenerKey;\n            }\n        }\n        else {\n            var viewHints = frameState.viewHints;\n            var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n            if (hifi || !tile.wantedResolution) {\n                tile.wantedResolution = resolution;\n            }\n            this.prepareTile(tile, pixelRatio, projection);\n        }\n        return tile;\n    };\n    /**\n     * @inheritdoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        return _super.prototype.isDrawableTile.call(this, tile) && tile.hasContext(this.getLayer());\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage(this.getLayer());\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.prepareFrame = function (frameState, layerState) {\n        var layerRevision = this.getLayer().getRevision();\n        if (this.renderedLayerRevision_ != layerRevision) {\n            this.renderedTiles.length = 0;\n        }\n        this.renderedLayerRevision_ = layerRevision;\n        return _super.prototype.prepareFrame.call(this, frameState, layerState);\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var revision = layer.getRevision();\n        var renderOrder = layer.getRenderOrder() || null;\n        var resolution = tile.wantedResolution;\n        var builderState = tile.getReplayState(layer);\n        if (!builderState.dirty && builderState.renderedResolution === resolution &&\n            builderState.renderedRevision == revision &&\n            builderState.renderedRenderOrder == renderOrder && builderState.renderedZ === tile.sourceZ) {\n            return;\n        }\n        var source = layer.getSource();\n        var sourceTileGrid = source.getTileGrid();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n        var sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n        var layerUid = getUid(layer);\n        var executorGroups = tile.executorGroups[layerUid];\n        if (executorGroups) {\n            for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n                executorGroups[i].dispose();\n            }\n        }\n        tile.executorGroups[layerUid] = [];\n        var _loop_1 = function (t, tt) {\n            var sourceTile = sourceTiles[t];\n            if (sourceTile.getState() != TileState.LOADED) {\n                return \"continue\";\n            }\n            var sourceTileCoord = sourceTile.tileCoord;\n            var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n            var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n            var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n                buffer(sharedExtent, layer.getRenderBuffer() * resolution, this_1.tmpExtent);\n            builderState.dirty = false;\n            var builderGroup = new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio, layer.getDeclutter());\n            var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n            /**\n             * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n             * @this {CanvasVectorTileLayerRenderer}\n             */\n            var render = function (feature) {\n                var styles;\n                var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n                if (styleFunction) {\n                    styles = styleFunction(feature, resolution);\n                }\n                if (styles) {\n                    var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup);\n                    this.dirty_ = this.dirty_ || dirty;\n                    builderState.dirty = builderState.dirty || dirty;\n                }\n            };\n            var features = sourceTile.getFeatures();\n            if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n                features.sort(renderOrder);\n            }\n            for (var i = 0, ii = features.length; i < ii; ++i) {\n                var feature = features[i];\n                if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n                    render.call(this_1, feature);\n                }\n            }\n            var executorGroupInstructions = builderGroup.finish();\n            // no need to clip when the render tile is covered by a single source tile\n            var replayExtent = layer.getDeclutter() && sourceTiles.length === 1 ?\n                null :\n                sharedExtent;\n            var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution, pixelRatio, source.getOverlaps(), executorGroupInstructions, layer.getRenderBuffer());\n            tile.executorGroups[layerUid].push(renderingReplayGroup);\n        };\n        var this_1 = this;\n        for (var t = 0, tt = sourceTiles.length; t < tt; ++t) {\n            _loop_1(t, tt);\n        }\n        builderState.renderedRevision = revision;\n        builderState.renderedZ = tile.sourceZ;\n        builderState.renderedRenderOrder = renderOrder;\n        builderState.renderedResolution = resolution;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n        var resolution = frameState.viewState.resolution;\n        var rotation = frameState.viewState.rotation;\n        hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var declutter = layer.getDeclutter();\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        /** @type {!Object<string, boolean>} */\n        var features = {};\n        var renderedTiles = /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n        var found;\n        var i, ii;\n        for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n            var tile = renderedTiles[i];\n            if (!declutter) {\n                // When not decluttering, we only need to consider the tile that contains the given\n                // coordinate, because each feature will be rendered for each tile that contains it.\n                var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n                if (!containsCoordinate(tileExtent, coordinate)) {\n                    continue;\n                }\n            }\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                found = found || executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {}, \n                /**\n                 * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n                 * @return {?} Callback result.\n                 */\n                function (feature) {\n                    var key = feature.getId();\n                    if (key === undefined) {\n                        key = getUid(feature);\n                    }\n                    if (!(key in features)) {\n                        features[key] = true;\n                        return callback(feature, layer);\n                    }\n                }, layer.getDeclutter() ? declutteredFeatures : null);\n            }\n        }\n        return found;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleFontsChanged = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n            layer.changed();\n        }\n    };\n    /**\n     * Handle changes in image style state.\n     * @param {import(\"../../events/Event.js\").default} event Image style change event.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function (event) {\n        this.renderIfReadyAndVisible();\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFrame = function (frameState, layerState) {\n        _super.prototype.renderFrame.call(this, frameState, layerState);\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var viewHints = frameState.viewHints;\n        var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n        var renderMode = layer.getRenderMode();\n        if (renderMode === VectorTileRenderType.IMAGE) {\n            this.renderTileImages_(hifi, frameState);\n            return this.container_;\n        }\n        if (!isEmpty(this.renderTileImageQueue_) && !this.extentChanged) {\n            this.renderTileImages_(hifi, frameState);\n            return this.container_;\n        }\n        var context = this.overlayContext_;\n        var declutterReplays = layer.getDeclutter() ? {} : null;\n        var source = layer.getSource();\n        var replayTypes = VECTOR_REPLAYS[renderMode];\n        var pixelRatio = frameState.pixelRatio;\n        var rotation = frameState.viewState.rotation;\n        var size = frameState.size;\n        // set forward and inverse pixel transforms\n        makeScale(this.overlayPixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n        makeInverse(this.inverseOverlayPixelTransform_, this.overlayPixelTransform_);\n        // resize and clear\n        var canvas = context.canvas;\n        var width = Math.round(size[0] * pixelRatio);\n        var height = Math.round(size[1] * pixelRatio);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n            var canvasTransform = transformToString(this.overlayPixelTransform_);\n            if (canvas.style.transform !== canvasTransform) {\n                canvas.style.transform = canvasTransform;\n            }\n        }\n        else {\n            context.clearRect(0, 0, width, height);\n        }\n        var tiles = this.renderedTiles;\n        var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n        var clips = [];\n        for (var i = tiles.length - 1; i >= 0; --i) {\n            var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\n            if (tile.getState() == TileState.ABORT) {\n                continue;\n            }\n            var tileCoord = tile.tileCoord;\n            var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n            var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n            var transform = this.getRenderTransform(frameState, width, height, worldOffset);\n            var executorGroups = tile.executorGroups[getUid(layer)];\n            for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n                var executorGroup = executorGroups[t];\n                if (!executorGroup.hasExecutors(replayTypes)) {\n                    // sourceTile has no instructions of the types we want to render\n                    continue;\n                }\n                var currentZ = tile.tileCoord[0];\n                var zs = void 0, currentClip = void 0;\n                if (!declutterReplays) {\n                    zs = [];\n                    currentClip = executorGroup.getClipCoords(transform);\n                    context.save();\n                    // Create a clip mask for regions in this low resolution tile that are\n                    // already filled by a higher resolution tile\n                    for (var j = 0, jj = clips.length; j < jj; ++j) {\n                        var clip = clips[j];\n                        if (currentZ < zs[j]) {\n                            context.beginPath();\n                            // counter-clockwise (outer ring) for current tile\n                            context.moveTo(currentClip[0], currentClip[1]);\n                            context.lineTo(currentClip[2], currentClip[3]);\n                            context.lineTo(currentClip[4], currentClip[5]);\n                            context.lineTo(currentClip[6], currentClip[7]);\n                            // clockwise (inner ring) for higher resolution tile\n                            context.moveTo(clip[6], clip[7]);\n                            context.lineTo(clip[4], clip[5]);\n                            context.lineTo(clip[2], clip[3]);\n                            context.lineTo(clip[0], clip[1]);\n                            context.clip();\n                        }\n                    }\n                }\n                executorGroup.execute(context, transform, rotation, {}, hifi, replayTypes, declutterReplays);\n                if (!declutterReplays) {\n                    context.restore();\n                    clips.push(currentClip);\n                    zs.push(currentZ);\n                }\n            }\n        }\n        if (declutterReplays) {\n            replayDeclutter(declutterReplays, context, rotation, hifi, frameState.declutterItems);\n        }\n        var opacity = layerState.opacity;\n        if (opacity !== parseFloat(canvas.style.opacity)) {\n            canvas.style.opacity = opacity;\n        }\n        // Now that we have rendered the tiles we have already, let's prepare new tile images\n        // for the next frame\n        this.renderTileImages_(hifi, frameState);\n        return this.container_;\n    };\n    /**\n     * @param {boolean} hifi We have time to render a high fidelity map image.\n     * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImages_ = function (hifi, frameState) {\n        // When we don't have time to render hifi, only render tiles until we have used up\n        // half of the frame budget of 16 ms\n        for (var uid in this.renderTileImageQueue_) {\n            if (!hifi && Date.now() - frameState.time > 8) {\n                break;\n            }\n            var tile = this.renderTileImageQueue_[uid];\n            frameState.animate = true;\n            delete this.renderTileImageQueue_[uid];\n            var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n            var viewState = frameState.viewState;\n            var tileGrid = layer.getSource().getTileGridForProjection(viewState.projection);\n            var tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n            var renderPixelRatio = frameState.pixelRatio / tile.wantedResolution * tileResolution;\n            this.renderTileImage_(tile, frameState.pixelRatio, renderPixelRatio, viewState.projection);\n        }\n        clear(this.renderTileImageQueue_);\n    };\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n     * @param {import(\"../../render/canvas/BuilderGroup.js\").default} executorGroup Replay group.\n     * @return {boolean} `true` if an image is loading.\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderFeature = function (feature, squaredTolerance, styles, executorGroup) {\n        if (!styles) {\n            return false;\n        }\n        var loading = false;\n        if (Array.isArray(styles)) {\n            for (var i = 0, ii = styles.length; i < ii; ++i) {\n                loading = renderFeature(executorGroup, feature, styles[i], squaredTolerance, this.handleStyleImageChange_, this) || loading;\n            }\n        }\n        else {\n            loading = renderFeature(executorGroup, feature, styles, squaredTolerance, this.handleStyleImageChange_, this);\n        }\n        return loading;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} A new tile image was rendered.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function (tile, pixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var sourceZ = tile.sourceZ;\n        var resolution = tile.wantedResolution;\n        return replayState.renderedTileResolution !== resolution || replayState.renderedTileRevision !== revision || replayState.renderedTileZ !== sourceZ;\n    };\n    /**\n     * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} renderPixelRatio Render pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function (tile, pixelRatio, renderPixelRatio, projection) {\n        var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n        var replayState = tile.getReplayState(layer);\n        var revision = layer.getRevision();\n        var executorGroups = tile.executorGroups[getUid(layer)];\n        replayState.renderedTileRevision = revision;\n        replayState.renderedTileZ = tile.sourceZ;\n        var tileCoord = tile.wrappedTileCoord;\n        var z = tileCoord[0];\n        var source = layer.getSource();\n        var tileGrid = source.getTileGridForProjection(projection);\n        var resolution = tileGrid.getResolution(z);\n        var context = tile.getContext(layer);\n        // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n        pixelRatio = Math.max(pixelRatio, renderPixelRatio / pixelRatio);\n        var size = source.getTilePixelSize(z, pixelRatio, projection);\n        context.canvas.width = size[0];\n        context.canvas.height = size[1];\n        var renderScale = pixelRatio / renderPixelRatio;\n        if (renderScale !== 1) {\n            var canvasTransform = resetTransform(this.tmpTransform_);\n            scaleTransform(canvasTransform, renderScale, renderScale);\n            context.setTransform.apply(context, canvasTransform);\n        }\n        var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n        var pixelScale = renderPixelRatio / resolution;\n        var transform = resetTransform(this.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n            var executorGroup = executorGroups[i];\n            executorGroup.execute(context, transform, 0, {}, true, IMAGE_REPLAYS[layer.getRenderMode()]);\n        }\n        replayState.renderedTileResolution = tile.wantedResolution;\n    };\n    /**\n     * @inheritDoc\n     */\n    CanvasVectorTileLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var data = _super.prototype.getDataAtPixel.call(this, pixel, frameState, hitTolerance);\n        if (data) {\n            return data;\n        }\n        var renderPixel = applyTransform(this.inverseOverlayPixelTransform_, pixel.slice());\n        var context = this.overlayContext_;\n        try {\n            data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\nexport default CanvasVectorTileLayerRenderer;\n//# sourceMappingURL=VectorTileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport { assign } from '../obj.js';\nimport { createDefaultStyle, toFunction as toStyleFunction } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    RENDER_ORDER: 'renderOrder'\n};\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nvar BaseVectorLayer = /** @class */ (function (_super) {\n    __extends(BaseVectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function BaseVectorLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ?\n            opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.style;\n        delete baseOptions.renderBuffer;\n        delete baseOptions.updateWhileAnimating;\n        delete baseOptions.updateWhileInteracting;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.renderBuffer_ = options.renderBuffer !== undefined ?\n            options.renderBuffer : 100;\n        /**\n         * User provided style.\n         * @type {import(\"../style/Style.js\").StyleLike}\n         * @private\n         */\n        _this.style_ = null;\n        /**\n         * Style function for use within the library.\n         * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n         * @private\n         */\n        _this.styleFunction_ = undefined;\n        _this.setStyle(options.style);\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n            options.updateWhileAnimating : false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n            options.updateWhileInteracting : false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Declutter.\n     */\n    BaseVectorLayer.prototype.getDeclutter = function () {\n        return this.declutter_;\n    };\n    /**\n     * @return {number|undefined} Render buffer.\n     */\n    BaseVectorLayer.prototype.getRenderBuffer = function () {\n        return this.renderBuffer_;\n    };\n    /**\n     * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n     *     order.\n     */\n    BaseVectorLayer.prototype.getRenderOrder = function () {\n        return (\n        /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER)));\n    };\n    /**\n     * Get the style for features.  This returns whatever was passed to the `style`\n     * option at construction or to the `setStyle` method.\n     * @return {import(\"../style/Style.js\").StyleLike}\n     *     Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyle = function () {\n        return this.style_;\n    };\n    /**\n     * Get the style function.\n     * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n     * @api\n     */\n    BaseVectorLayer.prototype.getStyleFunction = function () {\n        return this.styleFunction_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     animating.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileAnimating = function () {\n        return this.updateWhileAnimating_;\n    };\n    /**\n     * @return {boolean} Whether the rendered layer should be updated while\n     *     interacting.\n     */\n    BaseVectorLayer.prototype.getUpdateWhileInteracting = function () {\n        return this.updateWhileInteracting_;\n    };\n    /**\n     * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n     *     Render order.\n     */\n    BaseVectorLayer.prototype.setRenderOrder = function (renderOrder) {\n        this.set(Property.RENDER_ORDER, renderOrder);\n    };\n    /**\n     * Set the style for features.  This can be a single style object, an array\n     * of styles, or a function that takes a feature and resolution and returns\n     * an array of styles. If it is `undefined` the default style is used. If\n     * it is `null` the layer has no style (a `null` style), so only features\n     * that have their own styles will be rendered in the layer. See\n     * {@link module:ol/style} for information on the default style.\n     * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n     * @api\n     */\n    BaseVectorLayer.prototype.setStyle = function (style) {\n        this.style_ = style !== undefined ? style : createDefaultStyle;\n        this.styleFunction_ = style === null ?\n            undefined : toStyleFunction(this.style_);\n        this.changed();\n    };\n    return BaseVectorLayer;\n}(Layer));\nexport default BaseVectorLayer;\n//# sourceMappingURL=BaseVector.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar VectorLayer = /** @class */ (function (_super) {\n    __extends(VectorLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorLayer.prototype.createRenderer = function () {\n        return new CanvasVectorLayerRenderer(this);\n    };\n    return VectorLayer;\n}(BaseVectorLayer));\nexport default VectorLayer;\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport { squaredSegmentDistance, toRadians, toDegrees } from '../../math.js';\nimport { get as getProjection, getTransform } from '../../proj.js';\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n    // FIXME reduce garbage generation\n    // FIXME optimize stack operations\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var geoA = interpolate(0);\n    var geoB = interpolate(1);\n    var a = transform(geoA);\n    var b = transform(geoB);\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var geoStack = [geoB, geoA];\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var stack = [b, a];\n    /** @type {Array<number>} */\n    var fractionStack = [1, 0];\n    /** @type {!Object<string, boolean>} */\n    var fractions = {};\n    var maxIterations = 1e5;\n    var geoM, m, fracA, fracB, fracM, key;\n    while (--maxIterations > 0 && fractionStack.length > 0) {\n        // Pop the a coordinate off the stack\n        fracA = fractionStack.pop();\n        geoA = geoStack.pop();\n        a = stack.pop();\n        // Add the a coordinate if it has not been added yet\n        key = fracA.toString();\n        if (!(key in fractions)) {\n            flatCoordinates.push(a[0], a[1]);\n            fractions[key] = true;\n        }\n        // Pop the b coordinate off the stack\n        fracB = fractionStack.pop();\n        geoB = geoStack.pop();\n        b = stack.pop();\n        // Find the m point between the a and b coordinates\n        fracM = (fracA + fracB) / 2;\n        geoM = interpolate(fracM);\n        m = transform(geoM);\n        if (squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) < squaredTolerance) {\n            // If the m point is sufficiently close to the straight line, then we\n            // discard it.  Just use the b coordinate and move on to the next line\n            // segment.\n            flatCoordinates.push(b[0], b[1]);\n            key = fracB.toString();\n            fractions[key] = true;\n        }\n        else {\n            // Otherwise, we need to subdivide the current line segment.  Split it\n            // into two and push the two line segments onto the stack.\n            fractionStack.push(fracB, fracM, fracM, fracA);\n            stack.push(b, m, m, a);\n            geoStack.push(geoB, geoM, geoM, geoA);\n        }\n    }\n    return flatCoordinates;\n}\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n    var geoProjection = getProjection('EPSG:4326');\n    var cosLat1 = Math.cos(toRadians(lat1));\n    var sinLat1 = Math.sin(toRadians(lat1));\n    var cosLat2 = Math.cos(toRadians(lat2));\n    var sinLat2 = Math.sin(toRadians(lat2));\n    var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n    var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n    var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        if (1 <= d) {\n            return [lon2, lat2];\n        }\n        var D = frac * Math.acos(d);\n        var cosD = Math.cos(D);\n        var sinD = Math.sin(D);\n        var y = sinDeltaLon * cosLat2;\n        var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n        var theta = Math.atan2(y, x);\n        var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n        var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1, cosD - sinLat1 * Math.sin(lat));\n        return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon, lat1 + ((lat2 - lat1) * frac)];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon1 + ((lon2 - lon1) * frac), lat];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n//# sourceMappingURL=geodesic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Graticule\n */\nimport VectorLayer from './Vector.js';\nimport { assign } from '../obj.js';\nimport { degreesToStringHDMS } from '../coordinate';\nimport Text from '../style/Text';\nimport Fill from '../style/Fill';\nimport Stroke from '../style/Stroke';\nimport LineString from '../geom/LineString.js';\nimport VectorSource from '../source/Vector';\nimport { equivalent as equivalentProjection, get as getProjection, getTransform, transformExtent } from '../proj';\nimport { getCenter, intersects, equals, getIntersection, isEmpty } from '../extent';\nimport { clamp } from '../math';\nimport Style from '../style/Style';\nimport Feature from '../Feature';\nimport { bbox } from '../loadingstrategy';\nimport { meridian, parallel } from '../geom/flat/geodesic';\nimport GeometryLayout from '../geom/GeometryLayout';\nimport Point from '../geom/Point';\nimport Collection from '../Collection';\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n    color: 'rgba(0,0,0,0.2)'\n});\n/**\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n    90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom\n * @property {string} text\n */\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n */\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Graticule = /** @class */ (function (_super) {\n    __extends(Graticule, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Graticule(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n            renderBuffer: 0\n        }, options);\n        delete baseOptions.maxLines;\n        delete baseOptions.strokeStyle;\n        delete baseOptions.targetSize;\n        delete baseOptions.showLabels;\n        delete baseOptions.lonLabelFormatter;\n        delete baseOptions.latLabelFormatter;\n        delete baseOptions.lonLabelPosition;\n        delete baseOptions.latLabelPosition;\n        delete baseOptions.lonLabelStyle;\n        delete baseOptions.latLabelStyle;\n        delete baseOptions.intervals;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLat_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLon_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLat_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLon_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLatP_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLonP_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLatP_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLonP_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.meridians_ = [];\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.parallels_ = [];\n        /**\n         * @type {Stroke}\n         * @private\n         */\n        _this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.fromLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.toLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.projectionCenterLonLat_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.meridiansLabels_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.parallelsLabels_ = null;\n        if (options.showLabels) {\n            /**\n             * @type {null|function(number):string}\n             * @private\n             */\n            _this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n                degreesToStringHDMS.bind(_this, 'EW') : options.lonLabelFormatter;\n            /**\n             * @type {function(number):string}\n             * @private\n             */\n            _this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n                degreesToStringHDMS.bind(_this, 'NS') : options.latLabelFormatter;\n            /**\n             * Longitude label position in fractions (0..1) of view extent. 0 means\n             * bottom, 1 means top.\n             * @type {number}\n             * @private\n             */\n            _this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n                options.lonLabelPosition;\n            /**\n             * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n             * means right.\n             * @type {number}\n             * @private\n             */\n            _this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n                options.latLabelPosition;\n            /**\n             * @type {Object.<string,Style>}\n             * @private\n             */\n            _this.lonLabelStyleCache_ = {};\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.lonLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                if (!this.lonLabelStyleCache_[label]) {\n                    this.lonLabelStyleCache_[label] = new Style({\n                        text: options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n                            new Text({\n                                text: label,\n                                font: '12px Calibri,sans-serif',\n                                textBaseline: 'bottom',\n                                fill: new Fill({\n                                    color: 'rgba(0,0,0,1)'\n                                }),\n                                stroke: new Stroke({\n                                    color: 'rgba(255,255,255,1)',\n                                    width: 3\n                                })\n                            })\n                    });\n                }\n                return this.lonLabelStyleCache_[label];\n            }.bind(_this);\n            /**\n             * @type {Object.<string,Style>}\n             * @private\n             */\n            _this.latLabelStyleCache_ = {};\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.latLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                if (!this.latLabelStyleCache_[label]) {\n                    this.latLabelStyleCache_[label] = new Style({\n                        text: options.latLabelStyle !== undefined ? options.latLabelStyle :\n                            new Text({\n                                text: label,\n                                font: '12px Calibri,sans-serif',\n                                textAlign: 'right',\n                                fill: new Fill({\n                                    color: 'rgba(0,0,0,1)'\n                                }),\n                                stroke: new Stroke({\n                                    color: 'rgba(255,255,255,1)',\n                                    width: 3\n                                })\n                            })\n                    });\n                }\n                return this.latLabelStyleCache_[label];\n            }.bind(_this);\n            _this.meridiansLabels_ = [];\n            _this.parallelsLabels_ = [];\n        }\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n        // use a source with a custom loader for lines & text\n        _this.setSource(new VectorSource({\n            loader: _this.loaderFunction.bind(_this),\n            strategy: bbox,\n            features: new Collection(),\n            overlaps: false,\n            useSpatialIndex: false,\n            wrapX: options.wrapX\n        }));\n        /**\n         * feature pool to use when updating graticule\n         * @type {Array<Feature>}\n         * @private\n         */\n        _this.featurePool_ = [];\n        /**\n         * @type {Style}\n         * @private\n         */\n        _this.lineStyle_ = new Style({\n            stroke: _this.strokeStyle_\n        });\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        _this.setRenderOrder(null);\n        _this.tmpExtent_ = null;\n        return _this;\n    }\n    /**\n     * Update geometries in the source based on current view\n     * @param {import(\"../extent\").Extent} extent Extent\n     * @param {number} resolution Resolution\n     * @param {import(\"../proj/Projection.js\").default} projection Projection\n     */\n    Graticule.prototype.loaderFunction = function (extent, resolution, projection) {\n        var source = this.getSource();\n        // only consider the intersection between our own extent & the requested one\n        var layerExtent = this.getExtent() || [-Infinity, -Infinity, Infinity, Infinity];\n        var renderExtent = getIntersection(layerExtent, extent, this.tmpExtent_);\n        // we should not keep track of loaded extents\n        setTimeout(function () {\n            source.removeLoadedExtent(extent);\n        }, 0);\n        if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\n            return;\n        }\n        this.renderedExtent_ = renderExtent;\n        // bail out if nothing to render\n        if (isEmpty(renderExtent)) {\n            return;\n        }\n        // update projection info\n        var center = getCenter(renderExtent);\n        var squaredTolerance = resolution * resolution / 4;\n        var updateProjectionInfo = !this.projection_ ||\n            !equivalentProjection(this.projection_, projection);\n        if (updateProjectionInfo) {\n            this.updateProjectionInfo_(projection);\n        }\n        this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n        // first make sure we have enough features in the pool\n        var featureCount = this.meridians_.length + this.parallels_.length;\n        if (this.meridiansLabels_) {\n            featureCount += this.meridiansLabels_.length;\n        }\n        if (this.parallelsLabels_) {\n            featureCount += this.parallelsLabels_.length;\n        }\n        var feature;\n        while (featureCount > this.featurePool_.length) {\n            feature = new Feature();\n            this.featurePool_.push(feature);\n        }\n        var featuresColl = source.getFeaturesCollection();\n        featuresColl.clear();\n        var poolIndex = 0;\n        // add features for the lines & labels\n        var i, l;\n        for (i = 0, l = this.meridians_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.meridians_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        for (i = 0, l = this.parallels_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.parallels_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        var labelData;\n        if (this.meridiansLabels_) {\n            for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n                labelData = this.meridiansLabels_[i];\n                feature = this.featurePool_[poolIndex++];\n                feature.setGeometry(labelData.geom);\n                feature.setStyle(this.lonLabelStyle_);\n                feature.set('graticule_label', labelData.text);\n                featuresColl.push(feature);\n            }\n        }\n        if (this.parallelsLabels_) {\n            for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n                labelData = this.parallelsLabels_[i];\n                feature = this.featurePool_[poolIndex++];\n                feature.setGeometry(labelData.geom);\n                feature.setStyle(this.latLabelStyle_);\n                feature.set('graticule_label', labelData.text);\n                featuresColl.push(feature);\n            }\n        }\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addMeridian_ = function (lon, minLat, maxLat, squaredTolerance, extent, index) {\n        var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.meridiansLabels_) {\n                var textPoint = this.getMeridianPoint_(lineString, extent, index);\n                this.meridiansLabels_[index] = {\n                    geom: textPoint,\n                    text: this.lonLabelFormatter_(lon)\n                };\n            }\n            this.meridians_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addParallel_ = function (lat, minLon, maxLon, squaredTolerance, extent, index) {\n        var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.parallelsLabels_) {\n                var textPoint = this.getParallelPoint_(lineString, extent, index);\n                this.parallelsLabels_[index] = {\n                    geom: textPoint,\n                    text: this.latLabelFormatter_(lat)\n                };\n            }\n            this.parallels_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @private\n     */\n    Graticule.prototype.createGraticule_ = function (extent, center, resolution, squaredTolerance) {\n        var interval = this.getInterval_(resolution);\n        if (interval == -1) {\n            this.meridians_.length = this.parallels_.length = 0;\n            if (this.meridiansLabels_) {\n                this.meridiansLabels_.length = 0;\n            }\n            if (this.parallelsLabels_) {\n                this.parallelsLabels_.length = 0;\n            }\n            return;\n        }\n        var centerLonLat = this.toLonLatTransform_(center);\n        var centerLon = centerLonLat[0];\n        var centerLat = centerLonLat[1];\n        var maxLines = this.maxLines_;\n        var cnt, idx, lat, lon;\n        var validExtent = [\n            Math.max(extent[0], this.minLonP_),\n            Math.max(extent[1], this.minLatP_),\n            Math.min(extent[2], this.maxLonP_),\n            Math.min(extent[3], this.maxLatP_)\n        ];\n        validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n        var maxLat = validExtent[3];\n        var maxLon = validExtent[2];\n        var minLat = validExtent[1];\n        var minLon = validExtent[0];\n        // Create meridians\n        centerLon = Math.floor(centerLon / interval) * interval;\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lon != this.minLon_ && cnt++ < maxLines) {\n            lon = Math.max(lon - interval, this.minLon_);\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n        }\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        cnt = 0;\n        while (lon != this.maxLon_ && cnt++ < maxLines) {\n            lon = Math.min(lon + interval, this.maxLon_);\n            idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n        }\n        this.meridians_.length = idx;\n        if (this.meridiansLabels_) {\n            this.meridiansLabels_.length = idx;\n        }\n        // Create parallels\n        centerLat = Math.floor(centerLat / interval) * interval;\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lat != this.minLat_ && cnt++ < maxLines) {\n            lat = Math.max(lat - interval, this.minLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        cnt = 0;\n        while (lat != this.maxLat_ && cnt++ < maxLines) {\n            lat = Math.min(lat + interval, this.maxLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        this.parallels_.length = idx;\n        if (this.parallelsLabels_) {\n            this.parallelsLabels_.length = idx;\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} The interval in degrees.\n     * @private\n     */\n    Graticule.prototype.getInterval_ = function (resolution) {\n        var centerLon = this.projectionCenterLonLat_[0];\n        var centerLat = this.projectionCenterLonLat_[1];\n        var interval = -1;\n        var target = Math.pow(this.targetSize_ * resolution, 2);\n        /** @type {Array<number>} **/\n        var p1 = [];\n        /** @type {Array<number>} **/\n        var p2 = [];\n        for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\n            var delta = this.intervals_[i] / 2;\n            p1[0] = centerLon - delta;\n            p1[1] = centerLat - delta;\n            p2[0] = centerLon + delta;\n            p2[1] = centerLat + delta;\n            this.fromLonLatTransform_(p1, p1);\n            this.fromLonLatTransform_(p2, p2);\n            var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n            if (dist <= target) {\n                break;\n            }\n            interval = this.intervals_[i];\n        }\n        return interval;\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The meridian line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getMeridian_ = function (lon, minLat, maxLat, squaredTolerance, index) {\n        var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n        var lineString = this.meridians_[index];\n        if (!lineString) {\n            lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Meridian\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Meridian point.\n     * @private\n     */\n    Graticule.prototype.getMeridianPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n        var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n        var lat = clamp(extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_, clampedBottom, clampedTop);\n        var coordinate = [flatCoordinates[0], lat];\n        var point;\n        if (index in this.meridiansLabels_) {\n            point = this.meridiansLabels_[index].geom;\n            point.setCoordinates(coordinate);\n        }\n        else {\n            point = new Point(coordinate);\n        }\n        return point;\n    };\n    /**\n     * Get the list of meridians.  Meridians are lines of equal longitude.\n     * @return {Array<LineString>} The meridians.\n     * @api\n     */\n    Graticule.prototype.getMeridians = function () {\n        return this.meridians_;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The parallel line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getParallel_ = function (lat, minLon, maxLon, squaredTolerance, index) {\n        var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n        var lineString = this.parallels_[index];\n        if (!lineString) {\n            lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Parallels.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Parallel point.\n     * @private\n     */\n    Graticule.prototype.getParallelPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n        var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n        var lon = clamp(extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_, clampedLeft, clampedRight);\n        var coordinate = [lon, flatCoordinates[1]];\n        var point;\n        if (index in this.parallelsLabels_) {\n            point = this.parallelsLabels_[index].geom;\n            point.setCoordinates(coordinate);\n        }\n        else {\n            point = new Point(coordinate);\n        }\n        return point;\n    };\n    /**\n     * Get the list of parallels.  Parallels are lines of equal latitude.\n     * @return {Array<LineString>} The parallels.\n     * @api\n     */\n    Graticule.prototype.getParallels = function () {\n        return this.parallels_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    Graticule.prototype.updateProjectionInfo_ = function (projection) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var worldExtent = projection.getWorldExtent();\n        var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n        this.maxLat_ = worldExtent[3];\n        this.maxLon_ = worldExtent[2];\n        this.minLat_ = worldExtent[1];\n        this.minLon_ = worldExtent[0];\n        this.maxLatP_ = worldExtentP[3];\n        this.maxLonP_ = worldExtentP[2];\n        this.minLatP_ = worldExtentP[1];\n        this.minLonP_ = worldExtentP[0];\n        this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n        this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n        this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n        this.projection_ = projection;\n    };\n    return Graticule;\n}(VectorLayer));\nexport default Graticule;\n//# sourceMappingURL=Graticule.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Heatmap\n */\nimport { listen } from '../events.js';\nimport { getChangeEventType } from '../Object.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport { assign } from '../obj.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    BLUR: 'blur',\n    GRADIENT: 'gradient',\n    RADIUS: 'radius'\n};\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /** @class */ (function (_super) {\n    __extends(Heatmap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Heatmap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.gradient;\n        delete baseOptions.radius;\n        delete baseOptions.blur;\n        delete baseOptions.weight;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.gradient_ = null;\n        listen(_this, getChangeEventType(Property.GRADIENT), _this.handleGradientChanged_, _this);\n        _this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n        _this.setBlur(options.blur !== undefined ? options.blur : 15);\n        _this.setRadius(options.radius !== undefined ? options.radius : 8);\n        var weight = options.weight ? options.weight : 'weight';\n        if (typeof weight === 'string') {\n            _this.weightFunction_ = function (feature) {\n                return feature.get(weight);\n            };\n        }\n        else {\n            _this.weightFunction_ = weight;\n        }\n        // For performance reasons, don't sort the features before rendering.\n        // The render order is not relevant for a heatmap representation.\n        _this.setRenderOrder(null);\n        return _this;\n    }\n    /**\n     * Return the blur size in pixels.\n     * @return {number} Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getBlur = function () {\n        return /** @type {number} */ (this.get(Property.BLUR));\n    };\n    /**\n     * Return the gradient colors as array of strings.\n     * @return {Array<string>} Colors.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getGradient = function () {\n        return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n    };\n    /**\n     * Return the size of the radius in pixels.\n     * @return {number} Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.getRadius = function () {\n        return /** @type {number} */ (this.get(Property.RADIUS));\n    };\n    /**\n     * @private\n     */\n    Heatmap.prototype.handleGradientChanged_ = function () {\n        this.gradient_ = createGradient(this.getGradient());\n    };\n    /**\n     * Set the blur size in pixels.\n     * @param {number} blur Blur size in pixels.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setBlur = function (blur) {\n        this.set(Property.BLUR, blur);\n    };\n    /**\n     * Set the gradient colors as array of strings.\n     * @param {Array<string>} colors Gradient.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setGradient = function (colors) {\n        this.set(Property.GRADIENT, colors);\n    };\n    /**\n     * Set the size of the radius in pixels.\n     * @param {number} radius Radius size in pixel.\n     * @api\n     * @observable\n     */\n    Heatmap.prototype.setRadius = function (radius) {\n        this.set(Property.RADIUS, radius);\n    };\n    /**\n     * @inheritDoc\n     */\n    Heatmap.prototype.createRenderer = function () {\n        return new WebGLPointsLayerRenderer(this, {\n            vertexShader: \"\\n        precision mediump float;\\n        attribute vec2 a_position;\\n        attribute vec2 a_texCoord;\\n        attribute float a_rotateWithView;\\n        attribute vec2 a_offsets;\\n        attribute float a_opacity;\\n\\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform mat4 u_offsetRotateMatrix;\\n        uniform float u_size;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n\\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          if (a_rotateWithView == 1.0) {\\n            offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n          }\\n          vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets * u_size;\\n          v_texCoord = a_texCoord;\\n          v_opacity = a_opacity;\\n        }\",\n            fragmentShader: \"\\n        precision mediump float;\\n        uniform float u_resolution;\\n        uniform float u_blurSlope;\\n\\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n\\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_opacity;\\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\\n        }\",\n            uniforms: {\n                u_size: function () {\n                    return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n                }.bind(this),\n                u_blurSlope: function () {\n                    return this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR));\n                }.bind(this),\n                u_resolution: function (frameState) {\n                    return frameState.viewState.resolution;\n                }\n            },\n            postProcesses: [\n                {\n                    fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n            varying vec2 v_screenCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\n                    uniforms: {\n                        u_gradientTexture: this.gradient_\n                    }\n                }\n            ],\n            opacityCallback: this.weightFunction_\n        });\n    };\n    return Heatmap;\n}(VectorLayer));\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n    var width = 1;\n    var height = 256;\n    var context = createCanvasContext2D(width, height);\n    var gradient = context.createLinearGradient(0, 0, width, height);\n    var step = 1 / (colors.length - 1);\n    for (var i = 0, ii = colors.length; i < ii; ++i) {\n        gradient.addColorStop(i * step, colors[i]);\n    }\n    context.fillStyle = gradient;\n    context.fillRect(0, 0, width, height);\n    return context.canvas;\n}\nexport default Heatmap;\n//# sourceMappingURL=Heatmap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport { assign } from '../obj.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text on this layer. The priority is defined\n * by the `zIndex` of the style and the render order of features. Higher z-index means higher priority.\n * Within the same z-index, a feature rendered before another has higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n */\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorImageLayer = /** @class */ (function (_super) {\n    __extends(VectorImageLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorImageLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : /** @type {Options} */ ({});\n        var baseOptions = assign({}, options);\n        delete baseOptions.imageRatio;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.imageRatio_ = options.imageRatio !== undefined ? options.imageRatio : 1;\n        return _this;\n    }\n    /**\n     * @return {number} Ratio between rendered extent size and viewport extent size.\n     */\n    VectorImageLayer.prototype.getImageRatio = function () {\n        return this.imageRatio_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorImageLayer.prototype.createRenderer = function () {\n        return new CanvasVectorImageLayerRenderer(this);\n    };\n    return VectorImageLayer;\n}(BaseVectorLayer));\nexport default VectorImageLayer;\n//# sourceMappingURL=VectorImage.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/VectorTile\n */\nimport { assert } from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport BaseVectorLayer from './BaseVector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations. When `declutter`\n *    is set to `true`, the decluttering is done per tile resulting in labels and point symbols getting\n *    cut off at tile boundaries.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default>}\n * @api\n */\nvar VectorTileLayer = /** @class */ (function (_super) {\n    __extends(VectorTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function VectorTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = /** @type {Object} */ (assign({}, options));\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, /** @type {import(\"./Vector.js\").Options} */ (baseOptions)) || this;\n        var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n        assert(renderMode == undefined ||\n            renderMode == VectorTileRenderType.IMAGE ||\n            renderMode == VectorTileRenderType.HYBRID, 28); // `renderMode` must be `'image'` or `'hybrid'`\n        /**\n         * @private\n         * @type {VectorTileRenderType}\n         */\n        _this.renderMode_ = renderMode;\n        _this.setPreload(options.preload ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n            options.useInterimTilesOnError : true);\n        return _this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    VectorTileLayer.prototype.createRenderer = function () {\n        return new CanvasVectorTileLayerRenderer(this);\n    };\n    /**\n     * @return {VectorTileRenderType} The render mode.\n     */\n    VectorTileLayer.prototype.getRenderMode = function () {\n        return this.renderMode_;\n    };\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    VectorTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return VectorTileLayer;\n}(BaseVectorLayer));\nexport default VectorTileLayer;\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TRUE } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n    /**\n     * Triggered when features are added\n     * @event DragAndDropEvent#addfeatures\n     * @api\n     */\n    ADD_FEATURES: 'addfeatures'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /** @class */ (function (_super) {\n    __extends(DragAndDropEvent, _super);\n    /**\n     * @param {DragAndDropEventType} type Type.\n     * @param {File} file File.\n     * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     */\n    function DragAndDropEvent(type, file, opt_features, opt_projection) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features parsed from dropped data.\n         * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n         * @api\n         */\n        _this.features = opt_features;\n        /**\n         * The dropped file.\n         * @type {File}\n         * @api\n         */\n        _this.file = file;\n        /**\n         * The feature projection.\n         * @type {import(\"../proj/Projection.js\").default|undefined}\n         * @api\n         */\n        _this.projection = opt_projection;\n        return _this;\n    }\n    return DragAndDropEvent;\n}(Event));\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /** @class */ (function (_super) {\n    __extends(DragAndDrop, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragAndDrop(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            handleEvent: TRUE\n        }) || this;\n        /**\n         * @private\n         * @type {Array<typeof import(\"../format/Feature.js\").default>}\n         */\n        _this.formatConstructors_ = options.formatConstructors ?\n            options.formatConstructors : [];\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = options.projection ?\n            getProjection(options.projection) : null;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.dropListenKeys_ = null;\n        /**\n         * @private\n         * @type {import(\"../source/Vector.js\").default}\n         */\n        _this.source_ = options.source || null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target = options.target ? options.target : null;\n        return _this;\n    }\n    /**\n     * @param {File} file File.\n     * @param {Event} event Load event.\n     * @private\n     */\n    DragAndDrop.prototype.handleResult_ = function (file, event) {\n        var result = event.target.result;\n        var map = this.getMap();\n        var projection = this.projection_;\n        if (!projection) {\n            var view = map.getView();\n            projection = view.getProjection();\n        }\n        var formatConstructors = this.formatConstructors_;\n        var features = [];\n        for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n            var format = new formatConstructors[i]();\n            features = this.tryReadFeatures_(format, result, {\n                featureProjection: projection\n            });\n            if (features && features.length > 0) {\n                break;\n            }\n        }\n        if (this.source_) {\n            this.source_.clear();\n            this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(new DragAndDropEvent(DragAndDropEventType.ADD_FEATURES, file, features, projection));\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.registerListeners_ = function () {\n        var map = this.getMap();\n        if (map) {\n            var dropArea = this.target ? this.target : map.getViewport();\n            this.dropListenKeys_ = [\n                listen(dropArea, EventType.DROP, handleDrop, this),\n                listen(dropArea, EventType.DRAGENTER, handleStop, this),\n                listen(dropArea, EventType.DRAGOVER, handleStop, this),\n                listen(dropArea, EventType.DROP, handleStop, this)\n            ];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setActive = function (active) {\n        _super.prototype.setActive.call(this, active);\n        if (active) {\n            this.registerListeners_();\n        }\n        else {\n            this.unregisterListeners_();\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    DragAndDrop.prototype.setMap = function (map) {\n        this.unregisterListeners_();\n        _super.prototype.setMap.call(this, map);\n        if (this.getActive()) {\n            this.registerListeners_();\n        }\n    };\n    /**\n     * @param {import(\"../format/Feature.js\").default} format Format.\n     * @param {string} text Text.\n     * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n     * @private\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     */\n    DragAndDrop.prototype.tryReadFeatures_ = function (format, text, options) {\n        try {\n            return format.readFeatures(text, options);\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * @private\n     */\n    DragAndDrop.prototype.unregisterListeners_ = function () {\n        if (this.dropListenKeys_) {\n            this.dropListenKeys_.forEach(unlistenByKey);\n            this.dropListenKeys_ = null;\n        }\n    };\n    return DragAndDrop;\n}(Interaction));\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n    var files = event.dataTransfer.files;\n    for (var i = 0, ii = files.length; i < ii; ++i) {\n        var file = files.item(i);\n        var reader = new FileReader();\n        reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n        reader.readAsText(file);\n    }\n}\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n}\nexport default DragAndDrop;\n//# sourceMappingURL=DragAndDrop.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport { shiftKeyOnly, mouseOnly } from '../events/condition.js';\nimport PointerInteraction from './Pointer.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /** @class */ (function (_super) {\n    __extends(DragRotateAndZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotateAndZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastMagnitude_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var deltaX = offset[0] - size[0] / 2;\n        var deltaY = size[1] / 2 - offset[1];\n        var theta = Math.atan2(deltaY, deltaX);\n        var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n        var view = map.getView();\n        if (this.lastAngle_ !== undefined) {\n            var angleDelta = this.lastAngle_ - theta;\n            view.adjustRotation(angleDelta);\n        }\n        this.lastAngle_ = theta;\n        if (this.lastMagnitude_ !== undefined) {\n            view.adjustResolution(this.lastMagnitude_ / magnitude);\n        }\n        if (this.lastMagnitude_ !== undefined) {\n            this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n        }\n        this.lastMagnitude_ = magnitude;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n        view.endInteraction(this.duration_, direction);\n        this.lastScaleDelta_ = 0;\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    DragRotateAndZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (this.condition_(mapBrowserEvent)) {\n            mapBrowserEvent.map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            this.lastMagnitude_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotateAndZoom;\n}(PointerInteraction));\nexport default DragRotateAndZoom;\n//# sourceMappingURL=DragRotateAndZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Circle\n */\nimport { createOrUpdate, forEachCorner, intersects } from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { rotate, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /** @class */ (function (_super) {\n    __extends(Circle, _super);\n    /**\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     *     For internal use, flat coordinates in combination with `opt_layout` and no\n     *     `opt_radius` are also accepted.\n     * @param {number=} opt_radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Circle(center, opt_radius, opt_layout) {\n        var _this = _super.call(this) || this;\n        if (opt_layout !== undefined && opt_radius === undefined) {\n            _this.setFlatCoordinates(opt_layout, center);\n        }\n        else {\n            var radius = opt_radius ? opt_radius : 0;\n            _this.setCenterAndRadius(center, radius, opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Circle} Clone.\n     * @override\n     * @api\n     */\n    Circle.prototype.clone = function () {\n        return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        var squaredDistance = dx * dx + dy * dy;\n        if (squaredDistance < minSquaredDistance) {\n            if (squaredDistance === 0) {\n                for (var i = 0; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            else {\n                var delta = this.getRadius() / Math.sqrt(squaredDistance);\n                closestPoint[0] = flatCoordinates[0] + delta * dx;\n                closestPoint[1] = flatCoordinates[1] + delta * dy;\n                for (var i = 2; i < this.stride; ++i) {\n                    closestPoint[i] = flatCoordinates[i];\n                }\n            }\n            closestPoint.length = this.stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.containsXY = function (x, y) {\n        var flatCoordinates = this.flatCoordinates;\n        var dx = x - flatCoordinates[0];\n        var dy = y - flatCoordinates[1];\n        return dx * dx + dy * dy <= this.getRadiusSquared_();\n    };\n    /**\n     * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @return {import(\"../coordinate.js\").Coordinate} Center.\n     * @api\n     */\n    Circle.prototype.getCenter = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.computeExtent = function (extent) {\n        var flatCoordinates = this.flatCoordinates;\n        var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n        return createOrUpdate(flatCoordinates[0] - radius, flatCoordinates[1] - radius, flatCoordinates[0] + radius, flatCoordinates[1] + radius, extent);\n    };\n    /**\n     * Return the radius of the circle.\n     * @return {number} Radius.\n     * @api\n     */\n    Circle.prototype.getRadius = function () {\n        return Math.sqrt(this.getRadiusSquared_());\n    };\n    /**\n     * @private\n     * @return {number} Radius squared.\n     */\n    Circle.prototype.getRadiusSquared_ = function () {\n        var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n        var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n        return dx * dx + dy * dy;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.getType = function () {\n        return GeometryType.CIRCLE;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.intersectsExtent = function (extent) {\n        var circleExtent = this.getExtent();\n        if (intersects(extent, circleExtent)) {\n            var center = this.getCenter();\n            if (extent[0] <= center[0] && extent[2] >= center[0]) {\n                return true;\n            }\n            if (extent[1] <= center[1] && extent[3] >= center[1]) {\n                return true;\n            }\n            return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n        }\n        return false;\n    };\n    /**\n     * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @api\n     */\n    Circle.prototype.setCenter = function (center) {\n        var stride = this.stride;\n        var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n        var flatCoordinates = center.slice();\n        flatCoordinates[stride] = flatCoordinates[0] + radius;\n        for (var i = 1; i < stride; ++i) {\n            flatCoordinates[stride + i] = center[i];\n        }\n        this.setFlatCoordinates(this.layout, flatCoordinates);\n        this.changed();\n    };\n    /**\n     * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n     * number) of the circle.\n     * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} radius Radius.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Circle.prototype.setCenterAndRadius = function (center, radius, opt_layout) {\n        this.setLayout(opt_layout, center, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        /** @type {Array<number>} */\n        var flatCoordinates = this.flatCoordinates;\n        var offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n        flatCoordinates[offset++] = flatCoordinates[0] + radius;\n        for (var i = 1, ii = this.stride; i < ii; ++i) {\n            flatCoordinates[offset++] = flatCoordinates[i];\n        }\n        flatCoordinates.length = offset;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.getCoordinates = function () {\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    Circle.prototype.setCoordinates = function (coordinates, opt_layout) { };\n    /**\n     * Set the radius of the circle. The radius is in the units of the projection.\n     * @param {number} radius Radius.\n     * @api\n     */\n    Circle.prototype.setRadius = function (radius) {\n        this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.rotate = function (angle, anchor) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n        this.changed();\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    Circle.prototype.translate = function (deltaX, deltaY) {\n        var center = this.getCenter();\n        var stride = this.getStride();\n        this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n        this.changed();\n    };\n    return Circle;\n}(SimpleGeometry));\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n//# sourceMappingURL=Circle.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport { getChangeEventType } from '../Object.js';\nimport { squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { noModifierKeys, always, shiftKeyOnly } from '../events/condition.js';\nimport { boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport { POINTER_TYPE } from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, { fromCircle, makeRegular } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    CIRCLE: 'Circle'\n};\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n    /**\n     * Triggered upon feature draw start\n     * @event DrawEvent#drawstart\n     * @api\n     */\n    DRAWSTART: 'drawstart',\n    /**\n     * Triggered upon feature draw end\n     * @event DrawEvent#drawend\n     * @api\n     */\n    DRAWEND: 'drawend'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /** @class */ (function (_super) {\n    __extends(DrawEvent, _super);\n    /**\n     * @param {DrawEventType} type Type.\n     * @param {Feature} feature The feature drawn.\n     */\n    function DrawEvent(type, feature) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The feature being drawn.\n         * @type {Feature}\n         * @api\n         */\n        _this.feature = feature;\n        return _this;\n    }\n    return DrawEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /** @class */ (function (_super) {\n    __extends(Draw, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Draw(options) {\n        var _this = this;\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.shouldHandle_ = false;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.downPx_ = null;\n        /**\n         * @type {?}\n         * @private\n         */\n        _this.downTimeout_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.lastDragTime_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.freehand_ = false;\n        /**\n         * Target source for drawn features.\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * Target collection for drawn features.\n         * @type {import(\"../Collection.js\").default<Feature>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * Pixel distance for snapping.\n         * @type {number}\n         * @private\n         */\n        _this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n        /**\n         * Geometry type.\n         * @type {GeometryType}\n         * @private\n         */\n        _this.type_ = /** @type {GeometryType} */ (options.type);\n        /**\n         * Drawing mode (derived from geometry type.\n         * @type {Mode}\n         * @private\n         */\n        _this.mode_ = getMode(_this.type_);\n        /**\n         * Stop click, singleclick, and doubleclick events from firing during drawing.\n         * Default is `false`.\n         * @type {boolean}\n         * @private\n         */\n        _this.stopClick_ = !!options.stopClick;\n        /**\n         * The number of points that must be drawn before a polygon ring or line\n         * string can be finished.  The default is 3 for polygon rings and 2 for\n         * line strings.\n         * @type {number}\n         * @private\n         */\n        _this.minPoints_ = options.minPoints ?\n            options.minPoints :\n            (_this.mode_ === Mode.POLYGON ? 3 : 2);\n        /**\n         * The number of points that can be drawn before a polygon ring or line string\n         * is finished. The default is no restriction.\n         * @type {number}\n         * @private\n         */\n        _this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n        /**\n         * A function to decide if a potential finish coordinate is permissible\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n        var geometryFunction = options.geometryFunction;\n        if (!geometryFunction) {\n            if (_this.type_ === GeometryType.CIRCLE) {\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n                        new Circle([NaN, NaN]);\n                    var squaredLength = squaredCoordinateDistance(coordinates[0], coordinates[1]);\n                    circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n                    return circle;\n                };\n            }\n            else {\n                var Constructor_1;\n                var mode_1 = _this.mode_;\n                if (mode_1 === Mode.POINT) {\n                    Constructor_1 = Point;\n                }\n                else if (mode_1 === Mode.LINE_STRING) {\n                    Constructor_1 = LineString;\n                }\n                else if (mode_1 === Mode.POLYGON) {\n                    Constructor_1 = Polygon;\n                }\n                /**\n                 * @param {!LineCoordType} coordinates The coordinates.\n                 * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n                 * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n                 */\n                geometryFunction = function (coordinates, opt_geometry) {\n                    var geometry = opt_geometry;\n                    if (geometry) {\n                        if (mode_1 === Mode.POLYGON) {\n                            if (coordinates[0].length) {\n                                // Add a closing coordinate to match the first\n                                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n                            }\n                            else {\n                                geometry.setCoordinates([]);\n                            }\n                        }\n                        else {\n                            geometry.setCoordinates(coordinates);\n                        }\n                    }\n                    else {\n                        geometry = new Constructor_1(coordinates);\n                    }\n                    return geometry;\n                };\n            }\n        }\n        /**\n         * @type {GeometryFunction}\n         * @private\n         */\n        _this.geometryFunction_ = geometryFunction;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n        /**\n         * Finish coordinate for the feature (first point for polygons, last point for\n         * linestrings).\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.finishCoordinate_ = null;\n        /**\n         * Sketch feature.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchFeature_ = null;\n        /**\n         * Sketch point.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchPoint_ = null;\n        /**\n         * Sketch coordinates. Used when drawing a line or polygon.\n         * @type {SketchCoordType}\n         * @private\n         */\n        _this.sketchCoords_ = null;\n        /**\n         * Sketch line. Used when drawing polygon.\n         * @type {Feature}\n         * @private\n         */\n        _this.sketchLine_ = null;\n        /**\n         * Sketch line coordinates. Used when drawing a polygon or circle.\n         * @type {LineCoordType}\n         * @private\n         */\n        _this.sketchLineCoords_ = null;\n        /**\n         * Squared tolerance for handling up events.  If the squared distance\n         * between a down and up event is greater than this tolerance, up events\n         * will not be handled.\n         * @type {number}\n         * @private\n         */\n        _this.squaredClickTolerance_ = options.clickTolerance ?\n            options.clickTolerance * options.clickTolerance : 36;\n        /**\n         * Draw overlay where our sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: options.wrapX ? options.wrapX : false\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileInteracting: true\n        });\n        /**\n         * Name of the geometry attribute for newly created features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : noModifierKeys;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.freehandCondition_;\n        if (options.freehand) {\n            _this.freehandCondition_ = always;\n        }\n        else {\n            _this.freehandCondition_ = options.freehandCondition ?\n                options.freehandCondition : shiftKeyOnly;\n        }\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.updateState_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        this.updateState_();\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Draw.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n     * @override\n     * @api\n     */\n    Draw.prototype.handleEvent = function (event) {\n        if (event.originalEvent.type === EventType.CONTEXTMENU) {\n            // Avoid context menu for long taps when drawing on mobile\n            event.preventDefault();\n        }\n        this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n        var move = event.type === MapBrowserEventType.POINTERMOVE;\n        var pass = true;\n        if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n            var now = Date.now();\n            if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n                this.downPx_ = event.pixel;\n                this.shouldHandle_ = !this.freehand_;\n                move = true;\n            }\n            else {\n                this.lastDragTime_ = undefined;\n            }\n            if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n                clearTimeout(this.downTimeout_);\n                this.downTimeout_ = undefined;\n            }\n        }\n        if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDRAG &&\n            this.sketchFeature_ !== null) {\n            this.addToDrawing_(event);\n            pass = false;\n        }\n        else if (this.freehand_ &&\n            event.type === MapBrowserEventType.POINTERDOWN) {\n            pass = false;\n        }\n        else if (move) {\n            pass = event.type === MapBrowserEventType.POINTERMOVE;\n            if (pass && this.freehand_) {\n                pass = this.handlePointerMove_(event);\n            }\n            else if ( /** @type {MapBrowserPointerEvent} */(event).pointerEvent.pointerType == POINTER_TYPE ||\n                (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n                this.handlePointerMove_(event);\n            }\n        }\n        else if (event.type === MapBrowserEventType.DBLCLICK) {\n            pass = false;\n        }\n        return _super.prototype.handleEvent.call(this, event) && pass;\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleDownEvent = function (event) {\n        this.shouldHandle_ = !this.freehand_;\n        if (this.freehand_) {\n            this.downPx_ = event.pixel;\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n            }\n            return true;\n        }\n        else if (this.condition_(event)) {\n            this.lastDragTime_ = Date.now();\n            this.downTimeout_ = setTimeout(function () {\n                this.handlePointerMove_(new MapBrowserPointerEvent(MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n            }.bind(this), this.dragVertexDelay_);\n            this.downPx_ = event.pixel;\n            return true;\n        }\n        else {\n            this.lastDragTime_ = undefined;\n            return false;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Draw.prototype.handleUpEvent = function (event) {\n        var pass = true;\n        if (this.downTimeout_) {\n            clearTimeout(this.downTimeout_);\n            this.downTimeout_ = undefined;\n        }\n        this.handlePointerMove_(event);\n        var circleMode = this.mode_ === Mode.CIRCLE;\n        if (this.shouldHandle_) {\n            if (!this.finishCoordinate_) {\n                this.startDrawing_(event);\n                if (this.mode_ === Mode.POINT) {\n                    this.finishDrawing();\n                }\n            }\n            else if (this.freehand_ || circleMode) {\n                this.finishDrawing();\n            }\n            else if (this.atFinish_(event)) {\n                if (this.finishCondition_(event)) {\n                    this.finishDrawing();\n                }\n            }\n            else {\n                this.addToDrawing_(event);\n            }\n            pass = false;\n        }\n        else if (this.freehand_) {\n            this.finishCoordinate_ = null;\n            this.abortDrawing_();\n        }\n        if (!pass && this.stopClick_) {\n            event.stopPropagation();\n        }\n        return pass;\n    };\n    /**\n     * Handle move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n     * @return {boolean} Pass the event to other interactions.\n     * @private\n     */\n    Draw.prototype.handlePointerMove_ = function (event) {\n        if (this.downPx_ &&\n            ((!this.freehand_ && this.shouldHandle_) ||\n                (this.freehand_ && !this.shouldHandle_))) {\n            var downPx = this.downPx_;\n            var clickPx = event.pixel;\n            var dx = downPx[0] - clickPx[0];\n            var dy = downPx[1] - clickPx[1];\n            var squaredDistance = dx * dx + dy * dy;\n            this.shouldHandle_ = this.freehand_ ?\n                squaredDistance > this.squaredClickTolerance_ :\n                squaredDistance <= this.squaredClickTolerance_;\n            if (!this.shouldHandle_) {\n                return true;\n            }\n        }\n        if (this.finishCoordinate_) {\n            this.modifyDrawing_(event);\n        }\n        else {\n            this.createOrUpdateSketchPoint_(event);\n        }\n        return true;\n    };\n    /**\n     * Determine if an event is within the snapping tolerance of the start coord.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} The event is within the snapping tolerance of the start.\n     * @private\n     */\n    Draw.prototype.atFinish_ = function (event) {\n        var at = false;\n        if (this.sketchFeature_) {\n            var potentiallyDone = false;\n            var potentiallyFinishCoordinates = [this.finishCoordinate_];\n            if (this.mode_ === Mode.LINE_STRING) {\n                potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n            }\n            else if (this.mode_ === Mode.POLYGON) {\n                var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n                potentiallyDone = sketchCoords[0].length > this.minPoints_;\n                potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n            }\n            if (potentiallyDone) {\n                var map = event.map;\n                for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n                    var finishCoordinate = potentiallyFinishCoordinates[i];\n                    var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n                    var pixel = event.pixel;\n                    var dx = pixel[0] - finishPixel[0];\n                    var dy = pixel[1] - finishPixel[1];\n                    var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n                    at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n                    if (at) {\n                        this.finishCoordinate_ = finishCoordinate;\n                        break;\n                    }\n                }\n            }\n        }\n        return at;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.createOrUpdateSketchPoint_ = function (event) {\n        var coordinates = event.coordinate.slice();\n        if (!this.sketchPoint_) {\n            this.sketchPoint_ = new Feature(new Point(coordinates));\n            this.updateSketchFeatures_();\n        }\n        else {\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n            sketchPointGeom.setCoordinates(coordinates);\n        }\n    };\n    /**\n     * Start the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.startDrawing_ = function (event) {\n        var start = event.coordinate;\n        this.finishCoordinate_ = start;\n        if (this.mode_ === Mode.POINT) {\n            this.sketchCoords_ = start.slice();\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            this.sketchCoords_ = [[start.slice(), start.slice()]];\n            this.sketchLineCoords_ = this.sketchCoords_[0];\n        }\n        else {\n            this.sketchCoords_ = [start.slice(), start.slice()];\n        }\n        if (this.sketchLineCoords_) {\n            this.sketchLine_ = new Feature(new LineString(this.sketchLineCoords_));\n        }\n        var geometry = this.geometryFunction_(this.sketchCoords_);\n        this.sketchFeature_ = new Feature();\n        if (this.geometryName_) {\n            this.sketchFeature_.setGeometryName(this.geometryName_);\n        }\n        this.sketchFeature_.setGeometry(geometry);\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Modify the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.modifyDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var coordinates, last;\n        if (this.mode_ === Mode.POINT) {\n            last = this.sketchCoords_;\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            last = coordinates[coordinates.length - 1];\n            if (this.atFinish_(event)) {\n                // snap to finish\n                coordinate = this.finishCoordinate_.slice();\n            }\n        }\n        else {\n            coordinates = this.sketchCoords_;\n            last = coordinates[coordinates.length - 1];\n        }\n        last[0] = coordinate[0];\n        last[1] = coordinate[1];\n        this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n        if (this.sketchPoint_) {\n            var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n            sketchPointGeom.setCoordinates(coordinate);\n        }\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (geometry.getType() == GeometryType.POLYGON &&\n            this.mode_ !== Mode.POLYGON) {\n            if (!this.sketchLine_) {\n                this.sketchLine_ = new Feature();\n            }\n            var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            if (!sketchLineGeom) {\n                sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n                this.sketchLine_.setGeometry(sketchLineGeom);\n            }\n            else {\n                sketchLineGeom.setFlatCoordinates(ring.getLayout(), ring.getFlatCoordinates());\n                sketchLineGeom.changed();\n            }\n        }\n        else if (this.sketchLineCoords_) {\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Add a new coordinate to the drawing.\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @private\n     */\n    Draw.prototype.addToDrawing_ = function (event) {\n        var coordinate = event.coordinate;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var done;\n        var coordinates;\n        if (this.mode_ === Mode.LINE_STRING) {\n            this.finishCoordinate_ = coordinate.slice();\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            if (coordinates.length >= this.maxPoints_) {\n                if (this.freehand_) {\n                    coordinates.pop();\n                }\n                else {\n                    done = true;\n                }\n            }\n            coordinates.push(coordinate.slice());\n            if (done) {\n                this.finishCoordinate_ = coordinates[0];\n            }\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        this.updateSketchFeatures_();\n        if (done) {\n            this.finishDrawing();\n        }\n    };\n    /**\n     * Remove last point of the feature currently being drawn.\n     * @api\n     */\n    Draw.prototype.removeLastPoint = function () {\n        if (!this.sketchFeature_) {\n            return;\n        }\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n        var coordinates;\n        /** @type {LineString} */\n        var sketchLineGeom;\n        if (this.mode_ === Mode.LINE_STRING) {\n            coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n            coordinates.splice(-2, 1);\n            this.geometryFunction_(coordinates, geometry);\n            if (coordinates.length >= 2) {\n                this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n            }\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n            coordinates.splice(-2, 1);\n            sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n            sketchLineGeom.setCoordinates(coordinates);\n            this.geometryFunction_(this.sketchCoords_, geometry);\n        }\n        if (coordinates.length === 0) {\n            this.finishCoordinate_ = null;\n        }\n        this.updateSketchFeatures_();\n    };\n    /**\n     * Stop drawing and add the sketch feature to the target layer.\n     * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n     * dispatched before inserting the feature.\n     * @api\n     */\n    Draw.prototype.finishDrawing = function () {\n        var sketchFeature = this.abortDrawing_();\n        if (!sketchFeature) {\n            return;\n        }\n        var coordinates = this.sketchCoords_;\n        var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n        if (this.mode_ === Mode.LINE_STRING) {\n            // remove the redundant last point\n            coordinates.pop();\n            this.geometryFunction_(coordinates, geometry);\n        }\n        else if (this.mode_ === Mode.POLYGON) {\n            // remove the redundant last point in ring\n            /** @type {PolyCoordType} */ (coordinates)[0].pop();\n            this.geometryFunction_(coordinates, geometry);\n            coordinates = geometry.getCoordinates();\n        }\n        // cast multi-part geometries\n        if (this.type_ === GeometryType.MULTI_POINT) {\n            sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n            sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */ (coordinates)]));\n        }\n        else if (this.type_ === GeometryType.MULTI_POLYGON) {\n            sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */ (coordinates)]));\n        }\n        // First dispatch event to allow full set up of feature\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n        // Then insert feature\n        if (this.features_) {\n            this.features_.push(sketchFeature);\n        }\n        if (this.source_) {\n            this.source_.addFeature(sketchFeature);\n        }\n    };\n    /**\n     * Stop drawing without adding the sketch feature to the target layer.\n     * @return {Feature} The sketch feature (or null if none).\n     * @private\n     */\n    Draw.prototype.abortDrawing_ = function () {\n        this.finishCoordinate_ = null;\n        var sketchFeature = this.sketchFeature_;\n        if (sketchFeature) {\n            this.sketchFeature_ = null;\n            this.sketchPoint_ = null;\n            this.sketchLine_ = null;\n            this.overlay_.getSource().clear(true);\n        }\n        return sketchFeature;\n    };\n    /**\n     * Extend an existing geometry by adding additional points. This only works\n     * on features with `LineString` geometries, where the interaction will\n     * extend lines by adding points to the end of the coordinates array.\n     * @param {!Feature} feature Feature to be extended.\n     * @api\n     */\n    Draw.prototype.extend = function (feature) {\n        var geometry = feature.getGeometry();\n        var lineString = /** @type {LineString} */ (geometry);\n        this.sketchFeature_ = feature;\n        this.sketchCoords_ = lineString.getCoordinates();\n        var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n        this.finishCoordinate_ = last.slice();\n        this.sketchCoords_.push(last.slice());\n        this.updateSketchFeatures_();\n        this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n    };\n    /**\n     * Redraw the sketch features.\n     * @private\n     */\n    Draw.prototype.updateSketchFeatures_ = function () {\n        var sketchFeatures = [];\n        if (this.sketchFeature_) {\n            sketchFeatures.push(this.sketchFeature_);\n        }\n        if (this.sketchLine_) {\n            sketchFeatures.push(this.sketchLine_);\n        }\n        if (this.sketchPoint_) {\n            sketchFeatures.push(this.sketchPoint_);\n        }\n        var overlaySource = this.overlay_.getSource();\n        overlaySource.clear(true);\n        overlaySource.addFeatures(sketchFeatures);\n    };\n    /**\n     * @private\n     */\n    Draw.prototype.updateState_ = function () {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            this.abortDrawing_();\n        }\n        this.overlay_.setMap(active ? map : null);\n    };\n    return Draw;\n}(PointerInteraction));\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    return function (feature, resolution) {\n        return styles[feature.getGeometry().getType()];\n    };\n}\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n    return function (coordinates, opt_geometry) {\n        var center = /** @type {LineCoordType} */ (coordinates)[0];\n        var end = /** @type {LineCoordType} */ (coordinates)[1];\n        var radius = Math.sqrt(squaredCoordinateDistance(center, end));\n        var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n            fromCircle(new Circle(center), opt_sides);\n        var angle = opt_angle;\n        if (!opt_angle) {\n            var x = end[0] - center[0];\n            var y = end[1] - center[1];\n            angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n        }\n        makeRegular(geometry, center, radius, angle);\n        return geometry;\n    };\n}\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n    return (function (coordinates, opt_geometry) {\n        var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n        var boxCoordinates = [[\n                getBottomLeft(extent),\n                getBottomRight(extent),\n                getTopRight(extent),\n                getTopLeft(extent),\n                getBottomLeft(extent)\n            ]];\n        var geometry = opt_geometry;\n        if (geometry) {\n            geometry.setCoordinates(boxCoordinates);\n        }\n        else {\n            geometry = new Polygon(boxCoordinates);\n        }\n        return geometry;\n    });\n}\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n    var mode;\n    if (type === GeometryType.POINT ||\n        type === GeometryType.MULTI_POINT) {\n        mode = Mode.POINT;\n    }\n    else if (type === GeometryType.LINE_STRING ||\n        type === GeometryType.MULTI_LINE_STRING) {\n        mode = Mode.LINE_STRING;\n    }\n    else if (type === GeometryType.POLYGON ||\n        type === GeometryType.MULTI_POLYGON) {\n        mode = Mode.POLYGON;\n    }\n    else if (type === GeometryType.CIRCLE) {\n        mode = Mode.CIRCLE;\n    }\n    return (\n    /** @type {!Mode} */ (mode));\n}\nexport default Draw;\n//# sourceMappingURL=Draw.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance } from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport { boundingExtent, getArea } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport { fromExtent as polygonFromExtent } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n    /**\n     * Triggered after the extent is changed\n     * @event ExtentEvent#extentchanged\n     * @api\n     */\n    EXTENTCHANGED: 'extentchanged'\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nvar ExtentEvent = /** @class */ (function (_super) {\n    __extends(ExtentEvent, _super);\n    /**\n     * @param {import(\"../extent.js\").Extent} extent the new extent\n     */\n    function ExtentEvent(extent) {\n        var _this = _super.call(this, ExtentEventType.EXTENTCHANGED) || this;\n        /**\n         * The current extent.\n         * @type {import(\"../extent.js\").Extent}\n         * @api\n         */\n        _this.extent = extent;\n        return _this;\n    }\n    return ExtentEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nvar Extent = /** @class */ (function (_super) {\n    __extends(Extent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Extent(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * Extent of the drawn box\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.extent_ = null;\n        /**\n         * Handler for pointer move events\n         * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n         * @private\n         */\n        _this.pointerHandler_ = null;\n        /**\n         * Pixel threshold to snap to extent\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * Is the pointer snapped to an extent vertex\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Feature for displaying the visible extent\n         * @type {Feature}\n         * @private\n         */\n        _this.extentFeature_ = null;\n        /**\n         * Feature for displaying the visible pointer\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        if (!opt_options) {\n            opt_options = {};\n        }\n        /**\n         * Layer for the extentFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.extentOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX\n            }),\n            style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * Layer for the vertexFeature\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.vertexOverlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!opt_options.wrapX\n            }),\n            style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        if (opt_options.extent) {\n            _this.setExtent(opt_options.extent);\n        }\n        return _this;\n    }\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n     * @param {import(\"../PluggableMap.js\").default} map map\n     * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n     * @private\n     */\n    Extent.prototype.snapToVertex_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return squaredDistanceToSegment(pixelCoordinate, a) -\n                squaredDistanceToSegment(pixelCoordinate, b);\n        };\n        var extent = this.getExtent();\n        if (extent) {\n            //convert extents to line segments and find the segment closest to pixelCoordinate\n            var segments = getSegments(extent);\n            segments.sort(sortByDistance);\n            var closestSegment = segments[0];\n            var vertex = (closestOnSegment(pixelCoordinate, closestSegment));\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            //if the distance is within tolerance, snap to the segment\n            if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                //test if we should further snap to a vertex\n                var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                if (this.snappedToVertex_) {\n                    vertex = squaredDist1 > squaredDist2 ?\n                        closestSegment[1] : closestSegment[0];\n                }\n                return vertex;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n     * @private\n     */\n    Extent.prototype.handlePointerMove_ = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var vertex = this.snapToVertex_(pixel, map);\n        if (!vertex) {\n            vertex = map.getCoordinateFromPixel(pixel);\n        }\n        this.createOrUpdatePointerFeature_(vertex);\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent extent\n     * @returns {Feature} extent as featrue\n     * @private\n     */\n    Extent.prototype.createOrUpdateExtentFeature_ = function (extent) {\n        var extentFeature = this.extentFeature_;\n        if (!extentFeature) {\n            if (!extent) {\n                extentFeature = new Feature({});\n            }\n            else {\n                extentFeature = new Feature(polygonFromExtent(extent));\n            }\n            this.extentFeature_ = extentFeature;\n            this.extentOverlay_.getSource().addFeature(extentFeature);\n        }\n        else {\n            if (!extent) {\n                extentFeature.setGeometry(undefined);\n            }\n            else {\n                extentFeature.setGeometry(polygonFromExtent(extent));\n            }\n        }\n        return extentFeature;\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n     * @returns {Feature} vertex as feature\n     * @private\n     */\n    Extent.prototype.createOrUpdatePointerFeature_ = function (vertex) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(vertex));\n            this.vertexFeature_ = vertexFeature;\n            this.vertexOverlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            geometry.setCoordinates(vertex);\n        }\n        return vertexFeature;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        //display pointer (if not dragging)\n        if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        //call pointer to determine up/down/drag\n        _super.prototype.handleEvent.call(this, mapBrowserEvent);\n        //return false to stop propagation\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleDownEvent = function (mapBrowserEvent) {\n        var pixel = mapBrowserEvent.pixel;\n        var map = mapBrowserEvent.map;\n        var extent = this.getExtent();\n        var vertex = this.snapToVertex_(pixel, map);\n        //find the extent corner opposite the passed corner\n        var getOpposingPoint = function (point) {\n            var x_ = null;\n            var y_ = null;\n            if (point[0] == extent[0]) {\n                x_ = extent[2];\n            }\n            else if (point[0] == extent[2]) {\n                x_ = extent[0];\n            }\n            if (point[1] == extent[1]) {\n                y_ = extent[3];\n            }\n            else if (point[1] == extent[3]) {\n                y_ = extent[1];\n            }\n            if (x_ !== null && y_ !== null) {\n                return [x_, y_];\n            }\n            return null;\n        };\n        if (vertex && extent) {\n            var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n            var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n            //snap to point\n            if (x !== null && y !== null) {\n                this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n                //snap to edge\n            }\n            else if (x !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([x, extent[1]]), getOpposingPoint([x, extent[3]]));\n            }\n            else if (y !== null) {\n                this.pointerHandler_ = getEdgeHandler(getOpposingPoint([extent[0], y]), getOpposingPoint([extent[2], y]));\n            }\n            //no snap - new bbox\n        }\n        else {\n            vertex = map.getCoordinateFromPixel(pixel);\n            this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n            this.pointerHandler_ = getPointHandler(vertex);\n        }\n        return true; //event handled; start downup sequence\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (this.pointerHandler_) {\n            var pixelCoordinate = mapBrowserEvent.coordinate;\n            this.setExtent(this.pointerHandler_(pixelCoordinate));\n            this.createOrUpdatePointerFeature_(pixelCoordinate);\n        }\n        return true;\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.pointerHandler_ = null;\n        //If bbox is zero area, set to null;\n        var extent = this.getExtent();\n        if (!extent || getArea(extent) === 0) {\n            this.setExtent(null);\n        }\n        return false; //Stop handling downup sequence\n    };\n    /**\n     * @inheritDoc\n     */\n    Extent.prototype.setMap = function (map) {\n        this.extentOverlay_.setMap(map);\n        this.vertexOverlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Returns the current drawn extent in the view projection\n     *\n     * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n     * @api\n     */\n    Extent.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Manually sets the drawn extent, using the view projection.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent\n     * @api\n     */\n    Extent.prototype.setExtent = function (extent) {\n        //Null extent means no bbox\n        this.extent_ = extent ? extent : null;\n        this.createOrUpdateExtentFeature_(extent);\n        this.dispatchEvent(new ExtentEvent(this.extent_));\n    };\n    return Extent;\n}(PointerInteraction));\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POLYGON];\n    };\n}\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n    return function (point) {\n        return boundingExtent([fixedPoint, point]);\n    };\n}\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n    if (fixedP1[0] == fixedP2[0]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n        };\n    }\n    else if (fixedP1[1] == fixedP2[1]) {\n        return function (point) {\n            return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n        };\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n    return [\n        [[extent[0], extent[1]], [extent[0], extent[3]]],\n        [[extent[0], extent[3]], [extent[2], extent[3]]],\n        [[extent[2], extent[3]], [extent[2], extent[1]]],\n        [[extent[2], extent[1]], [extent[0], extent[1]]]\n    ];\n}\nexport default Extent;\n//# sourceMappingURL=Extent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Modify\n */\nimport { getUid } from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { equals } from '../array.js';\nimport { equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment } from '../coordinate.js';\nimport { listen, unlisten } from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { always, primaryAction, altKeyOnly, singleClick } from '../events/condition.js';\nimport { boundingExtent, buffer, createOrUpdateFromCoordinate } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n    /**\n     * Triggered upon feature modification start\n     * @event ModifyEvent#modifystart\n     * @api\n     */\n    MODIFYSTART: 'modifystart',\n    /**\n     * Triggered upon feature modification end\n     * @event ModifyEvent#modifyend\n     * @api\n     */\n    MODIFYEND: 'modifyend'\n};\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nvar ModifyEvent = /** @class */ (function (_super) {\n    __extends(ModifyEvent, _super);\n    /**\n     * @param {ModifyEventType} type Type.\n     * @param {Collection<Feature>} features\n     * The features modified.\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\n     * Associated {@link module:ol/MapBrowserPointerEvent}.\n     */\n    function ModifyEvent(type, features, mapBrowserPointerEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being modified.\n         * @type {Collection<Feature>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserPointerEvent;\n        return _this;\n    }\n    return ModifyEvent;\n}(Event));\nexport { ModifyEvent };\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /** @class */ (function (_super) {\n    __extends(Modify, _super);\n    /**\n     * @param {Options} options Options.\n     */\n    function Modify(options) {\n        var _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : primaryAction;\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultDeleteCondition_ = function (mapBrowserEvent) {\n            return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n        };\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.deleteCondition_ = options.deleteCondition ?\n            options.deleteCondition : _this.defaultDeleteCondition_;\n        /**\n         * @type {import(\"../events/condition.js\").Condition}\n         * @private\n         */\n        _this.insertVertexCondition_ = options.insertVertexCondition ?\n            options.insertVertexCondition : always;\n        /**\n         * Editing vertex.\n         * @type {Feature}\n         * @private\n         */\n        _this.vertexFeature_ = null;\n        /**\n         * Segments intersecting {@link this.vertexFeature_} by segment uid.\n         * @type {Object<string, boolean>}\n         * @private\n         */\n        _this.vertexSegments_ = null;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.lastPixel_ = [0, 0];\n        /**\n         * Tracks if the next `singleclick` event should be ignored to prevent\n         * accidental deletion right after vertex creation.\n         * @type {boolean}\n         * @private\n         */\n        _this.ignoreNextSingleClick_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.modified_ = false;\n        /**\n         * Segment RTree for each layer\n         * @type {RBush<SegmentData>}\n         * @private\n         */\n        _this.rBush_ = new RBush();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.snappedToVertex_ = false;\n        /**\n         * Indicate whether the interaction is currently changing a feature's\n         * coordinates.\n         * @type {boolean}\n         * @private\n         */\n        _this.changingFeature_ = false;\n        /**\n         * @type {Array}\n         * @private\n         */\n        _this.dragSegments_ = [];\n        /**\n         * Draw overlay where sketch features are drawn.\n         * @type {VectorLayer}\n         * @private\n         */\n        _this.overlay_ = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                wrapX: !!options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @const\n         * @private\n         * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n         */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'Circle': _this.writeCircleGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_\n        };\n        /**\n         * @type {VectorSource}\n         * @private\n         */\n        _this.source_ = null;\n        var features;\n        if (options.source) {\n            _this.source_ = options.source;\n            features = new Collection(_this.source_.getFeatures());\n            listen(_this.source_, VectorEventType.ADDFEATURE, _this.handleSourceAdd_, _this);\n            listen(_this.source_, VectorEventType.REMOVEFEATURE, _this.handleSourceRemove_, _this);\n        }\n        else {\n            features = options.features;\n        }\n        if (!features) {\n            throw new Error('The modify interaction requires features or a source');\n        }\n        /**\n         * @type {Collection<Feature>}\n         * @private\n         */\n        _this.features_ = features;\n        _this.features_.forEach(_this.addFeature_.bind(_this));\n        listen(_this.features_, CollectionEventType.ADD, _this.handleFeatureAdd_, _this);\n        listen(_this.features_, CollectionEventType.REMOVE, _this.handleFeatureRemove_, _this);\n        /**\n         * @type {import(\"../MapBrowserPointerEvent.js\").default}\n         * @private\n         */\n        _this.lastPointerEvent_ = null;\n        return _this;\n    }\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.addFeature_ = function (feature) {\n        var geometry = feature.getGeometry();\n        if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n            this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n        }\n        var map = this.getMap();\n        if (map && map.isRendered() && this.getActive()) {\n            this.handlePointerAtPixel_(this.lastPixel_, map);\n        }\n        listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n     * @private\n     */\n    Modify.prototype.willModifyFeatures_ = function (evt) {\n        if (!this.modified_) {\n            this.modified_ = true;\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\n        }\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeature_ = function (feature) {\n        this.removeFeatureSegmentData_(feature);\n        // Remove the vertex feature if the collection of canditate features\n        // is empty.\n        if (this.vertexFeature_ && this.features_.getLength() === 0) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        unlisten(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n    };\n    /**\n     * @param {Feature} feature Feature.\n     * @private\n     */\n    Modify.prototype.removeFeatureSegmentData_ = function (feature) {\n        var rBush = this.rBush_;\n        var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n        rBush.forEach(\n        /**\n         * @param {SegmentData} node RTree node.\n         */\n        function (node) {\n            if (feature === node.feature) {\n                nodesToRemove.push(node);\n            }\n        });\n        for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n            var nodeToRemove = nodesToRemove[i];\n            for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n                if (this.dragSegments_[j][0] === nodeToRemove) {\n                    this.dragSegments_.splice(j, 1);\n                }\n            }\n            rBush.remove(nodeToRemove);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setActive = function (active) {\n        if (this.vertexFeature_ && !active) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n        _super.prototype.setActive.call(this, active);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.setMap = function (map) {\n        this.overlay_.setMap(map);\n        _super.prototype.setMap.call(this, map);\n    };\n    /**\n     * Get the overlay layer that this interaction renders sketch features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Modify.prototype.getOverlay = function () {\n        return this.overlay_;\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceAdd_ = function (event) {\n        if (event.feature) {\n            this.features_.push(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n     * @private\n     */\n    Modify.prototype.handleSourceRemove_ = function (event) {\n        if (event.feature) {\n            this.features_.remove(event.feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureAdd_ = function (evt) {\n        this.addFeature_(/** @type {Feature} */ (evt.element));\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureChange_ = function (evt) {\n        if (!this.changingFeature_) {\n            var feature = /** @type {Feature} */ (evt.target);\n            this.removeFeature_(feature);\n            this.addFeature_(feature);\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Modify.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = /** @type {Feature} */ (evt.element);\n        this.removeFeature_(feature);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {Point} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            segment: [coordinates, coordinates]\n        });\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                depth: [i],\n                index: i,\n                segment: [coordinates, coordinates]\n            });\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = /** @type {SegmentData} */ ({\n                feature: feature,\n                geometry: geometry,\n                index: i,\n                segment: segment\n            });\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = /** @type {SegmentData} */ ({\n                    feature: feature,\n                    geometry: geometry,\n                    depth: [j],\n                    index: i,\n                    segment: segment\n                });\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = /** @type {SegmentData} */ ({\n                        feature: feature,\n                        geometry: geometry,\n                        depth: [j, k],\n                        index: i,\n                        segment: segment\n                    });\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * We convert a circle into two segments.  The segment at index\n     * {@link CIRCLE_CENTER_INDEX} is the\n     * circle's center (a point).  The segment at index\n     * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n     * the circumference, and is not a line segment.\n     *\n     * @param {Feature} feature Feature.\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CENTER_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var circumferenceSegmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            index: CIRCLE_CIRCUMFERENCE_INDEX,\n            segment: [coordinates, coordinates]\n        });\n        var featureSegments = [centerSegmentData, circumferenceSegmentData];\n        centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n        this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n    };\n    /**\n     * @param {Feature} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Modify.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n        }\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @return {Feature} Vertex feature.\n     * @private\n     */\n    Modify.prototype.createOrUpdateVertexFeature_ = function (coordinates) {\n        var vertexFeature = this.vertexFeature_;\n        if (!vertexFeature) {\n            vertexFeature = new Feature(new Point(coordinates));\n            this.vertexFeature_ = vertexFeature;\n            this.overlay_.getSource().addFeature(vertexFeature);\n        }\n        else {\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            geometry.setCoordinates(coordinates);\n        }\n        return vertexFeature;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n     * @override\n     */\n    Modify.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!( /** @type {import(\"../MapBrowserPointerEvent.js\").default} */(mapBrowserEvent).pointerEvent)) {\n            return true;\n        }\n        this.lastPointerEvent_ = mapBrowserEvent;\n        var handled;\n        if (!mapBrowserEvent.map.getView().getInteracting() &&\n            mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n            !this.handlingDownUpSequence) {\n            this.handlePointerMove_(mapBrowserEvent);\n        }\n        if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n            if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n                handled = this.removePoint();\n            }\n            else {\n                handled = true;\n            }\n        }\n        if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n            this.ignoreNextSingleClick_ = false;\n        }\n        return _super.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDragEvent = function (evt) {\n        this.ignoreNextSingleClick_ = false;\n        this.willModifyFeatures_(evt);\n        var vertex = evt.coordinate;\n        for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n            var dragSegment = this.dragSegments_[i];\n            var segmentData = dragSegment[0];\n            var depth = segmentData.depth;\n            var geometry = segmentData.geometry;\n            var coordinates = void 0;\n            var segment = segmentData.segment;\n            var index = dragSegment[1];\n            while (vertex.length < geometry.getStride()) {\n                vertex.push(segment[index][vertex.length]);\n            }\n            switch (geometry.getType()) {\n                case GeometryType.POINT:\n                    coordinates = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.MULTI_POINT:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index] = vertex;\n                    segment[0] = segment[1] = vertex;\n                    break;\n                case GeometryType.LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_LINE_STRING:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    coordinates = geometry.getCoordinates();\n                    coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n                    segment[index] = vertex;\n                    break;\n                case GeometryType.CIRCLE:\n                    segment[0] = segment[1] = vertex;\n                    if (segmentData.index === CIRCLE_CENTER_INDEX) {\n                        this.changingFeature_ = true;\n                        geometry.setCenter(vertex);\n                        this.changingFeature_ = false;\n                    }\n                    else { // We're dragging the circle's circumference:\n                        this.changingFeature_ = true;\n                        geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n                        this.changingFeature_ = false;\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (coordinates) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n            }\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleDownEvent = function (evt) {\n        if (!this.condition_(evt)) {\n            return false;\n        }\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n        var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n        this.dragSegments_.length = 0;\n        this.modified_ = false;\n        var vertexFeature = this.vertexFeature_;\n        if (vertexFeature) {\n            var insertVertices = [];\n            var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n            var vertex = geometry.getCoordinates();\n            var vertexExtent = boundingExtent([vertex]);\n            var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n            var componentSegments = {};\n            segmentDataMatches.sort(compareIndexes);\n            for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n                var segmentDataMatch = segmentDataMatches[i];\n                var segment = segmentDataMatch.segment;\n                var uid = getUid(segmentDataMatch.feature);\n                var depth = segmentDataMatch.depth;\n                if (depth) {\n                    uid += '-' + depth.join('-'); // separate feature components\n                }\n                if (!componentSegments[uid]) {\n                    componentSegments[uid] = new Array(2);\n                }\n                if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n                    segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n                    if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n                        this.dragSegments_.push([segmentDataMatch, 0]);\n                        componentSegments[uid][0] = segmentDataMatch;\n                    }\n                }\n                else if (coordinatesEqual(segment[0], vertex) &&\n                    !componentSegments[uid][0]) {\n                    this.dragSegments_.push([segmentDataMatch, 0]);\n                    componentSegments[uid][0] = segmentDataMatch;\n                }\n                else if (coordinatesEqual(segment[1], vertex) &&\n                    !componentSegments[uid][1]) {\n                    // prevent dragging closed linestrings by the connecting node\n                    if ((segmentDataMatch.geometry.getType() ===\n                        GeometryType.LINE_STRING ||\n                        segmentDataMatch.geometry.getType() ===\n                            GeometryType.MULTI_LINE_STRING) &&\n                        componentSegments[uid][0] &&\n                        componentSegments[uid][0].index === 0) {\n                        continue;\n                    }\n                    this.dragSegments_.push([segmentDataMatch, 1]);\n                    componentSegments[uid][1] = segmentDataMatch;\n                }\n                else if (getUid(segment) in this.vertexSegments_ &&\n                    (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\n                    this.insertVertexCondition_(evt)) {\n                    insertVertices.push([segmentDataMatch, vertex]);\n                }\n            }\n            if (insertVertices.length) {\n                this.willModifyFeatures_(evt);\n            }\n            for (var j = insertVertices.length - 1; j >= 0; --j) {\n                this.insertVertex_.apply(this, insertVertices[j]);\n            }\n        }\n        return !!this.vertexFeature_;\n    };\n    /**\n     * @inheritDoc\n     */\n    Modify.prototype.handleUpEvent = function (evt) {\n        for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n            var segmentData = this.dragSegments_[i][0];\n            var geometry = segmentData.geometry;\n            if (geometry.getType() === GeometryType.CIRCLE) {\n                // Update a circle object in the R* bush:\n                var coordinates = geometry.getCenter();\n                var centerSegmentData = segmentData.featureSegments[0];\n                var circumferenceSegmentData = segmentData.featureSegments[1];\n                centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n                circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n                this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n                this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n            }\n            else {\n                this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n            }\n        }\n        if (this.modified_) {\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n     * @private\n     */\n    Modify.prototype.handlePointerMove_ = function (evt) {\n        this.lastPixel_ = evt.pixel;\n        this.handlePointerAtPixel_(evt.pixel, evt.map);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @private\n     */\n    Modify.prototype.handlePointerAtPixel_ = function (pixel, map) {\n        var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n        var sortByDistance = function (a, b) {\n            return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n                pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n        };\n        var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate), map.getView().getResolution() * this.pixelTolerance_);\n        var rBush = this.rBush_;\n        var nodes = rBush.getInExtent(box);\n        if (nodes.length > 0) {\n            nodes.sort(sortByDistance);\n            var node = nodes[0];\n            var closestSegment = node.segment;\n            var vertex = closestOnSegmentData(pixelCoordinate, node);\n            var vertexPixel = map.getPixelFromCoordinate(vertex);\n            var dist = coordinateDistance(pixel, vertexPixel);\n            if (dist <= this.pixelTolerance_) {\n                /** @type {Object<string, boolean>} */\n                var vertexSegments = {};\n                if (node.geometry.getType() === GeometryType.CIRCLE &&\n                    node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n                    this.snappedToVertex_ = true;\n                    this.createOrUpdateVertexFeature_(vertex);\n                }\n                else {\n                    var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                    var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                    var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                    var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                    dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                    this.snappedToVertex_ = dist <= this.pixelTolerance_;\n                    if (this.snappedToVertex_) {\n                        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    }\n                    this.createOrUpdateVertexFeature_(vertex);\n                    for (var i = 1, ii = nodes.length; i < ii; ++i) {\n                        var segment = nodes[i].segment;\n                        if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                            coordinatesEqual(closestSegment[1], segment[1]) ||\n                            (coordinatesEqual(closestSegment[0], segment[1]) &&\n                                coordinatesEqual(closestSegment[1], segment[0])))) {\n                            vertexSegments[getUid(segment)] = true;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                vertexSegments[getUid(closestSegment)] = true;\n                this.vertexSegments_ = vertexSegments;\n                return;\n            }\n        }\n        if (this.vertexFeature_) {\n            this.overlay_.getSource().removeFeature(this.vertexFeature_);\n            this.vertexFeature_ = null;\n        }\n    };\n    /**\n     * @param {SegmentData} segmentData Segment data.\n     * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n     * @private\n     */\n    Modify.prototype.insertVertex_ = function (segmentData, vertex) {\n        var segment = segmentData.segment;\n        var feature = segmentData.feature;\n        var geometry = segmentData.geometry;\n        var depth = segmentData.depth;\n        var index = /** @type {number} */ (segmentData.index);\n        var coordinates;\n        while (vertex.length < geometry.getStride()) {\n            vertex.push(0);\n        }\n        switch (geometry.getType()) {\n            case GeometryType.MULTI_LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.MULTI_POLYGON:\n                coordinates = geometry.getCoordinates();\n                coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n                break;\n            case GeometryType.LINE_STRING:\n                coordinates = geometry.getCoordinates();\n                coordinates.splice(index + 1, 0, vertex);\n                break;\n            default:\n                return;\n        }\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var rTree = this.rBush_;\n        rTree.remove(segmentData);\n        this.updateSegmentIndices_(geometry, index, depth, 1);\n        var newSegmentData = /** @type {SegmentData} */ ({\n            segment: [segment[0], vertex],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index\n        });\n        rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        this.dragSegments_.push([newSegmentData, 1]);\n        var newSegmentData2 = /** @type {SegmentData} */ ({\n            segment: [vertex, segment[1]],\n            feature: feature,\n            geometry: geometry,\n            depth: depth,\n            index: index + 1\n        });\n        rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n        this.dragSegments_.push([newSegmentData2, 0]);\n        this.ignoreNextSingleClick_ = true;\n    };\n    /**\n     * Removes the vertex currently being pointed.\n     * @return {boolean} True when a vertex was removed.\n     * @api\n     */\n    Modify.prototype.removePoint = function () {\n        if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n            var evt = this.lastPointerEvent_;\n            this.willModifyFeatures_(evt);\n            var removed = this.removeVertex_();\n            this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n            this.modified_ = false;\n            return removed;\n        }\n        return false;\n    };\n    /**\n     * Removes a vertex from all matching features.\n     * @return {boolean} True when a vertex was removed.\n     * @private\n     */\n    Modify.prototype.removeVertex_ = function () {\n        var dragSegments = this.dragSegments_;\n        var segmentsByFeature = {};\n        var deleted = false;\n        var component, coordinates, dragSegment, geometry, i, index, left;\n        var newIndex, right, segmentData, uid;\n        for (i = dragSegments.length - 1; i >= 0; --i) {\n            dragSegment = dragSegments[i];\n            segmentData = dragSegment[0];\n            uid = getUid(segmentData.feature);\n            if (segmentData.depth) {\n                // separate feature components\n                uid += '-' + segmentData.depth.join('-');\n            }\n            if (!(uid in segmentsByFeature)) {\n                segmentsByFeature[uid] = {};\n            }\n            if (dragSegment[1] === 0) {\n                segmentsByFeature[uid].right = segmentData;\n                segmentsByFeature[uid].index = segmentData.index;\n            }\n            else if (dragSegment[1] == 1) {\n                segmentsByFeature[uid].left = segmentData;\n                segmentsByFeature[uid].index = segmentData.index + 1;\n            }\n        }\n        for (uid in segmentsByFeature) {\n            right = segmentsByFeature[uid].right;\n            left = segmentsByFeature[uid].left;\n            index = segmentsByFeature[uid].index;\n            newIndex = index - 1;\n            if (left !== undefined) {\n                segmentData = left;\n            }\n            else {\n                segmentData = right;\n            }\n            if (newIndex < 0) {\n                newIndex = 0;\n            }\n            geometry = segmentData.geometry;\n            coordinates = geometry.getCoordinates();\n            component = coordinates;\n            deleted = false;\n            switch (geometry.getType()) {\n                case GeometryType.MULTI_LINE_STRING:\n                    if (coordinates[segmentData.depth[0]].length > 2) {\n                        coordinates[segmentData.depth[0]].splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.LINE_STRING:\n                    if (coordinates.length > 2) {\n                        coordinates.splice(index, 1);\n                        deleted = true;\n                    }\n                    break;\n                case GeometryType.MULTI_POLYGON:\n                    component = component[segmentData.depth[1]];\n                /* falls through */\n                case GeometryType.POLYGON:\n                    component = component[segmentData.depth[0]];\n                    if (component.length > 4) {\n                        if (index == component.length - 1) {\n                            index = 0;\n                        }\n                        component.splice(index, 1);\n                        deleted = true;\n                        if (index === 0) {\n                            // close the ring again\n                            component.pop();\n                            component.push(component[0]);\n                            newIndex = component.length - 1;\n                        }\n                    }\n                    break;\n                default:\n                // pass\n            }\n            if (deleted) {\n                this.setGeometryCoordinates_(geometry, coordinates);\n                var segments = [];\n                if (left !== undefined) {\n                    this.rBush_.remove(left);\n                    segments.push(left.segment[0]);\n                }\n                if (right !== undefined) {\n                    this.rBush_.remove(right);\n                    segments.push(right.segment[1]);\n                }\n                if (left !== undefined && right !== undefined) {\n                    var newSegmentData = /** @type {SegmentData} */ ({\n                        depth: segmentData.depth,\n                        feature: segmentData.feature,\n                        geometry: segmentData.geometry,\n                        index: newIndex,\n                        segment: segments\n                    });\n                    this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n                }\n                this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n                if (this.vertexFeature_) {\n                    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n                    this.vertexFeature_ = null;\n                }\n                dragSegments.length = 0;\n            }\n        }\n        return deleted;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {Array} coordinates Coordinates.\n     * @private\n     */\n    Modify.prototype.setGeometryCoordinates_ = function (geometry, coordinates) {\n        this.changingFeature_ = true;\n        geometry.setCoordinates(coordinates);\n        this.changingFeature_ = false;\n    };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} index Index.\n     * @param {Array<number>|undefined} depth Depth.\n     * @param {number} delta Delta (1 or -1).\n     * @private\n     */\n    Modify.prototype.updateSegmentIndices_ = function (geometry, index, depth, delta) {\n        this.rBush_.forEachInExtent(geometry.getExtent(), function (segmentDataMatch) {\n            if (segmentDataMatch.geometry === geometry &&\n                (depth === undefined || segmentDataMatch.depth === undefined ||\n                    equals(segmentDataMatch.depth, depth)) &&\n                segmentDataMatch.index > index) {\n                segmentDataMatch.index += delta;\n            }\n        });\n    };\n    return Modify;\n}(PointerInteraction));\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n    return a.index - b.index;\n}\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n        var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n        if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n            var distanceToCenterSquared = squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n            var distanceToCircumference = Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n            return distanceToCircumference * distanceToCircumference;\n        }\n    }\n    return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n    var geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE &&\n        segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n        return geometry.getClosestPoint(pointCoordinates);\n    }\n    return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var style = createEditingStyle();\n    return function (feature, resolution) {\n        return style[GeometryType.POINT];\n    };\n}\nexport default Modify;\n//# sourceMappingURL=Modify.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Select\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { extend, includes } from '../array.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { singleClick, never, shiftKeyOnly, pointerMove } from '../events/condition.js';\nimport { TRUE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport { clear } from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport { createEditingStyle } from '../style/Style.js';\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n    /**\n     * Triggered when feature(s) has been (de)selected.\n     * @event SelectEvent#select\n     * @api\n     */\n    SELECT: 'select'\n};\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /** @class */ (function (_super) {\n    __extends(SelectEvent, _super);\n    /**\n     * @param {SelectEventType} type The event type.\n     * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n     * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n     *     {@link module:ol/MapBrowserEvent}.\n     */\n    function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Selected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.selected = selected;\n        /**\n         * Deselected features array.\n         * @type {Array<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.deselected = deselected;\n        /**\n         * Associated {@link module:ol/MapBrowserEvent}.\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return SelectEvent;\n}(Event));\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /** @class */ (function (_super) {\n    __extends(Select, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Select(opt_options) {\n        var _this = _super.call(this, {\n            handleEvent: handleEvent\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : singleClick;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.addCondition_ = options.addCondition ? options.addCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multi_ = options.multi ? options.multi : false;\n        /**\n         * @private\n         * @type {FilterFunction}\n         */\n        _this.filter_ = options.filter ? options.filter : TRUE;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        var featureOverlay = new VectorLayer({\n            source: new VectorSource({\n                useSpatialIndex: false,\n                features: options.features,\n                wrapX: options.wrapX\n            }),\n            style: options.style ? options.style :\n                getDefaultStyleFunction(),\n            updateWhileAnimating: true,\n            updateWhileInteracting: true\n        });\n        /**\n         * @private\n         * @type {VectorLayer}\n         */\n        _this.featureOverlay_ = featureOverlay;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * An association between selected feature (key)\n         * and layer (value)\n         * @private\n         * @type {Object<string, import(\"../layer/Layer.js\").default>}\n         */\n        _this.featureLayerAssociation_ = {};\n        var features = _this.getFeatures();\n        listen(features, CollectionEventType.ADD, _this.addFeature_, _this);\n        listen(features, CollectionEventType.REMOVE, _this.removeFeature_, _this);\n        return _this;\n    }\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @private\n     */\n    Select.prototype.addFeatureLayerAssociation_ = function (feature, layer) {\n        this.featureLayerAssociation_[getUid(feature)] = layer;\n    };\n    /**\n     * Get the selected features.\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n     * @api\n     */\n    Select.prototype.getFeatures = function () {\n        return this.featureOverlay_.getSource().getFeaturesCollection();\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n     * the (last) selected feature. Note that this will not work with any\n     * programmatic method like pushing features to\n     * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n     * @return {VectorLayer} Layer.\n     * @api\n     */\n    Select.prototype.getLayer = function (feature) {\n        return (\n        /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)]));\n    };\n    /**\n     * Get the overlay layer that this interaction renders selected features to.\n     * @return {VectorLayer} Overlay layer.\n     * @api\n     */\n    Select.prototype.getOverlay = function () {\n        return this.featureOverlay_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Select.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * Remove the interaction from its current map, if any,  and attach it to a new\n     * map, if any. Pass `null` to just remove the interaction from the current map.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @override\n     * @api\n     */\n    Select.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var selectedFeatures = this.getFeatures();\n        if (currentMap) {\n            selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n        }\n        _super.prototype.setMap.call(this, map);\n        this.featureOverlay_.setMap(map);\n        if (map) {\n            selectedFeatures.forEach(map.skipFeature.bind(map));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.addFeature_ = function (evt) {\n        var map = this.getMap();\n        if (map) {\n            map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n        }\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Select.prototype.removeFeature_ = function (evt) {\n        var map = this.getMap();\n        if (map) {\n            map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @private\n     */\n    Select.prototype.removeFeatureLayerAssociation_ = function (feature) {\n        delete this.featureLayerAssociation_[getUid(feature)];\n    };\n    return Select;\n}(Interaction));\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n        return true;\n    }\n    var add = this.addCondition_(mapBrowserEvent);\n    var remove = this.removeCondition_(mapBrowserEvent);\n    var toggle = this.toggleCondition_(mapBrowserEvent);\n    var set = !add && !remove && !toggle;\n    var map = mapBrowserEvent.map;\n    var features = this.getFeatures();\n    var deselected = [];\n    var selected = [];\n    if (set) {\n        // Replace the currently selected feature(s) with the feature(s) at the\n        // pixel, or clear the selected feature(s) if there is no feature at\n        // the pixel.\n        clear(this.featureLayerAssociation_);\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                selected.push(feature);\n                this.addFeatureLayerAssociation_(feature, layer);\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var i = features.getLength() - 1; i >= 0; --i) {\n            var feature = features.item(i);\n            var index = selected.indexOf(feature);\n            if (index > -1) {\n                // feature is already selected\n                selected.splice(index, 1);\n            }\n            else {\n                features.remove(feature);\n                deselected.push(feature);\n            }\n        }\n        if (selected.length !== 0) {\n            features.extend(selected);\n        }\n    }\n    else {\n        // Modify the currently selected feature(s).\n        map.forEachFeatureAtPixel(mapBrowserEvent.pixel, (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n            if (this.filter_(feature, layer)) {\n                if ((add || toggle) && !includes(features.getArray(), feature)) {\n                    selected.push(feature);\n                    this.addFeatureLayerAssociation_(feature, layer);\n                }\n                else if ((remove || toggle) && includes(features.getArray(), feature)) {\n                    deselected.push(feature);\n                    this.removeFeatureLayerAssociation_(feature);\n                }\n                return !this.multi_;\n            }\n        }).bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n        for (var j = deselected.length - 1; j >= 0; --j) {\n            features.remove(deselected[j]);\n        }\n        features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n        this.dispatchEvent(new SelectEvent(SelectEventType.SELECT, selected, deselected, mapBrowserEvent));\n    }\n    return pointerMove(mapBrowserEvent);\n}\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n    var styles = createEditingStyle();\n    extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n    extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n    return function (feature, resolution) {\n        if (!feature.getGeometry()) {\n            return null;\n        }\n        return styles[feature.getGeometry().getType()];\n    };\n}\nexport default Select;\n//# sourceMappingURL=Select.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Snap\n */\nimport { getUid } from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport { distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment } from '../coordinate.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { boundingExtent, createEmpty } from '../extent.js';\nimport { TRUE, FALSE } from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { fromCircle } from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport { getValues } from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n    if ( /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */(evt).feature) {\n        return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n    }\n    else if ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element) {\n        return /** @type {import(\"../Feature.js\").default} */ ( /** @type {import(\"../Collection.js\").CollectionEvent} */(evt).element);\n    }\n}\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /** @class */ (function (_super) {\n    __extends(Snap, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Snap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.handleDownEvent) {\n            pointerOptions.handleDownEvent = TRUE;\n        }\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @type {import(\"../source/Vector.js\").default}\n         * @private\n         */\n        _this.source_ = options.source ? options.source : null;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.edge_ = options.edge !== undefined ? options.edge : true;\n        /**\n         * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features ? options.features : null;\n        /**\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featuresListenerKeys_ = [];\n        /**\n         * @type {Object<string, import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.featureChangeListenerKeys_ = {};\n        /**\n         * Extents are preserved so indexed segment can be quickly removed\n         * when its feature geometry changes\n         * @type {Object<string, import(\"../extent.js\").Extent>}\n         * @private\n         */\n        _this.indexedFeaturesExtents_ = {};\n        /**\n         * If a feature geometry changes while a pointer drag|move event occurs, the\n         * feature doesn't get updated right away.  It will be at the next 'pointerup'\n         * event fired.\n         * @type {!Object<string, import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.pendingFeatures_ = {};\n        /**\n         * Used for distance sorting in sortByDistance_\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.pixelCoordinate_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n            options.pixelTolerance : 10;\n        /**\n         * @type {function(SegmentData, SegmentData): number}\n         * @private\n         */\n        _this.sortByDistance_ = sortByDistance.bind(_this);\n        /**\n        * Segment RTree for each layer\n        * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n        * @private\n        */\n        _this.rBush_ = new RBush();\n        /**\n        * @const\n        * @private\n        * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n        */\n        _this.SEGMENT_WRITERS_ = {\n            'Point': _this.writePointGeometry_,\n            'LineString': _this.writeLineStringGeometry_,\n            'LinearRing': _this.writeLineStringGeometry_,\n            'Polygon': _this.writePolygonGeometry_,\n            'MultiPoint': _this.writeMultiPointGeometry_,\n            'MultiLineString': _this.writeMultiLineStringGeometry_,\n            'MultiPolygon': _this.writeMultiPolygonGeometry_,\n            'GeometryCollection': _this.writeGeometryCollectionGeometry_,\n            'Circle': _this.writeCircleGeometry_\n        };\n        return _this;\n    }\n    /**\n     * Add a feature to the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {boolean=} opt_listen Whether to listen to the feature change or not\n     *     Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.addFeature = function (feature, opt_listen) {\n        var register = opt_listen !== undefined ? opt_listen : true;\n        var feature_uid = getUid(feature);\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n            if (segmentWriter) {\n                this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n                segmentWriter.call(this, feature, geometry);\n            }\n        }\n        if (register) {\n            this.featureChangeListenerKeys_[feature_uid] = listen(feature, EventType.CHANGE, this.handleFeatureChange_, this);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureAdd_ = function (feature) {\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @private\n     */\n    Snap.prototype.forEachFeatureRemove_ = function (feature) {\n        this.removeFeature(feature);\n    };\n    /**\n     * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    Snap.prototype.getFeatures_ = function () {\n        var features;\n        if (this.features_) {\n            features = this.features_;\n        }\n        else if (this.source_) {\n            features = this.source_.getFeatures();\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleEvent = function (evt) {\n        var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n        if (result.snapped) {\n            evt.coordinate = result.vertex.slice(0, 2);\n            evt.pixel = result.vertexPixel;\n        }\n        return _super.prototype.handleEvent.call(this, evt);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureAdd_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.addFeature(feature);\n    };\n    /**\n     * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureRemove_ = function (evt) {\n        var feature = getFeatureFromEvent(evt);\n        this.removeFeature(feature);\n    };\n    /**\n     * @param {import(\"../events/Event.js\").default} evt Event.\n     * @private\n     */\n    Snap.prototype.handleFeatureChange_ = function (evt) {\n        var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n        if (this.handlingDownUpSequence) {\n            var uid = getUid(feature);\n            if (!(uid in this.pendingFeatures_)) {\n                this.pendingFeatures_[uid] = feature;\n            }\n        }\n        else {\n            this.updateFeature_(feature);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.handleUpEvent = function (evt) {\n        var featuresToUpdate = getValues(this.pendingFeatures_);\n        if (featuresToUpdate.length) {\n            featuresToUpdate.forEach(this.updateFeature_.bind(this));\n            this.pendingFeatures_ = {};\n        }\n        return false;\n    };\n    /**\n     * Remove a feature from the collection of features that we may snap to.\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n     *     or not. Defaults to `true`.\n     * @api\n     */\n    Snap.prototype.removeFeature = function (feature, opt_unlisten) {\n        var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n        var feature_uid = getUid(feature);\n        var extent = this.indexedFeaturesExtents_[feature_uid];\n        if (extent) {\n            var rBush = this.rBush_;\n            var nodesToRemove_1 = [];\n            rBush.forEachInExtent(extent, function (node) {\n                if (feature === node.feature) {\n                    nodesToRemove_1.push(node);\n                }\n            });\n            for (var i = nodesToRemove_1.length - 1; i >= 0; --i) {\n                rBush.remove(nodesToRemove_1[i]);\n            }\n        }\n        if (unregister) {\n            unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n            delete this.featureChangeListenerKeys_[feature_uid];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Snap.prototype.setMap = function (map) {\n        var currentMap = this.getMap();\n        var keys = this.featuresListenerKeys_;\n        var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n        if (currentMap) {\n            keys.forEach(unlistenByKey);\n            keys.length = 0;\n            features.forEach(this.forEachFeatureRemove_.bind(this));\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            if (this.features_) {\n                keys.push(listen(this.features_, CollectionEventType.ADD, this.handleFeatureAdd_, this), listen(this.features_, CollectionEventType.REMOVE, this.handleFeatureRemove_, this));\n            }\n            else if (this.source_) {\n                keys.push(listen(this.source_, VectorEventType.ADDFEATURE, this.handleFeatureAdd_, this), listen(this.source_, VectorEventType.REMOVEFEATURE, this.handleFeatureRemove_, this));\n            }\n            features.forEach(this.forEachFeatureAdd_.bind(this));\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n     * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @return {Result} Snap result\n     */\n    Snap.prototype.snapTo = function (pixel, pixelCoordinate, map) {\n        var lowerLeft = map.getCoordinateFromPixel([pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n        var upperRight = map.getCoordinateFromPixel([pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n        var box = boundingExtent([lowerLeft, upperRight]);\n        var segments = this.rBush_.getInExtent(box);\n        // If snapping on vertices only, don't consider circles\n        if (this.vertex_ && !this.edge_) {\n            segments = segments.filter(function (segment) {\n                return segment.feature.getGeometry().getType() !==\n                    GeometryType.CIRCLE;\n            });\n        }\n        var snappedToVertex = false;\n        var snapped = false;\n        var vertex = null;\n        var vertexPixel = null;\n        var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n        if (segments.length > 0) {\n            this.pixelCoordinate_ = pixelCoordinate;\n            segments.sort(this.sortByDistance_);\n            var closestSegment = segments[0].segment;\n            var isCircle = segments[0].feature.getGeometry().getType() ===\n                GeometryType.CIRCLE;\n            if (this.vertex_ && !this.edge_) {\n                pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n                squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n                dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                snappedToVertex = dist <= this.pixelTolerance_;\n                if (snappedToVertex) {\n                    snapped = true;\n                    vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                    vertexPixel = map.getPixelFromCoordinate(vertex);\n                }\n            }\n            else if (this.edge_) {\n                if (isCircle) {\n                    vertex = closestOnCircle(pixelCoordinate, \n                    /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n                }\n                else {\n                    vertex = closestOnSegment(pixelCoordinate, closestSegment);\n                }\n                vertexPixel = map.getPixelFromCoordinate(vertex);\n                if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n                    snapped = true;\n                    if (this.vertex_ && !isCircle) {\n                        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n                        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n                        squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n                        squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n                        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n                        snappedToVertex = dist <= this.pixelTolerance_;\n                        if (snappedToVertex) {\n                            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n                            vertexPixel = map.getPixelFromCoordinate(vertex);\n                        }\n                    }\n                }\n            }\n            if (snapped) {\n                vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n            }\n        }\n        return {\n            snapped: snapped,\n            vertex: vertex,\n            vertexPixel: vertexPixel\n        };\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @private\n     */\n    Snap.prototype.updateFeature_ = function (feature) {\n        this.removeFeature(feature, false);\n        this.addFeature(feature, false);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeCircleGeometry_ = function (feature, geometry) {\n        var polygon = fromCircle(geometry);\n        var coordinates = polygon.getCoordinates()[0];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeGeometryCollectionGeometry_ = function (feature, geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0; i < geometries.length; ++i) {\n            var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n            if (segmentWriter) {\n                segmentWriter.call(this, feature, geometries[i]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeLineStringGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n            var segment = coordinates.slice(i, i + 2);\n            var segmentData = {\n                feature: feature,\n                segment: segment\n            };\n            this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiLineStringGeometry_ = function (feature, geometry) {\n        var lines = geometry.getCoordinates();\n        for (var j = 0, jj = lines.length; j < jj; ++j) {\n            var coordinates = lines[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPointGeometry_ = function (feature, geometry) {\n        var points = geometry.getCoordinates();\n        for (var i = 0, ii = points.length; i < ii; ++i) {\n            var coordinates = points[i];\n            var segmentData = {\n                feature: feature,\n                segment: [coordinates, coordinates]\n            };\n            this.rBush_.insert(geometry.getExtent(), segmentData);\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writeMultiPolygonGeometry_ = function (feature, geometry) {\n        var polygons = geometry.getCoordinates();\n        for (var k = 0, kk = polygons.length; k < kk; ++k) {\n            var rings = polygons[k];\n            for (var j = 0, jj = rings.length; j < jj; ++j) {\n                var coordinates = rings[j];\n                for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                    var segment = coordinates.slice(i, i + 2);\n                    var segmentData = {\n                        feature: feature,\n                        segment: segment\n                    };\n                    this.rBush_.insert(boundingExtent(segment), segmentData);\n                }\n            }\n        }\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePointGeometry_ = function (feature, geometry) {\n        var coordinates = geometry.getCoordinates();\n        var segmentData = {\n            feature: feature,\n            segment: [coordinates, coordinates]\n        };\n        this.rBush_.insert(geometry.getExtent(), segmentData);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature\n     * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n     * @private\n     */\n    Snap.prototype.writePolygonGeometry_ = function (feature, geometry) {\n        var rings = geometry.getCoordinates();\n        for (var j = 0, jj = rings.length; j < jj; ++j) {\n            var coordinates = rings[j];\n            for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n                var segment = coordinates.slice(i, i + 2);\n                var segmentData = {\n                    feature: feature,\n                    segment: segment\n                };\n                this.rBush_.insert(boundingExtent(segment), segmentData);\n            }\n        }\n    };\n    return Snap;\n}(PointerInteraction));\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n    var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n    var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n    return deltaA - deltaB;\n}\nexport default Snap;\n//# sourceMappingURL=Snap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen } from '../events.js';\nimport Event from '../events/Event.js';\nimport { TRUE } from '../functions.js';\nimport { includes } from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n    /**\n     * Triggered upon feature translation start.\n     * @event TranslateEvent#translatestart\n     * @api\n     */\n    TRANSLATESTART: 'translatestart',\n    /**\n     * Triggered upon feature translation.\n     * @event TranslateEvent#translating\n     * @api\n     */\n    TRANSLATING: 'translating',\n    /**\n     * Triggered upon feature translation end.\n     * @event TranslateEvent#translateend\n     * @api\n     */\n    TRANSLATEEND: 'translateend'\n};\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nvar TranslateEvent = /** @class */ (function (_super) {\n    __extends(TranslateEvent, _super);\n    /**\n     * @param {TranslateEventType} type Type.\n     * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     */\n    function TranslateEvent(type, features, coordinate) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The features being translated.\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @api\n         */\n        _this.features = features;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        return _this;\n    }\n    return TranslateEvent;\n}(Event));\nexport { TranslateEvent };\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /** @class */ (function (_super) {\n    __extends(Translate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function Translate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, /** @type {import(\"./Pointer.js\").Options} */ (options)) || this;\n        /**\n         * The last position we translated to.\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.lastCoordinate_ = null;\n        /**\n         * @type {Collection<import(\"../Feature.js\").default>}\n         * @private\n         */\n        _this.features_ = options.features !== undefined ? options.features : null;\n        /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n        var layerFilter;\n        if (options.layers) {\n            if (typeof options.layers === 'function') {\n                layerFilter = options.layers;\n            }\n            else {\n                var layers_1 = options.layers;\n                layerFilter = function (layer) {\n                    return includes(layers_1, layer);\n                };\n            }\n        }\n        else {\n            layerFilter = TRUE;\n        }\n        /**\n         * @private\n         * @type {function(import(\"../layer/Layer.js\").default): boolean}\n         */\n        _this.layerFilter_ = layerFilter;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n        /**\n         * @type {import(\"../Feature.js\").default}\n         * @private\n         */\n        _this.lastFeature_ = null;\n        listen(_this, getChangeEventType(InteractionProperty.ACTIVE), _this.handleActiveChanged_, _this);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleDownEvent = function (event) {\n        this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n        if (!this.lastCoordinate_ && this.lastFeature_) {\n            this.lastCoordinate_ = event.coordinate;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATESTART, features, event.coordinate));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleUpEvent = function (event) {\n        if (this.lastCoordinate_) {\n            this.lastCoordinate_ = null;\n            this.handleMoveEvent(event);\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATEEND, features, event.coordinate));\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleDragEvent = function (event) {\n        if (this.lastCoordinate_) {\n            var newCoordinate = event.coordinate;\n            var deltaX_1 = newCoordinate[0] - this.lastCoordinate_[0];\n            var deltaY_1 = newCoordinate[1] - this.lastCoordinate_[1];\n            var features = this.features_ || new Collection([this.lastFeature_]);\n            features.forEach(function (feature) {\n                var geom = feature.getGeometry();\n                geom.translate(deltaX_1, deltaY_1);\n                feature.setGeometry(geom);\n            });\n            this.lastCoordinate_ = newCoordinate;\n            this.dispatchEvent(new TranslateEvent(TranslateEventType.TRANSLATING, features, newCoordinate));\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.handleMoveEvent = function (event) {\n        var elem = event.map.getViewport();\n        // Change the cursor to grab/grabbing if hovering any of the features managed\n        // by the interaction\n        if (this.featuresAtPixel_(event.pixel, event.map)) {\n            elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n            elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n        }\n        else {\n            elem.classList.remove('ol-grab', 'ol-grabbing');\n        }\n    };\n    /**\n     * Tests to see if the given coordinates intersects any of our selected\n     * features.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n     * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n     * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n     * coordinates.\n     * @private\n     */\n    Translate.prototype.featuresAtPixel_ = function (pixel, map) {\n        return map.forEachFeatureAtPixel(pixel, function (feature) {\n            if (!this.features_ || includes(this.features_.getArray(), feature)) {\n                return feature;\n            }\n        }.bind(this), {\n            layerFilter: this.layerFilter_,\n            hitTolerance: this.hitTolerance_\n        });\n    };\n    /**\n     * Returns the Hit-detection tolerance.\n     * @returns {number} Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.getHitTolerance = function () {\n        return this.hitTolerance_;\n    };\n    /**\n     * Hit-detection tolerance. Pixels inside the radius around the given position\n     * will be checked for features.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @api\n     */\n    Translate.prototype.setHitTolerance = function (hitTolerance) {\n        this.hitTolerance_ = hitTolerance;\n    };\n    /**\n     * @inheritDoc\n     */\n    Translate.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        _super.prototype.setMap.call(this, map);\n        this.updateState_(oldMap);\n    };\n    /**\n     * @private\n     */\n    Translate.prototype.handleActiveChanged_ = function () {\n        this.updateState_(null);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n     * @private\n     */\n    Translate.prototype.updateState_ = function (oldMap) {\n        var map = this.getMap();\n        var active = this.getActive();\n        if (!map || !active) {\n            map = map || oldMap;\n            if (map) {\n                var elem = map.getViewport();\n                elem.classList.remove('ol-grab', 'ol-grabbing');\n            }\n        }\n    };\n    return Translate;\n}(PointerInteraction));\nexport default Translate;\n//# sourceMappingURL=Translate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport { assert } from '../asserts.js';\nimport { containsExtent } from '../extent.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { deflateCoordinates } from '../geom/flat/deflate.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\nimport { isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = /** @class */ (function (_super) {\n    __extends(EsriJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function EsriJSON(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this) || this;\n        /**\n         * Name of the geometry attribute for features.\n         * @type {string|undefined}\n         * @private\n         */\n        _this.geometryName_ = options.geometryName;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readFeatureFromObject = function (object, opt_options) {\n        var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n        var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n        var feature = new Feature();\n        if (this.geometryName_) {\n            feature.setGeometryName(this.geometryName_);\n        }\n        feature.setGeometry(geometry);\n        if (opt_options && opt_options.idField &&\n            esriJSONFeature.attributes[opt_options.idField]) {\n            feature.setId(/** @type {number} */ (esriJSONFeature.attributes[opt_options.idField]));\n        }\n        if (esriJSONFeature.attributes) {\n            feature.setProperties(esriJSONFeature.attributes, true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        var options = opt_options ? opt_options : {};\n        if (object['features']) {\n            var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n            /** @type {Array<import(\"../Feature.js\").default>} */\n            var features = [];\n            var esriJSONFeatures = esriJSONFeatureSet.features;\n            options.idField = object.objectIdFieldName;\n            for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n                features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n            }\n            return features;\n        }\n        else {\n            return [this.readFeatureFromObject(object, options)];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readGeometryFromObject = function (object, opt_options) {\n        return readGeometry(/** @type {EsriJSONGeometry} */ (object), opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    EsriJSON.prototype.readProjectionFromObject = function (object) {\n        if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n            var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n            var crs = spatialReference.wkid;\n            return getProjection('EPSG:' + crs);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Encode a geometry as a EsriJSON object.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {EsriJSONGeometry} Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeGeometryObject = function (geometry, opt_options) {\n        return writeGeometry(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * Encode a feature as a esriJSON Feature object.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {Object} Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeFeatureObject = function (feature, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var object = {};\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            object['geometry'] = writeGeometry(geometry, opt_options);\n            if (opt_options && opt_options.featureProjection) {\n                object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */ ({\n                    wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n                });\n            }\n        }\n        var properties = feature.getProperties();\n        delete properties[feature.getGeometryName()];\n        if (!isEmpty(properties)) {\n            object['attributes'] = properties;\n        }\n        else {\n            object['attributes'] = {};\n        }\n        return object;\n    };\n    /**\n     * Encode an array of features as a EsriJSON object.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {EsriJSONFeatureSet} EsriJSON Object.\n     * @override\n     * @api\n     */\n    EsriJSON.prototype.writeFeaturesObject = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var objects = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            objects.push(this.writeFeatureObject(features[i], opt_options));\n        }\n        return {\n            'features': objects\n        };\n    };\n    return EsriJSON;\n}(JSONFeature));\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n    if (!object) {\n        return null;\n    }\n    /** @type {import(\"../geom/GeometryType.js\").default} */\n    var type;\n    if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n        type = GeometryType.POINT;\n    }\n    else if (object['points']) {\n        type = GeometryType.MULTI_POINT;\n    }\n    else if (object['paths']) {\n        var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n        if (esriJSONPolyline.paths.length === 1) {\n            type = GeometryType.LINE_STRING;\n        }\n        else {\n            type = GeometryType.MULTI_LINE_STRING;\n        }\n    }\n    else if (object['rings']) {\n        var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n        var layout = getGeometryLayout(esriJSONPolygon);\n        var rings = convertRings(esriJSONPolygon.rings, layout);\n        if (rings.length === 1) {\n            type = GeometryType.POLYGON;\n            object['rings'] = rings[0];\n        }\n        else {\n            type = GeometryType.MULTI_POLYGON;\n            object['rings'] = rings;\n        }\n    }\n    var geometryReader = GEOMETRY_READERS[type];\n    return transformGeometryWithOptions(geometryReader(object), false, opt_options);\n}\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n    var flatRing = [];\n    var outerRings = [];\n    var holes = [];\n    var i, ii;\n    for (i = 0, ii = rings.length; i < ii; ++i) {\n        flatRing.length = 0;\n        deflateCoordinates(flatRing, 0, rings[i], layout.length);\n        // is this ring an outer ring? is it clockwise?\n        var clockwise = linearRingIsClockwise(flatRing, 0, flatRing.length, layout.length);\n        if (clockwise) {\n            outerRings.push([rings[i]]);\n        }\n        else {\n            holes.push(rings[i]);\n        }\n    }\n    while (holes.length) {\n        var hole = holes.shift();\n        var matched = false;\n        // loop over all outer rings and see if they contain our hole.\n        for (i = outerRings.length - 1; i >= 0; i--) {\n            var outerRing = outerRings[i][0];\n            var containsHole = containsExtent(new LinearRing(outerRing).getExtent(), new LinearRing(hole).getExtent());\n            if (containsHole) {\n                // the hole is contained push it into our polygon\n                outerRings[i].push(hole);\n                matched = true;\n                break;\n            }\n        }\n        if (!matched) {\n            // no outer rings contain this hole turn it into and outer\n            // ring (reverse it)\n            outerRings.push([hole.reverse()]);\n        }\n    }\n    return outerRings;\n}\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n    var point;\n    if (object.m !== undefined && object.z !== undefined) {\n        point = new Point([object.x, object.y, object.z, object.m], GeometryLayout.XYZM);\n    }\n    else if (object.z !== undefined) {\n        point = new Point([object.x, object.y, object.z], GeometryLayout.XYZ);\n    }\n    else if (object.m !== undefined) {\n        point = new Point([object.x, object.y, object.m], GeometryLayout.XYM);\n    }\n    else {\n        point = new Point([object.x, object.y]);\n    }\n    return point;\n}\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new LineString(object.paths[0], layout);\n}\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiLineString(object.paths, layout);\n}\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n    var layout = GeometryLayout.XY;\n    if (object.hasZ === true && object.hasM === true) {\n        layout = GeometryLayout.XYZM;\n    }\n    else if (object.hasZ === true) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (object.hasM === true) {\n        layout = GeometryLayout.XYM;\n    }\n    return layout;\n}\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiPoint(object.points, layout);\n}\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new MultiPolygon(object.rings, layout);\n}\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n    var layout = getGeometryLayout(object);\n    return new Polygon(object.rings, layout);\n}\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n    var coordinates = geometry.getCoordinates();\n    /** @type {EsriJSONPoint} */\n    var esriJSON;\n    var layout = geometry.getLayout();\n    if (layout === GeometryLayout.XYZ) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            z: coordinates[2]\n        };\n    }\n    else if (layout === GeometryLayout.XYM) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            m: coordinates[2]\n        };\n    }\n    else if (layout === GeometryLayout.XYZM) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1],\n            z: coordinates[2],\n            m: coordinates[3]\n        };\n    }\n    else if (layout === GeometryLayout.XY) {\n        esriJSON = {\n            x: coordinates[0],\n            y: coordinates[1]\n        };\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    return esriJSON;\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n    var layout = geometry.getLayout();\n    return {\n        hasZ: (layout === GeometryLayout.XYZ ||\n            layout === GeometryLayout.XYZM),\n        hasM: (layout === GeometryLayout.XYM ||\n            layout === GeometryLayout.XYZM)\n    };\n}\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, opt_options) {\n    var hasZM = getHasZM(lineString);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        paths: [\n            /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n        ]\n    };\n}\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, opt_options) {\n    // Esri geometries use the left-hand rule\n    var hasZM = getHasZM(polygon);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n    };\n}\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, opt_options) {\n    var hasZM = getHasZM(multiLineString);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n    };\n}\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, opt_options) {\n    var hasZM = getHasZM(multiPoint);\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n    };\n}\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n    var hasZM = getHasZM(geometry);\n    var coordinates = geometry.getCoordinates(false);\n    var output = [];\n    for (var i = 0; i < coordinates.length; i++) {\n        for (var x = coordinates[i].length - 1; x >= 0; x--) {\n            output.push(coordinates[i][x]);\n        }\n    }\n    return {\n        hasZ: hasZM.hasZ,\n        hasM: hasZM.hasM,\n        rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output)\n    };\n}\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n    var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n    return geometryWriter(transformGeometryWithOptions(geometry, true, opt_options), opt_options);\n}\nexport default EsriJSON;\n//# sourceMappingURL=EsriJSON.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/XMLFeature\n */\nimport { abstract } from '../util.js';\nimport { extend } from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /** @class */ (function (_super) {\n    __extends(XMLFeature, _super);\n    function XMLFeature() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {XMLSerializer}\n         * @private\n         */\n        _this.xmlSerializer_ = new XMLSerializer();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.getType = function () {\n        return FormatType.XML;\n    };\n    /**\n     * Read a single feature.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    XMLFeature.prototype.readFeature = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromDocument = function (doc, opt_options) {\n        var features = this.readFeaturesFromDocument(doc, opt_options);\n        if (features.length > 0) {\n            return features[0];\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    XMLFeature.prototype.readFeatureFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read all features from a feature collection.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    XMLFeature.prototype.readFeatures = function (source, opt_options) {\n        if (!source) {\n            return [];\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeaturesFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readFeaturesFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromDocument = function (doc, opt_options) {\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(features, this.readFeaturesFromNode(n, opt_options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @abstract\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    XMLFeature.prototype.readFeaturesFromNode = function (node, opt_options) {\n        return abstract();\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.readGeometry = function (source, opt_options) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readGeometryFromDocument(doc, opt_options);\n        }\n        else if (isDocument(source)) {\n            return this.readGeometryFromDocument(\n            /** @type {Document} */ (source), opt_options);\n        }\n        else {\n            return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromDocument = function (doc, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    XMLFeature.prototype.readGeometryFromNode = function (node, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    XMLFeature.prototype.readProjection = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readProjectionFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readProjectionFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readProjectionFromNode(/** @type {Node} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromDocument = function (doc) {\n        return this.dataProjection;\n    };\n    /**\n     * @param {Node} node Node.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    XMLFeature.prototype.readProjectionFromNode = function (node) {\n        return this.dataProjection;\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeFeature = function (feature, opt_options) {\n        var node = this.writeFeatureNode(feature, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @protected\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeatureNode = function (feature, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Result.\n     * @api\n     */\n    XMLFeature.prototype.writeFeatures = function (features, opt_options) {\n        var node = this.writeFeaturesNode(features, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeFeaturesNode = function (features, opt_options) {\n        return null; // not implemented\n    };\n    /**\n     * @inheritDoc\n     */\n    XMLFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        var node = this.writeGeometryNode(geometry, opt_options);\n        return this.xmlSerializer_.serializeToString(node);\n    };\n    /**\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     */\n    XMLFeature.prototype.writeGeometryNode = function (geometry, opt_options) {\n        return null; // not implemented\n    };\n    return XMLFeature;\n}(FeatureFormat));\nexport default XMLFeature;\n//# sourceMappingURL=XMLFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport { extend } from '../array.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions, transformExtentWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = /** @class */ (function (_super) {\n    __extends(GMLBase, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function GMLBase(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = /** @type {Options} */ (opt_options ? opt_options : {});\n        /**\n         * @protected\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType = options.featureType;\n        /**\n         * @protected\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS = options.featureNS;\n        /**\n         * @protected\n         * @type {string}\n         */\n        _this.srsName = options.srsName;\n        /**\n         * @protected\n         * @type {string}\n         */\n        _this.schemaLocation = '';\n        /**\n         * @type {Object<string, Object<string, Object>>}\n         */\n        _this.FEATURE_COLLECTION_PARSERS = {};\n        _this.FEATURE_COLLECTION_PARSERS[_this.namespace] = {\n            'featureMember': makeArrayPusher(_this.readFeaturesInternal),\n            'featureMembers': makeReplacer(_this.readFeaturesInternal)\n        };\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<Feature> | undefined} Features.\n     */\n    GMLBase.prototype.readFeaturesInternal = function (node, objectStack) {\n        var localName = node.localName;\n        var features = null;\n        if (localName == 'FeatureCollection') {\n            features = pushParseAndPop([], this.FEATURE_COLLECTION_PARSERS, node, objectStack, this);\n        }\n        else if (localName == 'featureMembers' || localName == 'featureMember') {\n            var context = objectStack[0];\n            var featureType = context['featureType'];\n            var featureNS = context['featureNS'];\n            var prefix = 'p';\n            var defaultPrefix = 'p0';\n            if (!featureType && node.childNodes) {\n                featureType = [], featureNS = {};\n                for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n                    var child = node.childNodes[i];\n                    if (child.nodeType === 1) {\n                        var ft = child.nodeName.split(':').pop();\n                        if (featureType.indexOf(ft) === -1) {\n                            var key = '';\n                            var count = 0;\n                            var uri = child.namespaceURI;\n                            for (var candidate in featureNS) {\n                                if (featureNS[candidate] === uri) {\n                                    key = candidate;\n                                    break;\n                                }\n                                ++count;\n                            }\n                            if (!key) {\n                                key = prefix + count;\n                                featureNS[key] = uri;\n                            }\n                            featureType.push(key + ':' + ft);\n                        }\n                    }\n                }\n                if (localName != 'featureMember') {\n                    // recheck featureType for each featureMember\n                    context['featureType'] = featureType;\n                    context['featureNS'] = featureNS;\n                }\n            }\n            if (typeof featureNS === 'string') {\n                var ns = featureNS;\n                featureNS = {};\n                featureNS[defaultPrefix] = ns;\n            }\n            /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n            var parsersNS = {};\n            var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n            for (var p in featureNS) {\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                for (var i = 0, ii = featureTypes.length; i < ii; ++i) {\n                    var featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n                        defaultPrefix : featureTypes[i].split(':')[0];\n                    if (featurePrefix === p) {\n                        parsers[featureTypes[i].split(':').pop()] =\n                            (localName == 'featureMembers') ?\n                                makeArrayPusher(this.readFeatureElement, this) :\n                                makeReplacer(this.readFeatureElement, this);\n                    }\n                }\n                parsersNS[featureNS[p]] = parsers;\n            }\n            if (localName == 'featureMember') {\n                features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n            }\n            else {\n                features = pushParseAndPop([], parsersNS, node, objectStack);\n            }\n        }\n        if (features === null) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n     */\n    GMLBase.prototype.readGeometryElement = function (node, objectStack) {\n        var context = /** @type {Object} */ (objectStack[0]);\n        context['srsName'] = node.firstElementChild.getAttribute('srsName');\n        context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n        var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\n        if (geometry) {\n            if (Array.isArray(geometry)) {\n                return transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n            }\n            else {\n                return transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), false, context);\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {boolean} asFeature whether result should be wrapped as a feature.\n     * @return {Feature|Object} Feature\n     */\n    GMLBase.prototype.readFeatureElementInternal = function (node, objectStack, asFeature) {\n        var geometryName;\n        var values = {};\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var value = void 0;\n            var localName = n.localName;\n            // first, check if it is simple attribute\n            if (n.childNodes.length === 0\n                || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n                value = getAllTextContent(n, false);\n                if (ONLY_WHITESPACE_RE.test(value)) {\n                    value = undefined;\n                }\n            }\n            else {\n                if (asFeature) {\n                    //if feature, try it as a geometry\n                    value = this.readGeometryElement(n, objectStack);\n                }\n                if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\n                    value = this.readFeatureElementInternal(n, objectStack, false);\n                }\n                else if (localName !== 'boundedBy') {\n                    // boundedBy is an extent and must not be considered as a geometry\n                    geometryName = localName;\n                }\n            }\n            if (values[localName]) {\n                if (!(values[localName] instanceof Array)) {\n                    values[localName] = [values[localName]];\n                }\n                values[localName].push(value);\n            }\n            else {\n                values[localName] = value;\n            }\n            var len = n.attributes.length;\n            if (len > 0) {\n                values[localName] = { _content_: values[localName] };\n                for (var i = 0; i < len; i++) {\n                    var attName = n.attributes[i].name;\n                    values[localName][attName] = n.attributes[i].value;\n                }\n            }\n        }\n        if (!asFeature) {\n            return values;\n        }\n        else {\n            var feature = new Feature(values);\n            if (geometryName) {\n                feature.setGeometryName(geometryName);\n            }\n            var fid = node.getAttribute('fid') ||\n                getAttributeNS(node, this.namespace, 'id');\n            if (fid) {\n                feature.setId(fid);\n            }\n            return feature;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Feature} Feature.\n     */\n    GMLBase.prototype.readFeatureElement = function (node, objectStack) {\n        return this.readFeatureElementInternal(node, objectStack, true);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Point|undefined} Point.\n     */\n    GMLBase.prototype.readPoint = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            return new Point(flatCoordinates, GeometryLayout.XYZ);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiPoint|undefined} MultiPoint.\n     */\n    GMLBase.prototype.readMultiPoint = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var coordinates = pushParseAndPop([], this.MULTIPOINT_PARSERS_, node, objectStack, this);\n        if (coordinates) {\n            return new MultiPoint(coordinates);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiLineString|undefined} MultiLineString.\n     */\n    GMLBase.prototype.readMultiLineString = function (node, objectStack) {\n        /** @type {Array<LineString>} */\n        var lineStrings = pushParseAndPop([], this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n        if (lineStrings) {\n            return new MultiLineString(lineStrings);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {MultiPolygon|undefined} MultiPolygon.\n     */\n    GMLBase.prototype.readMultiPolygon = function (node, objectStack) {\n        /** @type {Array<Polygon>} */\n        var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n        if (polygons) {\n            return new MultiPolygon(polygons);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.pointMemberParser_ = function (node, objectStack) {\n        parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.lineStringMemberParser_ = function (node, objectStack) {\n        parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GMLBase.prototype.polygonMemberParser_ = function (node, objectStack) {\n        parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {LineString|undefined} LineString.\n     */\n    GMLBase.prototype.readLineString = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n            return lineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} LinearRing flat coordinates.\n     */\n    GMLBase.prototype.readFlatLinearRing_ = function (node, objectStack) {\n        var ring = pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n        if (ring) {\n            return ring;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {LinearRing|undefined} LinearRing.\n     */\n    GMLBase.prototype.readLinearRing = function (node, objectStack) {\n        var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n        if (flatCoordinates) {\n            return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Polygon|undefined} Polygon.\n     */\n    GMLBase.prototype.readPolygon = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var flatLinearRings = pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n        if (flatLinearRings && flatLinearRings[0]) {\n            var flatCoordinates = flatLinearRings[0];\n            var ends = [flatCoordinates.length];\n            var i = void 0, ii = void 0;\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n                extend(flatCoordinates, flatLinearRings[i]);\n                ends.push(flatCoordinates.length);\n            }\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>} Flat coordinates.\n     */\n    GMLBase.prototype.readFlatCoordinatesFromNode_ = function (node, objectStack) {\n        return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readGeometryFromNode = function (node, opt_options) {\n        var geometry = this.readGeometryElement(node, [this.getReadOptions(node, opt_options ? opt_options : {})]);\n        return geometry ? geometry : null;\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {\n            featureType: this.featureType,\n            featureNS: this.featureNS\n        };\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        var features = this.readFeaturesInternal(node, [options]);\n        return features || [];\n    };\n    /**\n     * @inheritDoc\n     */\n    GMLBase.prototype.readProjectionFromNode = function (node) {\n        return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n    };\n    return GMLBase;\n}(XMLFeature));\nGMLBase.prototype.namespace = GMLNS;\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {}\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n    }\n};\nexport default GMLBase;\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport { getAllTextContent, DOCUMENT } from '../xml.js';\nimport { padNumber } from '../string.js';\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n    var s = getAllTextContent(node, false);\n    return readBooleanString(s);\n}\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n    var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n    if (m) {\n        return m[1] !== undefined || false;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n    var s = getAllTextContent(node, false);\n    var dateTime = Date.parse(s);\n    return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n    var s = getAllTextContent(node, false);\n    return readDecimalString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n    // FIXME check spec\n    var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n    if (m) {\n        return parseFloat(m[1]);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n    var s = getAllTextContent(node, false);\n    return readNonNegativeIntegerString(s);\n}\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n    var m = /^\\s*(\\d+)\\s*$/.exec(string);\n    if (m) {\n        return parseInt(m[1], 10);\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n    return getAllTextContent(node, false).trim();\n}\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n    writeStringTextNode(node, (bool) ? '1' : '0');\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n    node.appendChild(DOCUMENT.createCDATASection(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n    var date = new Date(dateTime * 1000);\n    var string = date.getUTCFullYear() + '-' +\n        padNumber(date.getUTCMonth() + 1, 2) + '-' +\n        padNumber(date.getUTCDate(), 2) + 'T' +\n        padNumber(date.getUTCHours(), 2) + ':' +\n        padNumber(date.getUTCMinutes(), 2) + ':' +\n        padNumber(date.getUTCSeconds(), 2) + 'Z';\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n    var string = decimal.toPrecision();\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n    var string = nonNegativeInteger.toString();\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n    node.appendChild(DOCUMENT.createTextNode(string));\n}\n//# sourceMappingURL=xsd.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML3\n */\nimport { extend } from '../array.js';\nimport { createOrUpdate } from '../extent.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { readNonNegativeIntegerString, writeStringTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n    'MultiLineString': 'lineStringMember',\n    'MultiCurve': 'curveMember',\n    'MultiPolygon': 'polygonMember',\n    'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = /** @class */ (function (_super) {\n    __extends(GML3, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML3(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.surface_ = options.surface !== undefined ? options.surface : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.curve_ = options.curve !== undefined ? options.curve : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multiCurve_ = options.multiCurve !== undefined ?\n            options.multiCurve : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.multiSurface_ = options.multiSurface !== undefined ?\n            options.multiSurface : true;\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : schemaLocation;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hasZ = options.hasZ !== undefined ?\n            options.hasZ : false;\n        return _this;\n    }\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {MultiLineString|undefined} MultiLineString.\n     */\n    GML3.prototype.readMultiCurve_ = function (node, objectStack) {\n        /** @type {Array<LineString>} */\n        var lineStrings = pushParseAndPop([], this.MULTICURVE_PARSERS_, node, objectStack, this);\n        if (lineStrings) {\n            var multiLineString = new MultiLineString(lineStrings);\n            return multiLineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {MultiPolygon|undefined} MultiPolygon.\n     */\n    GML3.prototype.readMultiSurface_ = function (node, objectStack) {\n        /** @type {Array<Polygon>} */\n        var polygons = pushParseAndPop([], this.MULTISURFACE_PARSERS_, node, objectStack, this);\n        if (polygons) {\n            return new MultiPolygon(polygons);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.curveMemberParser_ = function (node, objectStack) {\n        parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.surfaceMemberParser_ = function (node, objectStack) {\n        parseNode(this.SURFACEMEMBER_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\n     */\n    GML3.prototype.readPatch_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.PATCHES_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} flat coordinates.\n     */\n    GML3.prototype.readSegment_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.SEGMENTS_PARSERS_, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<(Array<number>)>|undefined} flat coordinates.\n     */\n    GML3.prototype.readPolygonPatch_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} flat coordinates.\n     */\n    GML3.prototype.readLineStringSegment_ = function (node, objectStack) {\n        return pushParseAndPop([null], this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.interiorParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings.push(flatLinearRing);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML3.prototype.exteriorParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings[0] = flatLinearRing;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Polygon|undefined} Polygon.\n     */\n    GML3.prototype.readSurface_ = function (node, objectStack) {\n        /** @type {Array<Array<number>>} */\n        var flatLinearRings = pushParseAndPop([null], this.SURFACE_PARSERS_, node, objectStack, this);\n        if (flatLinearRings && flatLinearRings[0]) {\n            var flatCoordinates = flatLinearRings[0];\n            var ends = [flatCoordinates.length];\n            var i = void 0, ii = void 0;\n            for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n                extend(flatCoordinates, flatLinearRings[i]);\n                ends.push(flatCoordinates.length);\n            }\n            return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {LineString|undefined} LineString.\n     */\n    GML3.prototype.readCurve_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.CURVE_PARSERS_, node, objectStack, this);\n        if (flatCoordinates) {\n            var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n            return lineString;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n     */\n    GML3.prototype.readEnvelope_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.ENVELOPE_PARSERS_, node, objectStack, this);\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[2][0], flatCoordinates[2][1]);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML3.prototype.readFlatPos_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false);\n        var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n        /** @type {Array<number>} */\n        var flatCoordinates = [];\n        var m;\n        while ((m = re.exec(s))) {\n            flatCoordinates.push(parseFloat(m[1]));\n            s = s.substr(m[0].length);\n        }\n        if (s !== '') {\n            return undefined;\n        }\n        var context = objectStack[0];\n        var containerSrs = context['srsName'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            axisOrientation = proj.getAxisOrientation();\n        }\n        if (axisOrientation === 'neu') {\n            var i = void 0, ii = void 0;\n            for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n                var y = flatCoordinates[i];\n                var x = flatCoordinates[i + 1];\n                flatCoordinates[i] = x;\n                flatCoordinates[i + 1] = y;\n            }\n        }\n        var len = flatCoordinates.length;\n        if (len == 2) {\n            flatCoordinates.push(0);\n        }\n        if (len === 0) {\n            return undefined;\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML3.prototype.readFlatPosList_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n        var context = objectStack[0];\n        var containerSrs = context['srsName'];\n        var contextDimension = context['srsDimension'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            axisOrientation = proj.getAxisOrientation();\n        }\n        var coords = s.split(/\\s+/);\n        // The \"dimension\" attribute is from the GML 3.0.1 spec.\n        var dim = 2;\n        if (node.getAttribute('srsDimension')) {\n            dim = readNonNegativeIntegerString(node.getAttribute('srsDimension'));\n        }\n        else if (node.getAttribute('dimension')) {\n            dim = readNonNegativeIntegerString(node.getAttribute('dimension'));\n        }\n        else if ( /** @type {Element} */(node.parentNode).getAttribute('srsDimension')) {\n            dim = readNonNegativeIntegerString(\n            /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\n        }\n        else if (contextDimension) {\n            dim = readNonNegativeIntegerString(contextDimension);\n        }\n        var x, y, z;\n        var flatCoordinates = [];\n        for (var i = 0, ii = coords.length; i < ii; i += dim) {\n            x = parseFloat(coords[i]);\n            y = parseFloat(coords[i + 1]);\n            z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n            if (axisOrientation.substr(0, 2) === 'en') {\n                flatCoordinates.push(x, y, z);\n            }\n            else {\n                flatCoordinates.push(y, x, z);\n            }\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} value Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePos_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsDimension = hasZ ? '3' : '2';\n        node.setAttribute('srsDimension', srsDimension);\n        var srsName = context['srsName'];\n        var axisOrientation = 'enu';\n        if (srsName) {\n            axisOrientation = getProjection(srsName).getAxisOrientation();\n        }\n        var point = value.getCoordinates();\n        var coords;\n        // only 2d for simple features profile\n        if (axisOrientation.substr(0, 2) === 'en') {\n            coords = (point[0] + ' ' + point[1]);\n        }\n        else {\n            coords = (point[1] + ' ' + point[0]);\n        }\n        if (hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ' ' + z;\n        }\n        writeStringTextNode(node, coords);\n    };\n    /**\n     * @param {Array<number>} point Point geometry.\n     * @param {string=} opt_srsName Optional srsName\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n     * @return {string} The coords string.\n     * @private\n     */\n    GML3.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n        var axisOrientation = 'enu';\n        if (opt_srsName) {\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n        }\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n            point[0] + ' ' + point[1] :\n            point[1] + ' ' + point[0]);\n        if (opt_hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ' ' + z;\n        }\n        return coords;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePosList_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsDimension = hasZ ? '3' : '2';\n        node.setAttribute('srsDimension', srsDimension);\n        var srsName = context['srsName'];\n        // only 2d for simple features profile\n        var points = value.getCoordinates();\n        var len = points.length;\n        var parts = new Array(len);\n        var point;\n        for (var i = 0; i < len; ++i) {\n            point = points[i];\n            parts[i] = this.getCoords_(point, srsName, hasZ);\n        }\n        writeStringTextNode(node, parts.join(' '));\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var pos = createElementNS(node.namespaceURI, 'pos');\n        node.appendChild(pos);\n        this.writePos_(pos, geometry, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeEnvelope = function (node, extent, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var keys = ['lowerCorner', 'upperCorner'];\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var posList = createElementNS(node.namespaceURI, 'posList');\n        node.appendChild(posList);\n        this.writePosList_(posList, geometry, objectStack);\n    };\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     * @private\n     */\n    GML3.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var parentNode = context.node;\n        var exteriorWritten = context['exteriorWritten'];\n        if (exteriorWritten === undefined) {\n            context['exteriorWritten'] = true;\n        }\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'interior' : 'exterior');\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Polygon} geometry Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n            var rings = geometry.getLinearRings();\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n        }\n        else if (node.nodeName === 'Surface') {\n            var patches = createElementNS(node.namespaceURI, 'patches');\n            node.appendChild(patches);\n            this.writeSurfacePatches_(patches, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {LineString} geometry LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'LineString' ||\n            node.nodeName === 'LineStringSegment') {\n            var posList = createElementNS(node.namespaceURI, 'posList');\n            node.appendChild(posList);\n            this.writePosList_(posList, geometry, objectStack);\n        }\n        else if (node.nodeName === 'Curve') {\n            var segments = createElementNS(node.namespaceURI, 'segments');\n            node.appendChild(segments);\n            this.writeCurveSegments_(segments, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {MultiPolygon} geometry MultiPolygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var surface = context['surface'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var polygons = geometry.getPolygons();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        var hasZ = context['hasZ'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var points = geometry.getPoints();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {MultiLineString} geometry MultiLineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var curve = context['curve'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var lines = geometry.getLineStrings();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeRing_ = function (node, ring, objectStack) {\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n        node.appendChild(linearRing);\n        this.writeLinearRing_(linearRing, ring, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Polygon} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writePointMember_ = function (node, point, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'Point');\n        node.appendChild(child);\n        this.writePoint_(child, point, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {LineString} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeCurveOrLineString_(child, line, objectStack);\n        }\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Polygon} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n        node.appendChild(child);\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {LineString} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n        node.appendChild(child);\n        this.writeCurveOrLineString_(child, line, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n        var item = assign({}, context);\n        item['node'] = node;\n        var value;\n        if (Array.isArray(geometry)) {\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n        }\n        else {\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML3.prototype.writeFeatureElement = function (node, feature, objectStack) {\n        var fid = feature.getId();\n        if (fid) {\n            node.setAttribute('fid', /** @type {string} */ (fid));\n        }\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureNS = context['featureNS'];\n        var geometryName = feature.getGeometryName();\n        if (!context.serializers) {\n            context.serializers = {};\n            context.serializers[featureNS] = {};\n        }\n        var properties = feature.getProperties();\n        var keys = [];\n        var values = [];\n        for (var key in properties) {\n            var value = properties[key];\n            if (value !== null) {\n                keys.push(key);\n                values.push(value);\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n                    }\n                }\n                else {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n                    }\n                }\n            }\n        }\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML3.prototype.writeFeatureMembers_ = function (node, features, objectStack) {\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureType = context['featureType'];\n        var featureNS = context['featureNS'];\n        /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n        var serializers = {};\n        serializers[featureNS] = {};\n        serializers[featureNS][featureType] = makeChildAppender(this.writeFeatureElement, this);\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), serializers, makeSimpleNodeFactory(featureType, featureNS), features, objectStack);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node|undefined} Node.\n     * @private\n     */\n    GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(this.namespace, MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Element|undefined} Node.\n     * @private\n     */\n    GML3.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var multiSurface = context['multiSurface'];\n        var surface = context['surface'];\n        var curve = context['curve'];\n        var multiCurve = context['multiCurve'];\n        var nodeName;\n        if (!Array.isArray(value)) {\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\n                nodeName = 'MultiSurface';\n            }\n            else if (nodeName === 'Polygon' && surface === true) {\n                nodeName = 'Surface';\n            }\n            else if (nodeName === 'LineString' && curve === true) {\n                nodeName = 'Curve';\n            }\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\n                nodeName = 'MultiCurve';\n            }\n        }\n        else {\n            nodeName = 'Envelope';\n        }\n        return createElementNS(this.namespace, nodeName);\n    };\n    /**\n     * Encode a geometry in GML 3.1.1 Simple Features.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GML3.prototype.writeGeometryNode = function (geometry, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var geom = createElementNS(this.namespace, 'geom');\n        var context = { node: geom, hasZ: this.hasZ, srsName: this.srsName,\n            curve: this.curve_, surface: this.surface_,\n            multiSurface: this.multiSurface_, multiCurve: this.multiCurve_ };\n        if (opt_options) {\n            assign(context, opt_options);\n        }\n        this.writeGeometryElement(geom, geometry, [context]);\n        return geom;\n    };\n    /**\n     * Encode an array of features in the GML 3.1.1 format as an XML node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Element} Node.\n     * @override\n     * @api\n     */\n    GML3.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var node = createElementNS(this.namespace, 'featureMembers');\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n        var context = {\n            srsName: this.srsName,\n            hasZ: this.hasZ,\n            curve: this.curve_,\n            surface: this.surface_,\n            multiSurface: this.multiSurface_,\n            multiCurve: this.multiCurve_,\n            featureNS: this.featureNS,\n            featureType: this.featureType\n        };\n        if (opt_options) {\n            assign(context, opt_options);\n        }\n        this.writeFeatureMembers_(node, features, [context]);\n        return node;\n    };\n    return GML3;\n}(GMLBase));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'interior': GML3.prototype.interiorParser_,\n        'exterior': GML3.prototype.exteriorParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML3.prototype.readSurface_),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\n        'Curve': makeReplacer(GML3.prototype.readCurve_),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\n        'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'patches': makeReplacer(GML3.prototype.readPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'segments': makeReplacer(GML3.prototype.readSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\n    }\n};\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML3.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n    }\n};\nexport default GML3;\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {import(\"./GMLBase.js\").Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\nexport default GML;\n//# sourceMappingURL=GML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML2\n */\nimport { createOrUpdate } from '../extent.js';\nimport { transformExtentWithOptions, transformGeometryWithOptions } from './Feature.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { writeStringTextNode } from './xsd.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender, makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop } from '../xml.js';\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n    'MultiLineString': 'lineStringMember',\n    'MultiCurve': 'curveMember',\n    'MultiPolygon': 'polygonMember',\n    'MultiSurface': 'surfaceMember'\n};\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = /** @class */ (function (_super) {\n    __extends(GML2, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML2(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        _this.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\n            makeArrayPusher(_this.readFeaturesInternal);\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : schemaLocation;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<number>|undefined} Flat coordinates.\n     */\n    GML2.prototype.readFlatCoordinates_ = function (node, objectStack) {\n        var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n        var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\n        var containerSrs = context['srsName'];\n        var axisOrientation = 'enu';\n        if (containerSrs) {\n            var proj = getProjection(containerSrs);\n            if (proj) {\n                axisOrientation = proj.getAxisOrientation();\n            }\n        }\n        var coordsGroups = s.trim().split(/\\s+/);\n        var flatCoordinates = [];\n        for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n            var coords = coordsGroups[i].split(/,+/);\n            var x = parseFloat(coords[0]);\n            var y = parseFloat(coords[1]);\n            var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n            if (axisOrientation.substr(0, 2) === 'en') {\n                flatCoordinates.push(x, y, z);\n            }\n            else {\n                flatCoordinates.push(y, x, z);\n            }\n        }\n        return flatCoordinates;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n     */\n    GML2.prototype.readBox_ = function (node, objectStack) {\n        /** @type {Array<number>} */\n        var flatCoordinates = pushParseAndPop([null], this.BOX_PARSERS_, node, objectStack, this);\n        return createOrUpdate(flatCoordinates[1][0], flatCoordinates[1][1], flatCoordinates[1][3], flatCoordinates[1][4]);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML2.prototype.innerBoundaryIsParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings.push(flatLinearRing);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    GML2.prototype.outerBoundaryIsParser_ = function (node, objectStack) {\n        /** @type {Array<number>|undefined} */\n        var flatLinearRing = pushParseAndPop(undefined, this.RING_PARSERS, node, objectStack, this);\n        if (flatLinearRing) {\n            var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n            flatLinearRings[0] = flatLinearRing;\n        }\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Element|undefined} Node.\n     * @private\n     */\n    GML2.prototype.GEOMETRY_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var multiSurface = context['multiSurface'];\n        var surface = context['surface'];\n        var multiCurve = context['multiCurve'];\n        var nodeName;\n        if (!Array.isArray(value)) {\n            nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n            if (nodeName === 'MultiPolygon' && multiSurface === true) {\n                nodeName = 'MultiSurface';\n            }\n            else if (nodeName === 'Polygon' && surface === true) {\n                nodeName = 'Surface';\n            }\n            else if (nodeName === 'MultiLineString' && multiCurve === true) {\n                nodeName = 'MultiCurve';\n            }\n        }\n        else {\n            nodeName = 'Envelope';\n        }\n        return createElementNS('http://www.opengis.net/gml', nodeName);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML2.prototype.writeFeatureElement = function (node, feature, objectStack) {\n        var fid = feature.getId();\n        if (fid) {\n            node.setAttribute('fid', /** @type {string} */ (fid));\n        }\n        var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        var featureNS = context['featureNS'];\n        var geometryName = feature.getGeometryName();\n        if (!context.serializers) {\n            context.serializers = {};\n            context.serializers[featureNS] = {};\n        }\n        var properties = feature.getProperties();\n        var keys = [];\n        var values = [];\n        for (var key in properties) {\n            var value = properties[key];\n            if (value !== null) {\n                keys.push(key);\n                values.push(value);\n                if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(this.writeGeometryElement, this);\n                    }\n                }\n                else {\n                    if (!(key in context.serializers[featureNS])) {\n                        context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n                    }\n                }\n            }\n        }\n        var item = assign({}, context);\n        item.node = node;\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), context.serializers, makeSimpleNodeFactory(undefined, featureNS), values, objectStack, keys);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'LineStringSegment' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'LineString' ||\n            node.nodeName === 'LineStringSegment') {\n            var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n            node.appendChild(coordinates);\n            this.writeCoordinates_(coordinates, geometry, objectStack);\n        }\n        else if (node.nodeName === 'Curve') {\n            var segments = createElementNS(node.namespaceURI, 'segments');\n            node.appendChild(segments);\n            this.writeCurveSegments_(segments, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeLineStringOrCurveMember_ = function (node, line, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeCurveOrLineString_(child, line, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiCurveOrLineString_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var curve = context['curve'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var lines = geometry.getLineStrings();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, curve: curve }, this.LINESTRINGORCURVEMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     */\n    GML2.prototype.writeGeometryElement = function (node, geometry, objectStack) {\n        var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n        var item = assign({}, context);\n        item['node'] = node;\n        var value;\n        if (Array.isArray(geometry)) {\n            value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n        }\n        else {\n            value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (item), this.GEOMETRY_SERIALIZERS_, this.GEOMETRY_NODE_FACTORY_, [value], objectStack, undefined, this);\n    };\n    /**\n     * @param {string} namespaceURI XML namespace.\n     * @returns {Element} coordinates node.\n     * @private\n     */\n    GML2.prototype.createCoordinatesNode_ = function (namespaceURI) {\n        var coordinates = createElementNS(namespaceURI, 'coordinates');\n        coordinates.setAttribute('decimal', '.');\n        coordinates.setAttribute('cs', ',');\n        coordinates.setAttribute('ts', ' ');\n        return coordinates;\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCoordinates_ = function (node, value, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        // only 2d for simple features profile\n        var points = value.getCoordinates();\n        var len = points.length;\n        var parts = new Array(len);\n        for (var i = 0; i < len; ++i) {\n            var point = points[i];\n            parts[i] = this.getCoords_(point, srsName, hasZ);\n        }\n        writeStringTextNode(node, parts.join(' '));\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeCurveSegments_ = function (node, line, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n        node.appendChild(child);\n        this.writeCurveOrLineString_(child, line, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (node.nodeName !== 'PolygonPatch' && srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n            var rings = geometry.getLinearRings();\n            pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.RING_SERIALIZERS_, this.RING_NODE_FACTORY_, rings, objectStack, undefined, this);\n        }\n        else if (node.nodeName === 'Surface') {\n            var patches = createElementNS(node.namespaceURI, 'patches');\n            node.appendChild(patches);\n            this.writeSurfacePatches_(patches, geometry, objectStack);\n        }\n    };\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     * @private\n     */\n    GML2.prototype.RING_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var context = objectStack[objectStack.length - 1];\n        var parentNode = context.node;\n        var exteriorWritten = context['exteriorWritten'];\n        if (exteriorWritten === undefined) {\n            context['exteriorWritten'] = true;\n        }\n        return createElementNS(parentNode.namespaceURI, exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfacePatches_ = function (node, polygon, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n        node.appendChild(child);\n        this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeRing_ = function (node, ring, objectStack) {\n        var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n        node.appendChild(linearRing);\n        this.writeLinearRing_(linearRing, ring, objectStack);\n    };\n    /**\n     * @param {Array<number>} point Point geometry.\n     * @param {string=} opt_srsName Optional srsName\n     * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n     * @return {string} The coords string.\n     * @private\n     */\n    GML2.prototype.getCoords_ = function (point, opt_srsName, opt_hasZ) {\n        var axisOrientation = 'enu';\n        if (opt_srsName) {\n            axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n        }\n        var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n            point[0] + ',' + point[1] :\n            point[1] + ',' + point[0]);\n        if (opt_hasZ) {\n            // For newly created points, Z can be undefined.\n            var z = point[2] || 0;\n            coords += ',' + z;\n        }\n        return coords;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writePoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n        node.appendChild(coordinates);\n        var point = geometry.getCoordinates();\n        var coord = this.getCoords_(point, srsName, hasZ);\n        writeStringTextNode(coordinates, coord);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiPoint_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var points = geometry.getPoints();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName }, this.POINTMEMBER_SERIALIZERS_, makeSimpleNodeFactory('pointMember'), points, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Point.js\").default} point Point geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writePointMember_ = function (node, point, objectStack) {\n        var child = createElementNS(node.namespaceURI, 'Point');\n        node.appendChild(child);\n        this.writePoint_(child, point, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeLinearRing_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n        node.appendChild(coordinates);\n        this.writeCoordinates_(coordinates, geometry, objectStack);\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeMultiSurfaceOrPolygon_ = function (node, geometry, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var hasZ = context['hasZ'];\n        var srsName = context['srsName'];\n        var surface = context['surface'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var polygons = geometry.getPolygons();\n        pushSerializeAndPop({ node: node, hasZ: hasZ, srsName: srsName, surface: surface }, this.SURFACEORPOLYGONMEMBER_SERIALIZERS_, this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons, objectStack, undefined, this);\n    };\n    /**\n     * @param {Node} node Node.\n     * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeSurfaceOrPolygonMember_ = function (node, polygon, objectStack) {\n        var child = this.GEOMETRY_NODE_FACTORY_(polygon, objectStack);\n        if (child) {\n            node.appendChild(child);\n            this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {Array<*>} objectStack Node stack.\n     * @private\n     */\n    GML2.prototype.writeEnvelope = function (node, extent, objectStack) {\n        var context = objectStack[objectStack.length - 1];\n        var srsName = context['srsName'];\n        if (srsName) {\n            node.setAttribute('srsName', srsName);\n        }\n        var keys = ['lowerCorner', 'upperCorner'];\n        var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), this.ENVELOPE_SERIALIZERS_, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, keys, this);\n    };\n    /**\n     * @const\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node|undefined} Node.\n     * @private\n     */\n    GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function (value, objectStack, opt_nodeName) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS('http://www.opengis.net/gml', MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n    };\n    return GML2;\n}(GMLBase));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n        'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n    'http://www.opengis.net/gml': {\n        'coordinates': makeArrayPusher(GML2.prototype.readFlatCoordinates_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Box': makeReplacer(GML2.prototype.readBox_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'Curve': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML2.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML2.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML2.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML2.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML2.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML2.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML2.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML2.prototype.writeEnvelope)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lineStringMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML2.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n        'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'pointMember': makeChildAppender(GML2.prototype.writePointMember_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'surfaceMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML2.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\nexport default GML2;\n//# sourceMappingURL=GML2.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GML32\n */\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport { makeArrayPusher, makeReplacer, makeChildAppender } from '../xml.js';\nimport { writeStringTextNode } from '../format/xsd.js';\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nvar GML32 = /** @class */ (function (_super) {\n    __extends(GML32, _super);\n    /**\n     * @param {import(\"./GMLBase.js\").Options=} opt_options Optional configuration object.\n     */\n    function GML32(opt_options) {\n        var _this = this;\n        var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n        _this = _super.call(this, options) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.schemaLocation = options.schemaLocation ?\n            options.schemaLocation : _this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n        return _this;\n    }\n    return GML32;\n}(GML3));\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'pos': makeReplacer(GML3.prototype.readFlatPos_),\n        'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'interior': GML3.prototype.interiorParser_,\n        'exterior': GML3.prototype.exteriorParser_\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeReplacer(GMLBase.prototype.readPoint),\n        'MultiPoint': makeReplacer(GMLBase.prototype.readMultiPoint),\n        'LineString': makeReplacer(GMLBase.prototype.readLineString),\n        'MultiLineString': makeReplacer(GMLBase.prototype.readMultiLineString),\n        'LinearRing': makeReplacer(GMLBase.prototype.readLinearRing),\n        'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n        'MultiPolygon': makeReplacer(GMLBase.prototype.readMultiPolygon),\n        'Surface': makeReplacer(GML32.prototype.readSurface_),\n        'MultiSurface': makeReplacer(GML3.prototype.readMultiSurface_),\n        'Curve': makeReplacer(GML32.prototype.readCurve_),\n        'MultiCurve': makeReplacer(GML3.prototype.readMultiCurve_),\n        'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTICURVE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'curveMember': makeArrayPusher(GML3.prototype.curveMemberParser_),\n        'curveMembers': makeArrayPusher(GML3.prototype.curveMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTISURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeArrayPusher(GML3.prototype.surfaceMemberParser_),\n        'surfaceMembers': makeArrayPusher(GML3.prototype.surfaceMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString),\n        'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n        'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'patches': makeReplacer(GML3.prototype.readPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'segments': makeReplacer(GML3.prototype.readSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.ENVELOPE_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeArrayPusher(GML3.prototype.readFlatPosList_),\n        'upperCorner': makeArrayPusher(GML3.prototype.readFlatPosList_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.PATCHES_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'PolygonPatch': makeReplacer(GML3.prototype.readPolygonPatch_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SEGMENTS_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineStringSegment': makeReplacer(GML3.prototype.readLineStringSegment_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOINT_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n        'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n        'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n        'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.RING_PARSERS = {\n    'http://www.opengis.net/gml/3.2': {\n        'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.RING_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'exterior': makeChildAppender(GML3.prototype.writeRing_),\n        'interior': makeChildAppender(GML3.prototype.writeRing_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lowerCorner': makeChildAppender(writeStringTextNode),\n        'upperCorner': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'surfaceMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_),\n        'polygonMember': makeChildAppender(GML3.prototype.writeSurfaceOrPolygonMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'pointMember': makeChildAppender(GML3.prototype.writePointMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'lineStringMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_),\n        'curveMember': makeChildAppender(GML3.prototype.writeLineStringOrCurveMember_)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\n    'http://www.opengis.net/gml/3.2': {\n        'Curve': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiCurve': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'Point': makeChildAppender(GML32.prototype.writePoint_),\n        'MultiPoint': makeChildAppender(GML3.prototype.writeMultiPoint_),\n        'LineString': makeChildAppender(GML3.prototype.writeCurveOrLineString_),\n        'MultiLineString': makeChildAppender(GML3.prototype.writeMultiCurveOrLineString_),\n        'LinearRing': makeChildAppender(GML3.prototype.writeLinearRing_),\n        'Polygon': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiPolygon': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Surface': makeChildAppender(GML3.prototype.writeSurfaceOrPolygon_),\n        'MultiSurface': makeChildAppender(GML3.prototype.writeMultiSurfaceOrPolygon_),\n        'Envelope': makeChildAppender(GML3.prototype.writeEnvelope)\n    }\n};\nexport default GML32;\n//# sourceMappingURL=GML32.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport { includes } from '../array.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode } from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender, makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.topografix.com/GPX/1/0',\n    'http://www.topografix.com/GPX/1/1'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n    'rte': readRte,\n    'trk': readTrk,\n    'wpt': readWpt\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n});\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = /** @class */ (function (_super) {\n    __extends(GPX, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function GPX(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @type {function(Feature, Node): void|undefined}\n         * @private\n         */\n        _this.readExtensions_ = options.readExtensions;\n        return _this;\n    }\n    /**\n     * @param {Array<Feature>} features List of features.\n     * @private\n     */\n    GPX.prototype.handleReadExtensions_ = function (features) {\n        if (!features) {\n            features = [];\n        }\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            var feature = features[i];\n            if (this.readExtensions_) {\n                var extensionsNode = feature.get('extensionsNode_') || null;\n                this.readExtensions_(feature, extensionsNode);\n            }\n            feature.set('extensionsNode_', undefined);\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var featureReader = FEATURE_READER[node.localName];\n        if (!featureReader) {\n            return null;\n        }\n        var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n        if (!feature) {\n            return null;\n        }\n        this.handleReadExtensions_([feature]);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    GPX.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        if (node.localName == 'gpx') {\n            /** @type {Array<Feature>} */\n            var features = pushParseAndPop([], GPX_PARSERS, node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                this.handleReadExtensions_(features);\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        return [];\n    };\n    /**\n     * Encode an array of features in the GPX format as an XML node.\n     * LineString geometries are output as routes (`<rte>`), and MultiLineString\n     * as tracks (`<trk>`).\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    GPX.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        //FIXME Serialize metadata\n        var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        gpx.setAttribute('version', '1.1');\n        gpx.setAttribute('creator', 'OpenLayers');\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: gpx }), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n        return gpx;\n    };\n    return GPX;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n});\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time'\n]);\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n});\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n});\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'wpt',\n    'LineString': 'rte',\n    'MultiLineString': 'trk'\n};\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n    var geometry = /** @type {Feature} */ (value).getGeometry();\n    if (geometry) {\n        var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n        if (nodeName) {\n            var parentNode = objectStack[objectStack.length - 1].node;\n            return createElementNS(parentNode.namespaceURI, nodeName);\n        }\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n    flatCoordinates.push(parseFloat(node.getAttribute('lon')), parseFloat(node.getAttribute('lat')));\n    if ('ele' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['ele']));\n        delete values['ele'];\n        layoutOptions.hasZ = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    if ('time' in values) {\n        flatCoordinates.push(/** @type {number} */ (values['time']));\n        delete values['time'];\n        layoutOptions.hasM = true;\n    }\n    else {\n        flatCoordinates.push(0);\n    }\n    return flatCoordinates;\n}\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n    var layout = GeometryLayout.XY;\n    var stride = 2;\n    if (layoutOptions.hasZ && layoutOptions.hasM) {\n        layout = GeometryLayout.XYZM;\n        stride = 4;\n    }\n    else if (layoutOptions.hasZ) {\n        layout = GeometryLayout.XYZ;\n        stride = 3;\n    }\n    else if (layoutOptions.hasM) {\n        layout = GeometryLayout.XYM;\n        stride = 3;\n    }\n    if (stride !== 4) {\n        for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n            flatCoordinates[i * stride] = flatCoordinates[i * 4];\n            flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n            if (layoutOptions.hasZ) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n            }\n            if (layoutOptions.hasM) {\n                flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n            }\n        }\n        flatCoordinates.length = flatCoordinates.length / 4 * stride;\n        if (ends) {\n            for (var i = 0, ii = ends.length; i < ii; i++) {\n                ends[i] = ends[i] / 4 * stride;\n            }\n        }\n    }\n    return layout;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var href = node.getAttribute('href');\n    if (href !== null) {\n        values['link'] = href;\n    }\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values['extensionsNode_'] = node;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n    var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n    if (values) {\n        var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n    var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n    if (values) {\n        var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n        var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n        appendCoordinate(flatCoordinates, layoutOptions, node, values);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    parseNode(TRKSEG_PARSERS, node, objectStack);\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    ends.push(flatCoordinates.length);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'layoutOptions': {}\n    }, RTE_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n    var geometry = new LineString(flatCoordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({\n        'flatCoordinates': [],\n        'ends': [],\n        'layoutOptions': {}\n    }, TRK_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var flatCoordinates = /** @type {Array<number>} */ (values['flatCoordinates']);\n    delete values['flatCoordinates'];\n    var ends = /** @type {Array<number>} */ (values['ends']);\n    delete values['ends'];\n    var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n    delete values['layoutOptions'];\n    var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n    var geometry = new MultiLineString(flatCoordinates, layout, ends);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n    if (!values) {\n        return undefined;\n    }\n    var layoutOptions = /** @type {LayoutOptions} */ ({});\n    var coordinates = appendCoordinate([], layoutOptions, node, values);\n    var layout = applyLayoutOptions(layoutOptions, coordinates);\n    var geometry = new Point(coordinates, layout);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setProperties(values, true);\n    return feature;\n}\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n    node.setAttribute('href', value);\n    var context = objectStack[objectStack.length - 1];\n    var properties = context['properties'];\n    var link = [\n        properties['linkText'],\n        properties['linkType']\n    ];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node }), LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, link, objectStack, LINK_SEQUENCE);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var namespaceURI = parentNode.namespaceURI;\n    var properties = context['properties'];\n    //FIXME Projection handling\n    node.setAttributeNS(null, 'lat', String(coordinate[1]));\n    node.setAttributeNS(null, 'lon', String(coordinate[0]));\n    var geometryLayout = context['geometryLayout'];\n    switch (geometryLayout) {\n        case GeometryLayout.XYZM:\n            if (coordinate[3] !== 0) {\n                properties['time'] = coordinate[3];\n            }\n        // fall through\n        case GeometryLayout.XYZ:\n            if (coordinate[2] !== 0) {\n                properties['ele'] = coordinate[2];\n            }\n            break;\n        case GeometryLayout.XYM:\n            if (coordinate[2] !== 0) {\n                properties['time'] = coordinate[2];\n            }\n            break;\n        default:\n        // pass\n    }\n    var orderedKeys = (node.nodeName == 'rtept') ?\n        RTEPT_TYPE_SEQUENCE[namespaceURI] :\n        WPT_TYPE_SEQUENCE[namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ node: node, 'properties': properties }), WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.LINE_STRING) {\n        var lineString = /** @type {LineString} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = lineString.getLayout();\n        properties['rtept'] = lineString.getCoordinates();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var properties = feature.getProperties();\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['properties'] = properties;\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n        var multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(geometry, true, options));\n        properties['trkseg'] = multiLineString.getLineStrings();\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    context['geometryLayout'] = lineString.getLayout();\n    context['properties'] = {};\n    pushSerializeAndPop(context, TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY, lineString.getCoordinates(), objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var context = objectStack[objectStack.length - 1];\n    context['properties'] = feature.getProperties();\n    var geometry = feature.getGeometry();\n    if (geometry.getType() == GeometryType.POINT) {\n        var point = /** @type {Point} */ (transformGeometryWithOptions(geometry, true, options));\n        context['geometryLayout'] = point.getLayout();\n        writeWptType(node, point.getCoordinates(), objectStack);\n    }\n}\nexport default GPX;\n//# sourceMappingURL=GPX.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TextFeature\n */\nimport { abstract } from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = /** @class */ (function (_super) {\n    __extends(TextFeature, _super);\n    function TextFeature() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TextFeature.prototype.getType = function () {\n        return FormatType.TEXT;\n    };\n    /**\n     * Read the feature from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../Feature.js\").default} Feature.\n     * @api\n     */\n    TextFeature.prototype.readFeature = function (source, opt_options) {\n        return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../Feature.js\").default} Feature.\n     */\n    TextFeature.prototype.readFeatureFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the features from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @api\n     */\n    TextFeature.prototype.readFeatures = function (source, opt_options) {\n        return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     */\n    TextFeature.prototype.readFeaturesFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the geometry from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     * @api\n     */\n    TextFeature.prototype.readGeometry = function (source, opt_options) {\n        return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {string} text Text.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @protected\n     * @return {import(\"../geom/Geometry.js\").default} Geometry.\n     */\n    TextFeature.prototype.readGeometryFromText = function (text, opt_options) {\n        return abstract();\n    };\n    /**\n     * Read the projection from the source.\n     *\n     * @param {Document|Node|Object|string} source Source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    TextFeature.prototype.readProjection = function (source) {\n        return this.readProjectionFromText(getText(source));\n    };\n    /**\n     * @param {string} text Text.\n     * @protected\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     */\n    TextFeature.prototype.readProjectionFromText = function (text) {\n        return this.dataProjection;\n    };\n    /**\n     * Encode a feature as a string.\n     *\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded feature.\n     * @api\n     */\n    TextFeature.prototype.writeFeature = function (feature, opt_options) {\n        return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../Feature.js\").default} feature Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeatureText = function (feature, opt_options) {\n        return abstract();\n    };\n    /**\n     * Encode an array of features as string.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Encoded features.\n     * @api\n     */\n    TextFeature.prototype.writeFeatures = function (features, opt_options) {\n        return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"../Feature.js\").default>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeFeaturesText = function (features, opt_options) {\n        return abstract();\n    };\n    /**\n     * Write a single geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @return {string} Geometry.\n     * @api\n     */\n    TextFeature.prototype.writeGeometry = function (geometry, opt_options) {\n        return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n     * @protected\n     * @return {string} Text.\n     */\n    TextFeature.prototype.writeGeometryText = function (geometry, opt_options) {\n        return abstract();\n    };\n    return TextFeature;\n}(FeatureFormat));\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n    if (typeof source === 'string') {\n        return source;\n    }\n    else {\n        return '';\n    }\n}\nexport default TextFeature;\n//# sourceMappingURL=TextFeature.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport { extend, includes } from '../array.js';\nimport { assert } from '../asserts.js';\nimport { asArray } from '../color.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode } from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { toRadians } from '../math.js';\nimport { get as getProjection } from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport { createElementNS, getAllTextContent, isDocument, makeArrayExtender, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS, OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n    'http://www.google.com/kml/ext/2.2'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://earth.google.com/kml/2.0',\n    'http://earth.google.com/kml/2.1',\n    'http://earth.google.com/kml/2.2',\n    'http://www.opengis.net/kml/2.2'\n];\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n    'fraction': IconAnchorUnits.FRACTION,\n    'pixels': IconAnchorUnits.PIXELS,\n    'insetPixels': IconAnchorUnits.PIXELS\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PLACEMARK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'MultiTrack': makeObjectPropertySetter(readGxMultiTrack, 'geometry'),\n    'Track': makeObjectPropertySetter(readGxTrack, 'geometry')\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NETWORK_LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REGION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar KML_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'Document', 'Placemark'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar KML_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n    return DEFAULT_FILL_STYLE;\n}\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n    return DEFAULT_IMAGE_STYLE;\n}\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n    return DEFAULT_STROKE_STYLE;\n}\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n    return DEFAULT_TEXT_STYLE;\n}\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n    return DEFAULT_STYLE;\n}\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n    return DEFAULT_STYLE_ARRAY;\n}\nfunction createStyleDefaults() {\n    DEFAULT_COLOR = [255, 255, 255, 1];\n    DEFAULT_FILL_STYLE = new Fill({\n        color: DEFAULT_COLOR\n    });\n    DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n    DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n    DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n    DEFAULT_IMAGE_STYLE_SRC =\n        'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n    DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n    DEFAULT_IMAGE_STYLE = new Icon({\n        anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n        anchorOrigin: IconOrigin.BOTTOM_LEFT,\n        anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n        anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n        crossOrigin: 'anonymous',\n        rotation: 0,\n        scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n        size: DEFAULT_IMAGE_STYLE_SIZE,\n        src: DEFAULT_IMAGE_STYLE_SRC\n    });\n    DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n    DEFAULT_STROKE_STYLE = new Stroke({\n        color: DEFAULT_COLOR,\n        width: 1\n    });\n    DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n        color: [51, 51, 51, 1],\n        width: 2\n    });\n    DEFAULT_TEXT_STYLE = new Text({\n        font: 'bold 16px Helvetica',\n        fill: DEFAULT_FILL_STYLE,\n        stroke: DEFAULT_TEXT_STROKE_STYLE,\n        scale: 0.8\n    });\n    DEFAULT_STYLE = new Style({\n        fill: DEFAULT_FILL_STYLE,\n        image: DEFAULT_IMAGE_STYLE,\n        text: DEFAULT_TEXT_STYLE,\n        stroke: DEFAULT_STROKE_STYLE,\n        zIndex: 0\n    });\n    DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n}\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /** @class */ (function (_super) {\n    __extends(KML, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KML(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        if (!DEFAULT_STYLE_ARRAY) {\n            createStyleDefaults();\n        }\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {Array<Style>}\n         */\n        _this.defaultStyle_ = options.defaultStyle ?\n            options.defaultStyle : DEFAULT_STYLE_ARRAY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.extractStyles_ = options.extractStyles !== undefined ?\n            options.extractStyles : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.writeStyles_ = options.writeStyles !== undefined ?\n            options.writeStyles : true;\n        /**\n         * @private\n         * @type {!Object<string, (Array<Style>|string)>}\n         */\n        _this.sharedStyles_ = {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.showPointNames_ = options.showPointNames !== undefined ?\n            options.showPointNames : true;\n        return _this;\n    }\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Array<Feature>|undefined} Features.\n     */\n    KML.prototype.readDocumentOrFolder_ = function (node, objectStack) {\n        // FIXME use scope somehow\n        var parsersNS = makeStructureNS(NAMESPACE_URIS, {\n            'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n            'Placemark': makeArrayPusher(this.readPlacemark_, this),\n            'Style': this.readSharedStyle_.bind(this),\n            'StyleMap': this.readSharedStyleMap_.bind(this)\n        });\n        /** @type {Array<Feature>} */\n        var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n        if (features) {\n            return features;\n        }\n        else {\n            return undefined;\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     * @return {Feature|undefined} Feature.\n     */\n    KML.prototype.readPlacemark_ = function (node, objectStack) {\n        var object = pushParseAndPop({ 'geometry': null }, PLACEMARK_PARSERS, node, objectStack);\n        if (!object) {\n            return undefined;\n        }\n        var feature = new Feature();\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            feature.setId(id);\n        }\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n        var geometry = object['geometry'];\n        if (geometry) {\n            transformGeometryWithOptions(geometry, false, options);\n        }\n        feature.setGeometry(geometry);\n        delete object['geometry'];\n        if (this.extractStyles_) {\n            var style = object['Style'];\n            var styleUrl = object['styleUrl'];\n            var styleFunction = createFeatureStyleFunction(style, styleUrl, this.defaultStyle_, this.sharedStyles_, this.showPointNames_);\n            feature.setStyle(styleFunction);\n        }\n        delete object['Style'];\n        // we do not remove the styleUrl property from the object, so it\n        // gets stored on feature when setProperties is called\n        feature.setProperties(object, true);\n        return feature;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyle_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id !== null) {\n            var style = readStyle(node, objectStack);\n            if (style) {\n                var styleUri = void 0;\n                var baseURI = node.baseURI;\n                if (!baseURI || baseURI == 'about:blank') {\n                    baseURI = window.location.href;\n                }\n                if (baseURI) {\n                    var url = new URL('#' + id, baseURI);\n                    styleUri = url.href;\n                }\n                else {\n                    styleUri = '#' + id;\n                }\n                this.sharedStyles_[styleUri] = style;\n            }\n        }\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @private\n     */\n    KML.prototype.readSharedStyleMap_ = function (node, objectStack) {\n        var id = node.getAttribute('id');\n        if (id === null) {\n            return;\n        }\n        var styleMapValue = readStyleMapValue(node, objectStack);\n        if (!styleMapValue) {\n            return;\n        }\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n            baseURI = window.location.href;\n        }\n        if (baseURI) {\n            var url = new URL('#' + id, baseURI);\n            styleUri = url.href;\n        }\n        else {\n            styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = styleMapValue;\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeatureFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return null;\n        }\n        var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n        if (feature) {\n            return feature;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    KML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n            return [];\n        }\n        var features;\n        var localName = node.localName;\n        if (localName == 'Document' || localName == 'Folder') {\n            features = this.readDocumentOrFolder_(node, [this.getReadOptions(node, opt_options)]);\n            if (features) {\n                return features;\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'Placemark') {\n            var feature = this.readPlacemark_(node, [this.getReadOptions(node, opt_options)]);\n            if (feature) {\n                return [feature];\n            }\n            else {\n                return [];\n            }\n        }\n        else if (localName == 'kml') {\n            features = [];\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                var fs = this.readFeaturesFromNode(n, opt_options);\n                if (fs) {\n                    extend(features, fs);\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * Read the name of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {string|undefined} Name.\n     * @api\n     */\n    KML.prototype.readName = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readNameFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readNameFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readNameFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                var name_1 = this.readNameFromNode(/** @type {Element} */ (n));\n                if (name_1) {\n                    return name_1;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {string|undefined} Name.\n     */\n    KML.prototype.readNameFromNode = function (node) {\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'name') {\n                return readString(n);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'Placemark' ||\n                    localName == 'kml')) {\n                var name_2 = this.readNameFromNode(n);\n                if (name_2) {\n                    return name_2;\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Read the network links of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Network links.\n     * @api\n     */\n    KML.prototype.readNetworkLinks = function (source) {\n        var networkLinks = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(networkLinks, this.readNetworkLinksFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(networkLinks, this.readNetworkLinksFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromDocument = function (doc) {\n        var networkLinks = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Network links.\n     */\n    KML.prototype.readNetworkLinksFromNode = function (node) {\n        var networkLinks = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'NetworkLink') {\n                var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS, n, []);\n                networkLinks.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(networkLinks, this.readNetworkLinksFromNode(n));\n            }\n        }\n        return networkLinks;\n    };\n    /**\n     * Read the regions of the KML.\n     *\n     * @param {Document|Element|string} source Source.\n     * @return {Array<Object>} Regions.\n     * @api\n     */\n    KML.prototype.readRegion = function (source) {\n        var regions = [];\n        if (typeof source === 'string') {\n            var doc = parse(source);\n            extend(regions, this.readRegionFromDocument(doc));\n        }\n        else if (isDocument(source)) {\n            extend(regions, this.readRegionFromDocument(\n            /** @type {Document} */ (source)));\n        }\n        else {\n            extend(regions, this.readRegionFromNode(\n            /** @type {Element} */ (source)));\n        }\n        return regions;\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {Array<Object>} Region.\n     */\n    KML.prototype.readRegionFromDocument = function (doc) {\n        var regions = [];\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n            }\n        }\n        return regions;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {Array<Object>} Region.\n     * @api\n     */\n    KML.prototype.readRegionFromNode = function (node) {\n        var regions = [];\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                n.localName == 'Region') {\n                var obj = pushParseAndPop({}, REGION_PARSERS, n, []);\n                regions.push(obj);\n            }\n        }\n        for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n            var localName = n.localName;\n            if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n                (localName == 'Document' ||\n                    localName == 'Folder' ||\n                    localName == 'kml')) {\n                extend(regions, this.readRegionFromNode(n));\n            }\n        }\n        return regions;\n    };\n    /**\n     * Encode an array of features in the KML format as an XML node. GeometryCollections,\n     * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n     *\n     * @param {Array<Feature>} features Features.\n     * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n     * @return {Node} Node.\n     * @override\n     * @api\n     */\n    KML.prototype.writeFeaturesNode = function (features, opt_options) {\n        opt_options = this.adaptOptions(opt_options);\n        var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n        var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n        kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n        kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n        kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n        var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: kml };\n        /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n        var properties = {};\n        if (features.length > 1) {\n            properties['Document'] = features;\n        }\n        else if (features.length == 1) {\n            properties['Placemark'] = features[0];\n        }\n        var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n        var values = makeSequence(properties, orderedKeys);\n        pushSerializeAndPop(context, KML_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys, this);\n        return kml;\n    };\n    return KML;\n}(XMLFeature));\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n    var textStyle = null;\n    var textOffset = [0, 0];\n    var textAlign = 'start';\n    if (foundStyle.getImage()) {\n        var imageSize = foundStyle.getImage().getImageSize();\n        if (imageSize === null) {\n            imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n        }\n        if (imageSize.length == 2) {\n            var imageScale = foundStyle.getImage().getScale();\n            // Offset the label to be centered to the right of the icon, if there is\n            // one.\n            textOffset[0] = imageScale * imageSize[0] / 2;\n            textOffset[1] = -imageScale * imageSize[1] / 2;\n            textAlign = 'left';\n        }\n    }\n    if (foundStyle.getText() !== null) {\n        // clone the text style, customizing it with name, alignments and offset.\n        // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n        var foundText = foundStyle.getText();\n        textStyle = foundText.clone();\n        textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n        textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n        textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n        textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n    }\n    else {\n        textStyle = DEFAULT_TEXT_STYLE.clone();\n    }\n    textStyle.setText(name);\n    textStyle.setOffsetX(textOffset[0]);\n    textStyle.setOffsetY(textOffset[1]);\n    textStyle.setTextAlign(textAlign);\n    var nameStyle = new Style({\n        text: textStyle\n    });\n    return nameStyle;\n}\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n    return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function (feature, resolution) {\n        var drawName = showPointNames;\n        /** @type {Style|undefined} */\n        var nameStyle;\n        var name = '';\n        if (drawName) {\n            var geometry = feature.getGeometry();\n            if (geometry) {\n                drawName = geometry.getType() === GeometryType.POINT;\n            }\n        }\n        if (drawName) {\n            name = /** @type {string} */ (feature.get('name'));\n            drawName = drawName && !!name;\n        }\n        if (style) {\n            if (drawName) {\n                nameStyle = createNameStyleFunction(style[0], name);\n                return style.concat(nameStyle);\n            }\n            return style;\n        }\n        if (styleUrl) {\n            var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n            if (drawName) {\n                nameStyle = createNameStyleFunction(foundStyle[0], name);\n                return foundStyle.concat(nameStyle);\n            }\n            return foundStyle;\n        }\n        if (drawName) {\n            nameStyle = createNameStyleFunction(defaultStyle[0], name);\n            return defaultStyle.concat(nameStyle);\n        }\n        return defaultStyle;\n    });\n}\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n    if (Array.isArray(styleValue)) {\n        return styleValue;\n    }\n    else if (typeof styleValue === 'string') {\n        // KML files in the wild occasionally forget the leading `#` on styleUrls\n        // defined in the same document.  Add a leading `#` if it enables to find\n        // a style.\n        if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n            styleValue = '#' + styleValue;\n        }\n        return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n    }\n    else {\n        return defaultStyle;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n    var s = getAllTextContent(node, false);\n    // The KML specification states that colors should not include a leading `#`\n    // but we tolerate them.\n    var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n    if (m) {\n        var hexColor = m[1];\n        return [\n            parseInt(hexColor.substr(6, 2), 16),\n            parseInt(hexColor.substr(4, 2), 16),\n            parseInt(hexColor.substr(2, 2), 16),\n            parseInt(hexColor.substr(0, 2), 16) / 255\n        ];\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n    var s = getAllTextContent(node, false);\n    var flatCoordinates = [];\n    // The KML specification states that coordinate tuples should not include\n    // spaces, but we tolerate them.\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n    var m;\n    while ((m = re.exec(s))) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = m[3] ? parseFloat(m[3]) : 0;\n        flatCoordinates.push(x, y, z);\n        s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n        return undefined;\n    }\n    return flatCoordinates;\n}\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n    var s = getAllTextContent(node, false).trim();\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n    }\n    if (baseURI) {\n        var url = new URL(s, baseURI);\n        return url.href;\n    }\n    else {\n        return s;\n    }\n}\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n    var xunits = node.getAttribute('xunits');\n    var yunits = node.getAttribute('yunits');\n    var origin;\n    if (xunits !== 'insetPixels') {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_LEFT;\n        }\n        else {\n            origin = IconOrigin.TOP_LEFT;\n        }\n    }\n    else {\n        if (yunits !== 'insetPixels') {\n            origin = IconOrigin.BOTTOM_RIGHT;\n        }\n        else {\n            origin = IconOrigin.TOP_RIGHT;\n        }\n    }\n    return {\n        x: parseFloat(node.getAttribute('x')),\n        xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n        y: parseFloat(node.getAttribute('y')),\n        yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n        origin: origin\n    };\n}\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n    return readDecimal(node);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_MAP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Pair': pairDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n    return pushParseAndPop(undefined, STYLE_MAP_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n    // FIXME refreshMode\n    // FIXME refreshInterval\n    // FIXME viewRefreshTime\n    // FIXME viewBoundScale\n    // FIXME viewFormat\n    // FIXME httpQuery\n    var object = pushParseAndPop({}, ICON_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var IconObject = 'Icon' in object ? object['Icon'] : {};\n    var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n    var src;\n    var href = /** @type {string|undefined} */ (IconObject['href']);\n    if (href) {\n        src = href;\n    }\n    else if (drawIcon) {\n        src = DEFAULT_IMAGE_STYLE_SRC;\n    }\n    var anchor, anchorXUnits, anchorYUnits;\n    var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n    var hotSpot = /** @type {Vec2|undefined} */ (object['hotSpot']);\n    if (hotSpot) {\n        anchor = [hotSpot.x, hotSpot.y];\n        anchorXUnits = hotSpot.xunits;\n        anchorYUnits = hotSpot.yunits;\n        anchorOrigin = hotSpot.origin;\n    }\n    else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n        anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n        anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n        anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n    }\n    else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n        anchor = [0.5, 0];\n        anchorXUnits = IconAnchorUnits.FRACTION;\n        anchorYUnits = IconAnchorUnits.FRACTION;\n    }\n    var offset;\n    var x = /** @type {number|undefined} */ (IconObject['x']);\n    var y = /** @type {number|undefined} */ (IconObject['y']);\n    if (x !== undefined && y !== undefined) {\n        offset = [x, y];\n    }\n    var size;\n    var w = /** @type {number|undefined} */ (IconObject['w']);\n    var h = /** @type {number|undefined} */ (IconObject['h']);\n    if (w !== undefined && h !== undefined) {\n        size = [w, h];\n    }\n    var rotation;\n    var heading = /** @type {number} */ (object['heading']);\n    if (heading !== undefined) {\n        rotation = toRadians(heading);\n    }\n    var scale = /** @type {number|undefined} */ (object['scale']);\n    if (drawIcon) {\n        if (src == DEFAULT_IMAGE_STYLE_SRC) {\n            size = DEFAULT_IMAGE_STYLE_SIZE;\n            if (scale === undefined) {\n                scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n            }\n        }\n        var imageStyle = new Icon({\n            anchor: anchor,\n            anchorOrigin: anchorOrigin,\n            anchorXUnits: anchorXUnits,\n            anchorYUnits: anchorYUnits,\n            crossOrigin: 'anonymous',\n            offset: offset,\n            offsetOrigin: IconOrigin.BOTTOM_LEFT,\n            rotation: rotation,\n            scale: scale,\n            size: size,\n            src: src\n        });\n        styleObject['imageStyle'] = imageStyle;\n    }\n    else {\n        // handle the case when we explicitly want to draw no icon.\n        styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LABEL_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, LABEL_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var textStyle = new Text({\n        fill: new Fill({\n            color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n        }),\n        scale: /** @type {number|undefined} */ (object['scale'])\n    });\n    styleObject['textStyle'] = textStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINE_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n    // FIXME colorMode\n    // FIXME gx:outerColor\n    // FIXME gx:outerWidth\n    // FIXME gx:physicalWidth\n    // FIXME gx:labelVisibility\n    var object = pushParseAndPop({}, LINE_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var strokeStyle = new Stroke({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR),\n        width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n    });\n    styleObject['strokeStyle'] = strokeStyle;\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar POLY_STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n    // FIXME colorMode\n    var object = pushParseAndPop({}, POLY_STYLE_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var styleObject = objectStack[objectStack.length - 1];\n    var fillStyle = new Fill({\n        color: /** @type {import(\"../color.js\").Color} */ ('color' in object ? object['color'] : DEFAULT_COLOR)\n    });\n    styleObject['fillStyle'] = fillStyle;\n    var fill = /** @type {boolean|undefined} */ (object['fill']);\n    if (fill !== undefined) {\n        styleObject['fill'] = fill;\n    }\n    var outline = /** @type {boolean|undefined} */ (object['outline']);\n    if (outline !== undefined) {\n        styleObject['outline'] = outline;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n    return pushParseAndPop(null, FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n    var m = re.exec(s);\n    if (m) {\n        var x = parseFloat(m[1]);\n        var y = parseFloat(m[2]);\n        var z = parseFloat(m[3]);\n        flatCoordinates.push(x, y, z, 0);\n    }\n    else {\n        flatCoordinates.push(0, 0, 0, 0);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n    var lineStrings = pushParseAndPop([], GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n    if (!lineStrings) {\n        return undefined;\n    }\n    return new MultiLineString(lineStrings);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_TRACK_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'when': whenParser\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'coord': gxCoordParser\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n    var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n        flatCoordinates: [],\n        whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n    if (!gxTrackObject) {\n        return undefined;\n    }\n    var flatCoordinates = gxTrackObject.flatCoordinates;\n    var whens = gxTrackObject.whens;\n    for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n        flatCoordinates[4 * i + 3] = whens[i];\n    }\n    return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeObjectPropertySetter(readDecimal),\n    'y': makeObjectPropertySetter(readDecimal),\n    'w': makeObjectPropertySetter(readDecimal),\n    'h': makeObjectPropertySetter(readDecimal)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n    var iconObject = pushParseAndPop({}, ICON_PARSERS, node, objectStack);\n    if (iconObject) {\n        return iconObject;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n    return pushParseAndPop(null, GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n        lineString.setProperties(properties, true);\n        return lineString;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n    var geometries = pushParseAndPop([], MULTI_GEOMETRY_PARSERS, node, objectStack);\n    if (!geometries) {\n        return null;\n    }\n    if (geometries.length === 0) {\n        return new GeometryCollection(geometries);\n    }\n    var multiGeometry;\n    var homogeneous = true;\n    var type = geometries[0].getType();\n    var geometry;\n    for (var i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        if (geometry.getType() != type) {\n            homogeneous = false;\n            break;\n        }\n    }\n    if (homogeneous) {\n        var layout = void 0;\n        var flatCoordinates = void 0;\n        if (type == GeometryType.POINT) {\n            var point = geometries[0];\n            layout = point.getLayout();\n            flatCoordinates = point.getFlatCoordinates();\n            for (var i = 1, ii = geometries.length; i < ii; ++i) {\n                geometry = geometries[i];\n                extend(flatCoordinates, geometry.getFlatCoordinates());\n            }\n            multiGeometry = new MultiPoint(flatCoordinates, layout);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.LINE_STRING) {\n            multiGeometry = new MultiLineString(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.POLYGON) {\n            multiGeometry = new MultiPolygon(geometries);\n            setCommonGeometryProperties(multiGeometry, geometries);\n        }\n        else if (type == GeometryType.GEOMETRY_COLLECTION) {\n            multiGeometry = new GeometryCollection(geometries);\n        }\n        else {\n            assert(false, 37); // Unknown geometry type found\n        }\n    }\n    else {\n        multiGeometry = new GeometryCollection(geometries);\n    }\n    return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n    var properties = pushParseAndPop({}, EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatCoordinates = readFlatCoordinatesFromNode(node, objectStack);\n    if (flatCoordinates) {\n        var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n        point.setProperties(properties, true);\n        return point;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n    var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}), EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node, objectStack);\n    var flatLinearRings = pushParseAndPop([null], FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n    if (flatLinearRings && flatLinearRings[0]) {\n        var flatCoordinates = flatLinearRings[0];\n        var ends = [flatCoordinates.length];\n        for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n            extend(flatCoordinates, flatLinearRings[i]);\n            ends.push(flatCoordinates.length);\n        }\n        var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n        polygon.setProperties(properties, true);\n        return polygon;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n    var styleObject = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!styleObject) {\n        return null;\n    }\n    var fillStyle = /** @type {Fill} */ ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n    var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n    if (fill !== undefined && !fill) {\n        fillStyle = null;\n    }\n    var imageStyle;\n    if ('imageStyle' in styleObject) {\n        if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n            imageStyle = styleObject['imageStyle'];\n        }\n    }\n    else {\n        imageStyle = DEFAULT_IMAGE_STYLE;\n    }\n    var textStyle = /** @type {Text} */ ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n    var strokeStyle = /** @type {Stroke} */ ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n    var outline = /** @type {boolean|undefined} */ (styleObject['outline']);\n    if (outline !== undefined && !outline) {\n        strokeStyle = null;\n    }\n    return [new Style({\n            fill: fillStyle,\n            image: imageStyle,\n            stroke: strokeStyle,\n            text: textStyle,\n            zIndex: undefined // FIXME\n        })];\n}\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n    var ii = geometries.length;\n    var extrudes = new Array(geometries.length);\n    var tessellates = new Array(geometries.length);\n    var altitudeModes = new Array(geometries.length);\n    var hasExtrude, hasTessellate, hasAltitudeMode;\n    hasExtrude = hasTessellate = hasAltitudeMode = false;\n    for (var i = 0; i < ii; ++i) {\n        var geometry = geometries[i];\n        extrudes[i] = geometry.get('extrude');\n        tessellates[i] = geometry.get('tessellate');\n        altitudeModes[i] = geometry.get('altitudeMode');\n        hasExtrude = hasExtrude || extrudes[i] !== undefined;\n        hasTessellate = hasTessellate || tessellates[i] !== undefined;\n        hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n    }\n    if (hasExtrude) {\n        multiGeometry.set('extrude', extrudes);\n    }\n    if (hasTessellate) {\n        multiGeometry.set('tessellate', tessellates);\n    }\n    if (hasAltitudeMode) {\n        multiGeometry.set('altitudeMode', altitudeModes);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    parseNode(DATA_PARSERS, node, objectStack);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    if (name !== null) {\n        featureObject[name] = featureObject.value;\n    }\n    else if (featureObject.displayName !== null) {\n        featureObject[featureObject.displayName] = featureObject.value;\n    }\n    delete featureObject['value'];\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTENDED_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n    parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n    parseNode(REGION_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PAIR_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n    var pairObject = pushParseAndPop({}, PAIR_PARSERS, node, objectStack);\n    if (!pairObject) {\n        return;\n    }\n    var key = /** @type {string|undefined} */ (pairObject['key']);\n    if (key && key == 'normal') {\n        var styleUrl = /** @type {string|undefined} */ (pairObject['styleUrl']);\n        if (styleUrl) {\n            objectStack[objectStack.length - 1] = styleUrl;\n        }\n        var style = /** @type {Style} */ (pairObject['Style']);\n        if (style) {\n            objectStack[objectStack.length - 1] = style;\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n    var styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n        return;\n    }\n    var placemarkObject = objectStack[objectStack.length - 1];\n    if (Array.isArray(styleMapValue)) {\n        placemarkObject['Style'] = styleMapValue;\n    }\n    else if (typeof styleMapValue === 'string') {\n        placemarkObject['styleUrl'] = styleMapValue;\n    }\n    else {\n        assert(false, 38); // `styleMapValue` has an unknown type\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SCHEMA_DATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n    parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (name !== null) {\n        var data = readString(node);\n        var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n        featureObject[name] = data;\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n    var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var extent = [\n        parseFloat(object['west']),\n        parseFloat(object['south']),\n        parseFloat(object['east']),\n        parseFloat(object['north'])\n    ];\n    regionObject['extent'] = extent;\n    regionObject['altitudeMode'] = object['altitudeMode'];\n    regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n    regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n    var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n    if (!object) {\n        return;\n    }\n    var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n    lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n    lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n    lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings.push(flatLinearRing);\n    }\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined, OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n    if (flatLinearRing) {\n        var flatLinearRings = /** @type {Array<Array<number>>} */ (objectStack[objectStack.length - 1]);\n        flatLinearRings[0] = flatLinearRing;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n    parseNode(LINK_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n    var gxTrackObject = /** @type {GxTrackObject} */ (objectStack[objectStack.length - 1]);\n    var whens = gxTrackObject.whens;\n    var s = getAllTextContent(node, false);\n    var when = Date.parse(s);\n    whens.push(isNaN(when) ? 0 : when);\n}\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n    var rgba = asArray(color);\n    var opacity = (rgba.length == 4) ? rgba[3] : 1;\n    /** @type {Array<string|number>} */\n    var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n    for (var i = 0; i < 4; ++i) {\n        var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n        abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n    }\n    writeStringTextNode(node, abgr.join(''));\n}\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var layout = context['layout'];\n    var stride = context['stride'];\n    var dimension;\n    if (layout == GeometryLayout.XY ||\n        layout == GeometryLayout.XYM) {\n        dimension = 2;\n    }\n    else if (layout == GeometryLayout.XYZ ||\n        layout == GeometryLayout.XYZM) {\n        dimension = 3;\n    }\n    else {\n        assert(false, 34); // Invalid geometry layout\n    }\n    var ii = coordinates.length;\n    var text = '';\n    if (ii > 0) {\n        text += coordinates[0];\n        for (var d = 1; d < dimension; ++d) {\n            text += ',' + coordinates[d];\n        }\n        for (var i = stride; i < ii; i += stride) {\n            text += ' ' + coordinates[i];\n            for (var d = 1; d < dimension; ++d) {\n                text += ',' + coordinates[i + d];\n            }\n        }\n    }\n    writeStringTextNode(node, text);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n});\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n    node.setAttribute('name', pair.name);\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var value = pair.value;\n    if (typeof value == 'object') {\n        if (value !== null && value.displayName) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n        }\n        if (value !== null && value.value) {\n            pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n        }\n    }\n    else {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n    }\n}\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n    writeCDATASection(node, name);\n}\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n    writeStringTextNode(node, value);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar DOCUMENT_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n});\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, DOCUMENT_SERIALIZERS, DOCUMENT_NODE_FACTORY, features, objectStack, undefined, this);\n}\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var names = namesAndValues.names;\n    var values = namesAndValues.values;\n    var length = names.length;\n    for (var i = 0; i < length; i++) {\n        pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS, DATA_NODE_FACTORY, [{ name: names[i], value: values[i] }], objectStack);\n    }\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'href'\n], makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n]));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n}, makeStructureNS(GX_NAMESPACE_URIS, {\n    'x': makeChildAppender(writeDecimalTextNode),\n    'y': makeChildAppender(writeDecimalTextNode),\n    'w': makeChildAppender(writeDecimalTextNode),\n    'h': makeChildAppender(writeDecimalTextNode)\n}));\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    return createElementNS(GX_NAMESPACE_URIS[0], 'gx:' + opt_nodeName);\n};\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    orderedKeys =\n        ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n    values = makeSequence(icon, orderedKeys);\n    pushSerializeAndPop(context, ICON_SERIALIZERS, GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var src = style.getSrc();\n    var size = style.getSize();\n    var iconImageSize = style.getImageSize();\n    var iconProperties = {\n        'href': src\n    };\n    if (size) {\n        iconProperties['w'] = size[0];\n        iconProperties['h'] = size[1];\n        var anchor = style.getAnchor(); // top-left\n        var origin_1 = style.getOrigin(); // top-left\n        if (origin_1 && iconImageSize && origin_1[0] !== 0 && origin_1[1] !== size[1]) {\n            iconProperties['x'] = origin_1[0];\n            iconProperties['y'] = iconImageSize[1] - (origin_1[1] + size[1]);\n        }\n        if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n            var /** @type {Vec2} */ hotSpot = {\n                x: anchor[0],\n                xunits: IconAnchorUnits.PIXELS,\n                y: size[1] - anchor[1],\n                yunits: IconAnchorUnits.PIXELS\n            };\n            properties['hotSpot'] = hotSpot;\n        }\n    }\n    properties['Icon'] = iconProperties;\n    var scale = style.getScale();\n    if (scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var rotation = style.getRotation();\n    if (rotation !== 0) {\n        properties['heading'] = rotation; // 0-360\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'scale'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fill = style.getFill();\n    if (fill) {\n        properties['color'] = fill.getColor();\n    }\n    var scale = style.getScale();\n    if (scale && scale !== 1) {\n        properties['scale'] = scale;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LINE_STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'color', 'width'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {\n        'color': style.getColor(),\n        'width': style.getWidth()\n    };\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n    'Point': 'Point',\n    'LineString': 'LineString',\n    'LinearRing': 'LinearRing',\n    'Polygon': 'Polygon',\n    'MultiPoint': 'MultiGeometry',\n    'MultiLineString': 'MultiGeometry',\n    'MultiPolygon': 'MultiGeometry',\n    'GeometryCollection': 'MultiGeometry'\n};\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function (value, objectStack, opt_nodeName) {\n    if (value) {\n        var parentNode = objectStack[objectStack.length - 1].node;\n        return createElementNS(parentNode.namespaceURI, GEOMETRY_TYPE_TO_NODENAME[ /** @type {import(\"../geom/Geometry.js\").default} */(value).getType()]);\n    }\n};\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(writeMultiGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = { node: node };\n    var type = geometry.getType();\n    /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n    var geometries;\n    /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n    var factory;\n    if (type == GeometryType.GEOMETRY_COLLECTION) {\n        geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\n        factory = GEOMETRY_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POINT) {\n        geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n        factory = POINT_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_LINE_STRING) {\n        geometries =\n            ( /** @type {MultiLineString} */(geometry)).getLineStrings();\n        factory = LINE_STRING_NODE_FACTORY;\n    }\n    else if (type == GeometryType.MULTI_POLYGON) {\n        geometries =\n            ( /** @type {MultiPolygon} */(geometry)).getPolygons();\n        factory = POLYGON_NODE_FACTORY;\n    }\n    else {\n        assert(false, 39); // Unknown geometry type\n    }\n    pushSerializeAndPop(context, MULTI_GEOMETRY_SERIALIZERS, factory, geometries, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(writePrimitiveGeometry)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, BOUNDARY_IS_SERIALIZERS, LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PLACEMARK_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n});\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PLACEMARK_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n]);\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // set id\n    if (feature.getId()) {\n        node.setAttribute('id', /** @type {string} */ (feature.getId()));\n    }\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = feature.getProperties();\n    // don't export these to ExtendedData\n    var filter = { 'address': 1, 'description': 1, 'name': 1, 'open': 1,\n        'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1 };\n    filter[feature.getGeometryName()] = 1;\n    var keys = Object.keys(properties || {}).sort().filter(function (v) {\n        return !filter[v];\n    });\n    var styleFunction = feature.getStyleFunction();\n    if (styleFunction) {\n        // FIXME the styles returned by the style function are supposed to be\n        // resolution-independent here\n        var styles = styleFunction(feature, 0);\n        if (styles) {\n            var style = Array.isArray(styles) ? styles[0] : styles;\n            if (this.writeStyles_) {\n                properties['Style'] = style;\n            }\n            var textStyle = style.getText();\n            if (textStyle) {\n                properties['name'] = textStyle.getText();\n            }\n        }\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n    if (keys.length > 0) {\n        var sequence = makeSequence(properties, keys);\n        var namesAndValues = { names: keys, values: sequence };\n        pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n    }\n    // serialize geometry\n    var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n        geometry = transformGeometryWithOptions(geometry, true, options);\n    }\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS, GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n});\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    context['layout'] = geometry.getLayout();\n    context['stride'] = geometry.getStride();\n    // serialize properties (properties unknown to KML are not serialized)\n    var properties = geometry.getProperties();\n    properties.coordinates = flatCoordinates;\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLYGON_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(writeBoundaryIs)\n});\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n    var linearRings = polygon.getLinearRings();\n    var outerRing = linearRings.shift();\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    // inner rings\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, INNER_BOUNDARY_NODE_FACTORY, linearRings, objectStack);\n    // outer ring\n    pushSerializeAndPop(context, POLYGON_SERIALIZERS, OUTER_BOUNDARY_NODE_FACTORY, [outerRing], objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n});\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS, COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n    // the Math is to remove any excess decimals created by float arithmetic\n    writeDecimalTextNode(node, Math.round(scale * 1e6) / 1e6);\n}\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar STYLE_SEQUENCE = makeStructureNS(NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n]);\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar STYLE_SERIALIZERS = makeStructureNS(NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n});\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = { node: node };\n    var properties = {};\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    var imageStyle = style.getImage();\n    var textStyle = style.getText();\n    if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\n        properties['IconStyle'] = imageStyle;\n    }\n    if (textStyle) {\n        properties['LabelStyle'] = textStyle;\n    }\n    if (strokeStyle) {\n        properties['LineStyle'] = strokeStyle;\n    }\n    if (fillStyle) {\n        properties['PolyStyle'] = fillStyle;\n    }\n    var parentNode = objectStack[objectStack.length - 1].node;\n    var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, STYLE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n    node.setAttribute('x', String(vec2.x));\n    node.setAttribute('y', String(vec2.y));\n    node.setAttribute('xunits', vec2.xunits);\n    node.setAttribute('yunits', vec2.yunits);\n}\nexport default KML;\n//# sourceMappingURL=KML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n    BAROMETRIC: 'barometric',\n    GPS: 'gps',\n    NONE: 'none'\n};\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE = /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = /** @class */ (function (_super) {\n    __extends(IGC, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function IGC(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {IGCZ}\n         */\n        _this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    IGC.prototype.readFeatureFromText = function (text, opt_options) {\n        var altitudeMode = this.altitudeMode_;\n        var lines = text.split(NEWLINE_RE);\n        /** @type {Object<string, string>} */\n        var properties = {};\n        var flatCoordinates = [];\n        var year = 2000;\n        var month = 0;\n        var day = 1;\n        var lastDateTime = -1;\n        var i, ii;\n        for (i = 0, ii = lines.length; i < ii; ++i) {\n            var line = lines[i];\n            var m = void 0;\n            if (line.charAt(0) == 'B') {\n                m = B_RECORD_RE.exec(line);\n                if (m) {\n                    var hour = parseInt(m[1], 10);\n                    var minute = parseInt(m[2], 10);\n                    var second = parseInt(m[3], 10);\n                    var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n                    if (m[6] == 'S') {\n                        y = -y;\n                    }\n                    var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n                    if (m[9] == 'W') {\n                        x = -x;\n                    }\n                    flatCoordinates.push(x, y);\n                    if (altitudeMode != IGCZ.NONE) {\n                        var z = void 0;\n                        if (altitudeMode == IGCZ.GPS) {\n                            z = parseInt(m[11], 10);\n                        }\n                        else if (altitudeMode == IGCZ.BAROMETRIC) {\n                            z = parseInt(m[12], 10);\n                        }\n                        else {\n                            z = 0;\n                        }\n                        flatCoordinates.push(z);\n                    }\n                    var dateTime = Date.UTC(year, month, day, hour, minute, second);\n                    // Detect UTC midnight wrap around.\n                    if (dateTime < lastDateTime) {\n                        dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n                    }\n                    flatCoordinates.push(dateTime / 1000);\n                    lastDateTime = dateTime;\n                }\n            }\n            else if (line.charAt(0) == 'H') {\n                m = HFDTE_RECORD_RE.exec(line);\n                if (m) {\n                    day = parseInt(m[1], 10);\n                    month = parseInt(m[2], 10) - 1;\n                    year = 2000 + parseInt(m[3], 10);\n                }\n                else {\n                    m = H_RECORD_RE.exec(line);\n                    if (m) {\n                        properties[m[1]] = m[2].trim();\n                    }\n                }\n            }\n        }\n        if (flatCoordinates.length === 0) {\n            return null;\n        }\n        var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n        var lineString = new LineString(flatCoordinates, layout);\n        var feature = new Feature(transformGeometryWithOptions(lineString, false, opt_options));\n        feature.setProperties(properties, true);\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    IGC.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        if (feature) {\n            return [feature];\n        }\n        else {\n            return [];\n        }\n    };\n    return IGC;\n}(TextFeature));\nexport default IGC;\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/render/Feature\n */\nimport { extend } from '../array.js';\nimport { createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight } from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport { linearRingss as linearRingssCenter } from '../geom/flat/center.js';\nimport { getInteriorPointOfArray, getInteriorPointsOfMultiArray } from '../geom/flat/interiorpoint.js';\nimport { interpolatePoint } from '../geom/flat/interpolate.js';\nimport { get as getProjection } from '../proj.js';\nimport { transform2D } from '../geom/flat/transform.js';\nimport { create as createTransform, compose as composeTransform } from '../transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nvar RenderFeature = /** @class */ (function () {\n    /**\n     * @param {GeometryType} type Geometry type.\n     * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n     *     to be right-handed for polygons.\n     * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n     * @param {Object<string, *>} properties Properties.\n     * @param {number|string|undefined} id Feature id.\n     */\n    function RenderFeature(type, flatCoordinates, ends, properties, id) {\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent|undefined}\n         */\n        this.extent_;\n        /**\n         * @private\n         * @type {number|string|undefined}\n         */\n        this.id_ = id;\n        /**\n         * @private\n         * @type {GeometryType}\n         */\n        this.type_ = type;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatCoordinates_ = flatCoordinates;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatInteriorPoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.flatMidpoints_ = null;\n        /**\n         * @private\n         * @type {Array<number>|Array<Array<number>>}\n         */\n        this.ends_ = ends;\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        this.properties_ = properties;\n    }\n    /**\n     * Get a feature property by its key.\n     * @param {string} key Key\n     * @return {*} Value for the requested key.\n     * @api\n     */\n    RenderFeature.prototype.get = function (key) {\n        return this.properties_[key];\n    };\n    /**\n     * Get the extent of this feature's geometry.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    RenderFeature.prototype.getExtent = function () {\n        if (!this.extent_) {\n            this.extent_ = this.type_ === GeometryType.POINT ?\n                createOrUpdateFromCoordinate(this.flatCoordinates_) :\n                createOrUpdateFromFlatCoordinates(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n        }\n        return this.extent_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoint = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoints_ = getInteriorPointOfArray(this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat interior points.\n     */\n    RenderFeature.prototype.getFlatInteriorPoints = function () {\n        if (!this.flatInteriorPoints_) {\n            var flatCenters = linearRingssCenter(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\n            this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\n        }\n        return this.flatInteriorPoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoint.\n     */\n    RenderFeature.prototype.getFlatMidpoint = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = interpolatePoint(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * @return {Array<number>} Flat midpoints.\n     */\n    RenderFeature.prototype.getFlatMidpoints = function () {\n        if (!this.flatMidpoints_) {\n            this.flatMidpoints_ = [];\n            var flatCoordinates = this.flatCoordinates_;\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (this.ends_);\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                var end = ends[i];\n                var midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n                extend(this.flatMidpoints_, midpoint);\n                offset = end;\n            }\n        }\n        return this.flatMidpoints_;\n    };\n    /**\n     * Get the feature identifier.  This is a stable identifier for the feature and\n     * is set when reading data from a remote source.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    RenderFeature.prototype.getId = function () {\n        return this.id_;\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    RenderFeature.prototype.getOrientedFlatCoordinates = function () {\n        return this.flatCoordinates_;\n    };\n    /**\n     * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n     * determining the geometry type in style function (see {@link #getType}).\n     * @return {RenderFeature} Feature.\n     * @api\n     */\n    RenderFeature.prototype.getGeometry = function () {\n        return this;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {RenderFeature} Simplified geometry.\n     */\n    RenderFeature.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * Get the feature properties.\n     * @return {Object<string, *>} Feature properties.\n     * @api\n     */\n    RenderFeature.prototype.getProperties = function () {\n        return this.properties_;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    RenderFeature.prototype.getStride = function () {\n        return 2;\n    };\n    /**\n     * @return {undefined}\n     */\n    RenderFeature.prototype.getStyleFunction = function () {\n        return undefined;\n    };\n    /**\n     * Get the type of this feature's geometry.\n     * @return {GeometryType} Geometry type.\n     * @api\n     */\n    RenderFeature.prototype.getType = function () {\n        return this.type_;\n    };\n    /**\n     * Transform geometry coordinates from tile pixel space to projected.\n     * The SRS of the source and destination are expected to be the same.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\n     */\n    RenderFeature.prototype.transform = function (source, destination) {\n        source = getProjection(source);\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n        transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, tmpTransform, this.flatCoordinates_);\n    };\n    return RenderFeature;\n}());\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\n    RenderFeature.prototype.getEndss = function () {\n        return this.ends_;\n    };\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\nexport default RenderFeature;\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { assert } from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, { transformGeometryWithOptions } from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { linearRingIsClockwise } from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\nimport { get } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * layers.\n */\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar MVT = /** @class */ (function (_super) {\n    __extends(MVT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MVT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {Projection}\n         */\n        _this.dataProjection = new Projection({\n            code: '',\n            units: Units.TILE_PIXELS\n        });\n        /**\n         * @private\n         * @type {import(\"../Feature.js\").FeatureClass}\n         */\n        _this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.geometryName_ = options.geometryName;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.layerName_ = options.layerName ? options.layerName : 'layer';\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n     * property.\n     * @param {PBF} pbf PBF.\n     * @param {Object} feature Raw feature.\n     * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n     * @param {Array<number>} ends Array to store ends in.\n     * @private\n     */\n    MVT.prototype.readRawGeometry_ = function (pbf, feature, flatCoordinates, ends) {\n        pbf.pos = feature.geometry;\n        var end = pbf.readVarint() + pbf.pos;\n        var cmd = 1;\n        var length = 0;\n        var x = 0;\n        var y = 0;\n        var coordsLen = 0;\n        var currentEnd = 0;\n        while (pbf.pos < end) {\n            if (!length) {\n                var cmdLen = pbf.readVarint();\n                cmd = cmdLen & 0x7;\n                length = cmdLen >> 3;\n            }\n            length--;\n            if (cmd === 1 || cmd === 2) {\n                x += pbf.readSVarint();\n                y += pbf.readSVarint();\n                if (cmd === 1) { // moveTo\n                    if (coordsLen > currentEnd) {\n                        ends.push(coordsLen);\n                        currentEnd = coordsLen;\n                    }\n                }\n                flatCoordinates.push(x, y);\n                coordsLen += 2;\n            }\n            else if (cmd === 7) {\n                if (coordsLen > currentEnd) {\n                    // close polygon\n                    flatCoordinates.push(flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n                    coordsLen += 2;\n                }\n            }\n            else {\n                assert(false, 59); // Invalid command found in the PBF\n            }\n        }\n        if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n        }\n    };\n    /**\n     * @private\n     * @param {PBF} pbf PBF\n     * @param {Object} rawFeature Raw Mapbox feature.\n     * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n     * @return {import(\"../Feature.js\").FeatureLike} Feature.\n     */\n    MVT.prototype.createFeature_ = function (pbf, rawFeature, options) {\n        var type = rawFeature.type;\n        if (type === 0) {\n            return null;\n        }\n        var feature;\n        var id = rawFeature.id;\n        var values = rawFeature.properties;\n        values[this.layerName_] = rawFeature.layer.name;\n        var flatCoordinates = [];\n        var ends = [];\n        this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n        var geometryType = getGeometryType(type, ends.length);\n        if (this.featureClass_ === RenderFeature) {\n            feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n            feature.transform(options.dataProjection, options.featureProjection);\n        }\n        else {\n            var geom = void 0;\n            if (geometryType == GeometryType.POLYGON) {\n                var endss = [];\n                var offset = 0;\n                var prevEndIndex = 0;\n                for (var i = 0, ii = ends.length; i < ii; ++i) {\n                    var end = ends[i];\n                    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n                        endss.push(ends.slice(prevEndIndex, i));\n                        prevEndIndex = i;\n                    }\n                    offset = end;\n                }\n                if (endss.length > 1) {\n                    geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n                }\n                else {\n                    geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n                }\n            }\n            else {\n                geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n                    geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n                        geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n                            geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                                    null;\n            }\n            var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\n            feature = new ctor();\n            if (this.geometryName_) {\n                feature.setGeometryName(this.geometryName_);\n            }\n            var geometry = transformGeometryWithOptions(geom, false, options);\n            feature.setGeometry(geometry);\n            feature.setId(id);\n            feature.setProperties(values, true);\n        }\n        return feature;\n    };\n    /**\n     * @inheritDoc\n     */\n    MVT.prototype.getType = function () {\n        return FormatType.ARRAY_BUFFER;\n    };\n    /**\n     * Read all features.\n     *\n     * @param {ArrayBuffer} source Source.\n     * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n     * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n     * @api\n     */\n    MVT.prototype.readFeatures = function (source, opt_options) {\n        var layers = this.layers_;\n        var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (this.adaptOptions(opt_options));\n        var dataProjection = get(options.dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n        options.dataProjection = dataProjection;\n        var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n        var pbfLayers = pbf.readFields(layersPBFReader, {});\n        var features = [];\n        for (var name_1 in pbfLayers) {\n            if (layers && layers.indexOf(name_1) == -1) {\n                continue;\n            }\n            var pbfLayer = pbfLayers[name_1];\n            var extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n            dataProjection.setExtent(extent);\n            for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n                var rawFeature = readRawFeature(pbf, pbfLayer, i);\n                features.push(this.createFeature_(pbf, rawFeature, options));\n            }\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MVT.prototype.readProjection = function (source) {\n        return this.dataProjection;\n    };\n    /**\n     * Sets the layers that features will be read from.\n     * @param {Array<string>} layers Layers.\n     * @api\n     */\n    MVT.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    return MVT;\n}(FeatureFormat));\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n    if (tag === 3) {\n        var layer = {\n            keys: [],\n            values: [],\n            features: []\n        };\n        var end = pbf.readVarint() + pbf.pos;\n        pbf.readFields(layerPBFReader, layer, end);\n        layer.length = layer.features.length;\n        if (layer.length) {\n            layers[layer.name] = layer;\n        }\n    }\n}\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n    if (tag === 15) {\n        layer.version = pbf.readVarint();\n    }\n    else if (tag === 1) {\n        layer.name = pbf.readString();\n    }\n    else if (tag === 5) {\n        layer.extent = pbf.readVarint();\n    }\n    else if (tag === 2) {\n        layer.features.push(pbf.pos);\n    }\n    else if (tag === 3) {\n        layer.keys.push(pbf.readString());\n    }\n    else if (tag === 4) {\n        var value = null;\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            tag = pbf.readVarint() >> 3;\n            value = tag === 1 ? pbf.readString() :\n                tag === 2 ? pbf.readFloat() :\n                    tag === 3 ? pbf.readDouble() :\n                        tag === 4 ? pbf.readVarint64() :\n                            tag === 5 ? pbf.readVarint() :\n                                tag === 6 ? pbf.readSVarint() :\n                                    tag === 7 ? pbf.readBoolean() : null;\n        }\n        layer.values.push(value);\n    }\n}\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n    if (tag == 1) {\n        feature.id = pbf.readVarint();\n    }\n    else if (tag == 2) {\n        var end = pbf.readVarint() + pbf.pos;\n        while (pbf.pos < end) {\n            var key = feature.layer.keys[pbf.readVarint()];\n            var value = feature.layer.values[pbf.readVarint()];\n            feature.properties[key] = value;\n        }\n    }\n    else if (tag == 3) {\n        feature.type = pbf.readVarint();\n    }\n    else if (tag == 4) {\n        feature.geometry = pbf.pos;\n    }\n}\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n    pbf.pos = layer.features[i];\n    var end = pbf.readVarint() + pbf.pos;\n    var feature = {\n        layer: layer,\n        type: 0,\n        properties: {}\n    };\n    pbf.readFields(featurePBFReader, feature, end);\n    return feature;\n}\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n    /** @type {GeometryType} */\n    var geometryType;\n    if (type === 1) {\n        geometryType = numEnds === 1 ?\n            GeometryType.POINT : GeometryType.MULTI_POINT;\n    }\n    else if (type === 2) {\n        geometryType = numEnds === 1 ?\n            GeometryType.LINE_STRING :\n            GeometryType.MULTI_LINE_STRING;\n    }\n    else if (type === 3) {\n        geometryType = GeometryType.POLYGON;\n        // MultiPolygon not relevant for rendering - winding order determines\n        // outer rings of polygons.\n    }\n    return geometryType;\n}\nexport default MVT;\n//# sourceMappingURL=MVT.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport { extend } from '../array.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { isEmpty } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { pushParseAndPop, makeStructureNS } from '../xml.js';\n/**\n * @const\n * @type {Array<null>}\n */\nvar NAMESPACE_URIS = [null];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WAY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n});\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nvar OSMXML = /** @class */ (function (_super) {\n    __extends(OSMXML, _super);\n    function OSMXML() {\n        var _this = _super.call(this) || this;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    OSMXML.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = this.getReadOptions(node, opt_options);\n        if (node.localName == 'osm') {\n            var state = pushParseAndPop({\n                nodes: {},\n                ways: [],\n                features: []\n            }, PARSERS, node, [options]);\n            // parse nodes in ways\n            for (var j = 0; j < state.ways.length; j++) {\n                var values = /** @type {Object} */ (state.ways[j]);\n                /** @type {Array<number>} */\n                var flatCoordinates = [];\n                for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\n                    var point = state.nodes[values.ndrefs[i]];\n                    extend(flatCoordinates, point);\n                }\n                var geometry = void 0;\n                if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n                    // closed way\n                    geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n                }\n                else {\n                    geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n                }\n                transformGeometryWithOptions(geometry, false, options);\n                var feature = new Feature(geometry);\n                feature.setId(values.id);\n                feature.setProperties(values.tags, true);\n                state.features.push(feature);\n            }\n            if (state.features) {\n                return state.features;\n            }\n        }\n        return [];\n    };\n    return OSMXML;\n}(XMLFeature));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NODE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'tag': readTag\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var id = node.getAttribute('id');\n    /** @type {import(\"../coordinate.js\").Coordinate} */\n    var coordinates = [\n        parseFloat(node.getAttribute('lon')),\n        parseFloat(node.getAttribute('lat'))\n    ];\n    state.nodes[id] = coordinates;\n    var values = pushParseAndPop({\n        tags: {}\n    }, NODE_PARSERS, node, objectStack);\n    if (!isEmpty(values.tags)) {\n        var geometry = new Point(coordinates);\n        transformGeometryWithOptions(geometry, false, options);\n        var feature = new Feature(geometry);\n        feature.setId(id);\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n    var id = node.getAttribute('id');\n    var values = pushParseAndPop({\n        id: id,\n        ndrefs: [],\n        tags: {}\n    }, WAY_PARSERS, node, objectStack);\n    var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    state.ways.push(values);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values.ndrefs.push(node.getAttribute('ref'));\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n    var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\nexport default OSMXML;\n//# sourceMappingURL=OSMXML.js.map","/**\n * @module ol/geom/flat/flip\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n    var dest, destOffset;\n    if (opt_dest !== undefined) {\n        dest = opt_dest;\n        destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n    }\n    else {\n        dest = [];\n        destOffset = 0;\n    }\n    var j = offset;\n    while (j < end) {\n        var x = flatCoordinates[j++];\n        dest[destOffset++] = flatCoordinates[j++];\n        dest[destOffset++] = x;\n        for (var k = 2; k < stride; ++k) {\n            dest[destOffset++] = flatCoordinates[j++];\n        }\n    }\n    dest.length = destOffset;\n    return dest;\n}\n//# sourceMappingURL=flip.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/Polyline\n */\nimport { assert } from '../asserts.js';\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport { getStrideForLayout } from '../geom/SimpleGeometry.js';\nimport { flipXY } from '../geom/flat/flip.js';\nimport { inflateCoordinates } from '../geom/flat/inflate.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = /** @class */ (function (_super) {\n    __extends(Polyline, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function Polyline(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection('EPSG:4326');\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.factor_ = options.factor ? options.factor : 1e5;\n        /**\n         * @private\n         * @type {GeometryLayout}\n         */\n        _this.geometryLayout_ = options.geometryLayout ?\n            options.geometryLayout : GeometryLayout.XY;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readFeatureFromText = function (text, opt_options) {\n        var geometry = this.readGeometryFromText(text, opt_options);\n        return new Feature(geometry);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readFeaturesFromText = function (text, opt_options) {\n        var feature = this.readFeatureFromText(text, opt_options);\n        return [feature];\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.readGeometryFromText = function (text, opt_options) {\n        var stride = getStrideForLayout(this.geometryLayout_);\n        var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n        var lineString = new LineString(coordinates, this.geometryLayout_);\n        return transformGeometryWithOptions(lineString, false, this.adaptOptions(opt_options));\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        else {\n            assert(false, 40); // Expected `feature` to have a geometry\n            return '';\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeFeaturesText = function (features, opt_options) {\n        return this.writeFeatureText(features[0], opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    Polyline.prototype.writeGeometryText = function (geometry, opt_options) {\n        geometry = /** @type {LineString} */\n            (transformGeometryWithOptions(geometry, true, this.adaptOptions(opt_options)));\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n        return encodeDeltas(flatCoordinates, stride, this.factor_);\n    };\n    return Polyline;\n}(TextFeature));\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            var num = numbers[i];\n            var delta = num - lastNumbers[d];\n            lastNumbers[d] = num;\n            numbers[i] = delta;\n        }\n    }\n    return encodeFloats(numbers, factor);\n}\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var d;\n    /** @type {Array<number>} */\n    var lastNumbers = new Array(stride);\n    for (d = 0; d < stride; ++d) {\n        lastNumbers[d] = 0;\n    }\n    var numbers = decodeFloats(encoded, factor);\n    for (var i = 0, ii = numbers.length; i < ii;) {\n        for (d = 0; d < stride; ++d, ++i) {\n            lastNumbers[d] += numbers[i];\n            numbers[i] = lastNumbers[d];\n        }\n    }\n    return numbers;\n}\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] = Math.round(numbers[i] * factor);\n    }\n    return encodeSignedIntegers(numbers);\n}\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n    var factor = opt_factor ? opt_factor : 1e5;\n    var numbers = decodeSignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        numbers[i] /= factor;\n    }\n    return numbers;\n}\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n    }\n    return encodeUnsignedIntegers(numbers);\n}\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n    var numbers = decodeUnsignedIntegers(encoded);\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        var num = numbers[i];\n        numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n    }\n    return numbers;\n}\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n    var encoded = '';\n    for (var i = 0, ii = numbers.length; i < ii; ++i) {\n        encoded += encodeUnsignedInteger(numbers[i]);\n    }\n    return encoded;\n}\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n    var numbers = [];\n    var current = 0;\n    var shift = 0;\n    for (var i = 0, ii = encoded.length; i < ii; ++i) {\n        var b = encoded.charCodeAt(i) - 63;\n        current |= (b & 0x1f) << shift;\n        if (b < 0x20) {\n            numbers.push(current);\n            current = 0;\n            shift = 0;\n        }\n        else {\n            shift += 5;\n        }\n    }\n    return numbers;\n}\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n    var value, encoded = '';\n    while (num >= 0x20) {\n        value = (0x20 | (num & 0x1f)) + 63;\n        encoded += String.fromCharCode(value);\n        num >>= 5;\n    }\n    value = num + 63;\n    encoded += String.fromCharCode(value);\n    return encoded;\n}\nexport default Polyline;\n//# sourceMappingURL=Polyline.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = /** @class */ (function (_super) {\n    __extends(TopoJSON, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function TopoJSON(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        _this.layerName_ = options.layerName;\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        /**\n         * @inheritDoc\n         */\n        _this.dataProjection = getProjection(options.dataProjection ?\n            options.dataProjection : 'EPSG:4326');\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    TopoJSON.prototype.readFeaturesFromObject = function (object, opt_options) {\n        if (object.type == 'Topology') {\n            var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n            var transform = void 0, scale = null, translate = null;\n            if (topoJSONTopology['transform']) {\n                transform = topoJSONTopology['transform'];\n                scale = transform['scale'];\n                translate = transform['translate'];\n            }\n            var arcs = topoJSONTopology['arcs'];\n            if (transform) {\n                transformArcs(arcs, scale, translate);\n            }\n            /** @type {Array<Feature>} */\n            var features = [];\n            var topoJSONFeatures = topoJSONTopology['objects'];\n            var property = this.layerName_;\n            var feature = void 0;\n            for (var objectName in topoJSONFeatures) {\n                if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n                    continue;\n                }\n                if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n                    feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n                    features.push.apply(features, readFeaturesFromGeometryCollection(feature, arcs, scale, translate, property, objectName, opt_options));\n                }\n                else {\n                    feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n                    features.push(readFeatureFromGeometry(feature, arcs, scale, translate, property, objectName, opt_options));\n                }\n            }\n            return features;\n        }\n        else {\n            return [];\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    TopoJSON.prototype.readProjectionFromObject = function (object) {\n        return this.dataProjection;\n    };\n    return TopoJSON;\n}(JSONFeature));\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {\n    'Point': readPointGeometry,\n    'LineString': readLineStringGeometry,\n    'Polygon': readPolygonGeometry,\n    'MultiPoint': readMultiPointGeometry,\n    'MultiLineString': readMultiLineStringGeometry,\n    'MultiPolygon': readMultiPolygonGeometry\n};\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n    /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n    var coordinates = [];\n    var index, arc;\n    for (var i = 0, ii = indices.length; i < ii; ++i) {\n        index = indices[i];\n        if (i > 0) {\n            // splicing together arcs, discard last point\n            coordinates.pop();\n        }\n        if (index >= 0) {\n            // forward arc\n            arc = arcs[index];\n        }\n        else {\n            // reverse arc\n            arc = arcs[~index].slice().reverse();\n        }\n        coordinates.push.apply(coordinates, arc);\n    }\n    // provide fresh copies of coordinate arrays\n    for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n        coordinates[j] = coordinates[j].slice();\n    }\n    return coordinates;\n}\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n    var coordinates = object['coordinates'];\n    if (scale && translate) {\n        transformVertex(coordinates, scale, translate);\n    }\n    return new Point(coordinates);\n}\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n    var coordinates = object['coordinates'];\n    if (scale && translate) {\n        for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n            transformVertex(coordinates[i], scale, translate);\n        }\n    }\n    return new MultiPoint(coordinates);\n}\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n    var coordinates = concatenateArcs(object['arcs'], arcs);\n    return new LineString(coordinates);\n}\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n    }\n    return new MultiLineString(coordinates);\n}\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n    }\n    return new Polygon(coordinates);\n}\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n    var coordinates = [];\n    for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n        // for each polygon\n        var polyArray = object['arcs'][i];\n        var ringCoords = [];\n        for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n            // for each ring\n            ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n        }\n        coordinates[i] = ringCoords;\n    }\n    return new MultiPolygon(coordinates);\n}\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n    var geometries = collection['geometries'];\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        features[i] = readFeatureFromGeometry(geometries[i], arcs, scale, translate, property, name, opt_options);\n    }\n    return features;\n}\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n    var geometry;\n    var type = object.type;\n    var geometryReader = GEOMETRY_READERS[type];\n    if ((type === 'Point') || (type === 'MultiPoint')) {\n        geometry = geometryReader(object, scale, translate);\n    }\n    else {\n        geometry = geometryReader(object, arcs);\n    }\n    var feature = new Feature();\n    feature.setGeometry(transformGeometryWithOptions(geometry, false, opt_options));\n    if (object.id !== undefined) {\n        feature.setId(object.id);\n    }\n    var properties = object.properties;\n    if (property) {\n        if (!properties) {\n            properties = {};\n        }\n        properties[property] = name;\n    }\n    if (properties) {\n        feature.setProperties(properties, true);\n    }\n    return feature;\n}\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n    for (var i = 0, ii = arcs.length; i < ii; ++i) {\n        transformArc(arcs[i], scale, translate);\n    }\n}\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n    var x = 0;\n    var y = 0;\n    for (var i = 0, ii = arc.length; i < ii; ++i) {\n        var vertex = arc[i];\n        x += vertex[0];\n        y += vertex[1];\n        vertex[0] = x;\n        vertex[1] = y;\n        transformVertex(vertex, scale, translate);\n    }\n}\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n    vertex[0] = vertex[0] * scale[0] + translate[0];\n    vertex[1] = vertex[1] * scale[1] + translate[1];\n}\nexport default TopoJSON;\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/filter/Filter\n */\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     */\n    function Filter(tagName) {\n        /**\n         * @private\n         * @type {!string}\n         */\n        this.tagName_ = tagName;\n    }\n    /**\n     * The XML tag name for a filter.\n     * @returns {!string} Name.\n     */\n    Filter.prototype.getTagName = function () {\n        return this.tagName_;\n    };\n    return Filter;\n}());\nexport default Filter;\n//# sourceMappingURL=Filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LogicalNary\n */\nimport { assert } from '../../asserts.js';\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = /** @class */ (function (_super) {\n    __extends(LogicalNary, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {Array<import(\"./Filter.js\").default>} conditions Conditions.\n     */\n    function LogicalNary(tagName, conditions) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {Array<import(\"./Filter.js\").default>}\n         */\n        _this.conditions = conditions;\n        assert(_this.conditions.length >= 2, 57); // At least 2 conditions are required.\n        return _this;\n    }\n    return LogicalNary;\n}(Filter));\nexport default LogicalNary;\n//# sourceMappingURL=LogicalNary.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = /** @class */ (function (_super) {\n    __extends(And, _super);\n    /**\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\n     */\n    function And(conditions) {\n        return _super.call(this, 'And', Array.prototype.slice.call(arguments)) || this;\n    }\n    return And;\n}(LogicalNary));\nexport default And;\n//# sourceMappingURL=And.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = /** @class */ (function (_super) {\n    __extends(Bbox, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../extent.js\").Extent} extent Extent.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be set\n     * on geometries when this is not provided.\n     */\n    function Bbox(geometryName, extent, opt_srsName) {\n        var _this = _super.call(this, 'BBOX') || this;\n        /**\n         * @type {!string}\n         */\n        _this.geometryName = geometryName;\n        /**\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @type {string|undefined}\n         */\n        _this.srsName = opt_srsName;\n        return _this;\n    }\n    return Bbox;\n}(Filter));\nexport default Bbox;\n//# sourceMappingURL=Bbox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = /** @class */ (function (_super) {\n    __extends(Spatial, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Spatial(tagName, geometryName, geometry, opt_srsName) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.geometryName = geometryName || 'the_geom';\n        /**\n         * @type {import(\"../../geom/Geometry.js\").default}\n         */\n        _this.geometry = geometry;\n        /**\n         * @type {string|undefined}\n         */\n        _this.srsName = opt_srsName;\n        return _this;\n    }\n    return Spatial;\n}(Filter));\nexport default Spatial;\n//# sourceMappingURL=Spatial.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = /** @class */ (function (_super) {\n    __extends(Contains, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Contains(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Contains', geometryName, geometry, opt_srsName) || this;\n    }\n    return Contains;\n}(Spatial));\nexport default Contains;\n//# sourceMappingURL=Contains.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = /** @class */ (function (_super) {\n    __extends(Comparison, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} propertyName Name of the context property to compare.\n     */\n    function Comparison(tagName, propertyName) {\n        var _this = _super.call(this, tagName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.propertyName = propertyName;\n        return _this;\n    }\n    return Comparison;\n}(Filter));\nexport default Comparison;\n//# sourceMappingURL=Comparison.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = /** @class */ (function (_super) {\n    __extends(During, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} begin The begin date in ISO-8601 format.\n     * @param {!string} end The end date in ISO-8601 format.\n     */\n    function During(propertyName, begin, end) {\n        var _this = _super.call(this, 'During', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.begin = begin;\n        /**\n         * @type {!string}\n         */\n        _this.end = end;\n        return _this;\n    }\n    return During;\n}(Comparison));\nexport default During;\n//# sourceMappingURL=During.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = /** @class */ (function (_super) {\n    __extends(ComparisonBinary, _super);\n    /**\n     * @param {!string} tagName The XML tag name for this filter.\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n        var _this = _super.call(this, tagName, propertyName) || this;\n        /**\n         * @type {!(string|number)}\n         */\n        _this.expression = expression;\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return ComparisonBinary;\n}(Comparison));\nexport default ComparisonBinary;\n//# sourceMappingURL=ComparisonBinary.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = /** @class */ (function (_super) {\n    __extends(EqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function EqualTo(propertyName, expression, opt_matchCase) {\n        return _super.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase) || this;\n    }\n    return EqualTo;\n}(ComparisonBinary));\nexport default EqualTo;\n//# sourceMappingURL=EqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = /** @class */ (function (_super) {\n    __extends(GreaterThan, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function GreaterThan(propertyName, expression) {\n        return _super.call(this, 'PropertyIsGreaterThan', propertyName, expression) || this;\n    }\n    return GreaterThan;\n}(ComparisonBinary));\nexport default GreaterThan;\n//# sourceMappingURL=GreaterThan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = /** @class */ (function (_super) {\n    __extends(GreaterThanOrEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function GreaterThanOrEqualTo(propertyName, expression) {\n        return _super.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression) || this;\n    }\n    return GreaterThanOrEqualTo;\n}(ComparisonBinary));\nexport default GreaterThanOrEqualTo;\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = /** @class */ (function (_super) {\n    __extends(Intersects, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Intersects(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Intersects', geometryName, geometry, opt_srsName) || this;\n    }\n    return Intersects;\n}(Spatial));\nexport default Intersects;\n//# sourceMappingURL=Intersects.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = /** @class */ (function (_super) {\n    __extends(IsBetween, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} lowerBoundary The lower bound of the range.\n     * @param {!number} upperBoundary The upper bound of the range.\n     */\n    function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n        var _this = _super.call(this, 'PropertyIsBetween', propertyName) || this;\n        /**\n         * @type {!number}\n         */\n        _this.lowerBoundary = lowerBoundary;\n        /**\n         * @type {!number}\n         */\n        _this.upperBoundary = upperBoundary;\n        return _this;\n    }\n    return IsBetween;\n}(Comparison));\nexport default IsBetween;\n//# sourceMappingURL=IsBetween.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = /** @class */ (function (_super) {\n    __extends(IsLike, _super);\n    /**\n     * [constructor description]\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!string} pattern Text pattern.\n     * @param {string=} opt_wildCard Pattern character which matches any sequence of\n     *    zero or more string characters. Default is '*'.\n     * @param {string=} opt_singleChar pattern character which matches any single\n     *    string character. Default is '.'.\n     * @param {string=} opt_escapeChar Escape character which can be used to escape\n     *    the pattern characters. Default is '!'.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n        var _this = _super.call(this, 'PropertyIsLike', propertyName) || this;\n        /**\n         * @type {!string}\n         */\n        _this.pattern = pattern;\n        /**\n         * @type {!string}\n         */\n        _this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n        /**\n         * @type {!string}\n         */\n        _this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n        /**\n         * @type {!string}\n         */\n        _this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n        /**\n         * @type {boolean|undefined}\n         */\n        _this.matchCase = opt_matchCase;\n        return _this;\n    }\n    return IsLike;\n}(Comparison));\nexport default IsLike;\n//# sourceMappingURL=IsLike.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = /** @class */ (function (_super) {\n    __extends(IsNull, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     */\n    function IsNull(propertyName) {\n        return _super.call(this, 'PropertyIsNull', propertyName) || this;\n    }\n    return IsNull;\n}(Comparison));\nexport default IsNull;\n//# sourceMappingURL=IsNull.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = /** @class */ (function (_super) {\n    __extends(LessThan, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function LessThan(propertyName, expression) {\n        return _super.call(this, 'PropertyIsLessThan', propertyName, expression) || this;\n    }\n    return LessThan;\n}(ComparisonBinary));\nexport default LessThan;\n//# sourceMappingURL=LessThan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = /** @class */ (function (_super) {\n    __extends(LessThanOrEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!number} expression The value to compare.\n     */\n    function LessThanOrEqualTo(propertyName, expression) {\n        return _super.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression) || this;\n    }\n    return LessThanOrEqualTo;\n}(ComparisonBinary));\nexport default LessThanOrEqualTo;\n//# sourceMappingURL=LessThanOrEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = /** @class */ (function (_super) {\n    __extends(Not, _super);\n    /**\n     * @param {!import(\"./Filter.js\").default} condition Filter condition.\n     */\n    function Not(condition) {\n        var _this = _super.call(this, 'Not') || this;\n        /**\n         * @type {!import(\"./Filter.js\").default}\n         */\n        _this.condition = condition;\n        return _this;\n    }\n    return Not;\n}(Filter));\nexport default Not;\n//# sourceMappingURL=Not.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = /** @class */ (function (_super) {\n    __extends(NotEqualTo, _super);\n    /**\n     * @param {!string} propertyName Name of the context property to compare.\n     * @param {!(string|number)} expression The value to compare.\n     * @param {boolean=} opt_matchCase Case-sensitive?\n     */\n    function NotEqualTo(propertyName, expression, opt_matchCase) {\n        return _super.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase) || this;\n    }\n    return NotEqualTo;\n}(ComparisonBinary));\nexport default NotEqualTo;\n//# sourceMappingURL=NotEqualTo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = /** @class */ (function (_super) {\n    __extends(Or, _super);\n    /**\n     * @param {...import(\"./Filter.js\").default} conditions Conditions.\n     */\n    function Or(conditions) {\n        return _super.call(this, 'Or', Array.prototype.slice.call(arguments)) || this;\n    }\n    return Or;\n}(LogicalNary));\nexport default Or;\n//# sourceMappingURL=Or.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = /** @class */ (function (_super) {\n    __extends(Within, _super);\n    /**\n     * @param {!string} geometryName Geometry name to use.\n     * @param {!import(\"../../geom/Geometry.js\").default} geometry Geometry.\n     * @param {string=} opt_srsName SRS name. No srsName attribute will be\n     *    set on geometries when this is not provided.\n     */\n    function Within(geometryName, geometry, opt_srsName) {\n        return _super.call(this, 'Within', geometryName, geometry, opt_srsName) || this;\n    }\n    return Within;\n}(Spatial));\nexport default Within;\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport Within from './filter/Within.js';\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n    var params = [null].concat(Array.prototype.slice.call(arguments));\n    return new (Function.prototype.bind.apply(And, params));\n}\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n    var params = [null].concat(Array.prototype.slice.call(arguments));\n    return new (Function.prototype.bind.apply(Or, params));\n}\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @returns {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n    return new Not(condition);\n}\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n    return new Bbox(geometryName, extent, opt_srsName);\n}\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n    return new Contains(geometryName, geometry, opt_srsName);\n}\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n    return new Intersects(geometryName, geometry, opt_srsName);\n}\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n    return new Within(geometryName, geometry, opt_srsName);\n}\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n    return new EqualTo(propertyName, expression, opt_matchCase);\n}\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n    return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n    return new LessThan(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n    return new LessThanOrEqualTo(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n    return new GreaterThan(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n    return new GreaterThanOrEqualTo(propertyName, expression);\n}\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n    return new IsNull(propertyName);\n}\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n    return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    return new IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n    return new During(propertyName, begin, end);\n}\n//# sourceMappingURL=filter.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WFS\n */\nimport { assert } from '../asserts.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase, { GMLNS } from './GMLBase.js';\nimport { and as andFilter, bbox as bboxFilter } from './filter.js';\nimport XMLFeature from './XMLFeature.js';\nimport { readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode } from './xsd.js';\nimport { assign } from '../obj.js';\nimport { get as getProjection } from '../proj.js';\nimport { createElementNS, isDocument, makeArrayPusher, makeChildAppender, makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode, pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI } from '../xml.js';\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n    'http://www.opengis.net/gml': {\n        'boundedBy': makeObjectPropertySetter(GMLBase.prototype.readGeometryElement, 'bounds')\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n        'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n        'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n    }\n};\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'TransactionSummary': makeObjectPropertySetter(readTransactionSummary, 'transactionSummary'),\n        'InsertResults': makeObjectPropertySetter(readInsertResults, 'insertIds')\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'PropertyName': makeChildAppender(writeStringTextNode)\n    }\n};\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Insert': makeChildAppender(writeFeature),\n        'Update': makeChildAppender(writeUpdate),\n        'Delete': makeChildAppender(writeDelete),\n        'Property': makeChildAppender(writeProperty),\n        'Native': makeChildAppender(writeNative)\n    }\n};\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {import(\"../extent.js\").Extent} bounds\n */\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n    '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n    '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = /** @class */ (function (_super) {\n    __extends(WFS, _super);\n    /**\n     * @param {Options=} opt_options Optional configuration object.\n     */\n    function WFS(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {Array<string>|string|undefined}\n         */\n        _this.featureType_ = options.featureType;\n        /**\n         * @private\n         * @type {Object<string, string>|string|undefined}\n         */\n        _this.featureNS_ = options.featureNS;\n        /**\n         * @private\n         * @type {GMLBase}\n         */\n        _this.gmlFormat_ = options.gmlFormat ?\n            options.gmlFormat : new GML3();\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.schemaLocation_ = options.schemaLocation ?\n            options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n        return _this;\n    }\n    /**\n     * @return {Array<string>|string|undefined} featureType\n     */\n    WFS.prototype.getFeatureType = function () {\n        return this.featureType_;\n    };\n    /**\n     * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n     */\n    WFS.prototype.setFeatureType = function (featureType) {\n        this.featureType_ = featureType;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readFeaturesFromNode = function (node, opt_options) {\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node\n        };\n        assign(context, {\n            'featureType': this.featureType_,\n            'featureNS': this.featureNS_\n        });\n        assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n        var objectStack = [context];\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS]['featureMember'] =\n            makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n        var features = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, objectStack, this.gmlFormat_);\n        if (!features) {\n            features = [];\n        }\n        return features;\n    };\n    /**\n     * Read transaction response of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {TransactionResponse|undefined} Transaction response.\n     * @api\n     */\n    WFS.prototype.readTransactionResponse = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readTransactionResponseFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readTransactionResponseFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * Read feature collection metadata of the source.\n     *\n     * @param {Document|Element|Object|string} source Source.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     * @api\n     */\n    WFS.prototype.readFeatureCollectionMetadata = function (source) {\n        if (!source) {\n            return undefined;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFeatureCollectionMetadataFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFeatureCollectionMetadataFromDocument(\n            /** @type {Document} */ (source));\n        }\n        else {\n            return this.readFeatureCollectionMetadataFromNode(\n            /** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {FeatureCollectionMetadata|undefined}\n     *     FeatureCollection metadata.\n     */\n    WFS.prototype.readFeatureCollectionMetadataFromNode = function (node) {\n        var result = {};\n        var value = readNonNegativeIntegerString(node.getAttribute('numberOfFeatures'));\n        result['numberOfFeatures'] = value;\n        return pushParseAndPop(\n        /** @type {FeatureCollectionMetadata} */ (result), FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n    };\n    /**\n     * @param {Document} doc Document.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @param {Element} node Node.\n     * @return {TransactionResponse|undefined} Transaction response.\n     */\n    WFS.prototype.readTransactionResponseFromNode = function (node) {\n        return pushParseAndPop(\n        /** @type {TransactionResponse} */ ({}), TRANSACTION_RESPONSE_PARSERS, node, []);\n    };\n    /**\n     * Encode format as WFS `GetFeature` and return the Node.\n     *\n     * @param {WriteGetFeatureOptions} options Options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeGetFeature = function (options) {\n        var node = createElementNS(WFSNS, 'GetFeature');\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', '1.1.0');\n        var filter;\n        if (options) {\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n            if (options.outputFormat) {\n                node.setAttribute('outputFormat', options.outputFormat);\n            }\n            if (options.maxFeatures !== undefined) {\n                node.setAttribute('maxFeatures', String(options.maxFeatures));\n            }\n            if (options.resultType) {\n                node.setAttribute('resultType', options.resultType);\n            }\n            if (options.startIndex !== undefined) {\n                node.setAttribute('startIndex', String(options.startIndex));\n            }\n            if (options.count !== undefined) {\n                node.setAttribute('count', String(options.count));\n            }\n            if (options.viewParams !== undefined) {\n                node.setAttribute('viewParams ', options.viewParams);\n            }\n            filter = options.filter;\n            if (options.bbox) {\n                assert(options.geometryName, 12); // `options.geometryName` must also be provided when `options.bbox` is set\n                var bbox = bboxFilter(\n                /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n                if (filter) {\n                    // if bbox and filter are both set, combine the two into a single filter\n                    filter = andFilter(filter, bbox);\n                }\n                else {\n                    filter = bbox;\n                }\n            }\n        }\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var context = {\n            node: node\n        };\n        assign(context, {\n            'srsName': options.srsName,\n            'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n            'featurePrefix': options.featurePrefix,\n            'geometryName': options.geometryName,\n            'filter': filter,\n            'propertyNames': options.propertyNames ? options.propertyNames : []\n        });\n        assert(Array.isArray(options.featureTypes), 11); // `options.featureTypes` should be an Array\n        writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n        return node;\n    };\n    /**\n     * Encode format as WFS `Transaction` and return the Node.\n     *\n     * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n     * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n     * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n     * @param {WriteTransactionOptions} options Write options.\n     * @return {Node} Result.\n     * @api\n     */\n    WFS.prototype.writeTransaction = function (inserts, updates, deletes, options) {\n        var objectStack = [];\n        var node = createElementNS(WFSNS, 'Transaction');\n        var version = options.version ? options.version : DEFAULT_VERSION;\n        var gmlVersion = version === '1.0.0' ? 2 : 3;\n        node.setAttribute('service', 'WFS');\n        node.setAttribute('version', version);\n        var baseObj;\n        /** @type {import(\"../xml.js\").NodeStackItem} */\n        var obj;\n        if (options) {\n            baseObj = options.gmlOptions ? options.gmlOptions : {};\n            if (options.handle) {\n                node.setAttribute('handle', options.handle);\n            }\n        }\n        var schemaLocation = SCHEMA_LOCATIONS[version];\n        node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n        var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n        if (inserts) {\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\n            assign(obj, baseObj);\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Insert'), inserts, objectStack);\n        }\n        if (updates) {\n            obj = assign({ node: node }, { 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName });\n            assign(obj, baseObj);\n            pushSerializeAndPop(obj, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Update'), updates, objectStack);\n        }\n        if (deletes) {\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Delete'), deletes, objectStack);\n        }\n        if (options.nativeElements) {\n            pushSerializeAndPop({ node: node, 'featureNS': options.featureNS,\n                'featureType': options.featureType, 'featurePrefix': featurePrefix,\n                'gmlVersion': gmlVersion, 'srsName': options.srsName }, TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Native'), options.nativeElements, objectStack);\n        }\n        return node;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readProjectionFromDocument = function (doc) {\n        for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readProjectionFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WFS.prototype.readProjectionFromNode = function (node) {\n        if (node.firstElementChild &&\n            node.firstElementChild.firstElementChild) {\n            node = node.firstElementChild.firstElementChild;\n            for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n                if (!(n.childNodes.length === 0 ||\n                    (n.childNodes.length === 1 &&\n                        n.firstChild.nodeType === 3))) {\n                    var objectStack = [{}];\n                    this.gmlFormat_.readGeometryElement(n, objectStack);\n                    return getProjection(objectStack.pop().srsName);\n                }\n            }\n        }\n        return null;\n    };\n    return WFS;\n}(XMLFeature));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n    return pushParseAndPop({}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n    'http://www.opengis.net/ogc': {\n        'FeatureId': makeArrayPusher(function (node, objectStack) {\n            return node.getAttribute('fid');\n        })\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n    parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n    'http://www.opengis.net/wfs': {\n        'Feature': fidParser\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n    return pushParseAndPop([], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var gmlVersion = context['gmlVersion'];\n    var child = createElementNS(featureNS, featureType);\n    node.appendChild(child);\n    if (gmlVersion === 2) {\n        GML2.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n    else {\n        GML3.prototype.writeFeatureElement(child, feature, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n    var filter = createElementNS(OGCNS, 'Filter');\n    var child = createElementNS(OGCNS, 'FeatureId');\n    filter.appendChild(child);\n    child.setAttribute('fid', /** @type {string} */ (fid));\n    node.appendChild(filter);\n}\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n    featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n    var prefix = featurePrefix + ':';\n    // The featureType already contains the prefix.\n    if (featureType.indexOf(prefix) === 0) {\n        return featureType;\n    }\n    else {\n        return prefix + featureType;\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 26); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    assert(feature.getId() !== undefined, 27); // Features must have an id set\n    var featureType = context['featureType'];\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var typeName = getTypeName(featurePrefix, featureType);\n    var geometryName = feature.getGeometryName();\n    node.setAttribute('typeName', typeName);\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    var fid = feature.getId();\n    if (fid !== undefined) {\n        var keys = feature.getKeys();\n        var values = [];\n        for (var i = 0, ii = keys.length; i < ii; i++) {\n            var value = feature.get(keys[i]);\n            if (value !== undefined) {\n                var name_1 = keys[i];\n                if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n                    name_1 = geometryName;\n                }\n                values.push({ name: name_1, value: value });\n            }\n        }\n        pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({ 'gmlVersion': context['gmlVersion'], node: node,\n            'hasZ': context['hasZ'], 'srsName': context['srsName'] }), TRANSACTION_SERIALIZERS, makeSimpleNodeFactory('Property'), values, objectStack);\n        writeOgcFidFilter(node, fid, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n    var name = createElementNS(WFSNS, 'Name');\n    var context = objectStack[objectStack.length - 1];\n    var gmlVersion = context['gmlVersion'];\n    node.appendChild(name);\n    writeStringTextNode(name, pair.name);\n    if (pair.value !== undefined && pair.value !== null) {\n        var value = createElementNS(WFSNS, 'Value');\n        node.appendChild(value);\n        if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\n            if (gmlVersion === 2) {\n                GML2.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n            else {\n                GML3.prototype.writeGeometryElement(value, pair.value, objectStack);\n            }\n        }\n        else {\n            writeStringTextNode(value, pair.value);\n        }\n    }\n}\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n    if (nativeElement.vendorId) {\n        node.setAttribute('vendorId', nativeElement.vendorId);\n    }\n    if (nativeElement.safeToIgnore !== undefined) {\n        node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n    }\n    if (nativeElement.value !== undefined) {\n        writeStringTextNode(node, nativeElement.value);\n    }\n}\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n    'http://www.opengis.net/wfs': {\n        'Query': makeChildAppender(writeQuery)\n    },\n    'http://www.opengis.net/ogc': {\n        'During': makeChildAppender(writeDuringFilter),\n        'And': makeChildAppender(writeLogicalFilter),\n        'Or': makeChildAppender(writeLogicalFilter),\n        'Not': makeChildAppender(writeNotFilter),\n        'BBOX': makeChildAppender(writeBboxFilter),\n        'Contains': makeChildAppender(writeContainsFilter),\n        'Intersects': makeChildAppender(writeIntersectsFilter),\n        'Within': makeChildAppender(writeWithinFilter),\n        'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n        'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n        'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n        'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n        'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n    }\n};\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featurePrefix = context['featurePrefix'];\n    var featureNS = context['featureNS'];\n    var propertyNames = context['propertyNames'];\n    var srsName = context['srsName'];\n    var typeName;\n    // If feature prefix is not defined, we must not use the default prefix.\n    if (featurePrefix) {\n        typeName = getTypeName(featurePrefix, featureType);\n    }\n    else {\n        typeName = featureType;\n    }\n    node.setAttribute('typeName', typeName);\n    if (srsName) {\n        node.setAttribute('srsName', srsName);\n    }\n    if (featureNS) {\n        node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n    }\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, QUERY_SERIALIZERS, makeSimpleNodeFactory('PropertyName'), propertyNames, objectStack);\n    var filter = context['filter'];\n    if (filter) {\n        var child = createElementNS(OGCNS, 'Filter');\n        node.appendChild(child);\n        writeFilterCondition(child, filter, objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(filter.getTagName()), [filter], objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Within.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    context['srsName'] = filter.srsName;\n    writeOgcPropertyName(node, filter.geometryName);\n    GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n    var valueReference = createElementNS(FESNS, 'ValueReference');\n    writeStringTextNode(valueReference, filter.propertyName);\n    node.appendChild(valueReference);\n    var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n    node.appendChild(timePeriod);\n    var begin = createElementNS(GMLNS, 'begin');\n    timePeriod.appendChild(begin);\n    writeTimeInstant(begin, filter.begin);\n    var end = createElementNS(GMLNS, 'end');\n    timePeriod.appendChild(end);\n    writeTimeInstant(end, filter.end);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    var conditions = filter.conditions;\n    for (var i = 0, ii = conditions.length; i < ii; ++i) {\n        var condition = conditions[i];\n        pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n    }\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var item = { node: node };\n    var condition = filter.condition;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory(condition.getTagName()), [condition], objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writeOgcPropertyName(node, filter.propertyName);\n    writeOgcLiteral(node, '' + filter.expression);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n    writeOgcPropertyName(node, filter.propertyName);\n}\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n    writeOgcPropertyName(node, filter.propertyName);\n    var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n    node.appendChild(lowerBoundary);\n    writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n    var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n    node.appendChild(upperBoundary);\n    writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n    node.setAttribute('wildCard', filter.wildCard);\n    node.setAttribute('singleChar', filter.singleChar);\n    node.setAttribute('escapeChar', filter.escapeChar);\n    if (filter.matchCase !== undefined) {\n        node.setAttribute('matchCase', filter.matchCase.toString());\n    }\n    writeOgcPropertyName(node, filter.propertyName);\n    writeOgcLiteral(node, '' + filter.pattern);\n}\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n    var property = createElementNS(OGCNS, tagName);\n    writeStringTextNode(property, value);\n    node.appendChild(property);\n}\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n    writeOgcExpression('PropertyName', node, value);\n}\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n    writeOgcExpression('Literal', node, value);\n}\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n    var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n    node.appendChild(timeInstant);\n    var timePosition = createElementNS(GMLNS, 'timePosition');\n    timeInstant.appendChild(timePosition);\n    writeStringTextNode(timePosition, time);\n}\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    writeFilterCondition(child, filter, []);\n    return child;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n    item.node = node;\n    pushSerializeAndPop(item, GETFEATURE_SERIALIZERS, makeSimpleNodeFactory('Query'), featureTypes, objectStack);\n}\nexport default WFS;\n//# sourceMappingURL=WFS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport { transformGeometryWithOptions } from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nvar GeometryConstructor = {\n    'POINT': Point,\n    'LINESTRING': LineString,\n    'POLYGON': Polygon,\n    'MULTIPOINT': MultiPoint,\n    'MULTILINESTRING': MultiLineString,\n    'MULTIPOLYGON': MultiPolygon\n};\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n    TEXT: 1,\n    LEFT_PAREN: 2,\n    RIGHT_PAREN: 3,\n    NUMBER: 4,\n    COMMA: 5,\n    EOF: 6\n};\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n    WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = /** @class */ (function () {\n    /**\n     * @param {string} wkt WKT string.\n     */\n    function Lexer(wkt) {\n        /**\n         * @type {string}\n         */\n        this.wkt = wkt;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.index_ = -1;\n    }\n    /**\n     * @param {string} c Character.\n     * @return {boolean} Whether the character is alphabetic.\n     * @private\n     */\n    Lexer.prototype.isAlpha_ = function (c) {\n        return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n    };\n    /**\n     * @param {string} c Character.\n     * @param {boolean=} opt_decimal Whether the string number\n     *     contains a dot, i.e. is a decimal number.\n     * @return {boolean} Whether the character is numeric.\n     * @private\n     */\n    Lexer.prototype.isNumeric_ = function (c, opt_decimal) {\n        var decimal = opt_decimal !== undefined ? opt_decimal : false;\n        return c >= '0' && c <= '9' || c == '.' && !decimal;\n    };\n    /**\n     * @param {string} c Character.\n     * @return {boolean} Whether the character is whitespace.\n     * @private\n     */\n    Lexer.prototype.isWhiteSpace_ = function (c) {\n        return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n    };\n    /**\n     * @return {string} Next string character.\n     * @private\n     */\n    Lexer.prototype.nextChar_ = function () {\n        return this.wkt.charAt(++this.index_);\n    };\n    /**\n     * Fetch and return the next token.\n     * @return {!Token} Next string token.\n     */\n    Lexer.prototype.nextToken = function () {\n        var c = this.nextChar_();\n        var position = this.index_;\n        /** @type {number|string} */\n        var value = c;\n        var type;\n        if (c == '(') {\n            type = TokenType.LEFT_PAREN;\n        }\n        else if (c == ',') {\n            type = TokenType.COMMA;\n        }\n        else if (c == ')') {\n            type = TokenType.RIGHT_PAREN;\n        }\n        else if (this.isNumeric_(c) || c == '-') {\n            type = TokenType.NUMBER;\n            value = this.readNumber_();\n        }\n        else if (this.isAlpha_(c)) {\n            type = TokenType.TEXT;\n            value = this.readText_();\n        }\n        else if (this.isWhiteSpace_(c)) {\n            return this.nextToken();\n        }\n        else if (c === '') {\n            type = TokenType.EOF;\n        }\n        else {\n            throw new Error('Unexpected character: ' + c);\n        }\n        return { position: position, value: value, type: type };\n    };\n    /**\n     * @return {number} Numeric token value.\n     * @private\n     */\n    Lexer.prototype.readNumber_ = function () {\n        var c;\n        var index = this.index_;\n        var decimal = false;\n        var scientificNotation = false;\n        do {\n            if (c == '.') {\n                decimal = true;\n            }\n            else if (c == 'e' || c == 'E') {\n                scientificNotation = true;\n            }\n            c = this.nextChar_();\n        } while (this.isNumeric_(c, decimal) ||\n            // if we haven't detected a scientific number before, 'e' or 'E'\n            // hint that we should continue to read\n            !scientificNotation && (c == 'e' || c == 'E') ||\n            // once we know that we have a scientific number, both '-' and '+'\n            // are allowed\n            scientificNotation && (c == '-' || c == '+'));\n        return parseFloat(this.wkt.substring(index, this.index_--));\n    };\n    /**\n     * @return {string} String token value.\n     * @private\n     */\n    Lexer.prototype.readText_ = function () {\n        var c;\n        var index = this.index_;\n        do {\n            c = this.nextChar_();\n        } while (this.isAlpha_(c));\n        return this.wkt.substring(index, this.index_--).toUpperCase();\n    };\n    return Lexer;\n}());\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = /** @class */ (function () {\n    /**\n     * @param {Lexer} lexer The lexer.\n     */\n    function Parser(lexer) {\n        /**\n         * @type {Lexer}\n         * @private\n         */\n        this.lexer_ = lexer;\n        /**\n         * @type {Token}\n         * @private\n         */\n        this.token_;\n        /**\n         * @type {GeometryLayout}\n         * @private\n         */\n        this.layout_ = GeometryLayout.XY;\n    }\n    /**\n     * Fetch the next token form the lexer and replace the active token.\n     * @private\n     */\n    Parser.prototype.consume_ = function () {\n        this.token_ = this.lexer_.nextToken();\n    };\n    /**\n     * Tests if the given type matches the type of the current token.\n     * @param {TokenType} type Token type.\n     * @return {boolean} Whether the token matches the given type.\n     */\n    Parser.prototype.isTokenType = function (type) {\n        var isMatch = this.token_.type == type;\n        return isMatch;\n    };\n    /**\n     * If the given type matches the current token, consume it.\n     * @param {TokenType} type Token type.\n     * @return {boolean} Whether the token matches the given type.\n     */\n    Parser.prototype.match = function (type) {\n        var isMatch = this.isTokenType(type);\n        if (isMatch) {\n            this.consume_();\n        }\n        return isMatch;\n    };\n    /**\n     * Try to parse the tokens provided by the lexer.\n     * @return {import(\"../geom/Geometry.js\").default} The geometry.\n     */\n    Parser.prototype.parse = function () {\n        this.consume_();\n        var geometry = this.parseGeometry_();\n        return geometry;\n    };\n    /**\n     * Try to parse the dimensional info.\n     * @return {GeometryLayout} The layout.\n     * @private\n     */\n    Parser.prototype.parseGeometryLayout_ = function () {\n        var layout = GeometryLayout.XY;\n        var dimToken = this.token_;\n        if (this.isTokenType(TokenType.TEXT)) {\n            var dimInfo = dimToken.value;\n            if (dimInfo === Z) {\n                layout = GeometryLayout.XYZ;\n            }\n            else if (dimInfo === M) {\n                layout = GeometryLayout.XYM;\n            }\n            else if (dimInfo === ZM) {\n                layout = GeometryLayout.XYZM;\n            }\n            if (layout !== GeometryLayout.XY) {\n                this.consume_();\n            }\n        }\n        return layout;\n    };\n    /**\n     * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n     * @private\n     */\n    Parser.prototype.parseGeometryCollectionText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var geometries = [];\n            do {\n                geometries.push(this.parseGeometry_());\n            } while (this.match(TokenType.COMMA));\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return geometries;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {Array<number>} All values in a point.\n     * @private\n     */\n    Parser.prototype.parsePointText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePoint_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return null;\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} All points in a linestring.\n     * @private\n     */\n    Parser.prototype.parseLineStringText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePointList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n     * @private\n     */\n    Parser.prototype.parsePolygonText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parseLineStringTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} All points in a multipoint.\n     * @private\n     */\n    Parser.prototype.parseMultiPointText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = void 0;\n            if (this.token_.type == TokenType.LEFT_PAREN) {\n                coordinates = this.parsePointTextList_();\n            }\n            else {\n                coordinates = this.parsePointList_();\n            }\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} All linestring points\n     *                                          in a multilinestring.\n     * @private\n     */\n    Parser.prototype.parseMultiLineStringText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parseLineStringTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n     * @private\n     */\n    Parser.prototype.parseMultiPolygonText_ = function () {\n        if (this.match(TokenType.LEFT_PAREN)) {\n            var coordinates = this.parsePolygonTextList_();\n            if (this.match(TokenType.RIGHT_PAREN)) {\n                return coordinates;\n            }\n        }\n        else if (this.isEmptyGeometry_()) {\n            return [];\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<number>} A point.\n     * @private\n     */\n    Parser.prototype.parsePoint_ = function () {\n        var coordinates = [];\n        var dimensions = this.layout_.length;\n        for (var i = 0; i < dimensions; ++i) {\n            var token = this.token_;\n            if (this.match(TokenType.NUMBER)) {\n                coordinates.push(/** @type {number} */ (token.value));\n            }\n            else {\n                break;\n            }\n        }\n        if (coordinates.length == dimensions) {\n            return coordinates;\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    /**\n     * @return {!Array<!Array<number>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePointList_ = function () {\n        var coordinates = [this.parsePoint_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePoint_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<number>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePointTextList_ = function () {\n        var coordinates = [this.parsePointText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePointText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<!Array<number>>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parseLineStringTextList_ = function () {\n        var coordinates = [this.parseLineStringText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parseLineStringText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n     * @private\n     */\n    Parser.prototype.parsePolygonTextList_ = function () {\n        var coordinates = [this.parsePolygonText_()];\n        while (this.match(TokenType.COMMA)) {\n            coordinates.push(this.parsePolygonText_());\n        }\n        return coordinates;\n    };\n    /**\n     * @return {boolean} Whether the token implies an empty geometry.\n     * @private\n     */\n    Parser.prototype.isEmptyGeometry_ = function () {\n        var isEmpty = this.isTokenType(TokenType.TEXT) &&\n            this.token_.value == EMPTY;\n        if (isEmpty) {\n            this.consume_();\n        }\n        return isEmpty;\n    };\n    /**\n     * Create an error message for an unexpected token error.\n     * @return {string} Error message.\n     * @private\n     */\n    Parser.prototype.formatErrorMessage_ = function () {\n        return 'Unexpected `' + this.token_.value + '` at position ' +\n            this.token_.position + ' in `' + this.lexer_.wkt + '`';\n    };\n    /**\n     * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n     * @private\n     */\n    Parser.prototype.parseGeometry_ = function () {\n        var token = this.token_;\n        if (this.match(TokenType.TEXT)) {\n            var geomType = token.value;\n            this.layout_ = this.parseGeometryLayout_();\n            if (geomType == 'GEOMETRYCOLLECTION') {\n                var geometries = this.parseGeometryCollectionText_();\n                return new GeometryCollection(geometries);\n            }\n            else {\n                var ctor = GeometryConstructor[geomType];\n                if (!ctor) {\n                    throw new Error('Invalid geometry type: ' + geomType);\n                }\n                var coordinates = void 0;\n                switch (geomType) {\n                    case 'POINT': {\n                        coordinates = this.parsePointText_();\n                        break;\n                    }\n                    case 'LINESTRING': {\n                        coordinates = this.parseLineStringText_();\n                        break;\n                    }\n                    case 'POLYGON': {\n                        coordinates = this.parsePolygonText_();\n                        break;\n                    }\n                    case 'MULTIPOINT': {\n                        coordinates = this.parseMultiPointText_();\n                        break;\n                    }\n                    case 'MULTILINESTRING': {\n                        coordinates = this.parseMultiLineStringText_();\n                        break;\n                    }\n                    case 'MULTIPOLYGON': {\n                        coordinates = this.parseMultiPolygonText_();\n                        break;\n                    }\n                    default: {\n                        throw new Error('Invalid geometry type: ' + geomType);\n                    }\n                }\n                if (!coordinates) {\n                    if (ctor === GeometryConstructor['POINT']) {\n                        coordinates = [NaN, NaN];\n                    }\n                    else {\n                        coordinates = [];\n                    }\n                }\n                return new ctor(coordinates, this.layout_);\n            }\n        }\n        throw new Error(this.formatErrorMessage_());\n    };\n    return Parser;\n}());\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = /** @class */ (function (_super) {\n    __extends(WKT, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WKT(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * Split GeometryCollection into multiple features.\n         * @type {boolean}\n         * @private\n         */\n        _this.splitCollection_ = options.splitCollection !== undefined ?\n            options.splitCollection : false;\n        return _this;\n    }\n    /**\n     * Parse a WKT string.\n     * @param {string} wkt WKT string.\n     * @return {import(\"../geom/Geometry.js\").default|undefined}\n     *     The geometry created.\n     * @private\n     */\n    WKT.prototype.parse_ = function (wkt) {\n        var lexer = new Lexer(wkt);\n        var parser = new Parser(lexer);\n        return parser.parse();\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readFeatureFromText = function (text, opt_options) {\n        var geom = this.readGeometryFromText(text, opt_options);\n        if (geom) {\n            var feature = new Feature();\n            feature.setGeometry(geom);\n            return feature;\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readFeaturesFromText = function (text, opt_options) {\n        var geometries = [];\n        var geometry = this.readGeometryFromText(text, opt_options);\n        if (this.splitCollection_ &&\n            geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n            geometries = ( /** @type {GeometryCollection} */(geometry))\n                .getGeometriesArray();\n        }\n        else {\n            geometries = [geometry];\n        }\n        var features = [];\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            var feature = new Feature();\n            feature.setGeometry(geometries[i]);\n            features.push(feature);\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.readGeometryFromText = function (text, opt_options) {\n        var geometry = this.parse_(text);\n        if (geometry) {\n            return transformGeometryWithOptions(geometry, false, opt_options);\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeFeatureText = function (feature, opt_options) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n            return this.writeGeometryText(geometry, opt_options);\n        }\n        return '';\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeFeaturesText = function (features, opt_options) {\n        if (features.length == 1) {\n            return this.writeFeatureText(features[0], opt_options);\n        }\n        var geometries = [];\n        for (var i = 0, ii = features.length; i < ii; ++i) {\n            geometries.push(features[i].getGeometry());\n        }\n        var collection = new GeometryCollection(geometries);\n        return this.writeGeometryText(collection, opt_options);\n    };\n    /**\n     * @inheritDoc\n     */\n    WKT.prototype.writeGeometryText = function (geometry, opt_options) {\n        return encode(transformGeometryWithOptions(geometry, true, opt_options));\n    };\n    return WKT;\n}(TextFeature));\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n    var coordinates = geom.getCoordinates();\n    if (coordinates.length === 0) {\n        return '';\n    }\n    return coordinates.join(' ');\n}\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n    var array = [];\n    var components = geom.getPoints();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodePointGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n    var array = [];\n    var geoms = geom.getGeometries();\n    for (var i = 0, ii = geoms.length; i < ii; ++i) {\n        array.push(encode(geoms[i]));\n    }\n    return array.join(',');\n}\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n    var coordinates = geom.getCoordinates();\n    var array = [];\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        array.push(coordinates[i].join(' '));\n    }\n    return array.join(',');\n}\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n    var array = [];\n    var components = geom.getLineStrings();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n    var array = [];\n    var rings = geom.getLinearRings();\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n    var array = [];\n    var components = geom.getPolygons();\n    for (var i = 0, ii = components.length; i < ii; ++i) {\n        array.push('(' + encodePolygonGeometry(components[i]) + ')');\n    }\n    return array.join(',');\n}\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n    var layout = geom.getLayout();\n    var dimInfo = '';\n    if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n        dimInfo += Z;\n    }\n    if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n        dimInfo += M;\n    }\n    return dimInfo;\n}\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nvar GeometryEncoder = {\n    'Point': encodePointGeometry,\n    'LineString': encodeLineStringGeometry,\n    'Polygon': encodePolygonGeometry,\n    'MultiPoint': encodeMultiPointGeometry,\n    'MultiLineString': encodeMultiLineStringGeometry,\n    'MultiPolygon': encodeMultiPolygonGeometry,\n    'GeometryCollection': encodeGeometryCollectionGeometry\n};\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n    var type = geom.getType();\n    var geometryEncoder = GeometryEncoder[type];\n    var enc = geometryEncoder(geom);\n    type = type.toUpperCase();\n    if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n        var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n        if (dimInfo.length > 0) {\n            type += ' ' + dimInfo;\n        }\n    }\n    if (enc.length === 0) {\n        return type + ' ' + EMPTY;\n    }\n    return type + '(' + enc + ')';\n}\nexport default WKT;\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/XLink\n */\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n    return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport { isDocument, parse } from '../xml.js';\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = /** @class */ (function () {\n    function XML() {\n    }\n    /**\n     * Read the source document.\n     *\n     * @param {Document|Element|string} source The XML source.\n     * @return {Object} An object representing the source.\n     * @api\n     */\n    XML.prototype.read = function (source) {\n        if (!source) {\n            return null;\n        }\n        else if (typeof source === 'string') {\n            var doc = parse(source);\n            return this.readFromDocument(doc);\n        }\n        else if (isDocument(source)) {\n            return this.readFromDocument(/** @type {Document} */ (source));\n        }\n        else {\n            return this.readFromNode(/** @type {Element} */ (source));\n        }\n    };\n    /**\n     * @abstract\n     * @param {Document} doc Document.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromDocument = function (doc) { };\n    /**\n     * @abstract\n     * @param {Element} node Node.\n     * @return {Object} Object\n     */\n    XML.prototype.readFromNode = function (node) { };\n    return XML;\n}());\nexport default XML;\n//# sourceMappingURL=XML.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSCapabilities\n */\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString } from './xsd.js';\nimport { makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wms'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n});\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = /** @class */ (function (_super) {\n    __extends(WMSCapabilities, _super);\n    function WMSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {string|undefined}\n         */\n        _this.version = undefined;\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMSCapabilities.prototype.readFromNode = function (node) {\n        this.version = node.getAttribute('version').trim();\n        var wmsCapabilityObject = pushParseAndPop({\n            'version': this.version\n        }, PARSERS, node, []);\n        return wmsCapabilityObject ? wmsCapabilityObject : null;\n    };\n    return WMSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n    'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n    'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n    'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Format': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n    return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n    var extent = [\n        readDecimalString(node.getAttribute('minx')),\n        readDecimalString(node.getAttribute('miny')),\n        readDecimalString(node.getAttribute('maxx')),\n        readDecimalString(node.getAttribute('maxy'))\n    ];\n    var resolutions = [\n        readDecimalString(node.getAttribute('resx')),\n        readDecimalString(node.getAttribute('resy'))\n    ];\n    return {\n        'crs': node.getAttribute('CRS'),\n        'extent': extent,\n        'res': resolutions\n    };\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n    var geographicBoundingBox = pushParseAndPop({}, EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS, node, objectStack);\n    if (!geographicBoundingBox) {\n        return undefined;\n    }\n    var westBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['westBoundLongitude']);\n    var southBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['southBoundLatitude']);\n    var eastBoundLongitude = /** @type {number|undefined} */ (geographicBoundingBox['eastBoundLongitude']);\n    var northBoundLatitude = /** @type {number|undefined} */ (geographicBoundingBox['northBoundLatitude']);\n    if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n        return undefined;\n    }\n    return [\n        westBoundLongitude, southBoundLatitude,\n        eastBoundLongitude, northBoundLatitude\n    ];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n    return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n    return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n    var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n    var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n    if (!layerObject) {\n        return undefined;\n    }\n    var queryable = readBooleanString(node.getAttribute('queryable'));\n    if (queryable === undefined) {\n        queryable = parentLayerObject['queryable'];\n    }\n    layerObject['queryable'] = queryable !== undefined ? queryable : false;\n    var cascaded = readNonNegativeIntegerString(node.getAttribute('cascaded'));\n    if (cascaded === undefined) {\n        cascaded = parentLayerObject['cascaded'];\n    }\n    layerObject['cascaded'] = cascaded;\n    var opaque = readBooleanString(node.getAttribute('opaque'));\n    if (opaque === undefined) {\n        opaque = parentLayerObject['opaque'];\n    }\n    layerObject['opaque'] = opaque !== undefined ? opaque : false;\n    var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n    if (noSubsets === undefined) {\n        noSubsets = parentLayerObject['noSubsets'];\n    }\n    layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n    var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n    if (!fixedWidth) {\n        fixedWidth = parentLayerObject['fixedWidth'];\n    }\n    layerObject['fixedWidth'] = fixedWidth;\n    var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n    if (!fixedHeight) {\n        fixedHeight = parentLayerObject['fixedHeight'];\n    }\n    layerObject['fixedHeight'] = fixedHeight;\n    // See 7.2.4.8\n    var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n    addKeys.forEach(function (key) {\n        if (key in parentLayerObject) {\n            var childValue = layerObject[key] || [];\n            layerObject[key] = childValue.concat(parentLayerObject[key]);\n        }\n    });\n    var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n        'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n    replaceKeys.forEach(function (key) {\n        if (!(key in layerObject)) {\n            var parentValue = parentLayerObject[key];\n            layerObject[key] = parentValue;\n        }\n    });\n    return layerObject;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n    var dimensionObject = {\n        'name': node.getAttribute('name'),\n        'units': node.getAttribute('units'),\n        'unitSymbol': node.getAttribute('unitSymbol'),\n        'default': node.getAttribute('default'),\n        'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n        'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n        'current': readBooleanString(node.getAttribute('current')),\n        'values': readString(node)\n    };\n    return dimensionObject;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n    return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n    return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n    return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n    var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n    if (formatOnlineresource) {\n        var size = [\n            readNonNegativeIntegerString(node.getAttribute('width')),\n            readNonNegativeIntegerString(node.getAttribute('height'))\n        ];\n        formatOnlineresource['size'] = size;\n        return formatOnlineresource;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n    var authorityObject = readFormatOnlineresource(node, objectStack);\n    if (authorityObject) {\n        authorityObject['name'] = node.getAttribute('name');\n        return authorityObject;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n    var metadataObject = readFormatOnlineresource(node, objectStack);\n    if (metadataObject) {\n        metadataObject['type'] = node.getAttribute('type');\n        return metadataObject;\n    }\n    return undefined;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n    return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\nexport default WMSCapabilities;\n//# sourceMappingURL=WMSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport { extend, includes } from '../array.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport { assign } from '../obj.js';\nimport { makeArrayPusher, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = /** @class */ (function (_super) {\n    __extends(WMSGetFeatureInfo, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function WMSGetFeatureInfo(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n        /**\n         * @private\n         * @type {GML2}\n         */\n        _this.gmlFormat_ = new GML2();\n        /**\n         * @private\n         * @type {Array<string>}\n         */\n        _this.layers_ = options.layers ? options.layers : null;\n        return _this;\n    }\n    /**\n     * @return {Array<string>} layers\n     */\n    WMSGetFeatureInfo.prototype.getLayers = function () {\n        return this.layers_;\n    };\n    /**\n     * @param {Array<string>} layers Layers to parse.\n     */\n    WMSGetFeatureInfo.prototype.setLayers = function (layers) {\n        this.layers_ = layers;\n    };\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @return {Array<import(\"../Feature.js\").default>} Features.\n     * @private\n     */\n    WMSGetFeatureInfo.prototype.readFeatures_ = function (node, objectStack) {\n        node.setAttribute('namespaceURI', this.featureNS_);\n        var localName = node.localName;\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        var features = [];\n        if (node.childNodes.length === 0) {\n            return features;\n        }\n        if (localName == 'msGMLOutput') {\n            for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n                var layer = node.childNodes[i];\n                if (layer.nodeType !== Node.ELEMENT_NODE) {\n                    continue;\n                }\n                var layerElement = /** @type {Element} */ (layer);\n                var context = objectStack[0];\n                var toRemove = layerIdentifier;\n                var layerName = layerElement.localName.replace(toRemove, '');\n                if (this.layers_ && !includes(this.layers_, layerName)) {\n                    continue;\n                }\n                var featureType = layerName +\n                    featureIdentifier;\n                context['featureType'] = featureType;\n                context['featureNS'] = this.featureNS_;\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\n                var parsers = {};\n                parsers[featureType] = makeArrayPusher(this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n                var parsersNS = makeStructureNS([context['featureNS'], null], parsers);\n                layerElement.setAttribute('namespaceURI', this.featureNS_);\n                var layerFeatures = pushParseAndPop([], parsersNS, layerElement, objectStack, this.gmlFormat_);\n                if (layerFeatures) {\n                    extend(features, layerFeatures);\n                }\n            }\n        }\n        if (localName == 'FeatureCollection') {\n            var gmlFeatures = pushParseAndPop([], this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node, [{}], this.gmlFormat_);\n            if (gmlFeatures) {\n                features = gmlFeatures;\n            }\n        }\n        return features;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMSGetFeatureInfo.prototype.readFeaturesFromNode = function (node, opt_options) {\n        var options = {};\n        if (opt_options) {\n            assign(options, this.getReadOptions(node, opt_options));\n        }\n        return this.readFeatures_(node, [options]);\n    };\n    return WMSGetFeatureInfo;\n}(XMLFeature));\nexport default WMSGetFeatureInfo;\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/OWS\n */\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString } from './xsd.js';\nimport { makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n});\nvar OWS = /** @class */ (function (_super) {\n    __extends(OWS, _super);\n    function OWS() {\n        return _super.call(this) || this;\n    }\n    /**\n     * @inheritDoc\n     */\n    OWS.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    OWS.prototype.readFromNode = function (node) {\n        var owsObject = pushParseAndPop({}, PARSERS, node, []);\n        return owsObject ? owsObject : null;\n    };\n    return OWS;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Operation': readOperation\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'IndividualName': makeObjectPropertySetter(readString),\n    'PositionName': makeObjectPropertySetter(readString),\n    'ContactInfo': makeObjectPropertySetter(readContactInfo)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Abstract': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'Fees': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'ServiceTypeVersion': makeObjectPropertySetter(readString),\n    'ServiceType': makeObjectPropertySetter(readString)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'ProviderName': makeObjectPropertySetter(readString),\n    'ProviderSite': makeObjectPropertySetter(readHref),\n    'ServiceContact': makeObjectPropertySetter(readServiceContact)\n});\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n    return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n    return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n    var name = node.getAttribute('name');\n    if (!name) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'name': name }, CONSTRAINT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n    return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n    return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n    var href = readHref(node);\n    if (!href) {\n        return undefined;\n    }\n    return pushParseAndPop({ 'href': href }, REQUEST_METHOD_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n    return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n    var name = node.getAttribute('name');\n    var value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n    if (!value) {\n        return undefined;\n    }\n    var object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    object[name] = value;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n    return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n    return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n    return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n    return readString(node);\n}\nexport default OWS;\n//# sourceMappingURL=OWS.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/format/WMTSCapabilities\n */\nimport { boundingExtent } from '../extent.js';\nimport OWS from './OWS.js';\nimport { readHref } from './XLink.js';\nimport XML from './XML.js';\nimport { readString, readNonNegativeInteger, readDecimal } from './xsd.js';\nimport { pushParseAndPop, makeStructureNS, makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher } from '../xml.js';\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/wmts/1.0'\n];\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n    null,\n    'http://www.opengis.net/ows/1.1'\n];\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n});\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /** @class */ (function (_super) {\n    __extends(WMTSCapabilities, _super);\n    function WMTSCapabilities() {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {OWS}\n         * @private\n         */\n        _this.owsParser_ = new OWS();\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromDocument = function (doc) {\n        for (var n = doc.firstChild; n; n = n.nextSibling) {\n            if (n.nodeType == Node.ELEMENT_NODE) {\n                return this.readFromNode(n);\n            }\n        }\n        return null;\n    };\n    /**\n     * @inheritDoc\n     */\n    WMTSCapabilities.prototype.readFromNode = function (node) {\n        var version = node.getAttribute('version').trim();\n        var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n        if (!WMTSCapabilityObject) {\n            return null;\n        }\n        WMTSCapabilityObject['version'] = version;\n        WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n        return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n    };\n    return WMTSCapabilities;\n}(XML));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n});\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n}, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n}));\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n    return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n    return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n    return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n    var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n    if (!style) {\n        return undefined;\n    }\n    var isDefault = node.getAttribute('isDefault') === 'true';\n    style['isDefault'] = isDefault;\n    return style;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n    return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n    return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n    var format = node.getAttribute('format');\n    var template = node.getAttribute('template');\n    var resourceType = node.getAttribute('resourceType');\n    var resource = {};\n    if (format) {\n        resource['format'] = format;\n    }\n    if (template) {\n        resource['template'] = template;\n    }\n    if (resourceType) {\n        resource['resourceType'] = resourceType;\n    }\n    return resource;\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n    var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n    if (coordinates.length != 2) {\n        return undefined;\n    }\n    return boundingExtent(coordinates);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n    var legend = {};\n    legend['format'] = node.getAttribute('format');\n    legend['href'] = readHref(node);\n    return legend;\n}\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n    var coordinates = readString(node).split(/\\s+/);\n    if (!coordinates || coordinates.length != 2) {\n        return undefined;\n    }\n    var x = +coordinates[0];\n    var y = +coordinates[1];\n    if (isNaN(x) || isNaN(y)) {\n        return undefined;\n    }\n    return [x, y];\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n    return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n    return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n    return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\nexport default WMTSCapabilities;\n//# sourceMappingURL=WMTSCapabilities.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nvar events = ['fullscreenchange', 'webkitfullscreenchange', 'MSFullscreenChange'];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /** @class */ (function (_super) {\n    __extends(FullScreen, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function FullScreen(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.cssClassName_ = options.className !== undefined ? options.className :\n            'ol-full-screen';\n        var label = options.label !== undefined ? options.label : '\\u2922';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelNode_ = typeof label === 'string' ?\n            document.createTextNode(label) : label;\n        var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n        /**\n         * @private\n         * @type {Text}\n         */\n        _this.labelActiveNode_ = typeof labelActive === 'string' ?\n            document.createTextNode(labelActive) : labelActive;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.button_ = document.createElement('button');\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n        _this.setClassName_(_this.button_, isFullScreen());\n        _this.button_.setAttribute('type', 'button');\n        _this.button_.title = tipLabel;\n        _this.button_.appendChild(_this.labelNode_);\n        listen(_this.button_, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = _this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n            ' ' + CLASS_CONTROL + ' ' +\n            (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.button_);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.keys_ = options.keys !== undefined ? options.keys : false;\n        /**\n         * @private\n         * @type {HTMLElement|string|undefined}\n         */\n        _this.source_ = options.source;\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    FullScreen.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleFullScreen_();\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreen_ = function () {\n        if (!isFullScreenSupported()) {\n            return;\n        }\n        var map = this.getMap();\n        if (!map) {\n            return;\n        }\n        if (isFullScreen()) {\n            exitFullScreen();\n        }\n        else {\n            var element = void 0;\n            if (this.source_) {\n                element = typeof this.source_ === 'string' ?\n                    document.getElementById(this.source_) :\n                    this.source_;\n            }\n            else {\n                element = map.getTargetElement();\n            }\n            if (this.keys_) {\n                requestFullScreenWithKeys(element);\n            }\n            else {\n                requestFullScreen(element);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    FullScreen.prototype.handleFullScreenChange_ = function () {\n        var map = this.getMap();\n        if (isFullScreen()) {\n            this.setClassName_(this.button_, true);\n            replaceNode(this.labelActiveNode_, this.labelNode_);\n        }\n        else {\n            this.setClassName_(this.button_, false);\n            replaceNode(this.labelNode_, this.labelActiveNode_);\n        }\n        if (map) {\n            map.updateSize();\n        }\n    };\n    /**\n     * @param {HTMLElement} element Target element\n     * @param {boolean} fullscreen True if fullscreen class name should be active\n     * @private\n     */\n    FullScreen.prototype.setClassName_ = function (element, fullscreen) {\n        var activeClassName = this.cssClassName_ + '-true';\n        var inactiveClassName = this.cssClassName_ + '-false';\n        var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n        element.classList.remove(activeClassName);\n        element.classList.remove(inactiveClassName);\n        element.classList.add(nextClassName);\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    FullScreen.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            for (var i = 0, ii = events.length; i < ii; ++i) {\n                this.listenerKeys.push(listen(document, events[i], this.handleFullScreenChange_, this));\n            }\n        }\n    };\n    return FullScreen;\n}(Control));\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n    var body = document.body;\n    return !!(body.webkitRequestFullscreen ||\n        (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n        (body.requestFullscreen && document.fullscreenEnabled));\n}\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n    return !!(document.webkitIsFullScreen || document.msFullscreenElement || document.fullscreenElement);\n}\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n    if (element.requestFullscreen) {\n        element.requestFullscreen();\n    }\n    else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n    }\n    else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n}\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n    if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n    }\n    else {\n        requestFullScreen(element);\n    }\n}\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n    if (document.exitFullscreen) {\n        document.exitFullscreen();\n    }\n    else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n    }\n    else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n    }\n}\nexport default FullScreen;\n//# sourceMappingURL=FullScreen.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/MousePosition\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { getChangeEventType } from '../Object.js';\nimport Control from './Control.js';\nimport { getTransformFromProjections, identityTransform, get as getProjection } from '../proj.js';\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /** @class */ (function (_super) {\n    __extends(MousePosition, _super);\n    /**\n     * @param {Options=} opt_options Mouse position options.\n     */\n    function MousePosition(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var element = document.createElement('div');\n        element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n        _this = _super.call(this, {\n            element: element,\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        listen(_this, getChangeEventType(PROJECTION), _this.handleProjectionChanged_, _this);\n        if (options.coordinateFormat) {\n            _this.setCoordinateFormat(options.coordinateFormat);\n        }\n        if (options.projection) {\n            _this.setProjection(options.projection);\n        }\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderOnMouseOut_ = !!_this.undefinedHTML_;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = element.innerHTML;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.mapProjection_ = null;\n        /**\n         * @private\n         * @type {?import(\"../proj.js\").TransformFunction}\n         */\n        _this.transform_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastMouseMovePixel_ = null;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MousePosition.prototype.handleProjectionChanged_ = function () {\n        this.transform_ = null;\n    };\n    /**\n     * Return the coordinate format type used to render the current position or\n     * undefined.\n     * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getCoordinateFormat = function () {\n        return (\n        /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT)));\n    };\n    /**\n     * Return the projection that is used to report the mouse position.\n     * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.getProjection = function () {\n        return (\n        /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION)));\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseMove = function (event) {\n        var map = this.getMap();\n        this.lastMouseMovePixel_ = map.getEventPixel(event);\n        this.updateHTML_(this.lastMouseMovePixel_);\n    };\n    /**\n     * @param {Event} event Browser event.\n     * @protected\n     */\n    MousePosition.prototype.handleMouseOut = function (event) {\n        this.updateHTML_(null);\n        this.lastMouseMovePixel_ = null;\n    };\n    /**\n     * @inheritDoc\n     * @api\n     */\n    MousePosition.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            var viewport = map.getViewport();\n            this.listenerKeys.push(listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this), listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this));\n            if (this.renderOnMouseOut_) {\n                this.listenerKeys.push(listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this), listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this));\n            }\n        }\n    };\n    /**\n     * Set the coordinate format type used to render the current position.\n     * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setCoordinateFormat = function (format) {\n        this.set(COORDINATE_FORMAT, format);\n    };\n    /**\n     * Set the projection that is used to report the mouse position.\n     * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n     *     position in.\n     * @observable\n     * @api\n     */\n    MousePosition.prototype.setProjection = function (projection) {\n        this.set(PROJECTION, getProjection(projection));\n    };\n    /**\n     * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @private\n     */\n    MousePosition.prototype.updateHTML_ = function (pixel) {\n        var html = this.undefinedHTML_;\n        if (pixel && this.mapProjection_) {\n            if (!this.transform_) {\n                var projection = this.getProjection();\n                if (projection) {\n                    this.transform_ = getTransformFromProjections(this.mapProjection_, projection);\n                }\n                else {\n                    this.transform_ = identityTransform;\n                }\n            }\n            var map = this.getMap();\n            var coordinate = map.getCoordinateFromPixel(pixel);\n            if (coordinate) {\n                this.transform_(coordinate, coordinate);\n                var coordinateFormat = this.getCoordinateFormat();\n                if (coordinateFormat) {\n                    html = coordinateFormat(coordinate);\n                }\n                else {\n                    html = coordinate.toString();\n                }\n            }\n        }\n        if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n            this.element.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n    };\n    return MousePosition;\n}(Control));\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.mapProjection_ = null;\n    }\n    else {\n        if (this.mapProjection_ != frameState.viewState.projection) {\n            this.mapProjection_ = frameState.viewState.projection;\n            this.transform_ = null;\n        }\n    }\n}\nexport default MousePosition;\n//# sourceMappingURL=MousePosition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/OverviewMap\n */\nimport PluggableMap from '../PluggableMap.js';\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport { getChangeEventType } from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport { rotate as rotateCoordinate, add as addCoordinate } from '../coordinate.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED } from '../css.js';\nimport { replaceNode } from '../dom.js';\nimport { listen, listenOnce, unlisten } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport { containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter } from '../extent.js';\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\nvar ControlledMap = /** @class */ (function (_super) {\n    __extends(ControlledMap, _super);\n    function ControlledMap() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ControlledMap.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return ControlledMap;\n}(PluggableMap));\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} layers\n * Layers for the overview map (mandatory).\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /** @class */ (function (_super) {\n    __extends(OverviewMap, _super);\n    /**\n     * @param {Options=} opt_options OverviewMap options.\n     */\n    function OverviewMap(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ = options.collapsible !== undefined ?\n            options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : '\\u00BB';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = (_this.collapsible_ && !_this.collapsed_) ?\n            _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.ovmapDiv_ = document.createElement('div');\n        _this.ovmapDiv_.className = 'ol-overviewmap-map';\n        /**\n         * @type {ControlledMap}\n         * @private\n         */\n        _this.ovmap_ = new ControlledMap({\n            view: options.view\n        });\n        var ovmap = _this.ovmap_;\n        if (options.layers) {\n            /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n            /**\n             * @param {import(\"../layer/Layer.js\").default} layer Layer.\n             */\n            (function (layer) {\n                ovmap.addLayer(layer);\n            }).bind(_this));\n        }\n        var box = document.createElement('div');\n        box.className = 'ol-overviewmap-box';\n        box.style.boxSizing = 'border-box';\n        /**\n         * @type {import(\"../Overlay.js\").default}\n         * @private\n         */\n        _this.boxOverlay_ = new Overlay({\n            position: [0, 0],\n            positioning: OverlayPositioning.BOTTOM_LEFT,\n            element: box\n        });\n        _this.ovmap_.addOverlay(_this.boxOverlay_);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ovmapDiv_);\n        element.appendChild(button);\n        /* Interactive map */\n        var scope = _this;\n        var overlay = _this.boxOverlay_;\n        var overlayBox = _this.boxOverlay_.getElement();\n        /* Functions definition */\n        var computeDesiredMousePosition = function (mousePosition) {\n            return {\n                clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n                clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n            };\n        };\n        var move = function (event) {\n            var position = /** @type {?} */ (computeDesiredMousePosition(event));\n            var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n            overlay.setPosition(coordinates);\n        };\n        var endMoving = function (event) {\n            var coordinates = ovmap.getEventCoordinate(event);\n            scope.getMap().getView().setCenter(coordinates);\n            window.removeEventListener('mousemove', move);\n            window.removeEventListener('mouseup', endMoving);\n        };\n        /* Binding */\n        overlayBox.addEventListener('mousedown', function () {\n            window.addEventListener('mousemove', move);\n            window.addEventListener('mouseup', endMoving);\n        });\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     * @api\n     */\n    OverviewMap.prototype.setMap = function (map) {\n        var oldMap = this.getMap();\n        if (map === oldMap) {\n            return;\n        }\n        if (oldMap) {\n            var oldView = oldMap.getView();\n            if (oldView) {\n                this.unbindView_(oldView);\n            }\n            this.ovmap_.setTarget(null);\n        }\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            this.ovmap_.setTarget(this.ovmapDiv_);\n            this.listenerKeys.push(listen(map, ObjectEventType.PROPERTYCHANGE, this.handleMapPropertyChange_, this));\n            var view = map.getView();\n            if (view) {\n                this.bindView_(view);\n                if (view.isDef()) {\n                    this.ovmap_.updateSize();\n                    this.resetExtent_();\n                }\n            }\n        }\n    };\n    /**\n     * Handle map property changes.  This only deals with changes to the map's view.\n     * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n     * @private\n     */\n    OverviewMap.prototype.handleMapPropertyChange_ = function (event) {\n        if (event.key === MapProperty.VIEW) {\n            var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n            if (oldView) {\n                this.unbindView_(oldView);\n            }\n            var newView = this.getMap().getView();\n            this.bindView_(newView);\n        }\n    };\n    /**\n     * Register listeners for view property changes.\n     * @param {import(\"../View.js\").default} view The view.\n     * @private\n     */\n    OverviewMap.prototype.bindView_ = function (view) {\n        listen(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\n    };\n    /**\n     * Unregister listeners for view property changes.\n     * @param {import(\"../View.js\").default} view The view.\n     * @private\n     */\n    OverviewMap.prototype.unbindView_ = function (view) {\n        unlisten(view, getChangeEventType(ViewProperty.ROTATION), this.handleRotationChanged_, this);\n    };\n    /**\n     * Handle rotation changes to the main map.\n     * TODO: This should rotate the extent rectrangle instead of the\n     * overview map's view.\n     * @private\n     */\n    OverviewMap.prototype.handleRotationChanged_ = function () {\n        this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    };\n    /**\n     * Reset the overview map extent if the box size (width or\n     * height) is less than the size of the overview map size times minRatio\n     * or is greater than the size of the overview size times maxRatio.\n     *\n     * If the map extent was not reset, the box size can fits in the defined\n     * ratio sizes. This method then checks if is contained inside the overview\n     * map current extent. If not, recenter the overview map to the current\n     * main map center location.\n     * @private\n     */\n    OverviewMap.prototype.validateExtent_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        if (!map.isRendered() || !ovmap.isRendered()) {\n            return;\n        }\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var extent = view.calculateExtent(mapSize);\n        var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n        var ovview = ovmap.getView();\n        var ovextent = ovview.calculateExtent(ovmapSize);\n        var topLeftPixel = ovmap.getPixelFromCoordinate(getTopLeft(extent));\n        var bottomRightPixel = ovmap.getPixelFromCoordinate(getBottomRight(extent));\n        var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n        var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n        var ovmapWidth = ovmapSize[0];\n        var ovmapHeight = ovmapSize[1];\n        if (boxWidth < ovmapWidth * MIN_RATIO ||\n            boxHeight < ovmapHeight * MIN_RATIO ||\n            boxWidth > ovmapWidth * MAX_RATIO ||\n            boxHeight > ovmapHeight * MAX_RATIO) {\n            this.resetExtent_();\n        }\n        else if (!containsExtent(ovextent, extent)) {\n            this.recenter_();\n        }\n    };\n    /**\n     * Reset the overview map extent to half calculated min and max ratio times\n     * the extent of the main map.\n     * @private\n     */\n    OverviewMap.prototype.resetExtent_ = function () {\n        if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n            return;\n        }\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var extent = view.calculateExtent(mapSize);\n        var ovview = ovmap.getView();\n        // get how many times the current map overview could hold different\n        // box sizes using the min and max ratio, pick the step in the middle used\n        // to calculate the extent from the main map to set it to the overview map,\n        var steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n        var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n        scaleFromCenter(extent, ratio);\n        ovview.fit(extent);\n    };\n    /**\n     * Set the center of the overview map to the map center without changing its\n     * resolution.\n     * @private\n     */\n    OverviewMap.prototype.recenter_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        var view = map.getView();\n        var ovview = ovmap.getView();\n        ovview.setCenter(view.getCenter());\n    };\n    /**\n     * Update the box using the main map extent\n     * @private\n     */\n    OverviewMap.prototype.updateBox_ = function () {\n        var map = this.getMap();\n        var ovmap = this.ovmap_;\n        if (!map.isRendered() || !ovmap.isRendered()) {\n            return;\n        }\n        var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n        var view = map.getView();\n        var ovview = ovmap.getView();\n        var rotation = view.getRotation();\n        var overlay = this.boxOverlay_;\n        var box = this.boxOverlay_.getElement();\n        var extent = view.calculateExtent(mapSize);\n        var ovresolution = ovview.getResolution();\n        var bottomLeft = getBottomLeft(extent);\n        var topRight = getTopRight(extent);\n        // set position using bottom left coordinates\n        var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n        overlay.setPosition(rotateBottomLeft);\n        // set box size calculated from map extent size and overview map resolution\n        if (box) {\n            box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n            box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n     * @private\n     */\n    OverviewMap.prototype.calculateCoordinateRotate_ = function (rotation, coordinate) {\n        var coordinateRotate;\n        var map = this.getMap();\n        var view = map.getView();\n        var currentCenter = view.getCenter();\n        if (currentCenter) {\n            coordinateRotate = [\n                coordinate[0] - currentCenter[0],\n                coordinate[1] - currentCenter[1]\n            ];\n            rotateCoordinate(coordinateRotate, rotation);\n            addCoordinate(coordinateRotate, currentCenter);\n        }\n        return coordinateRotate;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    OverviewMap.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    OverviewMap.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n        // manage overview map if it had not been rendered before and control\n        // is expanded\n        var ovmap = this.ovmap_;\n        if (!this.collapsed_ && !ovmap.isRendered()) {\n            ovmap.updateSize();\n            this.resetExtent_();\n            listenOnce(ovmap, MapEventType.POSTRENDER, function (event) {\n                this.updateBox_();\n            }, this);\n        }\n    };\n    /**\n     * Return `true` if the overview map is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    OverviewMap.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the overview map should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    OverviewMap.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the overview map according to the passed parameter. Will\n     * not do anything if the overview map isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    OverviewMap.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Determine if the overview map is collapsed.\n     * @return {boolean} The overview map is collapsed.\n     * @api\n     */\n    OverviewMap.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Return the overview map.\n     * @return {import(\"../PluggableMap.js\").default} Overview map.\n     * @api\n     */\n    OverviewMap.prototype.getOverviewMap = function () {\n        return this.ovmap_;\n    };\n    return OverviewMap;\n}(Control));\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n}\nexport default OverviewMap;\n//# sourceMappingURL=OverviewMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ScaleLine\n */\nimport { getChangeEventType } from '../Object.js';\nimport { assert } from '../asserts.js';\nimport Control from './Control.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { listen } from '../events.js';\nimport { getPointResolution, METERS_PER_UNIT } from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n    DEGREES: 'degrees',\n    IMPERIAL: 'imperial',\n    NAUTICAL: 'nautical',\n    METRIC: 'metric',\n    US: 'us'\n};\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n */\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /** @class */ (function (_super) {\n    __extends(ScaleLine, _super);\n    /**\n     * @param {Options=} opt_options Scale line options.\n     */\n    function ScaleLine(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var className = options.className !== undefined ? options.className :\n            options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render,\n            target: options.target\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.innerElement_ = document.createElement('div');\n        _this.innerElement_.className = className + '-inner';\n        _this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n        _this.element.appendChild(_this.innerElement_);\n        /**\n         * @private\n         * @type {?import(\"../View.js\").State}\n         */\n        _this.viewState_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = false;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.renderedWidth_ = undefined;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.renderedHTML_ = '';\n        listen(_this, getChangeEventType(UNITS_PROP), _this.handleUnitsChanged_, _this);\n        _this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBar_ = options.bar || false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.scaleBarSteps_ = options.steps || 4;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.scaleBarText_ = options.text || false;\n        return _this;\n    }\n    /**\n     * Return the units to use in the scale line.\n     * @return {Units} The units\n     * to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.getUnits = function () {\n        return this.get(UNITS_PROP);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.handleUnitsChanged_ = function () {\n        this.updateElement_();\n    };\n    /**\n     * Set the units to use in the scale line.\n     * @param {Units} units The units to use in the scale line.\n     * @observable\n     * @api\n     */\n    ScaleLine.prototype.setUnits = function (units) {\n        this.set(UNITS_PROP, units);\n    };\n    /**\n     * @private\n     */\n    ScaleLine.prototype.updateElement_ = function () {\n        var viewState = this.viewState_;\n        if (!viewState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var center = viewState.center;\n        var projection = viewState.projection;\n        var units = this.getUnits();\n        var pointResolutionUnits = units == Units.DEGREES ?\n            ProjUnits.DEGREES :\n            ProjUnits.METERS;\n        var pointResolution = getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n        var nominalCount = this.minWidth_ * pointResolution;\n        var suffix = '';\n        if (units == Units.DEGREES) {\n            var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n            nominalCount *= metersPerDegree;\n            if (nominalCount < metersPerDegree / 60) {\n                suffix = '\\u2033'; // seconds\n                pointResolution *= 3600;\n            }\n            else if (nominalCount < metersPerDegree) {\n                suffix = '\\u2032'; // minutes\n                pointResolution *= 60;\n            }\n            else {\n                suffix = '\\u00b0'; // degrees\n            }\n        }\n        else if (units == Units.IMPERIAL) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution /= 0.0254;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.3048;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.344;\n            }\n        }\n        else if (units == Units.NAUTICAL) {\n            pointResolution /= 1852;\n            suffix = 'nm';\n        }\n        else if (units == Units.METRIC) {\n            if (nominalCount < 0.001) {\n                suffix = 'μm';\n                pointResolution *= 1000000;\n            }\n            else if (nominalCount < 1) {\n                suffix = 'mm';\n                pointResolution *= 1000;\n            }\n            else if (nominalCount < 1000) {\n                suffix = 'm';\n            }\n            else {\n                suffix = 'km';\n                pointResolution /= 1000;\n            }\n        }\n        else if (units == Units.US) {\n            if (nominalCount < 0.9144) {\n                suffix = 'in';\n                pointResolution *= 39.37;\n            }\n            else if (nominalCount < 1609.344) {\n                suffix = 'ft';\n                pointResolution /= 0.30480061;\n            }\n            else {\n                suffix = 'mi';\n                pointResolution /= 1609.3472;\n            }\n        }\n        else {\n            assert(false, 33); // Invalid units\n        }\n        var i = 3 * Math.floor(Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n        var count, width, decimalCount;\n        while (true) {\n            decimalCount = Math.floor(i / 3);\n            var decimal = Math.pow(10, decimalCount);\n            count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n            width = Math.round(count / pointResolution);\n            if (isNaN(width)) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n                return;\n            }\n            else if (width >= this.minWidth_) {\n                break;\n            }\n            ++i;\n        }\n        var html;\n        if (this.scaleBar_) {\n            html = this.createScaleBar(width, count, suffix);\n        }\n        else {\n            html = count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n        }\n        if (this.renderedHTML_ != html) {\n            this.innerElement_.innerHTML = html;\n            this.renderedHTML_ = html;\n        }\n        if (this.renderedWidth_ != width) {\n            this.innerElement_.style.width = width + 'px';\n            this.renderedWidth_ = width;\n        }\n        if (!this.renderedVisible_) {\n            this.element.style.display = '';\n            this.renderedVisible_ = true;\n        }\n    };\n    /**\n     * @private\n     * @param {number} width The current width of the scalebar.\n     * @param {number} scale The current scale.\n     * @param {string} suffix The suffix to append to the scale text.\n     * @returns {string} The stringified HTML of the scalebar.\n     */\n    ScaleLine.prototype.createScaleBar = function (width, scale, suffix) {\n        var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n        var scaleSteps = [];\n        var stepWidth = width / this.scaleBarSteps_;\n        var backgroundColor = '#ffffff';\n        for (var i = 0; i < this.scaleBarSteps_; i++) {\n            if (i === 0) {\n                // create the first marker at position 0\n                scaleSteps.push(this.createMarker('absolute', i));\n            }\n            scaleSteps.push('<div>' +\n                '<div ' +\n                'class=\"ol-scale-singlebar\" ' +\n                'style=' +\n                '\"width: ' + stepWidth + 'px;' +\n                'background-color: ' + backgroundColor + ';\"' +\n                '>' +\n                '</div>' +\n                this.createMarker('relative', i) +\n                /*render text every second step, except when only 2 steps */\n                (i % 2 === 0 || this.scaleBarSteps_ === 2 ?\n                    this.createStepText(i, width, false, scale, suffix) :\n                    '') +\n                '</div>');\n            if (i === this.scaleBarSteps_ - 1) {\n                { /*render text at the end */ }\n                scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n            }\n            // switch colors of steps between black and white\n            if (backgroundColor === '#ffffff') {\n                backgroundColor = '#000000';\n            }\n            else {\n                backgroundColor = '#ffffff';\n            }\n        }\n        var scaleBarText;\n        if (this.scaleBarText_) {\n            scaleBarText = '<div ' +\n                'class=\"ol-scale-text\" ' +\n                'style=\"width: ' + width + 'px;\">' +\n                mapScale +\n                '</div>';\n        }\n        else {\n            scaleBarText = '';\n        }\n        var container = '<div ' +\n            'style=\"display: flex;\">' +\n            scaleBarText +\n            scaleSteps.join('') +\n            '</div>';\n        return container;\n    };\n    /**\n     * Creates a marker at given position\n     * @param {string} position - The position, absolute or relative\n     * @param {number} i - The iterator\n     * @returns {string} The stringified div containing the marker\n     */\n    ScaleLine.prototype.createMarker = function (position, i) {\n        var top = position === 'absolute' ? 3 : -10;\n        return '<div ' +\n            'class=\"ol-scale-step-marker\" ' +\n            'style=\"position: ' + position + ';' +\n            'top: ' + top + 'px;\"' +\n            '></div>';\n    };\n    /**\n     * Creates the label for a marker marker at given position\n     * @param {number} i - The iterator\n     * @param {number} width - The width the scalebar will currently use\n     * @param {boolean} isLast - Flag indicating if we add the last step text\n     * @param {number} scale - The current scale for the whole scalebar\n     * @param {string} suffix - The suffix for the scale\n     * @returns {string} The stringified div containing the step text\n     */\n    ScaleLine.prototype.createStepText = function (i, width, isLast, scale, suffix) {\n        var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_ * i) * 100) / 100;\n        var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n        var margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n        var minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n        return '<div ' +\n            'class=\"ol-scale-step-text\" ' +\n            'style=\"' +\n            'margin-left: ' + margin + 'px;' +\n            'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' +\n            'min-width: ' + minWidth + 'px;' +\n            'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' +\n            '>' +\n            lengthString +\n            '</div>';\n    };\n    /**\n     * Returns the appropriate scale for the given resolution and units.\n     * @return {number} The appropriate scale.\n     */\n    ScaleLine.prototype.getScaleForResolution = function () {\n        var resolution = this.getMap().getView().getResolution();\n        var dpi = 25.4 / 0.28;\n        var mpu = this.viewState_.projection.getMetersPerUnit();\n        var inchesPerMeter = 39.37;\n        return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n    };\n    return ScaleLine;\n}(Control));\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n    var frameState = mapEvent.frameState;\n    if (!frameState) {\n        this.viewState_ = null;\n    }\n    else {\n        this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n}\nexport default ScaleLine;\n//# sourceMappingURL=ScaleLine.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomSlider\n */\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { stopPropagation } from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport { clamp } from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n    VERTICAL: 0,\n    HORIZONTAL: 1\n};\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /** @class */ (function (_super) {\n    __extends(ZoomSlider, _super);\n    /**\n     * @param {Options=} opt_options Zoom slider options.\n     */\n    function ZoomSlider(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render || render\n        }) || this;\n        /**\n          * @type {!Array.<import(\"../events.js\").EventsKey>}\n          * @private\n          */\n        _this.dragListenerKeys_ = [];\n        /**\n         * Will hold the current resolution of the view.\n         *\n         * @type {number|undefined}\n         * @private\n         */\n        _this.currentResolution_ = undefined;\n        /**\n         * The direction of the slider. Will be determined from actual display of the\n         * container and defaults to Direction.VERTICAL.\n         *\n         * @type {Direction}\n         * @private\n         */\n        _this.direction_ = Direction.VERTICAL;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.heightLimit_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.widthLimit_ = 0;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startX_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startY_;\n        /**\n         * The calculated thumb size (border box plus margins).  Set when initSlider_\n         * is called.\n         * @type {import(\"../size.js\").Size}\n         * @private\n         */\n        _this.thumbSize_ = null;\n        /**\n         * Whether the slider is initialized.\n         * @type {boolean}\n         * @private\n         */\n        _this.sliderInitialized_ = false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n        var thumbElement = document.createElement('button');\n        thumbElement.setAttribute('type', 'button');\n        thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n        var containerElement = _this.element;\n        containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        containerElement.appendChild(thumbElement);\n        /**\n         * @type {PointerEventHandler}\n         * @private\n         */\n        _this.dragger_ = new PointerEventHandler(containerElement);\n        listen(_this.dragger_, PointerEventType.POINTERDOWN, _this.handleDraggerStart_, _this);\n        listen(_this.dragger_, PointerEventType.POINTERMOVE, _this.handleDraggerDrag_, _this);\n        listen(_this.dragger_, PointerEventType.POINTERUP, _this.handleDraggerEnd_, _this);\n        listen(containerElement, EventType.CLICK, _this.handleContainerClick_, _this);\n        listen(thumbElement, EventType.CLICK, stopPropagation);\n        return _this;\n    }\n    /**\n     * @inheritDoc\n     */\n    ZoomSlider.prototype.disposeInternal = function () {\n        this.dragger_.dispose();\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * @inheritDoc\n     */\n    ZoomSlider.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            map.render();\n        }\n    };\n    /**\n     * Initializes the slider element. This will determine and set this controls\n     * direction_ and also constrain the dragging of the thumb to always be within\n     * the bounds of the container.\n     *\n     * @private\n     */\n    ZoomSlider.prototype.initSlider_ = function () {\n        var container = this.element;\n        var containerSize = {\n            width: container.offsetWidth, height: container.offsetHeight\n        };\n        var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n        var computedStyle = getComputedStyle(thumb);\n        var thumbWidth = thumb.offsetWidth +\n            parseFloat(computedStyle['marginRight']) +\n            parseFloat(computedStyle['marginLeft']);\n        var thumbHeight = thumb.offsetHeight +\n            parseFloat(computedStyle['marginTop']) +\n            parseFloat(computedStyle['marginBottom']);\n        this.thumbSize_ = [thumbWidth, thumbHeight];\n        if (containerSize.width > containerSize.height) {\n            this.direction_ = Direction.HORIZONTAL;\n            this.widthLimit_ = containerSize.width - thumbWidth;\n        }\n        else {\n            this.direction_ = Direction.VERTICAL;\n            this.heightLimit_ = containerSize.height - thumbHeight;\n        }\n        this.sliderInitialized_ = true;\n    };\n    /**\n     * @param {MouseEvent} event The browser event to handle.\n     * @private\n     */\n    ZoomSlider.prototype.handleContainerClick_ = function (event) {\n        var view = this.getMap().getView();\n        var relativePosition = this.getRelativePosition_(event.offsetX - this.thumbSize_[0] / 2, event.offsetY - this.thumbSize_[1] / 2);\n        var resolution = this.getResolutionForPosition_(relativePosition);\n        var zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n        view.animate({\n            zoom: zoom,\n            duration: this.duration_,\n            easing: easeOut\n        });\n    };\n    /**\n     * Handle dragger start events.\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerStart_ = function (event) {\n        if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n            var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n            this.getMap().getView().beginInteraction();\n            this.startX_ = event.clientX - parseFloat(element.style.left);\n            this.startY_ = event.clientY - parseFloat(element.style.top);\n            this.dragging_ = true;\n            if (this.dragListenerKeys_.length === 0) {\n                var drag = this.handleDraggerDrag_;\n                var end = this.handleDraggerEnd_;\n                this.dragListenerKeys_.push(listen(document, EventType.MOUSEMOVE, drag, this), listen(document, PointerEventType.POINTERMOVE, drag, this), listen(document, EventType.MOUSEUP, end, this), listen(document, PointerEventType.POINTERUP, end, this));\n            }\n        }\n    };\n    /**\n     * Handle dragger drag events.\n     *\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerDrag_ = function (event) {\n        if (this.dragging_) {\n            var deltaX = event.clientX - this.startX_;\n            var deltaY = event.clientY - this.startY_;\n            var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n            this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n            this.getMap().getView().setResolution(this.currentResolution_);\n        }\n    };\n    /**\n     * Handle dragger end events.\n     * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerEnd_ = function (event) {\n        if (this.dragging_) {\n            var view = this.getMap().getView();\n            view.endInteraction();\n            this.dragging_ = false;\n            this.startX_ = undefined;\n            this.startY_ = undefined;\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n        }\n    };\n    /**\n     * Positions the thumb inside its container according to the given resolution.\n     *\n     * @param {number} res The res.\n     * @private\n     */\n    ZoomSlider.prototype.setThumbPosition_ = function (res) {\n        var position = this.getPositionForResolution_(res);\n        var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n        if (this.direction_ == Direction.HORIZONTAL) {\n            thumb.style.left = this.widthLimit_ * position + 'px';\n        }\n        else {\n            thumb.style.top = this.heightLimit_ * position + 'px';\n        }\n    };\n    /**\n     * Calculates the relative position of the thumb given x and y offsets.  The\n     * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n     * in pixel units within the dragger limits.\n     *\n     * @param {number} x Pixel position relative to the left of the slider.\n     * @param {number} y Pixel position relative to the top of the slider.\n     * @return {number} The relative position of the thumb.\n     * @private\n     */\n    ZoomSlider.prototype.getRelativePosition_ = function (x, y) {\n        var amount;\n        if (this.direction_ === Direction.HORIZONTAL) {\n            amount = x / this.widthLimit_;\n        }\n        else {\n            amount = y / this.heightLimit_;\n        }\n        return clamp(amount, 0, 1);\n    };\n    /**\n     * Calculates the corresponding resolution of the thumb given its relative\n     * position (where 0 is the minimum and 1 is the maximum).\n     *\n     * @param {number} position The relative position of the thumb.\n     * @return {number} The corresponding resolution.\n     * @private\n     */\n    ZoomSlider.prototype.getResolutionForPosition_ = function (position) {\n        var fn = this.getMap().getView().getResolutionForValueFunction();\n        return fn(1 - position);\n    };\n    /**\n     * Determines the relative position of the slider for the given resolution.  A\n     * relative position of 0 corresponds to the minimum view resolution.  A\n     * relative position of 1 corresponds to the maximum view resolution.\n     *\n     * @param {number} res The resolution.\n     * @return {number} The relative position value (between 0 and 1).\n     * @private\n     */\n    ZoomSlider.prototype.getPositionForResolution_ = function (res) {\n        var fn = this.getMap().getView().getValueForResolutionFunction();\n        return clamp(1 - fn(res), 0, 1);\n    };\n    return ZoomSlider;\n}(Control));\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n    if (!mapEvent.frameState) {\n        return;\n    }\n    if (!this.sliderInitialized_) {\n        this.initSlider_();\n    }\n    var res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n}\nexport default ZoomSlider;\n//# sourceMappingURL=ZoomSlider.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/ZoomToExtent\n */\nimport { listen } from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /** @class */ (function (_super) {\n    __extends(ZoomToExtent, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function ZoomToExtent(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target\n        }) || this;\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @protected\n         */\n        _this.extent = options.extent ? options.extent : null;\n        var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n        var label = options.label !== undefined ? options.label : 'E';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(typeof label === 'string' ? document.createTextNode(label) : label);\n        listen(button, EventType.CLICK, _this.handleClick_, _this);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    ZoomToExtent.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleZoomToExtent();\n    };\n    /**\n     * @protected\n     */\n    ZoomToExtent.prototype.handleZoomToExtent = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n        view.fit(extent);\n    };\n    return ZoomToExtent;\n}(Control));\nexport default ZoomToExtent;\n//# sourceMappingURL=ZoomToExtent.js.map","import $ol$Collection from './ol/Collection';\nimport $ol$Feature from './ol/Feature';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport $ol$View from './ol/View';\nimport {stableSort as _ol_array$stableSort} from './ol/array';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport {defaults as _ol_control$defaults} from './ol/control';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {TOUCH as _ol_has$TOUCH} from './ol/has';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {getUid as _ol_util$getUid} from './ol/util';\nimport {ARRAY_BUFFER as _ol_webgl$ARRAY_BUFFER} from './ol/webgl';\nimport {ELEMENT_ARRAY_BUFFER as _ol_webgl$ELEMENT_ARRAY_BUFFER} from './ol/webgl';\nimport {STREAM_DRAW as _ol_webgl$STREAM_DRAW} from './ol/webgl';\nimport {STATIC_DRAW as _ol_webgl$STATIC_DRAW} from './ol/webgl';\nimport {DYNAMIC_DRAW as _ol_webgl$DYNAMIC_DRAW} from './ol/webgl';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\nimport $ol$webgl$Buffer from './ol/webgl/Buffer';\nimport $ol$webgl$Helper from './ol/webgl/Helper';\nimport $ol$webgl$PostProcessingPass from './ol/webgl/PostProcessingPass';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$IIIF from './ol/source/IIIF';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport $ol$renderer$Composite from './ol/renderer/Composite';\nimport $ol$renderer$webgl$PointsLayer from './ol/renderer/webgl/PointsLayer';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorImageLayer from './ol/renderer/canvas/VectorImageLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector';\nimport $ol$layer$Graticule from './ol/layer/Graticule';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Layer from './ol/layer/Layer';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$IIIFInfo from './ol/format/IIIFInfo';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {touchOnly as _ol_events_condition$touchOnly} from './ol/events/condition';\nimport {penOnly as _ol_events_condition$penOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.util = {};\nol.webgl = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.penOnly = _ol_events_condition$penOnly;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.events.condition.touchOnly = _ol_events_condition$touchOnly;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.IIIFInfo = $ol$format$IIIFInfo;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.TOUCH = _ol_has$TOUCH;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Layer = $ol$layer$Layer;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorImageLayer = $ol$renderer$canvas$VectorImageLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.PointsLayer = $ol$renderer$webgl$PointsLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.IIIF = $ol$source$IIIF;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.util.getUid = _ol_util$getUid;\nol.webgl.ARRAY_BUFFER = _ol_webgl$ARRAY_BUFFER;\nol.webgl.Buffer = $ol$webgl$Buffer;\nol.webgl.DYNAMIC_DRAW = _ol_webgl$DYNAMIC_DRAW;\nol.webgl.ELEMENT_ARRAY_BUFFER = _ol_webgl$ELEMENT_ARRAY_BUFFER;\nol.webgl.Helper = $ol$webgl$Helper;\nol.webgl.PostProcessingPass = $ol$webgl$PostProcessingPass;\nol.webgl.STATIC_DRAW = _ol_webgl$STATIC_DRAW;\nol.webgl.STREAM_DRAW = _ol_webgl$STREAM_DRAW;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\n * @module ol/proj/proj4\n */\nimport { addCoordinateTransforms, addProjection, addEquivalentProjections, get } from '../proj.js';\nimport { get as getTransform } from './transforms.js';\nimport Projection from './Projection.js';\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n    var projCodes = Object.keys(proj4.defs);\n    var len = projCodes.length;\n    var i, j;\n    for (i = 0; i < len; ++i) {\n        var code = projCodes[i];\n        if (!get(code)) {\n            var def = proj4.defs(code);\n            addProjection(new Projection({\n                code: code,\n                axisOrientation: def.axis,\n                metersPerUnit: def.to_meter,\n                units: def.units\n            }));\n        }\n    }\n    for (i = 0; i < len; ++i) {\n        var code1 = projCodes[i];\n        var proj1 = get(code1);\n        for (j = 0; j < len; ++j) {\n            var code2 = projCodes[j];\n            var proj2 = get(code2);\n            if (!getTransform(code1, code2)) {\n                if (proj4.defs[code1] === proj4.defs[code2]) {\n                    addEquivalentProjections([proj1, proj2]);\n                }\n                else {\n                    var transform = proj4(code1, code2);\n                    addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=proj4.js.map"],"sourceRoot":""}